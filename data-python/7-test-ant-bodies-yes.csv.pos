 begin_comment do the classloader manipulation end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_comment gump friendly don t mess with the core loader if only classpath end_comment begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator LPAR end_operator begin_name name end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name system loader ref end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name loader name end_name begin_init begin_expr begin_operator LPAR end_operator begin_name name end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_name system loader ref end_name begin_operator DP end_operator begin_name name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name obj end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get reference end_name begin_argument_list begin_argument begin_expr begin_name loader name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name reset end_name end_expr end_condition begin_then begin_block begin_comment are any other references held can we close the loader end_comment begin_comment so it removes the locks on jars end_comment begin_expr_stmt begin_expr begin_name obj end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_comment a new one will be created end_comment end_block end_then end_if begin_if begin_condition begin_expr begin_name obj end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name obj end_name begin_operator UNP end_operator begin_name ant class loader end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name ant class loader end_name end_type begin_name acl end_name begin_init begin_expr begin_operator LPAR end_operator begin_name ant class loader end_name begin_operator RPAR end_operator begin_name obj end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name acl end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment construct a new class loader end_comment begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name parent end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name parent name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name parent end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get reference end_name begin_argument_list begin_argument begin_expr begin_name parent name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_name parent end_name begin_operator UNP end_operator begin_name class loader end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name parent end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_if begin_condition begin_expr begin_name parent end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name parent end_name begin_operator EQ end_operator begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get class loader end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment the core loader must be reverse end_comment begin_comment reverse true end_comment end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name parent end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name parent first end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment the param is parent first end_comment begin_expr_stmt begin_expr begin_name acl end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name ant class loader end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name class loader end_name begin_operator RPAR end_operator begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name classpath end_name end_expr end_argument begin_argument begin_expr begin_name parent first end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name add reference end_name begin_argument_list begin_argument begin_expr begin_name loader name end_name end_expr end_argument begin_argument begin_expr begin_name acl end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment this allows the core loader to load optional tasks end_comment begin_comment without delegating end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name acl end_name begin_operator DOT end_operator begin_name add loader package root end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set core loader end_name begin_argument_list begin_argument begin_expr begin_name acl end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_if begin_condition begin_expr begin_name classpath end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name list end_name begin_init begin_expr begin_call begin_name begin_name classpath end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name list end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name begin_name list end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name acl end_name begin_operator DOT end_operator begin_name add path element end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name acl end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ex end_name begin_operator DOT end_operator begin_name print stack trace end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test manual stop end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name process end_name end_type begin_name process end_name begin_init begin_expr begin_call begin_name get process end_name begin_argument_list begin_argument begin_expr begin_name time out end_name begin_operator STAR end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name watchdog end_name begin_operator DOT end_operator begin_name start end_name end_name begin_argument_list begin_argument begin_expr begin_name process end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment i assume that starting this takes less than time out 2 ms end_comment begin_decl_stmt begin_decl begin_type begin_name thread end_name end_type begin_name thread end_name begin_init begin_expr begin_operator UNP end_operator begin_class begin_super begin_name thread end_name end_super begin_argument_list end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name run end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name process end_name begin_operator DOT end_operator begin_name wait for end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name interrupted exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_function end_block end_class end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name start end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment wait for time out 2 there should be about time out 2 ms remaining before timeout end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name join end_name end_name begin_argument_list begin_argument begin_expr begin_name time out end_name begin_operator SLASH end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment now stop the watchdog end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name watchdog end_name begin_operator DOT end_operator begin_name stop end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment wait for the thread to die should be the end of the process end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name join end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment process should be dead and well finished end_comment begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name process end_name begin_operator DOT end_operator begin_name exit value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name watchdog end_name begin_operator DOT end_operator begin_name killed process end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment scan the given directory for files and directories found files and directories are placed in their respective collections based on the matching of includes excludes and the selectors when a directory is found it is scanned recursively param dir the directory to scan must not be code null code param vpath the path relative to the base directory needed to prevent problems with an absolute path when using dir must not be code null code param fast whether or not this call is part of a fast scan see files included see files not included see files excluded see dirs included see dirs not included see dirs excluded see slow scan end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name scandir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name dir end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name vpath end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name fast end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name dir end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name dir end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name dir end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_else end_if end_else end_if begin_comment avoid double scanning of directories can only happen in fast mode end_comment begin_if begin_condition begin_expr begin_name fast end_name begin_operator UNP end_operator begin_call begin_name has been scanned end_name begin_argument_list begin_argument begin_expr begin_name vpath end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name newfiles end_name begin_init begin_expr begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name newfiles end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name follow symlinks end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name no links end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name newfiles end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_try begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name is symbolic link end_name end_name begin_argument_list begin_argument begin_expr begin_name dir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name newfiles end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_name vpath end_name begin_operator PLUS end_operator begin_name begin_name newfiles end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name dir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name newfiles end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_name dirs excluded end_name begin_operator DP end_operator begin_name files excluded end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name add element end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name no links end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name newfiles end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_comment will be caught and redirected to ant s logging system end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name no links end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name newfiles end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_for begin_expr_stmt begin_expr begin_name newfiles end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name begin_name string end_name begin_index end_index end_name begin_operator RPAR end_operator begin_operator LPAR end_operator begin_call begin_name begin_name no links end_name begin_operator DOT end_operator begin_name to array end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_call begin_name begin_name no links end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_expr_stmt end_block end_then end_if begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name newfiles end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_name vpath end_name begin_operator PLUS end_operator begin_name begin_name newfiles end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name dir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name newfiles end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name is included end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name account for included dir end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name file end_name end_expr end_argument begin_argument begin_expr begin_name fast end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name everything included end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dirs not included end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name fast end_name begin_operator UNP end_operator begin_call begin_name could hold included end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name scandir end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument begin_argument begin_expr begin_name name end_name begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_argument begin_argument begin_expr begin_name fast end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name fast end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name scandir end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument begin_argument begin_expr begin_name name end_name begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_argument begin_argument begin_expr begin_name fast end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name is file end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name is included end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name account for included file end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name everything included end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name files not included end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if end_else end_if end_block end_for end_block 
 begin_comment perform a substitution on the regular expression param input the string to substitute on param argument the string which defines the substitution param options the list of options for the match and replace return the result of the operation throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name substitute end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name input end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name argument end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name options end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name v end_name begin_init begin_expr begin_call begin_name get groups end_name begin_argument_list begin_argument begin_expr begin_name input end_name end_expr end_argument begin_argument begin_expr begin_name options end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment replace 1 with the corresponding group end_comment begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name result end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name argument end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name c end_name begin_init begin_expr begin_call begin_name begin_name argument end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name c end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator PPLUS end_operator begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name argument end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name c end_name begin_operator EQ end_operator begin_call begin_name begin_name argument end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name value end_name begin_init begin_expr begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name digit end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name value end_name begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_for begin_expr_stmt begin_expr begin_name argument end_name begin_operator EQ end_operator begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name re end_name end_type begin_name reg end_name begin_init begin_expr begin_call begin_name get compiled pattern end_name begin_argument_list begin_argument begin_expr begin_name options end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name s options end_name begin_init begin_expr begin_call begin_name get subs options end_name begin_argument_list begin_argument begin_expr begin_name options end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name subst end_name end_name begin_argument_list begin_argument begin_expr begin_name input end_name end_expr end_argument begin_argument begin_expr begin_name argument end_name end_expr end_argument begin_argument begin_expr begin_name s options end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment do the classloader manipulation end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_comment gump friendly don t mess with the core loader if only classpath end_comment begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator LPAR end_operator begin_name name end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name system loader ref end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name loader name end_name begin_init begin_expr begin_operator LPAR end_operator begin_name name end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_name system loader ref end_name begin_operator DP end_operator begin_name name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name obj end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get reference end_name begin_argument_list begin_argument begin_expr begin_name loader name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name reset end_name end_expr end_condition begin_then begin_block begin_comment are any other references held can we close the loader end_comment begin_comment so it removes the locks on jars end_comment begin_expr_stmt begin_expr begin_name obj end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_comment a new one will be created end_comment end_block end_then end_if begin_if begin_condition begin_expr begin_name obj end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name obj end_name begin_operator UNP end_operator begin_name ant class loader end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name ant class loader end_name end_type begin_name acl end_name begin_init begin_expr begin_operator LPAR end_operator begin_name ant class loader end_name begin_operator RPAR end_operator begin_name obj end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name acl end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment construct a new class loader end_comment begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name parent end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name parent name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name parent end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get reference end_name begin_argument_list begin_argument begin_expr begin_name parent name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_name parent end_name begin_operator UNP end_operator begin_name class loader end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name parent end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_if begin_condition begin_expr begin_name parent end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name parent end_name begin_operator EQ end_operator begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get class loader end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment the core loader must be reverse end_comment begin_comment reverse true end_comment end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name parent end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name parent first end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment the param is parent first end_comment begin_expr_stmt begin_expr begin_name acl end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name ant class loader end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name class loader end_name begin_operator RPAR end_operator begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name classpath end_name end_expr end_argument begin_argument begin_expr begin_name parent first end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name add reference end_name begin_argument_list begin_argument begin_expr begin_name loader name end_name end_expr end_argument begin_argument begin_expr begin_name acl end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment this allows the core loader to load optional tasks end_comment begin_comment without delegating end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name acl end_name begin_operator DOT end_operator begin_name add loader package root end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set core loader end_name begin_argument_list begin_argument begin_expr begin_name acl end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_if begin_condition begin_expr begin_name classpath end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name list end_name begin_init begin_expr begin_call begin_name begin_name classpath end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name list end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name begin_name list end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name acl end_name begin_operator DOT end_operator begin_name add path element end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name acl end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ex end_name begin_operator DOT end_operator begin_name print stack trace end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment execute the java class against the specified ant project param project the project to use throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name classname end_name begin_init begin_expr begin_call begin_name begin_name java command end_name begin_operator DOT end_operator begin_name get executable end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name ant class loader end_name end_type begin_name loader end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_if begin_condition begin_expr begin_name sys properties end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sys properties end_name begin_operator DOT end_operator begin_name set system end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name target end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_if begin_condition begin_expr begin_name classpath end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name target end_name begin_operator EQ end_operator begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name loader end_name begin_operator EQ end_operator begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name create class loader end_name end_name begin_argument_list begin_argument begin_expr begin_name classpath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name loader end_name begin_operator DOT end_operator begin_name set parent end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get core loader end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name loader end_name begin_operator DOT end_operator begin_name set parent first end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name loader end_name begin_operator DOT end_operator begin_name add java libraries end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name loader end_name begin_operator DOT end_operator begin_name set isolated end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name loader end_name begin_operator DOT end_operator begin_name set thread context loader end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name loader end_name begin_operator DOT end_operator begin_name force load class end_name end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name target end_name begin_operator EQ end_operator begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name loader end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name classname end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_expr_stmt begin_expr begin_name main end_name begin_operator EQ end_operator begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name get method end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name class end_name begin_index end_index end_name begin_block begin_expr begin_name begin_name string end_name begin_index end_index end_name begin_operator DOT end_operator end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name main end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name classname end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name main end_name begin_operator DOT end_operator begin_name get modifiers end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name begin_name modifier end_name begin_operator DOT end_operator begin_name static end_name end_name begin_operator RPAR end_operator begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name classname end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name timeout end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name run end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name thread end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name thread end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name task end_name end_type begin_name current thread task end_name begin_init begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get thread task end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name current thread end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name register thread task end_name end_name begin_argument_list begin_argument begin_expr begin_name thread end_name end_expr end_argument begin_argument begin_expr begin_name current thread task end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment if we run into a timeout the run away thread shall not end_comment begin_comment make the vm run forever if no timeout occurs ant s end_comment begin_comment main thread will still be there to let the new thread end_comment begin_comment finish end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name set daemon end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name watchdog end_name end_type begin_name w end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name watchdog end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name timeout end_name begin_operator DOT end_operator begin_name long value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name add timeout observer end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_synchronized begin_expr begin_name this end_name end_expr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name start end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name start end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name wait end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name interrupted exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try begin_if begin_condition begin_expr begin_name timed out end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name thread end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name stop end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_synchronized end_block end_else end_if begin_if begin_condition begin_expr begin_name caught end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_name caught end_name end_expr end_throw end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_name e end_name end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name security exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_name e end_name end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name thread death end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_name e end_name end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_if begin_condition begin_expr begin_name loader end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name loader end_name begin_operator DOT end_operator begin_name reset thread context loader end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name loader end_name begin_operator DOT end_operator begin_name cleanup end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name loader end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name sys properties end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sys properties end_name begin_operator DOT end_operator begin_name restore system end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 6 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
