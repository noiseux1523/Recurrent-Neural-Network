 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name main end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name args end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name project end_name end_type begin_name p end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name project end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name splash task end_name end_type begin_name t end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name splash task end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment give it some time to display end_comment begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name current thread end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name sleep end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name interrupted exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block end_catch end_try begin_comment end of try catch end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name fire build finished end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name current thread end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name sleep end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name interrupted exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block end_catch end_try begin_comment end of try catch end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name exit end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment property name to save to param property the new property value end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set property end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name property end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name property end_name end_name begin_operator EQ end_operator begin_name property end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 2 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment allows catalogpath reference not allowed if this catalog is itself a reference to another catalog that is a catalog cannot both refer to another em and em contain elements or other attributes param r an ant reference containing a classpath to be used as the catalog path end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set catalog path ref end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name create catalog path end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set refid end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set checked end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment helper method to retrieve main class which is different from versions param home the javacc home path directory param type the taskdef throws build exception thrown if the home directory is invalid or if the archive could not be found despite attempts to do so return the main class for the taskdef end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get main class end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name home end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name type end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name p end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name create path element end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set location end_name begin_argument_list begin_argument begin_expr begin_call begin_name get archive file end_name begin_argument_list begin_argument begin_expr begin_name home end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name add java runtime end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name get main class end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name type end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment returns the names of the directories which matched at least one of the include patterns and none of the exclude patterns the names are relative to the base directory return the names of the directories which matched at least one of the include patterns and none of the exclude patterns end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get included directories end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name src end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name get included directories end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name scanme end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name set end_name end_type begin_name s end_name begin_init begin_expr begin_call begin_name begin_name match dir entries end_name begin_operator DOT end_operator begin_name key set end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_operator LPAR end_operator begin_name begin_name string end_name begin_index end_index end_name begin_operator RPAR end_operator begin_operator LPAR end_operator begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name to array end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment compress on the fly using link cb zip 2 output stream param out the stream to wrap return the wrapped stream throws io exception if there is a problem end_comment begin_type begin_specifier end_specifier begin_name output stream end_name end_type begin_name wrap stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name output stream end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name magic end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name magic end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_operator UNP end_operator begin_call begin_name cb zip 2 output stream end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment returns an one element array containing the file name set via set to param source file name ignored return a one element array containing the merged filename end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name map file name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name source file name end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_name merged file end_name end_expr end_return end_block 
 begin_comment gets the name of the class defining the field return the name of the class defining the field end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get field class name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name field class name end_name end_expr end_return end_block 
 begin_comment get an enumeration over the keys return an enumeration end_comment begin_type begin_specifier end_specifier begin_name enumeration end_name end_type begin_name keys end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name init all end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment description of the label to be stored in the star team project param description the description to be used end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set description end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name description end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name description end_name end_name begin_operator EQ end_operator begin_name description end_name end_expr end_expr_stmt end_block 
 begin_comment finds and opens the root starteam folder of the operation specified by this task this will be one of the following cases return starteam s root folder for the operation exception build exception if the root folder cannot be found in the repository end_comment begin_type begin_specifier end_specifier begin_name folder end_name end_type begin_name configure root starteam folder end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name folder end_name end_type begin_name starteamrootfolder end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_comment no root local mapping has been specified end_comment begin_decl_stmt begin_decl begin_type begin_name view end_name end_type begin_name snapshot end_name begin_init begin_expr begin_call begin_name open view end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment find the starteam folder specified to be the root of the end_comment begin_comment operation throw if it can t be found end_comment begin_expr_stmt begin_expr begin_name starteamrootfolder end_name begin_operator EQ end_operator begin_call begin_name begin_name star team finder end_name begin_operator DOT end_operator begin_name find folder end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name snapshot end_name begin_operator DOT end_operator begin_name get root folder end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name root starteam folder end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name is preload file information end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name property names end_name end_type begin_name pn end_name begin_init begin_expr begin_call begin_name get server end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property names end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name props end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr begin_name begin_name pn end_name begin_operator DOT end_operator begin_name file name end_name end_name end_expr begin_expr begin_name begin_name pn end_name begin_operator DOT end_operator begin_name file path end_name end_name end_expr begin_expr begin_name begin_name pn end_name begin_operator DOT end_operator begin_name file status end_name end_name end_expr begin_expr begin_name begin_name pn end_name begin_operator DOT end_operator begin_name modified time end_name end_name end_expr begin_expr begin_name begin_name pn end_name begin_operator DOT end_operator begin_name file file time at checkin end_name end_name end_expr begin_expr begin_name begin_name pn end_name begin_operator DOT end_operator begin_name modified user id end_name end_name end_expr begin_expr begin_name begin_name pn end_name begin_operator DOT end_operator begin_name file size end_name end_name end_expr begin_expr begin_name begin_name pn end_name begin_operator DOT end_operator begin_name file encoding end_name end_name end_expr end_block end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name depth end_name begin_init begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name is recursive end_name end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_operator MINUS end_operator begin_operator DP end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name starteamrootfolder end_name begin_operator DOT end_operator begin_name populate now end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get server end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get type names end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_name file end_name end_expr end_argument begin_argument begin_expr begin_name props end_name end_expr end_argument begin_argument begin_expr begin_name depth end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_name e end_name end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name msg end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name root starteam folder end_name end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_call begin_name get url end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name label end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name label end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name as of date end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name as of date end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_if begin_condition begin_expr begin_operator EQT end_operator begin_name starteamrootfolder end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name root starteam folder end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name get url end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_return begin_expr begin_name starteamrootfolder end_name end_expr end_return end_block 
 begin_comment initialize the security message digest end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name init message digest end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name message digest end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name provider end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name provider end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name provider end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_name message digest end_name begin_operator EQ end_operator begin_call begin_name begin_name message digest end_name begin_operator DOT end_operator begin_name get instance end_name end_name begin_argument_list begin_argument begin_expr begin_name algorithm end_name end_expr end_argument begin_argument begin_expr begin_name provider end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no such algorithm exception end_name end_type begin_name noalgo end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name noalgo end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no such provider exception end_name end_type begin_name noprovider end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name noprovider end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_then begin_else begin_block begin_try begin_block begin_expr_stmt begin_expr begin_name message digest end_name begin_operator EQ end_operator begin_call begin_name begin_name message digest end_name begin_operator DOT end_operator begin_name get instance end_name end_name begin_argument_list begin_argument begin_expr begin_name algorithm end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no such algorithm exception end_name end_type begin_name noalgo end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name noalgo end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_else end_if end_block 
 begin_comment gets the java source file encoding name return the source file encoding name end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get encoding end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name encoding end_name end_expr end_return end_block 
 begin_comment add a not selector entry on the selector list param selector the selector to be added end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add not end_name begin_parameter_list begin_param begin_decl begin_type begin_name not selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name used matching task end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name add not end_name end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns its argument with all file separator characters replaced so that they match the local os conventions param source the path to convert return the converted path end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name translate file end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name source end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name source end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string buffer end_name end_type begin_name result end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr begin_name source end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name translate file sep end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment the target to call on the different sub builds set to to execute the default target param target the target p end_comment begin_comment revisit defaults to the target name that contains this task if not specified end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set target end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name target end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name sub target end_name end_name begin_operator EQ end_operator begin_name target end_name end_expr end_expr_stmt end_block 
 begin_comment throw a run time exception which does not need to be in the signature of the entry point end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name main end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name argv end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name null pointer exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_comment initialize a subproject param sub project the subproject to initialize end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name init sub project end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name sub project end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name component helper end_name begin_operator DOT end_operator begin_name get component helper end_name end_name begin_argument_list begin_argument begin_expr begin_name sub project end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name init sub project end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name component helper end_name begin_operator DOT end_operator begin_name get component helper end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sub project end_name begin_operator DOT end_operator begin_name set default input stream end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get default input stream end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sub project end_name begin_operator DOT end_operator begin_name set keep going mode end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name is keep going mode end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sub project end_name begin_operator DOT end_operator begin_name set executor end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get executor end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get sub project executor end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment flag to request that a file is turned into an absolute file url before being passed to the wsdl compiler param make url a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set make url end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name make url end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name make url end_name end_name begin_operator EQ end_operator begin_name make url end_name end_expr end_expr_stmt end_block 
 begin_comment create a redirector instance for the given task param managing task the task for which the redirector is to work end_comment begin_specifier end_specifier begin_name redirector end_name begin_parameter_list begin_param begin_decl begin_type begin_name task end_name end_type begin_name managing task end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name project component end_name begin_operator RPAR end_operator begin_name managing task end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set hasession end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name hasession end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name hasession end_name end_name begin_operator EQ end_operator begin_name hasession end_name end_expr end_expr_stmt end_block 
 begin_comment learn whether the permission matches in case of a revoked permission param perm the permission to check against end_comment begin_type begin_name boolean end_name end_type begin_name matches end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name security end_name begin_operator DOT end_operator begin_name permission end_name end_name end_type begin_name perm end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name class name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name perm end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name perm end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name starts with end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name perm end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_else end_if end_block end_then end_if begin_if begin_condition begin_expr begin_name actions end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name set end_name end_type begin_name as end_name begin_init begin_expr begin_call begin_name parse actions end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name perm end_name begin_operator DOT end_operator begin_name get actions end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name size end_name begin_init begin_expr begin_call begin_name begin_name as end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name as end_name begin_operator DOT end_operator begin_name remove all end_name end_name begin_argument_list begin_argument begin_expr begin_name actions end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name as end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_name size end_name end_expr end_condition begin_then begin_block begin_comment none of the actions revoked so all allowed end_comment begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_then end_if begin_return begin_expr end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set from end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment get the value of the attribute with the name given param attribute name the name of the attribute to be returned return the attribute s value or null if the attribute does not exist in the section end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get attribute value end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name attribute name end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name attribute end_name end_type begin_name attribute end_name begin_init begin_expr begin_call begin_name get attribute end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attribute name end_name begin_operator DOT end_operator begin_name to lower case end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name attribute end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name attribute end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment get a mapper for a file return a filenamemapper for a file end_comment begin_type begin_specifier end_specifier begin_name file name mapper end_name end_type begin_name get mapper end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name file name mapper end_name end_type begin_name mapper end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name mapper element end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name mapper end_name begin_operator EQ end_operator begin_call begin_name begin_name mapper element end_name begin_operator DOT end_operator begin_name get implementation end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name mapper end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name identity mapper end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_return begin_expr begin_name mapper end_name end_expr end_return end_block 
 begin_comment get the name of this target element return code string code end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name name end_name end_expr end_return end_block 
 begin_comment class name of the jdbc driver required param driver the driver to set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set driver end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name driver end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name driver end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name driver end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_name ant ref table end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment whether to treat input as singleline matches newline corresponsds to java util regex pattern dotall param b the value to set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set single line end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name single line end_name begin_operator EQ end_operator begin_name b end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment format of dates in code from date code and code to date code used when calculating dates with the numdays attribute this string uses the formatting rules of code simple date format code defaults to code date format short code param date format the date format end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set date format end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name date format end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal date format end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name simple date format end_name begin_argument_list begin_argument begin_expr begin_name date format end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test trim file by line end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name contents end_name begin_init begin_expr begin_call begin_name get file string end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert false end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name contents end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert false end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name contents end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert string not contains end_name begin_argument_list begin_argument begin_expr begin_name contents end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert string contains end_name begin_argument_list begin_argument begin_expr begin_name contents end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the core classloader for the project if a code null code classloader is specified the parent classloader should be used param core loader the classloader to use for the project may be code null code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set core loader end_name begin_parameter_list begin_param begin_decl begin_type begin_name class loader end_name end_type begin_name core loader end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name core loader end_name end_name begin_operator EQ end_operator begin_name core loader end_name end_expr end_expr_stmt end_block 
 begin_comment creates a new creator instance this object is given to the unknown element to create objects for sub elements unknown element calls create to create an object the object then gets configured and then unknown element calls store set poly type may be used to override the type used to create the object with set poly type gets called before create param project the current project param parent the parent object to create the object in param nested creator the nested creator object to use end_comment begin_specifier end_specifier begin_name creator end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name nested creator end_name end_type begin_name nested creator end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name project end_name end_name begin_operator EQ end_operator begin_name project end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name parent end_name end_name begin_operator EQ end_operator begin_name parent end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name nested creator end_name end_name begin_operator EQ end_operator begin_name nested creator end_name end_expr end_expr_stmt end_block 
 begin_comment set the class loader for this antlib this class loader is used for any tasks that derive from definer param class loader the class loader end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set class loader end_name begin_parameter_list begin_param begin_decl begin_type begin_name class loader end_name end_type begin_name class loader end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name class loader end_name end_name begin_operator EQ end_operator begin_name class loader end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test copy no remove end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name d end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert file is present end_name begin_argument_list begin_argument begin_expr begin_name d end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name f end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert file is present end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name get full log end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the input code filter chain code s param input filter chains code vector code containing code filter chain code end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set input filter chains end_name begin_parameter_list begin_param begin_decl begin_type begin_name vector end_name end_type begin_name input filter chains end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name input filter chains end_name end_name begin_operator EQ end_operator begin_name input filter chains end_name end_expr end_expr_stmt end_block 
 begin_comment begin a download end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name begin download end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment check style method name check on end_comment begin_comment sets the type of target either exe or library param target type one of exe library exception build exception if target is not one of exe library end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set target type end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name target type end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name target type end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name target type end_name begin_operator DOT end_operator begin_name to lower case end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name target type end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name target type end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name target type end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment checks whether the archive is out of date with respect to the resources of the given collection p also checks that either all collections only contain file resources or this class supports non file collections p p and in case of file collections ensures that the archive won t contain itself p param rc the resource collection to check return whether the archive is up to date since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name check end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource collection end_name end_type begin_name rc end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name up to date end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name is file file set end_name begin_argument_list begin_argument begin_expr begin_name rc end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name file set end_name end_type begin_name fs end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file set end_name begin_operator RPAR end_operator begin_name rc end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name up to date end_name begin_operator EQ end_operator begin_call begin_name check end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name get dir end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get file names end_name begin_argument_list begin_argument begin_expr begin_name fs end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name rc end_name begin_operator DOT end_operator begin_name is filesystem only end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name supports non file resources end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name rc end_name begin_operator DOT end_operator begin_name is filesystem only end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name hash set end_name end_type begin_name basedirs end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name hash set end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name hash map end_name end_type begin_name basedir to files map end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name hash map end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name iterator end_name end_type begin_name iter end_name begin_init begin_expr begin_call begin_name begin_name rc end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name file resource end_name end_type begin_name r end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file resource end_name begin_operator RPAR end_operator begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name base end_name begin_init begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name get base dir end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name base end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name base end_name begin_operator EQ end_operator begin_name begin_name copy end_name begin_operator DOT end_operator begin_name null file placeholder end_name end_name end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name basedirs end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name base end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name files end_name begin_init begin_expr begin_operator LPAR end_operator begin_name vector end_name begin_operator RPAR end_operator begin_call begin_name begin_name basedir to files map end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name base end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name files end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name files end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name basedir to files map end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name base end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_name iter end_name begin_operator EQ end_operator begin_call begin_name begin_name basedirs end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name base end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file end_name begin_operator RPAR end_operator begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name f end_name begin_init begin_expr begin_operator LPAR end_operator begin_name vector end_name begin_operator RPAR end_operator begin_call begin_name begin_name basedir to files map end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name base end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name files end_name begin_init begin_expr begin_operator LPAR end_operator begin_name begin_name string end_name begin_index end_index end_name begin_operator RPAR end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name to array end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name up to date end_name begin_operator UNP end_operator begin_call begin_name check end_name begin_argument_list begin_argument begin_expr begin_name base end_name begin_operator EQT end_operator begin_name begin_name copy end_name begin_operator DOT end_operator begin_name null file placeholder end_name end_name begin_operator QM end_operator begin_operator DP end_operator begin_name base end_name end_expr end_argument begin_argument begin_expr begin_name files end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block end_then begin_else begin_block begin_comment non file resources end_comment begin_decl_stmt begin_decl begin_type begin_name iterator end_name end_type begin_name iter end_name begin_init begin_expr begin_call begin_name begin_name rc end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_name up to date end_name begin_operator UNP end_operator begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name resource end_name end_type begin_name r end_name begin_init begin_expr begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name up to date end_name begin_operator UNP end_operator begin_call begin_name archive is up to date end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block end_else end_if end_else end_if end_else end_if begin_return begin_expr begin_name up to date end_name end_expr end_return end_block 
 begin_comment encode a string to the output end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name encode string end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name n end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name print stream end_name end_type begin_name writer end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name print stream end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name writer end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr begin_name n end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name writer end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_name perl script command launcher end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name script end_name end_decl end_param begin_param begin_decl begin_type begin_name command launcher end_name end_type begin_name launcher end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name launcher end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name my script end_name begin_operator EQ end_operator begin_name script end_name end_expr end_expr_stmt end_block 
 begin_comment re opens the file associated with this recorder used by recorder throws build exception since 1 6 3 end_comment begin_type begin_name void end_name end_type begin_name reopen file end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name open file impl end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment handle error output send it the the new project if is present otherwise call the super class param error output to handle the string to output see task handle error output string since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name handle error output end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name error output to handle end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name new project end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name new project end_name begin_operator DOT end_operator begin_name demux output end_name end_name begin_argument_list begin_argument begin_expr begin_name error output to handle end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name handle error output end_name end_name begin_argument_list begin_argument begin_expr begin_name error output to handle end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test equals schemas ok end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment adds a file to be added into the output param file to add the file to add to the output end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add add file end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name file to add end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name file to add end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name addfiles end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name file to add end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the email address param address the actual email address without end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set address end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name address end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name address end_name end_name begin_operator EQ end_operator begin_name address end_name end_expr end_expr_stmt end_block 
 begin_comment if true do not checkout element after creation param co the status to set the flag to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set no checkout end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name co end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m noco end_name begin_operator EQ end_operator begin_name co end_name end_expr end_expr_stmt end_block 
 begin_comment creates a new expand properties filter using the passed in reader for instantiation param rdr a reader object providing the underlying stream must not be code null code return a new filter based on this configuration but filtering the specified reader end_comment begin_type begin_specifier end_specifier begin_name reader end_name end_type begin_name chain end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name reader end_name end_type begin_name rdr end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name expand properties end_name end_type begin_name new filter end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name expand properties end_name begin_argument_list begin_argument begin_expr begin_name rdr end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name new filter end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name new filter end_name end_expr end_return end_block 
 begin_comment the j unit setup method end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment fulfill the resource collection contract the iterator returned will throw concurrent modification exceptions if resource collections are added to this container while the iterator is in use return a fail fast iterator end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_specifier end_specifier begin_name iterator end_name end_type begin_name iterator end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name base resource collection container end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name die on circular reference end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_operator UNP end_operator begin_call begin_name fail fast end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_call begin_name cache collection end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment below are getter s and setter s for each of the instance variables note that in addition to supporting setters with the same type as the instance variable a setter is provided with takes a string argument this are provided so the xml document handler can set the ejb values using the strings it parses end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set home end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name home end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set home end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name classname end_name begin_argument_list begin_argument begin_expr begin_name home end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment default constructor end_comment begin_specifier end_specifier begin_name reverse end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test ns prefix on attribute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name document end_name end_type begin_name d end_name begin_init begin_expr begin_call begin_name begin_name dom utils end_name begin_operator DOT end_operator begin_name new document end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name element end_name end_type begin_name root end_name begin_init begin_expr begin_call begin_name begin_name d end_name begin_operator DOT end_operator begin_name create element ns end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name root end_name begin_operator DOT end_operator begin_name set attribute ns end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string writer end_name end_type begin_name sw end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string writer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name dom element writer end_name end_type begin_name w end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name dom element writer end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name dom element writer end_name begin_operator DOT end_operator begin_name xml namespace policy end_name begin_operator DOT end_operator begin_name qualify all end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name root end_name end_expr end_argument begin_argument begin_expr begin_name sw end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name sw end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name begin_name org end_name begin_operator DOT end_operator begin_name apache end_name begin_operator DOT end_operator begin_name tools end_name begin_operator DOT end_operator begin_name ant end_name begin_operator DOT end_operator begin_name project end_name end_name end_type begin_name get project end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment adds an attribute that is to be put in main section of manifest param attribute an attribute that is to be put in main section of manifest end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add configured attribute end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name extra attribute end_name end_type begin_name attribute end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name extra attributes end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name attribute end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the comment attribute for this operation return value of comment end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get comment end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name comment end_name end_name end_expr end_return end_block 
 begin_comment if true compiles with optimization enabled param optimize if true compile with optimization enabled end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set optimize end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name optimize end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name optimize end_name end_name begin_operator EQ end_operator begin_name optimize end_name end_expr end_expr_stmt end_block 
 begin_comment sets additional cabarc options that are not supported directly param options cabarc command line options end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set options end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name options end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name cmd options end_name begin_operator EQ end_operator begin_name options end_name end_expr end_expr_stmt end_block 
 begin_comment get a list of rcs entries as an array return a list of rcs entries as an array end_comment begin_type begin_specifier end_specifier begin_name cvs entry end_name begin_index end_index end_type begin_name get entry set as array end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name cvs entry end_name begin_index end_index end_type begin_name array end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name cvs entry end_name begin_index begin_expr begin_call begin_name begin_name entries end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name entries end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_name begin_name array end_name begin_index begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name cvs entry end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_name array end_name end_expr end_return end_block 
 begin_comment embed the resource in the assembly default true or just link to it param embed a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set embed end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name embed end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name embed end_name end_name begin_operator EQ end_operator begin_name embed end_name end_expr end_expr_stmt end_block 
 begin_comment returns an enumeration of the dependencies of this target return an enumeration of the dependencies of this target end_comment begin_type begin_specifier end_specifier begin_name enumeration end_name end_type begin_name get dependencies end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name dependencies end_name begin_operator UNP end_operator begin_operator QM end_operator begin_call begin_name begin_name collections end_name begin_operator DOT end_operator begin_name enumeration end_name end_name begin_argument_list begin_argument begin_expr begin_name dependencies end_name end_expr end_argument end_argument_list end_call begin_operator DP end_operator begin_operator UNP end_operator begin_call begin_name begin_name collection utils end_name begin_operator DOT end_operator begin_name empty enumeration end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment add a set of system properties param sysp a set of properties since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add sysproperties end_name begin_parameter_list begin_param begin_decl begin_type begin_name sys properties end_name end_type begin_name sysp end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sys properties end_name begin_operator DOT end_operator begin_name add sysproperties end_name end_name begin_argument_list begin_argument begin_expr begin_name sysp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the dest attribute param dest the destination file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set dest end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name dest end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name dest dir end_name begin_operator EQ end_operator begin_name dest end_name end_expr end_expr_stmt end_block 
 begin_comment create a component object based on its definition return the component as an code object code end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name icreate end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name c end_name begin_init begin_expr begin_call begin_name get type class end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name c end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name o end_name begin_init begin_expr begin_call begin_name create and set end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name o end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name adapter class end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_name o end_name end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name adapt to class end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name adapt to class end_name begin_operator DOT end_operator begin_name is assignable from end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name o end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name o end_name end_expr end_return end_block end_then end_if end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name type adapter end_name end_type begin_name adapter object end_name begin_init begin_expr begin_operator LPAR end_operator begin_name type adapter end_name begin_operator RPAR end_operator begin_call begin_name create and set end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr begin_name adapter class end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name adapter object end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name adapter object end_name begin_operator DOT end_operator begin_name set proxy end_name end_name begin_argument_list begin_argument begin_expr begin_name o end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name adapter object end_name end_expr end_return end_block 
 begin_comment gets the target vm that the classes will be compiled for return the target vm end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get target end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name target attribute end_name begin_operator UNP end_operator begin_operator QM end_operator begin_name target attribute end_name begin_operator DP end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name build javac target end_name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment checks which files are selected and shouldn t be or which are not selected but should param expected string containing f s and t s param result string containing f s and t s return difference as string containing equal and x difference end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name diff end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name expected end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name result end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name length 1 end_name begin_init begin_expr begin_call begin_name begin_name expected end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name length 2 end_name begin_init begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name min end_name begin_init begin_expr begin_operator LPAR end_operator begin_name length 1 end_name begin_operator GT end_operator begin_name length 2 end_name begin_operator RPAR end_operator begin_operator QM end_operator begin_name length 2 end_name begin_operator DP end_operator begin_name length 1 end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name sb end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name min end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name expected end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator QM end_operator begin_operator DP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment add the given resources param fileset may give additional information like fullpath or permissions param resources the resources to add param z out the stream to write to throws io exception on error since ant 1 5 2 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name add resources end_name begin_parameter_list begin_param begin_decl begin_type begin_name file set end_name end_type begin_name fileset end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name resource end_name begin_index end_index end_name end_type begin_name resources end_name end_decl end_param begin_param begin_decl begin_type begin_name zip output stream end_name end_type begin_name z out end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name prefix end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name fullpath end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name dir mode end_name begin_init begin_expr begin_name begin_name archive file set end_name begin_operator DOT end_operator begin_name default dir mode end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name file mode end_name begin_init begin_expr begin_name begin_name archive file set end_name begin_operator DOT end_operator begin_name default file mode end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name archive file set end_name end_type begin_name zfs end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name fileset end_name begin_operator UNP end_operator begin_name archive file set end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name zfs end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name archive file set end_name begin_operator RPAR end_operator begin_name fileset end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name prefix end_name begin_operator EQ end_operator begin_call begin_name begin_name zfs end_name begin_operator DOT end_operator begin_name get prefix end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name fullpath end_name begin_operator EQ end_operator begin_call begin_name begin_name zfs end_name begin_operator DOT end_operator begin_name get fullpath end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name dir mode end_name begin_operator EQ end_operator begin_call begin_name begin_name zfs end_name begin_operator DOT end_operator begin_name get dir mode end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name file mode end_name begin_operator EQ end_operator begin_call begin_name begin_name zfs end_name begin_operator DOT end_operator begin_name get file mode end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name prefix end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_operator UNP end_operator begin_call begin_name begin_name fullpath end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name resources end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name fullpath end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name prefix end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name prefix end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name prefix end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name prefix end_name begin_operator UNP end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name add parent dirs end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name prefix end_name end_expr end_argument begin_argument begin_expr begin_name z out end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name dir mode end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name zip file end_name end_type begin_name zf end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name dealing with files end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name base end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name zfs end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name zfs end_name begin_operator DOT end_operator begin_name get src end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name dealing with files end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name base end_name begin_operator EQ end_operator begin_call begin_name begin_name fileset end_name begin_operator DOT end_operator begin_name get dir end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name zfs end_name begin_operator UNP end_operator begin_name zip file set end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name zf end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name zip file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name zfs end_name begin_operator DOT end_operator begin_name get src end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name resources end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name fullpath end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name name end_name begin_operator EQ end_operator begin_name fullpath end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name name end_name begin_operator EQ end_operator begin_name begin_name resources end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_name name end_name begin_operator EQ end_operator begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name resources end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name is directory end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name name end_name begin_operator EQ end_operator begin_name name end_name begin_operator PLUS end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name do filesonly end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name dealing with files end_name begin_operator UNP end_operator begin_name begin_name resources end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name is directory end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name zfs end_name begin_operator DOT end_operator begin_name has dir mode been set end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name next to last slash end_name begin_init begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name last index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name next to last slash end_name begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name add parent dirs end_name begin_argument_list begin_argument begin_expr begin_name base end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name next to last slash end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name z out end_name end_expr end_argument begin_argument begin_expr begin_name prefix end_name end_expr end_argument begin_argument begin_expr begin_name dir mode end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name zf end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name zip entry end_name end_type begin_name ze end_name begin_init begin_expr begin_call begin_name begin_name zf end_name begin_operator DOT end_operator begin_name get entry end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name resources end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name add parent dirs end_name begin_argument_list begin_argument begin_expr begin_name base end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name z out end_name end_expr end_argument begin_argument begin_expr begin_name prefix end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name ze end_name begin_operator DOT end_operator begin_name get unix mode end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name archive resource end_name end_type begin_name tr end_name begin_init begin_expr begin_operator LPAR end_operator begin_name archive resource end_name begin_operator RPAR end_operator begin_name begin_name resources end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name add parent dirs end_name begin_argument_list begin_argument begin_expr begin_name base end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name z out end_name end_expr end_argument begin_argument begin_expr begin_name prefix end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name tr end_name begin_operator DOT end_operator begin_name get mode end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name add parent dirs end_name begin_argument_list begin_argument begin_expr begin_name base end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name z out end_name end_expr end_argument begin_argument begin_expr begin_name prefix end_name end_expr end_argument begin_argument begin_expr begin_name dir mode end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name begin_name resources end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name is directory end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name dealing with files end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_name base end_name end_expr end_argument begin_argument begin_expr begin_name begin_name resources end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name zip file end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument begin_argument begin_expr begin_name z out end_name end_expr end_argument begin_argument begin_expr begin_name prefix end_name begin_operator PLUS end_operator begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name file mode end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name begin_name resources end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name is directory end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name zf end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name zip entry end_name end_type begin_name ze end_name begin_init begin_expr begin_call begin_name begin_name zf end_name begin_operator DOT end_operator begin_name get entry end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name resources end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name ze end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name old compress end_name begin_init begin_expr begin_name do compress end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name keep compression end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name do compress end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_call begin_name begin_name ze end_name begin_operator DOT end_operator begin_name get method end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_name begin_name zip entry end_name begin_operator DOT end_operator begin_name deflated end_name end_name begin_operator RPAR end_operator end_expr end_expr_stmt end_block end_then end_if begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name zip file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name zf end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list begin_argument begin_expr begin_name ze end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name z out end_name end_expr end_argument begin_argument begin_expr begin_name prefix end_name begin_operator PLUS end_operator begin_name name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name ze end_name begin_operator DOT end_operator begin_name get time end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name zfs end_name begin_operator DOT end_operator begin_name get src end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name zfs end_name begin_operator DOT end_operator begin_name has file mode been set end_name end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_name file mode end_name begin_operator DP end_operator begin_call begin_name begin_name ze end_name begin_operator DOT end_operator begin_name get unix mode end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_expr_stmt begin_expr begin_name do compress end_name begin_operator EQ end_operator begin_name old compress end_name end_expr end_expr_stmt end_block end_finally end_try end_block end_then end_if end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name archive resource end_name end_type begin_name tr end_name begin_init begin_expr begin_operator LPAR end_operator begin_name archive resource end_name begin_operator RPAR end_operator begin_name begin_name resources end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name is end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name is end_name begin_operator EQ end_operator begin_call begin_name begin_name tr end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name zip file end_name begin_argument_list begin_argument begin_expr begin_name is end_name end_expr end_argument begin_argument begin_expr begin_name z out end_name end_expr end_argument begin_argument begin_expr begin_name prefix end_name begin_operator PLUS end_operator begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name resources end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get last modified end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name zfs end_name begin_operator DOT end_operator begin_name get src end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name zfs end_name begin_operator DOT end_operator begin_name has file mode been set end_name end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_name file mode end_name begin_operator DP end_operator begin_call begin_name begin_name tr end_name begin_operator DOT end_operator begin_name get mode end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name is end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block end_else end_if end_block end_then end_if end_else end_if end_block end_for end_block begin_finally begin_block begin_if begin_condition begin_expr begin_name zf end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name zf end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test and end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect property set end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test properties from file set end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return the ant type definition for a component name param component name the name of the component return the ant definition or null if not present end_comment begin_type begin_specifier end_specifier begin_name ant type definition end_name end_type begin_name get definition end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name component name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name check namespace end_name begin_argument_list begin_argument begin_expr begin_name component name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name ant type table end_name begin_operator DOT end_operator begin_name get definition end_name end_name begin_argument_list begin_argument begin_expr begin_name component name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 4 end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name filesep end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name expected end_name begin_init begin_expr begin_name filesep end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name filesep end_name begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name checkprop end_name begin_init begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name checkprop end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name expected end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment clear the current script text content end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name clear script end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name script end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment indicates whether source should be compiled with debug information defaults to off param debug if true compile with debug information end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set debug end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name debug end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_operator EQ end_operator begin_name debug end_name end_expr end_expr_stmt end_block 
 begin_comment see org apache tools ant build listener build finished build event end_comment begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name build finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name record end_name begin_operator UNP end_operator begin_name out end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name throwable end_name end_type begin_name error end_name begin_init begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get exception end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name error end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name error end_name begin_operator DOT end_operator begin_name print stack trace end_name end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name cleanup end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment check if definition is a valid definition it may be a definition of an optional task that does not exist param def the definition to test return true if exposed type of definition is present end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name valid definition end_name begin_parameter_list begin_param begin_decl begin_type begin_name ant type definition end_name end_type begin_name def end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name def end_name begin_operator DOT end_operator begin_name get type class end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name def end_name begin_operator DOT end_operator begin_name get exposed class end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment write a byte array to both output streams param b the data param off the start offset in the data param len the number of bytes to write throws io exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name b end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name off end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name len end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name left end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name b end_name end_expr end_argument begin_argument begin_expr begin_name off end_name end_expr end_argument begin_argument begin_expr begin_name len end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name right end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name b end_name end_expr end_argument begin_argument begin_expr begin_name off end_name end_expr end_argument begin_argument begin_expr begin_name len end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment fired whenever a message is logged param event the build event see build event get message see build event get priority end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name message logged end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment determines if the os on which ant is executing matches the given os family param family the family to check for return true if the os matches since 1 5 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name is family end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name family end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name is os end_name begin_argument_list begin_argument begin_expr begin_name family end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment sets the encoding to assume for file names and comments p set to code native encoding code if you want your platform s native encoding defaults to utf 8 p param encoding the name of the character encoding since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set encoding end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name encoding end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name native encoding end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name encoding end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name encoding end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name encoding end_name end_name begin_operator EQ end_operator begin_name encoding end_name end_expr end_expr_stmt end_block 
 begin_comment the directory to write the generated files to param output directory the output directory end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set outputdirectory end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name output directory end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name output directory end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name output directory end_name end_name begin_operator EQ end_operator begin_name output directory end_name end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name top level task test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment create an iterator return an iterator end_comment begin_type begin_specifier end_specifier begin_name iterator end_name end_type begin_name iterator end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name file resource iterator end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name parts end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment the heart of the matter this is where the selector gets to decide on the inclusion of a file in a particular fileset param basedir the base directory from which the scan is being performed param filename is the name of the file to check param file is a java io file object the selector can use return whether the file is selected end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is selected end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name basedir end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name filename end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name validate end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_name include dirs end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_call begin_name begin_name when end_name begin_operator DOT end_operator begin_name evaluate end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name millis end_name end_expr end_argument begin_argument begin_expr begin_name granularity end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment gets the type of the interface method return the interface method s type signature end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get interface method type end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name interface method type end_name end_expr end_return end_block 
 begin_comment format the option for imports return the formatted import option end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get imports parameter end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name imports end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name imports end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator PLUS end_operator begin_name imports end_name end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr end_expr end_return end_block end_else end_if end_block 
 begin_comment set the path to use when looking for a file param filepath a path instance containing the search path for files end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set filepath end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name filepath end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name create filepath end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name filepath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment take care that some output is produced in report files if the forked machine terminated before the test suite finished since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name log vm exit end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name formatter element end_name begin_index end_index end_name end_type begin_name fe array end_name end_decl end_param begin_param begin_decl begin_type begin_name j unit test end_name end_type begin_name test end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name message end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name test case end_name end_decl end_param end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get properties end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name split junit end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name class loader end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name ant class loader end_name begin_operator RPAR end_operator begin_call begin_name begin_name delegate end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get class loader end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name create class loader end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_name class loader end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name class loader end_name begin_operator DOT end_operator begin_name set thread context loader end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name test end_name begin_operator DOT end_operator begin_name set counts end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test end_name begin_operator DOT end_operator begin_name set properties end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get properties end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name fe array end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name formatter element end_name end_type begin_name fe end_name begin_init begin_expr begin_name begin_name fe array end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name out file end_name begin_init begin_expr begin_call begin_name get output end_name begin_argument_list begin_argument begin_expr begin_name fe end_name end_expr end_argument begin_argument begin_expr begin_name test end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name j unit task mirror end_name begin_operator DOT end_operator begin_name j unit result formatter mirror end_name end_name end_type begin_name formatter end_name begin_init begin_expr begin_call begin_name begin_name fe end_name begin_operator DOT end_operator begin_name create formatter end_name end_name begin_argument_list begin_argument begin_expr begin_name class loader end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name out file end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name formatter end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name output stream end_name end_type begin_name out end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file output stream end_name begin_argument_list begin_argument begin_expr begin_name out file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name delegate end_name begin_operator DOT end_operator begin_name add vm exit end_name end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument begin_argument begin_expr begin_name formatter end_name end_expr end_argument begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_name test case end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try end_block end_then end_if end_block end_for begin_if begin_condition begin_expr begin_name summary end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name j unit task mirror end_name begin_operator DOT end_operator begin_name summary j unit result formatter mirror end_name end_name end_type begin_name f end_name begin_init begin_expr begin_call begin_name begin_name delegate end_name begin_operator DOT end_operator begin_name new summary j unit result formatter end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name set with out and err end_name end_name begin_argument_list begin_argument begin_expr begin_operator DOT end_operator begin_call begin_name equals ignore case end_name begin_argument_list begin_argument begin_expr begin_name summary value end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name delegate end_name begin_operator DOT end_operator begin_name add vm exit end_name end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument begin_argument begin_expr begin_name f end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get default output end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_name test case end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block begin_finally begin_block begin_if begin_condition begin_expr begin_name class loader end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name class loader end_name begin_operator DOT end_operator begin_name reset thread context loader end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try end_block 
 begin_comment if set the output of the command will be stored in the given property param property the name of the property in which the command output will be stored end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set outputproperty end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name property end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name output property end_name begin_operator EQ end_operator begin_name property end_name end_expr end_expr_stmt end_block 
 begin_comment get the size of the java command line this is a fairly intensive operation as it has to evaluate the size of many components return the total number of arguments in the java command line see get commandline deprecated since 1 7 please dont use this it effectively creates the entire command end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name size end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name size end_name begin_init begin_expr begin_call begin_name get actual vm command end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name size end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_call begin_name begin_name java command end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_call begin_name begin_name sys properties end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment cloned system properties end_comment begin_if begin_condition begin_expr begin_call begin_name is clone vm end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name size end_name begin_operator UNP end_operator begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get properties end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name size end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment classpath is classpath classpath 2 args end_comment begin_if begin_condition begin_expr begin_call begin_name have classpath end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name size end_name begin_operator UNP end_operator end_expr end_expr_stmt end_block end_then end_if begin_comment bootclasspath is xbootclasspath classpath 1 arg end_comment begin_if begin_condition begin_expr begin_call begin_name calculate bootclasspath end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name size end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name size end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_then end_if begin_comment jar execution requires an additional jar option end_comment begin_if begin_condition begin_expr begin_name execute jar end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name size end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_then end_if begin_comment assertions take up space too end_comment begin_if begin_condition begin_expr begin_call begin_name get assertions end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name size end_name begin_operator UNP end_operator begin_call begin_name get assertions end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name size end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name size end_name end_expr end_return end_block 
 begin_comment run the rmic compiler return true if the compilation succeeded throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name get rmic end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name begin_init begin_expr begin_call begin_name setup rmic command end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment create an instance of the rmic redirecting output to end_comment begin_comment the project log end_comment begin_decl_stmt begin_decl begin_type begin_name log output stream end_name end_type begin_name logstr end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name log output stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name get rmic end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name c end_name begin_init begin_expr begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name rmic classname end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name constructor end_name end_type begin_name cons end_name begin_init begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name get constructor end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name class end_name begin_index end_index end_name begin_block begin_expr begin_name begin_name output stream end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr begin_expr begin_name begin_name string end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name rmic end_name begin_init begin_expr begin_call begin_name begin_name cons end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_name logstr end_name end_expr begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name method end_name end_type begin_name do rmic end_name begin_init begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name get method end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name class end_name begin_index end_index end_name begin_block begin_expr begin_name begin_name string end_name begin_index end_index end_name begin_operator DOT end_operator end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name ok end_name begin_init begin_expr begin_operator LPAR end_operator begin_name boolean end_name begin_operator RPAR end_operator begin_call begin_name begin_name do rmic end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_name rmic end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name get arguments end_name end_name begin_argument_list end_argument_list end_call end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name ok end_name begin_operator DOT end_operator begin_name boolean value end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name error no rmic on classpath end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get rmic end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name ex end_name begin_operator UNP end_operator begin_name build exception end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator LPAR end_operator begin_name build exception end_name begin_operator RPAR end_operator begin_name ex end_name end_expr end_throw end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name error rmic failed end_name end_expr end_argument begin_argument begin_expr begin_name ex end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get rmic end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_block end_catch begin_finally begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name logstr end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_finally end_try end_block 
 begin_comment check the command line options end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check options end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name get comment end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment c end_comment begin_expr_stmt begin_expr begin_call begin_name get comment command end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_call begin_name get comment file end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment cfile end_comment begin_expr_stmt begin_expr begin_call begin_name get comment file command end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag nocomment end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_else end_if begin_if begin_condition begin_expr begin_call begin_name get no warn end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment nwarn end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag nowarn end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment should choose either ci or nco end_comment begin_if begin_condition begin_expr begin_call begin_name get no checkout end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name get checkin end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name get no checkout end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment nco end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag nocheckout end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name get checkin end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment ci end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag checkin end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name get preserve time end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment ptime end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag preservetime end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name get master end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment master end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag master end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name get eltype end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment eltype end_comment begin_expr_stmt begin_expr begin_call begin_name get eltype command end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment viewpath end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get view path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment check style visibility modifier on end_comment begin_comment set any data to be written to p 4 s stdin param p 4 input the text to write to p 4 s stdin end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set output end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name p 4 input end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name p 4 input end_name end_name begin_operator EQ end_operator begin_name p 4 input end_name end_expr end_expr_stmt end_block 
 begin_comment source safe path which specifies the project file s you wish to perform the action on p a prefix of vss will be removed if specified param vss path the vss project path ant attribute group required end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set vsspath end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name vss path end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name project path end_name end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name vss path end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment non nls 1 end_comment begin_expr_stmt begin_expr begin_name project path end_name begin_operator EQ end_operator begin_call begin_name begin_name vss path end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name project path end_name begin_operator EQ end_operator begin_name vss path end_name end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_call begin_name begin_name project path end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr begin_name project prefix end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name vss path end_name end_name begin_operator EQ end_operator begin_name project path end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name vss path end_name end_name begin_operator EQ end_operator begin_name project prefix end_name begin_operator PLUS end_operator begin_name project path end_name end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment this method wraps the output stream with the corresponding compression method param ostream output stream return output stream with on the fly compression exception io exception thrown if file is not writable end_comment begin_type begin_specifier end_specifier begin_name output stream end_name end_type begin_name compress end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name output stream end_name end_type begin_name ostream end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name v end_name begin_init begin_expr begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name gzip end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name v end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name gzip output stream end_name begin_argument_list begin_argument begin_expr begin_name ostream end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name bzip 2 end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name v end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ostream end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ostream end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_operator UNP end_operator begin_call begin_name cb zip 2 output stream end_name begin_argument_list begin_argument begin_expr begin_name ostream end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if end_block end_else end_if begin_return begin_expr begin_name ostream end_name end_expr end_return end_block 
 begin_comment gets the files in this cvs entry return the files end_comment begin_type begin_specifier end_specifier begin_name vector end_name end_type begin_name get files end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name files end_name end_expr end_return end_block 
 begin_comment the jar file to sign required param jar the jar file to sign end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set jar end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name jar end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name jar end_name end_name begin_operator EQ end_operator begin_name jar end_name end_expr end_expr_stmt end_block 
 begin_comment executes the task p builds a command line to execute ccm and then calls exec s run method to execute the command line p throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name commandline end_name end_type begin_name command line end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name commandline end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name result end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment build the command line from what we got the format end_comment begin_comment as specified in the ccm exe help end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name set executable end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get ccm command end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get ccm action end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name check options end_name begin_argument_list begin_argument begin_expr begin_name command line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name run end_name begin_argument_list begin_argument begin_expr begin_name command line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name execute end_name begin_operator DOT end_operator begin_name is failure end_name end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment implements the uri resolver resolve interface method param href an href attribute param base the base uri return a source object or null if href cannot be resolved throws transformer exception if an error occurs see javax xml transform uri resolver resolve end_comment begin_type begin_specifier end_specifier begin_name source end_name end_type begin_name resolve end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name href end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name base end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name transformer exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name get ref end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve end_name begin_argument_list begin_argument begin_expr begin_name href end_name end_expr end_argument begin_argument begin_expr begin_name base end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name die on circular reference end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name sax source end_name end_type begin_name source end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name uri end_name begin_init begin_expr begin_call begin_name remove fragment end_name begin_argument_list begin_argument begin_expr begin_name href end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name uri end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name base end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name source end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name sax source end_name begin_operator RPAR end_operator begin_call begin_name get catalog resolver end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve end_name begin_argument_list begin_argument begin_expr begin_name uri end_name end_expr end_argument begin_argument begin_expr begin_name base end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name source end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name href end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment end_comment begin_comment cannot return a null source because we have to call end_comment begin_comment set entity resolver see set entity resolver javadoc comment end_comment begin_comment end_comment begin_expr_stmt begin_expr begin_name source end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name sax source end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name url end_name end_type begin_name base url end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_if begin_condition begin_expr begin_name base end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name base url end_name begin_operator EQ end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name get file url end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name base url end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name url end_name begin_argument_list begin_argument begin_expr begin_name base end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_decl_stmt begin_decl begin_type begin_name url end_name end_type begin_name url end_name begin_init begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name uri end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator QM end_operator begin_name base url end_name begin_operator DP end_operator begin_operator UNP end_operator begin_call begin_name url end_name begin_argument_list begin_argument begin_expr begin_name base url end_name end_expr end_argument begin_argument begin_expr begin_name uri end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name source end_name begin_operator DOT end_operator begin_name set input source end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name input source end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name url end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name malformed url exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_comment at this point we are probably in failure mode but end_comment begin_comment try to use the bare uri as a last gasp end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name source end_name begin_operator DOT end_operator begin_name set input source end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name input source end_name begin_argument_list begin_argument begin_expr begin_name uri end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name set entity resolver end_name begin_argument_list begin_argument begin_expr begin_name source end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name source end_name end_expr end_return end_block 
 begin_comment parse an octal long integer from a header buffer param value the header value param buf the buffer from which to parse param offset the offset into the buffer from which to parse param length the number of header bytes to parse return the long value of the octal bytes end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name int end_name end_type begin_name get long octal bytes end_name begin_parameter_list begin_param begin_decl begin_type begin_name long end_name end_type begin_name value end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name buf end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name offset end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name length end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name temp end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name byte end_name begin_index begin_expr begin_name length end_name begin_operator PLUS end_operator end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name get octal bytes end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument begin_argument begin_expr begin_name temp end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name length end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_name temp end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name buf end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name length end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name offset end_name begin_operator PLUS end_operator begin_name length end_name end_expr end_return end_block 
 begin_comment add a resource collection to the container param c the resource collection to add throws build exception on error end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name add end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource collection end_name end_type begin_name c end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name no children allowed end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name c end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name rc end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fail fast end_name begin_operator DOT end_operator begin_name invalidate end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name coll end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set checked end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test exclude one file end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name login suceeded end_name end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name change remote dir end_name begin_argument_list begin_argument begin_expr begin_name remote tmp dir end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name ftp directory scanner end_name end_name end_type begin_name ds end_name begin_init begin_expr begin_call begin_name begin_name my ftp task end_name begin_operator DOT end_operator begin_name new scanner end_name end_name begin_argument_list begin_argument begin_expr begin_name ftp end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set basedir end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set includes end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set excludes end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name compare files end_name begin_argument_list begin_argument begin_expr begin_name ds end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr end_block end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the if attribute if this property is present in project the test will be run param property name the name of the property to look for end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set if end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name property name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name if property end_name begin_operator EQ end_operator begin_name property name end_name end_expr end_expr_stmt end_block 
 begin_comment handle error output send it the the new project if is present otherwise call the super class param output the string to output see task handle error output string since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name handle error output end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name output end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name callee end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name callee end_name begin_operator DOT end_operator begin_name handle error output end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name handle error output end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test task that doesnt really exist end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect property unset end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment define the mapper to map source to destination files return a mapper to be configured exception build exception if more than one mapper is defined end_comment begin_type begin_specifier end_specifier begin_name mapper end_name end_type begin_name create mapper end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name mapper element end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name mapper element end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name mapper end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name mapper element end_name end_expr end_return end_block 
 begin_comment return true if the text is optional end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get optional end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name optional end_name end_expr end_return end_block 
 begin_comment get the value of this property return the current value or the empty string end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name value end_name begin_operator EQT end_operator begin_operator QM end_operator begin_operator DP end_operator begin_name value end_name end_expr end_return end_block 
 begin_comment create the index list to speed up classloading this is a jdk 1 3 specific feature and is enabled by default see a href http java sun com j 2 se 1 3 docs guide jar jar html jar 20 index the jar index specification a for more details param z out the zip stream representing the jar being built throws io exception thrown if there is an error while creating the index and adding it to the zip stream end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name create index list end_name begin_parameter_list begin_param begin_decl begin_type begin_name zip output stream end_name end_type begin_name z out end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name byte array output stream end_name end_type begin_name baos end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name byte array output stream end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment encoding must be utf 8 as specified in the specs end_comment begin_decl_stmt begin_decl begin_type begin_name print writer end_name end_type begin_name writer end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name print writer end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name output stream writer end_name begin_argument_list begin_argument begin_expr begin_name baos end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment version info blankline end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name writer end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name writer end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment header newline end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name writer end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name zip file end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write index like list end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name added dirs end_name begin_operator DOT end_operator begin_name key set end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name root entries end_name end_expr end_argument begin_argument begin_expr begin_name writer end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name writer end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name index jars end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name manifest end_name end_type begin_name mf end_name begin_init begin_expr begin_call begin_name create manifest end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name manifest end_name begin_operator DOT end_operator begin_name attribute end_name end_name end_type begin_name classpath end_name begin_init begin_expr begin_call begin_name begin_name mf end_name begin_operator DOT end_operator begin_name get main section end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get attribute end_name begin_argument_list begin_argument begin_expr begin_name begin_name manifest end_name begin_operator DOT end_operator begin_name attribute classpath end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name cp entries end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name classpath end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name classpath end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string tokenizer end_name end_type begin_name tok end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string tokenizer end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name classpath end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name cp entries end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_call begin_name begin_name tok end_name begin_operator DOT end_operator begin_name count tokens end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name c end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name tok end_name begin_operator DOT end_operator begin_name has more tokens end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name begin_name cp entries end_name begin_index begin_expr begin_name c end_name begin_operator PPLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_call begin_name begin_name tok end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name index jar entries end_name begin_init begin_expr begin_call begin_name begin_name index jars end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name index jar entries end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_call begin_name find jar name end_name begin_argument_list begin_argument begin_expr begin_name begin_name index jar entries end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name cp entries end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name array list end_name end_type begin_name dirs end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name array list end_name end_type begin_name files end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name grab files and dirs end_name begin_argument_list begin_argument begin_expr begin_name begin_name index jar entries end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name dirs end_name end_expr end_argument begin_argument begin_expr begin_name files end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name dirs end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name writer end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write index like list end_name begin_argument_list begin_argument begin_expr begin_name dirs end_name end_expr end_argument begin_argument begin_expr begin_name files end_name end_expr end_argument begin_argument begin_expr begin_name writer end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name writer end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block end_for end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name writer end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name byte array input stream end_name end_type begin_name bais end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name byte array input stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name baos end_name begin_operator DOT end_operator begin_name to byte array end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name zip file end_name end_name begin_argument_list begin_argument begin_expr begin_name bais end_name end_expr end_argument begin_argument begin_expr begin_name z out end_name end_expr end_argument begin_argument begin_expr begin_name index name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name zip file set end_name begin_operator DOT end_operator begin_name default file mode end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test nested ab end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor param cachefile set the cachefile end_comment begin_specifier end_specifier begin_name propertiesfile cache end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name cachefile end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name cachefile end_name end_name begin_operator EQ end_operator begin_name cachefile end_name end_expr end_expr_stmt end_block 
 begin_comment nothing specified fail end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 1 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 3 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name expect log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment scans the directory looking for source files to be compiled the results are returned in the class variable compile list param src dir the source directory param dest the destination directory param mangler the jsp filename mangler param files the file names to mangle end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name scan dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name src dir end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name dest end_name end_decl end_param begin_param begin_decl begin_type begin_name jsp mangler end_name end_type begin_name mangler end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name files end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name now end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name date end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get time end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name filename end_name begin_init begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name src file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name src dir end_name end_expr end_argument begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name java file end_name begin_init begin_expr begin_call begin_name map to java file end_name begin_argument_list begin_argument begin_expr begin_name mangler end_name end_expr end_argument begin_argument begin_expr begin_name src file end_name end_expr end_argument begin_argument begin_expr begin_name src dir end_name end_expr end_argument begin_argument begin_expr begin_name dest end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name java file end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name src file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_name now end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name filename end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name should compile end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name should compile end_name begin_operator EQ end_operator begin_call begin_name is compile needed end_name begin_argument_list begin_argument begin_expr begin_name src file end_name end_expr end_argument begin_argument begin_expr begin_name java file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name should compile end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name compile list end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name src file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name java files end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name java file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for end_block 
 begin_comment set the height param height the height of the elipse end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set height end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name height end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name height end_name end_name begin_operator EQ end_operator begin_name height end_name end_expr end_expr_stmt end_block 
 begin_comment execute the task exception build exception if an error occurs end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name commandline java end_name end_type begin_name commandline end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name commandline java end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name format end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name set classname end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name format end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name set classname end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if begin_if begin_condition begin_expr begin_name jvm end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name set vm end_name end_name begin_argument_list begin_argument begin_expr begin_name jvm end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name get sourcespath end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name get classespath end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name get classespath end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if begin_comment execute the test and get the return code end_comment begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name exit value end_name begin_init begin_expr begin_name begin_name j depend task end_name begin_operator DOT end_operator begin_name errors end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name was killed end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name get fork end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name exit value end_name begin_operator EQ end_operator begin_call begin_name execute in vm end_name begin_argument_list begin_argument begin_expr begin_name commandline end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name execute watchdog end_name end_type begin_name watchdog end_name begin_init begin_expr begin_call begin_name create watchdog end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name exit value end_name begin_operator EQ end_operator begin_call begin_name execute as forked end_name begin_argument_list begin_argument begin_expr begin_name commandline end_name end_expr end_argument begin_argument begin_expr begin_name watchdog end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment null watchdog means no timeout you d better not check with null end_comment begin_if begin_condition begin_expr begin_name watchdog end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name was killed end_name begin_operator EQ end_operator begin_call begin_name begin_name watchdog end_name begin_operator DOT end_operator begin_name killed process end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if begin_comment if there is an error failure and that it should halt stop end_comment begin_comment everything otherwise just log a statement end_comment begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name error occurred end_name begin_init begin_expr begin_name exit value end_name begin_operator EQT end_operator begin_name begin_name j depend task end_name begin_operator DOT end_operator begin_name errors end_name end_name begin_operator UNP end_operator begin_name was killed end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name error occurred end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name error message end_name begin_init begin_expr begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name was killed end_name begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name get haltonerror end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name error message end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name error message end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if end_block 
 begin_comment creates a property return a property since ant 1 6 2 end_comment begin_type begin_specifier end_specifier begin_name property end_name end_type begin_name create property end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name property end_name end_type begin_name prop end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name property end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name property list end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name prop end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name prop end_name end_expr end_return end_block 
 begin_comment its only ok to delete a directory tree if there are no files in it param d the directory to check return true if a deletion can go ahead end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name ok to delete end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name d end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name list end_name begin_init begin_expr begin_call begin_name begin_name d end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name list end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_comment maybe io error end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name list end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name s end_name begin_init begin_expr begin_name begin_name list end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name d end_name end_expr end_argument begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name ok to delete end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_then begin_else begin_block begin_return begin_expr end_expr end_return begin_comment found a file end_comment end_block end_else end_if end_block end_for begin_return begin_expr end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test simple end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment adds a code contains code element param contains the code contains code element to add must not be code null code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add configured contains end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name contains end_name end_type begin_name contains end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name contains end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name contains end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name string utils test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment files the output of the process is redirected to if error is not redirected it too will appear in the output param out the files to which output stream is written end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set output end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name file end_name begin_index end_index end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name out end_name end_name begin_operator EQ end_operator begin_name out end_name end_expr end_expr_stmt end_block 
 begin_comment semicolon separated list of defined constants param params the new definitions value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set definitions end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name params end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name definitions end_name begin_operator EQ end_operator begin_name params end_name end_expr end_expr_stmt end_block 
 begin_comment constructor for the task logger param task the task end_comment begin_specifier end_specifier begin_name task logger end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name task end_name end_type begin_name task end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name task end_name end_name begin_operator EQ end_operator begin_name task end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test src dir test end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment adds a fileset p all included files will be added as sourcefiles the task will automatically add code includes quot 47 java quot code to the fileset p param fs a file set since 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add fileset end_name begin_parameter_list begin_param begin_decl begin_type begin_name file set end_name end_type begin_name fs end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name create source files end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name add end_name begin_argument_list begin_argument begin_expr begin_name fs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the teardown method for j unit end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment verify parameters throws build exception if something is invalid end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name validate end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name get sleep time end_name begin_argument_list end_argument_list end_call begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment get verify flag return verify end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get verify end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name verify end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test import in sequential end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name expect property set end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment similiar to link set todir set todir but explicitly states that the directory is a local this is the only way to specify a local directory with a character param a to uri a string representing the target of the copy since ant 1 6 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set local todir end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name a to uri end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set to uri end_name begin_argument_list begin_argument begin_expr begin_name a to uri end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name is to remote end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment test basic classfileset end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test basic set end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name project end_name end_type begin_name p end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file set end_name end_type begin_name result file set end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file set end_name begin_operator RPAR end_operator begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get reference end_name end_name begin_argument_list begin_argument begin_expr begin_name result fileset end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name scanner end_name begin_init begin_expr begin_call begin_name begin_name result file set end_name begin_operator DOT end_operator begin_name get directory scanner end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name scanned files end_name begin_init begin_expr begin_call begin_name begin_name scanner end_name begin_operator DOT end_operator begin_name get included files end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name hashtable end_name end_type begin_name files end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name scanned files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name scanned files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name scanned files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name contains key end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name contains key end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name contains key end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name contains key end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment bugzilla report 25513 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test compression level end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment creates log stream handler param task the task for whom to log param outlevel the loglevel used to log standard output param errlevel the loglevel used to log standard error end_comment begin_specifier end_specifier begin_name log stream handler end_name begin_parameter_list begin_param begin_decl begin_type begin_name task end_name end_type begin_name task end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name outlevel end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name errlevel end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name project component end_name begin_operator RPAR end_operator begin_name task end_name end_expr end_argument begin_argument begin_expr begin_name outlevel end_name end_expr end_argument begin_argument begin_expr begin_name errlevel end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the replace flag param repl the status to set the flag to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set replace end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name repl end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m replace end_name begin_operator EQ end_operator begin_name repl end_name end_expr end_expr_stmt end_block 
 begin_comment get our reader return a reader end_comment begin_type begin_specifier end_specifier begin_name xml reader end_name end_type begin_name get reader end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name jaxp utils end_name begin_operator DOT end_operator begin_name get parser end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name jaxp utils end_name begin_operator DOT end_operator begin_name get xml reader end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment deprecated since 1 5 x set type string is deprecated and is replaced with set type available file dir to make ant s introspection mechanism do the work and also to encapsulate operations on the type in its own class param type the type of resource end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set type end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name type end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name type end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file dir end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name type end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr begin_name type end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the executable this is not allowed and it always throws a build exception param e ignored ant attribute ignore true end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set command end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name get task type end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_comment set the ignore flag param ignore the status to set the flag to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set ignore end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name ignore end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m ignore end_name begin_operator EQ end_operator begin_name ignore end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name read end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name c end_name begin_init begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_switch begin_condition begin_expr begin_name c end_name end_expr end_condition begin_block begin_case begin_expr end_expr end_case begin_case begin_expr end_expr begin_expr_stmt begin_expr begin_name column number end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr end_expr begin_expr_stmt begin_expr begin_name column number end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name edits blocked end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name col next tab end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name column number end_name begin_operator PLUS end_operator begin_name tab length end_name begin_operator MINUS end_operator begin_operator RPAR end_operator begin_operator SLASH end_operator begin_name tab length end_name begin_operator RPAR end_operator begin_operator STAR end_operator begin_name tab length end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name count spaces end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name num tabs end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_label begin_name scan whitespace end_name end_label begin_while begin_condition begin_expr begin_operator LPAR end_operator begin_name c end_name begin_operator EQ end_operator begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_block begin_switch begin_condition begin_expr begin_name c end_name end_expr end_condition begin_block begin_case begin_expr end_expr begin_if begin_condition begin_expr begin_operator PPLUS end_operator begin_name column number end_name begin_operator EQT end_operator begin_name col next tab end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name num tabs end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name count spaces end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name col next tab end_name begin_operator UNP end_operator begin_name tab length end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name count spaces end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_else end_if begin_break end_break end_case begin_case begin_expr end_expr begin_expr_stmt begin_expr begin_name column number end_name begin_operator EQ end_operator begin_name col next tab end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name num tabs end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name count spaces end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name col next tab end_name begin_operator UNP end_operator begin_name tab length end_name end_expr end_expr_stmt begin_break end_break end_case begin_default begin_expr_stmt begin_expr begin_call begin_name push end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_default end_block end_switch end_block end_while begin_while begin_condition begin_expr begin_name count spaces end_name begin_operator MMINUS end_operator begin_operator GT end_operator end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name push end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name column number end_name begin_operator MMINUS end_operator end_expr end_expr_stmt end_block end_while begin_while begin_condition begin_expr begin_name num tabs end_name begin_operator MMINUS end_operator begin_operator GT end_operator end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name push end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name column number end_name begin_operator UNP end_operator begin_name tab length end_name end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_name c end_name begin_operator EQ end_operator begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_switch begin_condition begin_expr begin_name c end_name end_expr end_condition begin_block begin_case begin_expr end_expr begin_expr_stmt begin_expr begin_name column number end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr end_expr begin_expr_stmt begin_expr begin_name column number end_name begin_operator UNP end_operator begin_name tab length end_name end_expr end_expr_stmt begin_break end_break end_case begin_default begin_comment fall tru end_comment end_default end_block end_switch end_block end_then end_if begin_break end_break end_case begin_case begin_expr end_expr begin_expr_stmt begin_expr begin_name column number end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name column number end_name begin_operator PLUS end_operator begin_name tab length end_name begin_operator MINUS end_operator begin_operator RPAR end_operator begin_operator SLASH end_operator begin_name tab length end_name begin_operator RPAR end_operator begin_operator STAR end_operator begin_name tab length end_name end_expr end_expr_stmt begin_break end_break end_case begin_default begin_expr_stmt begin_expr begin_name column number end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_default end_block end_switch begin_return begin_expr begin_name c end_name end_expr end_return end_block 
 begin_comment set the value to be tested let ant eval it to true false param value the value to test end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set value end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name value end_name end_name begin_operator EQ end_operator begin_name value end_name begin_operator QM end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name true end_name end_name begin_operator DP end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name false end_name end_name end_expr end_expr_stmt end_block 
 begin_comment returns the charset of mail message return charset of mail message since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get charset end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name charset end_name end_expr end_return end_block 
 begin_comment learn whether strings will be trimmed return boolean trim setting end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get trim end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name trim end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name trim end_name begin_operator DOT end_operator begin_name boolean value end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment initialise the constant pool end_comment begin_specifier end_specifier begin_name constant pool end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name entries end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment the zero index is never present in the constant pool itself so end_comment begin_comment we add a null entry for it end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name entries end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name utf 8 indexes end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test multi upload and download end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name list end_name end_type begin_name upload list end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name upload list end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name create temporary file end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_decl_stmt begin_decl begin_type begin_name scp end_name end_type begin_name scp end_name begin_init begin_expr begin_call begin_name create task end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name filename selector end_name end_type begin_name selector end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name filename selector end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name selector end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file set end_name end_type begin_name fileset end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file set end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fileset end_name begin_operator DOT end_operator begin_name set dir end_name end_name begin_argument_list begin_argument begin_expr begin_name temp dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fileset end_name begin_operator DOT end_operator begin_name add filename end_name end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name scp end_name begin_operator DOT end_operator begin_name add fileset end_name end_name begin_argument_list begin_argument begin_expr begin_name fileset end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name scp end_name begin_operator DOT end_operator begin_name set todir end_name end_name begin_argument_list begin_argument begin_expr begin_name ssh host uri end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name scp end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name multi end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name temp dir end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name multi end_name begin_operator DOT end_operator begin_name mkdir end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add cleanup end_name begin_argument_list begin_argument begin_expr begin_name multi end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name scp end_name end_type begin_name scp 2 end_name begin_init begin_expr begin_call begin_name create task end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name scp 2 end_name begin_operator DOT end_operator begin_name set file end_name end_name begin_argument_list begin_argument begin_expr begin_name ssh host uri end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name scp 2 end_name begin_operator DOT end_operator begin_name set todir end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name multi end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name scp 2 end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name files match end_name end_type begin_name match end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name files match end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name upload list end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name match end_name begin_operator DOT end_operator begin_name set file 1 end_name end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f 2 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name multi end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name match end_name begin_operator DOT end_operator begin_name set file 2 end_name end_name begin_argument_list begin_argument begin_expr begin_name f 2 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name f 2 end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name match end_name begin_operator DOT end_operator begin_name eval end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_comment get the replacement value for this filter token return the replacement value end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get replace value end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name property end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name begin_name properties end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name property end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_name value end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_name value end_name end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_name begin_name replace end_name begin_operator DOT end_operator begin_name this end_name begin_operator DOT end_operator begin_name value end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name begin_name replace end_name begin_operator DOT end_operator begin_name this end_name begin_operator DOT end_operator begin_name value end_name begin_operator DOT end_operator begin_name get text end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_comment default is empty string end_comment begin_return begin_expr end_expr end_return end_block end_else end_if end_else end_if end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set cmp end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name cmp end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set cmp end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name cmp end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment since ant 1 7 return a shallow copy of this data type throws clone not supported exception if there is a problem end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name clone end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name clone not supported exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name data type end_name end_type begin_name dt end_name begin_init begin_expr begin_operator LPAR end_operator begin_name data type end_name begin_operator RPAR end_operator begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dt end_name begin_operator DOT end_operator begin_name set description end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get description end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name get refid end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name dt end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get refid end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name dt end_name begin_operator DOT end_operator begin_name set checked end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name is checked end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name dt end_name end_expr end_return end_block 
 begin_comment return true if this resource is selected param r the resource to check return whether the resource was selected end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is selected end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name sel end_name begin_operator DOT end_operator begin_name is selected end_name end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment create an object using this creator which is determined by introspection return the created object end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name create end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name poly type end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name nested creator end_name begin_operator DOT end_operator begin_name is poly morphic end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name component helper end_name end_type begin_name helper end_name begin_init begin_expr begin_call begin_name begin_name component helper end_name begin_operator DOT end_operator begin_name get component helper end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name nested object end_name begin_operator EQ end_operator begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name create component end_name end_name begin_argument_list begin_argument begin_expr begin_name poly type end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name nested object end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name poly type end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_then end_if begin_try begin_block begin_expr_stmt begin_expr begin_name nested object end_name begin_operator EQ end_operator begin_call begin_name begin_name nested creator end_name begin_operator DOT end_operator begin_name create end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_name nested object end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name project end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name set project reference end_name end_name begin_argument_list begin_argument begin_expr begin_name nested object end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name nested object end_name end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal access exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name ex end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name instantiation exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name ex end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal argument exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name poly type end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name poly type end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_throw begin_expr begin_name ex end_name end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name invocation target exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name begin_init begin_expr begin_call begin_name begin_name ex end_name begin_operator DOT end_operator begin_name get target exception end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name t end_name begin_operator UNP end_operator begin_name build exception end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator LPAR end_operator begin_name build exception end_name begin_operator RPAR end_operator begin_name t end_name end_expr end_throw end_block end_then end_if begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment whether this task can deal with non file resources p this implementation returns true only if this task is lt gzip gt any subclass of this class that also wants to support non file resources needs to override this method we need to do so for backwards compatibility reasons since we can t expect subclasses to support resources p return true if this case supports non file resources since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name supports non file resources end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get class end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name g zip end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment path swallows the basedir it seems end_comment begin_comment assert true get project resolve file a exists end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test path element move end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name exists end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name exists end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name exists end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name exists end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name assertions test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment indicate if the value specifies a directory return true if the value specifies a directory end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is dir end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator DOT end_operator begin_call begin_name equals ignore case end_name begin_argument_list begin_argument begin_expr begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment perform the replacement on a file param f the file to perform the relacement on param options the regular expressions options exception io exception if an error occurs end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name do replace end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name f end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name options end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name temp end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name create temp file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name temp end_name begin_operator DOT end_operator begin_name delete on exit end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name reader end_name end_type begin_name r end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name writer end_name end_type begin_name w end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_if begin_condition begin_expr begin_name encoding end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name r end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file reader end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name w end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file writer end_name begin_argument_list begin_argument begin_expr begin_name temp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name r end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name input stream reader end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name w end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name output stream writer end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file output stream end_name begin_argument_list begin_argument begin_expr begin_name temp end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_decl_stmt begin_decl begin_type begin_name buffered reader end_name end_type begin_name br end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name buffered reader end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name buffered writer end_name end_type begin_name bw end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name buffered writer end_name begin_argument_list begin_argument begin_expr begin_name w end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name print writer end_name end_type begin_name pw end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name print writer end_name begin_argument_list begin_argument begin_expr begin_name bw end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name changes end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name regex end_name begin_operator DOT end_operator begin_name get pattern end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name subs end_name begin_operator DOT end_operator begin_name get expression end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name byline end_name begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator begin_operator LPAR end_operator begin_call begin_name begin_name flags end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_operator QM end_operator begin_operator PLUS end_operator begin_name flags end_name begin_operator PLUS end_operator begin_operator DP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name byline end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name linebuf end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name line end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name res end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name c end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name has cr end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_do begin_block begin_expr_stmt begin_expr begin_name c end_name begin_operator EQ end_operator begin_call begin_name begin_name br end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name c end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name has cr end_name end_expr end_condition begin_then begin_block begin_comment second cr eol possibly empty line end_comment begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator begin_call begin_name begin_name linebuf end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name res end_name begin_operator EQ end_operator begin_call begin_name do replace end_name begin_argument_list begin_argument begin_expr begin_name regex end_name end_expr end_argument begin_argument begin_expr begin_name subs end_name end_expr end_argument begin_argument begin_expr begin_name line end_name end_expr end_argument begin_argument begin_expr begin_name options end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name changes end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name pw end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name pw end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name linebuf end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment has cr is still true for the second one end_comment end_block end_then begin_else begin_block begin_comment first cr in this line end_comment begin_expr_stmt begin_expr begin_name has cr end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_else end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_name c end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment lf eol end_comment begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator begin_call begin_name begin_name linebuf end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name res end_name begin_operator EQ end_operator begin_call begin_name do replace end_name begin_argument_list begin_argument begin_expr begin_name regex end_name end_expr end_argument begin_argument begin_expr begin_name subs end_name end_expr end_argument begin_argument begin_expr begin_name line end_name end_expr end_argument begin_argument begin_expr begin_name options end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name changes end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name pw end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name has cr end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name pw end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name has cr end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name pw end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name linebuf end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment any other char end_comment begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name has cr end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name c end_name begin_operator LT end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_comment mac style linebreak or eof or both end_comment begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator begin_call begin_name begin_name linebuf end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name res end_name begin_operator EQ end_operator begin_call begin_name do replace end_name begin_argument_list begin_argument begin_expr begin_name regex end_name end_expr end_argument begin_argument begin_expr begin_name subs end_name end_expr end_argument begin_argument begin_expr begin_name line end_name end_expr end_argument begin_argument begin_expr begin_name options end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name changes end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name pw end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name has cr end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name pw end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name has cr end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name linebuf end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name c end_name begin_operator GE end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name linebuf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name char end_name begin_operator RPAR end_operator begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if end_else end_if end_block begin_condition begin_expr begin_name c end_name begin_operator GE end_operator end_expr end_condition end_do begin_expr_stmt begin_expr begin_call begin_name begin_name pw end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name buf end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name read fully end_name end_name begin_argument_list begin_argument begin_expr begin_name br end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name buf end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name buf end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name res end_name begin_init begin_expr begin_call begin_name do replace end_name begin_argument_list begin_argument begin_expr begin_name regex end_name end_expr end_argument begin_argument begin_expr begin_name subs end_name end_expr end_argument begin_argument begin_expr begin_name buf end_name end_expr end_argument begin_argument begin_expr begin_name options end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name buf end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name changes end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name pw end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name pw end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name r end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name w end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name changes end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name rename end_name end_name begin_argument_list begin_argument begin_expr begin_name temp end_name end_expr end_argument begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name temp end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name temp end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name w end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name temp end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name temp end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try end_block 
 begin_comment get the index of a given constant methodref entry in the constant pool param method class name the name of the class which contains the method being referenced param method name the name of the method being referenced param method type the type descriptor of the method being referenced return the index at which the given method ref entry occurs in the constant pool or 1 if the value does not occur end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get method ref entry end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name method class name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name method name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name method type end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name index end_name begin_init begin_expr begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name entries end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name index end_name begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name element end_name begin_init begin_expr begin_call begin_name begin_name entries end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name element end_name begin_operator UNP end_operator begin_name method ref cp info end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name method ref cp info end_name end_type begin_name method ref entry end_name begin_init begin_expr begin_operator LPAR end_operator begin_name method ref cp info end_name begin_operator RPAR end_operator begin_name element end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name method ref entry end_name begin_operator DOT end_operator begin_name get method class name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name method class name end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name method ref entry end_name begin_operator DOT end_operator begin_name get method name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name method name end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name method ref entry end_name begin_operator DOT end_operator begin_name get method type end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name method type end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name index end_name begin_operator EQ end_operator begin_name i end_name end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block end_for begin_return begin_expr begin_name index end_name end_expr end_return end_block 
 begin_comment set the date at which the changelog should stop param end date the date at which the changelog should stop end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set end end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name date end_name end_type begin_name end date end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name end date end_name end_name begin_operator EQ end_operator begin_name end date end_name end_expr end_expr_stmt end_block 
 begin_comment execute it throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name validate end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name classpath end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name classpath end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name classpath end_name begin_operator EQ end_operator begin_call begin_name begin_name classpath end_name begin_operator DOT end_operator begin_name concat system classpath end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name classpath end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name classpath end_name begin_operator EQ end_operator begin_call begin_name begin_name classpath end_name begin_operator DOT end_operator begin_name concat system classpath end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name classpath end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_decl_stmt begin_decl begin_type begin_name ant class loader end_name end_type begin_name loader end_name end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name loader end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name ant class loader end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get core loader end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name classpath end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name loc end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name classname end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment convert a class name into a resource end_comment begin_expr_stmt begin_expr begin_name resource end_name begin_operator EQ end_operator begin_call begin_name begin_name classname end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name resource end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name resource end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name resource end_name begin_operator EQ end_operator begin_call begin_name begin_name resource end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name resource end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name url end_name end_type begin_name url end_name end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name url end_name begin_operator EQ end_operator begin_call begin_name begin_name loader end_name begin_operator DOT end_operator begin_name get resource end_name end_name begin_argument_list begin_argument begin_expr begin_name resource end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name url end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment set the property end_comment begin_expr_stmt begin_expr begin_name loc end_name begin_operator EQ end_operator begin_call begin_name begin_name url end_name begin_operator DOT end_operator begin_name to external form end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set new property end_name begin_argument_list begin_argument begin_expr begin_name property end_name end_expr end_argument begin_argument begin_expr begin_name loc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test basic end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect property set end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the options to the compiler each option will use e name value argument return the options end_comment begin_type begin_specifier end_specifier begin_name vector end_name end_type begin_name get options end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name options end_name end_expr end_return end_block 
 begin_comment method used to encapsulate the writing of the jar file iterates over the filenames java io files in the hashtable stored on the instance variable ejb files param base name the base name param jar file the jar file to write to param files the files to write to the jar param public id the id to use throws build exception if there is an error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write jar end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name base name end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name jar file end_name end_decl end_param begin_param begin_decl begin_type begin_name hashtable end_name end_type begin_name files end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name public id end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_comment build the home classes list end_comment begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name homes end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name iterator end_name end_type begin_name it end_name begin_init begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name key set end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name it end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name clazz end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name it end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name clazz end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment remove class extension end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name home end_name begin_init begin_expr begin_call begin_name to class end_name begin_argument_list begin_argument begin_expr begin_name clazz end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name homes end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name home end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name home end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_while begin_expr_stmt begin_expr begin_call begin_name build borland stubs end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name homes end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment add the gen files to the collection end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name put all end_name end_name begin_argument_list begin_argument begin_expr begin_name genfiles end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name write jar end_name end_name begin_argument_list begin_argument begin_expr begin_name base name end_name end_expr end_argument begin_argument begin_expr begin_name jar file end_name end_expr end_argument begin_argument begin_expr begin_name files end_name end_expr end_argument begin_argument begin_expr begin_name public id end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name verify end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name verify borland jar end_name begin_argument_list begin_argument begin_expr begin_name jar file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name generateclient end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name generate client end_name begin_argument_list begin_argument begin_expr begin_name jar file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment returns the flag indicating if reverse branch mappings are sought return reversebranchmappings flag end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is reversebranchmappings end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name reversebranchmappings end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test chained end_name begin_parameter_list end_parameter_list begin_block begin_comment a b c def end_comment begin_comment ghi end_comment begin_decl_stmt begin_decl begin_type begin_name file name mapper end_name end_type begin_name mapper ab end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name glob pattern mapper end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name mapper ab end_name begin_operator DOT end_operator begin_name set from end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name mapper ab end_name begin_operator DOT end_operator begin_name set to end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file name mapper end_name end_type begin_name mapper bc end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name glob pattern mapper end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name mapper bc end_name begin_operator DOT end_operator begin_name set from end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name mapper bc end_name begin_operator DOT end_operator begin_name set to end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment implicit composite end_comment begin_decl_stmt begin_decl begin_type begin_name mapper end_name end_type begin_name mapper cx end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name mapper end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file name mapper end_name end_type begin_name mapper def end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name glob pattern mapper end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name mapper def end_name begin_operator DOT end_operator begin_name set from end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name mapper def end_name begin_operator DOT end_operator begin_name set to end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file name mapper end_name end_type begin_name mapper ghi end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name glob pattern mapper end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name mapper ghi end_name begin_operator DOT end_operator begin_name set from end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name mapper ghi end_name begin_operator DOT end_operator begin_name set to end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name mapper cx end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name mapper def end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name mapper cx end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name mapper ghi end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name mapper end_name end_type begin_name chained end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name mapper end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name chained end_name begin_operator DOT end_operator begin_name set classname end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name chained mapper end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name get name end_name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name chained end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name mapper ab end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name chained end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name mapper bc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name chained end_name begin_operator DOT end_operator begin_name add configured mapper end_name end_name begin_argument_list begin_argument begin_expr begin_name mapper cx end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file name mapper end_name end_type begin_name file name mapper end_name begin_init begin_expr begin_call begin_name begin_name chained end_name begin_operator DOT end_operator begin_name get implementation end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name targets end_name begin_init begin_expr begin_call begin_name begin_name file name mapper end_name begin_operator DOT end_operator begin_name map file name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name targets end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name targets end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name list end_name end_type begin_name list end_name begin_init begin_expr begin_call begin_name begin_name arrays end_name begin_operator DOT end_operator begin_name as list end_name end_name begin_argument_list begin_argument begin_expr begin_name targets end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name list end_name begin_operator DOT end_operator begin_name contains end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name list end_name begin_operator DOT end_operator begin_name contains end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment access to property tables end_comment begin_comment this is used to support ant call and similar tasks it should be end_comment begin_comment deprecated it is possible to use a better more efficient end_comment begin_comment mechanism to preserve the context end_comment begin_comment returns a copy of the properties table return a hashtable containing all properties including user properties end_comment begin_type begin_specifier end_specifier begin_name hashtable end_name end_type begin_name get properties end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list begin_argument begin_expr begin_name properties end_name end_expr end_argument end_argument_list end_call end_expr end_return begin_comment there is a better way to save the context this shouldn t end_comment begin_comment delegate to next it s for backward compatibility only end_comment end_block 
 begin_comment handle a flush operation on the error stream param output the error information being flushed end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name handle error flush end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name output end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name error print stream end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name error print stream end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name print stream end_name begin_argument_list begin_argument begin_expr begin_name error stream end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name error print stream end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the filename to act upon if no file is specified then the task acts upon the project param filename the new file value end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set file end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name filename end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal filename end_name end_name begin_argument_list begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment stops the processing of streams called from p 4 base exec p 4 command string command p 4 handler handler see p 4 base exec p 4 command string p 4 handler end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name stop end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name my handler end_name begin_operator DOT end_operator begin_name stop end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the forceoverwrite attribute default is false param force if true overwrite even if the destination file is newer that the source file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set forceoverwrite end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name force end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name force overwrite end_name begin_operator EQ end_operator begin_name force end_name end_expr end_expr_stmt end_block 
 begin_comment overrides the version from data type to recurse on nested resource comparators param stk the stack of data types to use recursively param p the project to use to dereference the references throws build exception on error end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name die on circular reference end_name begin_parameter_list begin_param begin_decl begin_type begin_name stack end_name end_type begin_name stk end_name end_decl end_param begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name is checked end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name die on circular reference end_name end_name begin_argument_list begin_argument begin_expr begin_name stk end_name end_expr end_argument begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_name control end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name data type end_name begin_operator DOT end_operator begin_name invoke circular reference check end_name end_name begin_argument_list begin_argument begin_expr begin_name control end_name end_expr end_argument begin_argument begin_expr begin_name stk end_name end_expr end_argument begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name data type end_name begin_operator DOT end_operator begin_name invoke circular reference check end_name end_name begin_argument_list begin_argument begin_expr begin_name comp end_name end_expr end_argument begin_argument begin_expr begin_name stk end_name end_expr end_argument begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set checked end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment session or entity end_comment begin_comment constructs a new instance of the handler and registers local copies of the standard ejb 1 1 descriptor dtd as well as i as s ejb descriptor dtd end_comment begin_specifier end_specifier begin_name ejbc handler end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name register dtd end_name begin_argument_list begin_argument begin_expr begin_name publicid ejb 11 end_name end_expr end_argument begin_argument begin_expr begin_name default ias 60 ejb 11 dtd location end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name register dtd end_name begin_argument_list begin_argument begin_expr begin_name publicid iplanet ejb 60 end_name end_expr end_argument begin_argument begin_expr begin_name default ias 60 dtd location end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the language one of cs js or vb optional default is cs for c source param language language to generate end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set language end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name language end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name language end_name end_name begin_operator EQ end_operator begin_name language end_name end_expr end_expr_stmt end_block 
 begin_comment replace changes manifest version from 2 0 to 1 0 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test replace end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument begin_argument begin_expr begin_name manifest exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name manifest end_name end_type begin_name mf end_name begin_init begin_expr begin_call begin_name get manifest end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr begin_name mf end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name manifest end_name begin_operator DOT end_operator begin_name get default manifest end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name mf end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets whether or not symbolic links should be followed param follow symlinks whether or not symbolic links should be followed end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set follow symlinks end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name follow symlinks end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name fileset end_name begin_operator DOT end_operator begin_name set follow symlinks end_name end_name begin_argument_list begin_argument begin_expr begin_name follow symlinks end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the working directory of the process to execute p this is emulated using the ant run scripts unless the os is windows nt in which case a cmd exe is spawned or mrj and setting user dir works or jdk 1 3 and there is official support in java lang runtime param wd the working directory of the process end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set working directory end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name wd end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name working directory end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name wd end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name wd end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name ant working directory end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator QM end_operator begin_operator DP end_operator begin_name wd end_name end_expr end_expr_stmt end_block 
 begin_comment do we want pure java default true or corrupted j param pure java a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set pure java end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name pure java end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name pure java end_name end_name begin_operator EQ end_operator begin_name pure java end_name end_expr end_expr_stmt end_block 
 begin_comment return the names of the files which matched none of the include patterns the names are relative to the base directory this involves performing a slow scan if one has not already been completed return the names of the files which matched none of the include patterns see slow scan end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get not included files end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name slow scan end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name files end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_call begin_name begin_name files not included end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name files not included end_name begin_operator DOT end_operator begin_name copy into end_name end_name begin_argument_list begin_argument begin_expr begin_name files end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name files end_name end_expr end_return end_block 
 begin_comment to make taskdef happy end_comment begin_specifier end_specifier begin_name flex integer test end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test xml schema validation end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test xml schema good end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_throw begin_expr begin_name e end_name end_expr end_throw end_block end_else end_if end_block end_catch end_try end_block 
 begin_comment setter used to store the suffix for the generated borland jar file param in string the string to use as the suffix end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set suffix end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name in string end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name jar suffix end_name end_name begin_operator EQ end_operator begin_name in string end_name end_expr end_expr_stmt end_block 
 begin_comment if true enable verbose ilasm output param b flag set to true for verbose on end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set verbose end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name verbose end_name begin_operator EQ end_operator begin_name b end_name end_expr end_expr_stmt end_block 
 begin_comment the j unit setup method end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr begin_name taskdefs dir end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name base dir end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name taskdefs dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name out dir end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name base dir end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set up the command sequence end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name prepare executor end_name begin_parameter_list end_parameter_list begin_block begin_comment default directory to the project s base directory end_comment begin_if begin_condition begin_expr begin_name owner end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name owner end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name dir end_name begin_init begin_expr begin_call begin_name begin_name owner end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name directory end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name dir end_name begin_operator EQ end_operator begin_name directory end_name end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name execute stream handler end_name end_type begin_name handler end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name log stream handler end_name begin_argument_list begin_argument begin_expr begin_name owner end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name executable end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name execute end_name begin_argument_list begin_argument begin_expr begin_name handler end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name executable end_name begin_operator DOT end_operator begin_name set ant run end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name owner end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name executable end_name begin_operator DOT end_operator begin_name set working directory end_name end_name begin_argument_list begin_argument begin_expr begin_name dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name notest xerces property end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor for file set end_comment begin_specifier end_specifier begin_name file set end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test vector equals end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name collection utils end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name collection utils end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name collection utils end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name v 1 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name stack end_name end_type begin_name s 2 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name stack end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name v 1 end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s 2 end_name begin_operator DOT end_operator begin_name push end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name collection utils end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name v 1 end_name end_expr end_argument begin_argument begin_expr begin_name s 2 end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name collection utils end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name s 2 end_name end_expr end_argument begin_argument begin_expr begin_name v 1 end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name v 1 end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name collection utils end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name v 1 end_name end_expr end_argument begin_argument begin_expr begin_name s 2 end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name collection utils end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name s 2 end_name end_expr end_argument begin_argument begin_expr begin_name v 1 end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s 2 end_name begin_operator DOT end_operator begin_name push end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name collection utils end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name v 1 end_name end_expr end_argument begin_argument begin_expr begin_name s 2 end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name collection utils end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name s 2 end_name end_expr end_argument begin_argument begin_expr begin_name v 1 end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s 2 end_name begin_operator DOT end_operator begin_name push end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name collection utils end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name v 1 end_name end_expr end_argument begin_argument begin_expr begin_name s 2 end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name collection utils end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name s 2 end_name end_expr end_argument begin_argument begin_expr begin_name v 1 end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name v 1 end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name collection utils end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name v 1 end_name end_expr end_argument begin_argument begin_expr begin_name s 2 end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name collection utils end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name s 2 end_name end_expr end_argument begin_argument begin_expr begin_name v 1 end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name v 1 end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s 2 end_name begin_operator DOT end_operator begin_name push end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name collection utils end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name v 1 end_name end_expr end_argument begin_argument begin_expr begin_name s 2 end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name collection utils end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name s 2 end_name end_expr end_argument begin_argument begin_expr begin_name v 1 end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the last modification attribute param lastmodified the modification time in milliseconds since 01 01 1970 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set last modified end_name begin_parameter_list begin_param begin_decl begin_type begin_name long end_name end_type begin_name lastmodified end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name check attributes allowed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name lastmodified end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name long end_name begin_argument_list begin_argument begin_expr begin_name lastmodified end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment convenience layer on top of restrict that returns the source files as file objects containing absolute paths if src dir is absolute param files the original set of files param src dir all files are relative to this directory param dest dir target files live here if null file names returned by the mapper are assumed to be absolute param mapper knows how to construct a target file names from source file names param granularity the number of milliseconds leeway to give before deciding a target is out of date return an array of files since ant 1 6 2 end_comment begin_type begin_specifier end_specifier begin_name file end_name begin_index end_index end_type begin_name restrict as files end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name files end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name src dir end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name dest dir end_name end_decl end_param begin_param begin_decl begin_type begin_name file name mapper end_name end_type begin_name mapper end_name end_decl end_param begin_param begin_decl begin_type begin_name long end_name end_type begin_name granularity end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name res end_name begin_init begin_expr begin_call begin_name restrict end_name begin_argument_list begin_argument begin_expr begin_name files end_name end_expr end_argument begin_argument begin_expr begin_name src dir end_name end_expr end_argument begin_argument begin_expr begin_name dest dir end_name end_expr end_argument begin_argument begin_expr begin_name mapper end_name end_expr end_argument begin_argument begin_expr begin_name granularity end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name begin_index end_index end_type begin_name result end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name file end_name begin_index begin_expr begin_name begin_name res end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name res end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name begin_name result end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name src dir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name res end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_name result end_name end_expr end_return end_block 
 begin_comment set the extra field data in the local file data without header id or length specifier param data the field data to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set local file data data end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name data end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name local data end_name begin_operator EQ end_operator begin_name data end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment convert a date object to a dos date time field param time the code date code to convert return the date as a code zip long code since 1 1 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name zip long end_name end_type begin_name to dos time end_name begin_parameter_list begin_param begin_decl begin_type begin_name date end_name end_type begin_name time end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name zip long end_name begin_argument_list begin_argument begin_expr begin_call begin_name to dos time end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name time end_name begin_operator DOT end_operator begin_name get time end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment where ant should place temporary files since ant 1 6 param tmp dir the temporary directory end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set tempdir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name tmp dir end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name tmp dir end_name end_name begin_operator EQ end_operator begin_name tmp dir end_name end_expr end_expr_stmt end_block 
 begin_comment runs the various sub builds end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name buildpath end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name filenames end_name begin_init begin_expr begin_call begin_name begin_name buildpath end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name count end_name begin_init begin_expr begin_name begin_name filenames end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name count end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_comment revisit there must be cleaner way of doing this if it is merited at all if sub target null sub target get owning target get name end_comment begin_decl_stmt begin_decl begin_type begin_name build exception end_name end_type begin_name build exception end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name count end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name subdir path end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name throwable end_name end_type begin_name thrown exception end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name directory end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name file end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name begin_name filenames end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name verbose end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name subdir path end_name begin_operator EQ end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name subdir path end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name genericantfile end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name directory end_name begin_operator EQ end_operator begin_name file end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name file end_name begin_operator EQ end_operator begin_name genericantfile end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name file end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument begin_argument begin_expr begin_name antfile end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name execute end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument begin_argument begin_expr begin_name directory end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name verbose end_name begin_operator UNP end_operator begin_name subdir path end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name subdir path end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name runtime exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name is keep going mode end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name verbose end_name begin_operator UNP end_operator begin_name subdir path end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name subdir path end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_throw begin_expr begin_name ex end_name end_expr end_throw begin_comment throw further end_comment end_block end_then end_if begin_expr_stmt begin_expr begin_name thrown exception end_name begin_operator EQ end_operator begin_name ex end_name end_expr end_expr_stmt end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name is keep going mode end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name verbose end_name begin_operator UNP end_operator begin_name subdir path end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name subdir path end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name ex end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name thrown exception end_name begin_operator EQ end_operator begin_name ex end_name end_expr end_expr_stmt end_block end_catch end_try begin_if begin_condition begin_expr begin_name thrown exception end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name thrown exception end_name begin_operator UNP end_operator begin_name build exception end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name file end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name thrown exception end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment only the first build exception is reported end_comment begin_if begin_condition begin_expr begin_name build exception end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name build exception end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name build exception end_name begin_operator RPAR end_operator begin_name thrown exception end_name end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name file end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name thrown exception end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name thrown exception end_name begin_operator DOT end_operator begin_name print stack trace end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name build exception end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name build exception end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name thrown exception end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if begin_if begin_condition begin_expr begin_name verbose end_name begin_operator UNP end_operator begin_name subdir path end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name subdir path end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block end_for begin_comment check if one of the builds failed in keep going mode end_comment begin_if begin_condition begin_expr begin_name build exception end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_name build exception end_name end_expr end_throw end_block end_then end_if end_block 
 begin_comment set the type of file to require param file types the type of file file or dir end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set type end_name begin_parameter_list begin_param begin_decl begin_type begin_name file type end_name end_type begin_name file types end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name type end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name file types end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment handles the start of a top level element within the project an appropriate handler is created and initialised with the details of the element param name the name of the element being started will not be code null code param attrs attributes of the element being started will not be code null code exception sax parse exception if the tag given is not code taskdef code code typedef code code property code code target code or a data type definition end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name start element end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name attribute list end_name end_type begin_name attrs end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name sax parse exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name handle target end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name attrs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name handle element end_name begin_argument_list begin_argument begin_expr begin_name helper impl end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_name begin_name helper impl end_name begin_operator DOT end_operator begin_name implicit target end_name end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name attrs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment return returns the default date format config end_comment begin_type begin_name string end_name end_type begin_name get default date format config end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name default date format config end_name end_expr end_return end_block 
 begin_comment set a user property which cannot be overwritten by set unset property calls any previous value is overwritten also marks these properties as properties that have not come from the command line param name the name of property to set must not be code null code param value the new value of the property must not be code null code see set property string string end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set inherited property end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name property helper end_name end_type begin_name ph end_name begin_init begin_expr begin_call begin_name begin_name property helper end_name begin_operator DOT end_operator begin_name get property helper end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ph end_name begin_operator DOT end_operator begin_name set inherited property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test simple end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name compare bytes end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name run end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name should destroy end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name process destroyer end_name begin_operator DOT end_operator begin_name this end_name begin_operator DOT end_operator begin_name run end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment determine if an archive record indicate end of archive end of archive is indicated by a record that consists entirely of null bytes param record the record data to check return true if the record data is an end of archive end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is eof record end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name record end_name end_decl end_param end_parameter_list begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init begin_operator UNP end_operator begin_name sz end_name begin_init begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name get record size end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name sz end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name begin_name record end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_for begin_return begin_expr end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test head lines skip end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name expected end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name content equals end_name end_name begin_argument_list begin_argument begin_expr begin_name expected end_name end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment setup rmic argument for rmic param options additional parameters needed by a specific implementation return the command line end_comment begin_type begin_specifier end_specifier begin_name commandline end_name end_type begin_name setup rmic command end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name options end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name commandline end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name options end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name options end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name begin_name options end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name classpath end_name begin_init begin_expr begin_call begin_name get compile classpath end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get base end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get extdirs end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set path end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get extdirs end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set path end_name begin_argument_list begin_argument begin_expr begin_name classpath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment handle the many different stub options end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name stub version end_name begin_init begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get stub version end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment default is compatibility end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name stub option end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name stub version end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name stub version end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name stub option end_name begin_operator EQ end_operator begin_name stub 1 1 end_name end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name stub version end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name stub option end_name begin_operator EQ end_operator begin_name stub 1 2 end_name end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name stub version end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name stub option end_name begin_operator EQ end_operator begin_name stub compat end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment anything else end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name stub version end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment do nothing with the value or go v stub version end_comment end_block end_else end_if end_else end_if end_else end_if end_block end_then end_if begin_comment for java 1 5 we generate compatible stubs that is unless end_comment begin_comment the caller asked for idl or iiop support end_comment begin_if begin_condition begin_expr begin_name stub option end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get iiop end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get idl end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name stub option end_name begin_operator EQ end_operator begin_name stub compat end_name end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name stub option end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment set the non null stub option end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name stub option end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get source base end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get iiop end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get iiopopts end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get iiopopts end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get iiopopts end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get idl end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get idlopts end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get idlopts end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get idlopts end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get debug end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name add arguments end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get current compiler args end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log and add files to compile end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name cmd end_name end_expr end_return end_block 
 begin_comment set filtering mode param filtering if true enable filtering default is false end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set filtering end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name filtering end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name filtering end_name end_name begin_operator EQ end_operator begin_name filtering end_name end_expr end_expr_stmt end_block 
 begin_comment get the comparator type to use return the enumerated comparator type end_comment begin_type begin_specifier end_specifier begin_name comparator end_name end_type begin_name get comparator end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name comparator end_name end_expr end_return end_block 
 begin_comment attribute delims the delimiter characters param delims a string containing the delimiter characters end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set delims end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name delims end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name delims end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name resolve back slash end_name end_name begin_argument_list begin_argument begin_expr begin_name delims end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to char array end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the size of the table return the size end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name size end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name init all end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name has regex end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name test end_name end_decl end_param end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name expect file contains end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name test end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name ex end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block end_catch end_try begin_return begin_expr end_expr end_return end_block 
 begin_comment check style parameter number check on end_comment begin_comment set the last modified time of an object implementing org apache tools ant types resources touchable param t the touchable whose modified time is to be set param time the time to which the last modified time is to be set if this is 1 the current time is used since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set last modified end_name begin_parameter_list begin_param begin_decl begin_type begin_name touchable end_name end_type begin_name t end_name end_decl end_param begin_param begin_decl begin_type begin_name long end_name end_type begin_name time end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name touch end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name time end_name begin_operator LT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_name time end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test hello end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test clear by default end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the name of a file containing a private key param keyfile the new keyfile value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set keyfile end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name keyfile end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name keyfile end_name end_name begin_operator EQ end_operator begin_name keyfile end_name end_expr end_expr_stmt end_block 
 begin_comment sets the file to load param src file the new src file value end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set src file end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name src file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add configured end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file resource end_name begin_argument_list begin_argument begin_expr begin_name src file end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name mask java tab literals filter end_name begin_parameter_list begin_param begin_decl begin_type begin_name reader end_name end_type begin_name in end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name state end_name begin_operator EQ end_operator begin_name java end_name end_expr end_expr_stmt end_block 
 begin_comment adds a reference to a classpath defined elsewhere param r a reference to a classpath todo this needs to be documented in the html docs end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classpath ref end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name create classpath end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set refid end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the location where weblogic lives required this is the absolute location not relative to bea home param weblogic home the home directory of weblogic end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set home end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name weblogic home end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name weblogic system home end_name begin_operator EQ end_operator begin_name weblogic home end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test isfalse incomplete 1 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect specific build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name skip end_name begin_parameter_list begin_param begin_decl begin_type begin_name long end_name end_type begin_name i end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name io exception end_name end_name end_expr end_argument end_throws begin_block begin_return begin_expr begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name skip end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test refid end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment flag default true to only output error messages param quiet option end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set quiet end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name quiet end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name quiet end_name end_name begin_operator EQ end_operator begin_name quiet end_name end_expr end_expr_stmt end_block 
 begin_comment check style visibility modifier on end_comment begin_comment set the the output level this is not used the logger config is used instead param level ignored end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set message output level end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name level end_name end_decl end_param end_parameter_list begin_block begin_comment use the logger config end_comment end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name off test fail on error end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name expect log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name runtime exception end_name end_type begin_name re end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name re end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name re end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment whether to filter the text in this element or not param filtering true if the text should be filtered the default value is true end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set filtering end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name filtering end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name filtering end_name end_name begin_operator EQ end_operator begin_name filtering end_name end_expr end_expr_stmt end_block 
 begin_comment pr 16213 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test self extracting archive end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment convenience method to copy a file from a source to a destination specifying if token filtering must be used if filter chains must be used if source files may overwrite newer destination files and the last modified time of code dest file code file should be made equal to the last modified time of code source file code param source file the file to copy from must not be code null code param dest file the file to copy to must not be code null code param filters the collection of filters to apply to this copy param filter chains filter chains to apply during the copy param overwrite whether or not the destination file should be overwritten if it already exists param preserve last modified whether or not the last modified time of the resulting file should be set to that of the source file param encoding the encoding used to read and write the files param project the project instance throws io exception if the copying fails since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name copy file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name source file end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name dest file end_name end_decl end_param begin_param begin_decl begin_type begin_name filter set collection end_name end_type begin_name filters end_name end_decl end_param begin_param begin_decl begin_type begin_name vector end_name end_type begin_name filter chains end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name overwrite end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name preserve last modified end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name encoding end_name end_decl end_param begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name copy file end_name begin_argument_list begin_argument begin_expr begin_name source file end_name end_expr end_argument begin_argument begin_expr begin_name dest file end_name end_expr end_argument begin_argument begin_expr begin_name filters end_name end_expr end_argument begin_argument begin_expr begin_name filter chains end_name end_expr end_argument begin_argument begin_expr begin_name overwrite end_name end_expr end_argument begin_argument begin_expr begin_name preserve last modified end_name end_expr end_argument begin_argument begin_expr begin_name encoding end_name end_expr end_argument begin_argument begin_expr begin_name encoding end_name end_expr end_argument begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 4 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get description end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get iiop end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name iiop end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name ensure directory scanner setup end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name ds end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name ds end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name directory scanner end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name pattern set end_name end_type begin_name ps end_name begin_init begin_expr begin_call begin_name merge patterns end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set includes end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ps end_name begin_operator DOT end_operator begin_name get include patterns end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set excludes end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ps end_name begin_operator DOT end_operator begin_name get exclude patterns end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set selectors end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get selectors end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name use default excludes end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name add default excludes end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set case sensitive end_name end_name begin_argument_list begin_argument begin_expr begin_name case sensitive end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set follow symlinks end_name end_name begin_argument_list begin_argument begin_expr begin_name follow symlinks end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment chmod task for setting file and directory permissions end_comment begin_specifier end_specifier begin_name abstract access task end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set parallel end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set skip empty filesets end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment pr 38370 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test nested fileset ref in path end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment validate then hand off to the subclass throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name validate end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name resource end_name end_type begin_name s end_name begin_init begin_expr begin_call begin_name get src resource end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name is exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name zip file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call begin_operator LT end_operator begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name get last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name zip file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name pack end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name zip file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if end_block 
 begin_comment execute task exception build exception if something goes wrong executing the cvs command end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name saved dir end_name begin_init begin_expr begin_name input dir end_name end_expr end_init end_decl end_decl_stmt begin_comment may be altered in validate end_comment begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name validate end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name properties end_name end_type begin_name user list end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name properties end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name load userlist end_name begin_argument_list begin_argument begin_expr begin_name user list end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init begin_operator UNP end_operator begin_name size end_name begin_init begin_expr begin_call begin_name begin_name cvs users end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name size end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name cvs user end_name end_type begin_name user end_name begin_init begin_expr begin_operator LPAR end_operator begin_name cvs user end_name begin_operator RPAR end_operator begin_call begin_name begin_name cvs users end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name user end_name begin_operator DOT end_operator begin_name validate end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name user list end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name user end_name begin_operator DOT end_operator begin_name get user id end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name user end_name begin_operator DOT end_operator begin_name get displayname end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name set command end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name get tag end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name cvs version end_name end_type begin_name my cvs version end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name cvs version end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name my cvs version end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name my cvs version end_name begin_operator DOT end_operator begin_name set task name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name my cvs version end_name begin_operator DOT end_operator begin_name set cvs root end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get cvs root end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name my cvs version end_name begin_operator DOT end_operator begin_name set cvs rsh end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get cvs rsh end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name my cvs version end_name begin_operator DOT end_operator begin_name set passfile end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get pass file end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name my cvs version end_name begin_operator DOT end_operator begin_name set dest end_name end_name begin_argument_list begin_argument begin_expr begin_name input dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name my cvs version end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name my cvs version end_name begin_operator DOT end_operator begin_name supports cvs log with s option end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name add command argument end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name start date end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name simple date format end_name end_type begin_name output date end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name simple date format end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment we want something of the form d yyyy mm dd end_comment begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name date range end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name output date end_name begin_operator DOT end_operator begin_name format end_name end_name begin_argument_list begin_argument begin_expr begin_name start date end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment supply d as a separate argument bug 14397 end_comment begin_expr_stmt begin_expr begin_call begin_name add command argument end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add command argument end_name begin_argument_list begin_argument begin_expr begin_name date range end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment check if list of files to check has been specified end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name is empty end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name file set end_name end_type begin_name file set end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file set end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name directory scanner end_name end_type begin_name scanner end_name begin_init begin_expr begin_call begin_name begin_name file set end_name begin_operator DOT end_operator begin_name get directory scanner end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name files end_name begin_init begin_expr begin_call begin_name begin_name scanner end_name begin_operator DOT end_operator begin_name get included files end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name add command argument end_name begin_argument_list begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_while end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name change log parser end_name end_type begin_name parser end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name change log parser end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name redirecting stream handler end_name end_type begin_name handler end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name redirecting stream handler end_name begin_argument_list begin_argument begin_expr begin_name parser end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name get command end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set dest end_name begin_argument_list begin_argument begin_expr begin_name input dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set execute stream handler end_name begin_argument_list begin_argument begin_expr begin_name handler end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name errors end_name begin_init begin_expr begin_call begin_name begin_name handler end_name begin_operator DOT end_operator begin_name get errors end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name errors end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name errors end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name cvs entry end_name begin_index end_index end_type begin_name entry set end_name begin_init begin_expr begin_call begin_name begin_name parser end_name begin_operator DOT end_operator begin_name get entry set as array end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name cvs entry end_name begin_index end_index end_type begin_name filtered entry set end_name begin_init begin_expr begin_call begin_name filter entry set end_name begin_argument_list begin_argument begin_expr begin_name entry set end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name replace author id with name end_name begin_argument_list begin_argument begin_expr begin_name user list end_name end_expr end_argument begin_argument begin_expr begin_name filtered entry set end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write change log end_name begin_argument_list begin_argument begin_expr begin_name filtered entry set end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_expr_stmt begin_expr begin_name input dir end_name begin_operator EQ end_operator begin_name saved dir end_name end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test is reference end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name is reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name is reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name is reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name is reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name is reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name is reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name is reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name is reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name is reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name is reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name is reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment empty param test not used end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name end test end_name begin_parameter_list begin_param begin_decl begin_type begin_name test end_name end_type begin_name test end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment creates an exception that indicates the user has generated a loop of data types referencing each other return the exception to throw end_comment begin_type begin_specifier end_specifier begin_name build exception end_name end_type begin_name circular reference end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set entry end_name begin_parameter_list begin_param begin_decl begin_type begin_name tar entry end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name e end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set exists end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name set name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set exists end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set last modified end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get mod time end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get time end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set directory end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set size end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get size end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set mode end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get mode end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name user name end_name begin_operator EQ end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get user name end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name group name end_name begin_operator EQ end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get group name end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name uid end_name begin_operator EQ end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get user id end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name gid end_name begin_operator EQ end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get group id end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name ftp system type end_name end_type begin_name get default end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name ftp system type end_name end_type begin_name ftpst end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name ftp system type end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ftpst end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name ftpst end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment defines the language required param language the scripting language name for the script end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set language end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name language end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name language end_name end_name begin_operator EQ end_operator begin_name language end_name end_expr end_expr_stmt end_block 
 begin_comment a test method param args not used end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name main end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name args end_name end_decl end_param end_parameter_list begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name hashtable end_name end_type begin_name hash end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name hash end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name hash end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name key subst end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name hash end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name print stack trace end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test isfalse false end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect property set end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment print trailing info rows affected for the sql addresses bug request 27446 param showtrailers if true prints the sql rows affected since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set showtrailers end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name showtrailers end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name showtrailers end_name end_name begin_operator EQ end_operator begin_name showtrailers end_name end_expr end_expr_stmt end_block 
 begin_comment set whether nonexistent parent directories should be created when touching new files param mkdirs code boolean code whether to create parent directories since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set mkdirs end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name mkdirs end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name mkdirs end_name end_name begin_operator EQ end_operator begin_name mkdirs end_name end_expr end_expr_stmt end_block 
 begin_comment assert that a file exists relative to the project param message message if there is no mpatch param filename filename to resolve against the project end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name assert file exists end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name message end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name filename end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name exists end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment this is an override point the message that indicates that a build succeeded subclasses can change enhance the message return the classic build successful end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get build successful message end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name get build successful message end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_name spacer end_name begin_operator PLUS end_operator begin_call begin_name get timestamp end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment get the compression level return compression level since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get level end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name level end_name end_expr end_return end_block 
 begin_comment creates a nested element param uri the uri of the nested element param name the localname of the nested element param q name the qualified name of the nested element return an object that the element is applied to end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name create dynamic element end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name uri end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name q name end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name element end_name end_type begin_name e 2 end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name uri end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name e 2 end_name begin_operator EQ end_operator begin_call begin_name begin_name doc end_name begin_operator DOT end_operator begin_name create element end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name e 2 end_name begin_operator EQ end_operator begin_call begin_name begin_name doc end_name begin_operator DOT end_operator begin_name create element ns end_name end_name begin_argument_list begin_argument begin_expr begin_name uri end_name end_expr end_argument begin_argument begin_expr begin_name q name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name append child end_name end_name begin_argument_list begin_argument begin_expr begin_name e 2 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_operator UNP end_operator begin_call begin_name child end_name begin_argument_list begin_argument begin_expr begin_name e 2 end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment tests whether or not a given path matches a given pattern param pattern the pattern to match against must not be code null code param str the path to match as a string must not be code null code return code true code if the pattern matches against the string or code false code otherwise end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name match path end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name pattern end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name str end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name match path end_name begin_argument_list begin_argument begin_expr begin_name pattern end_name end_expr end_argument begin_argument begin_expr begin_name str end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment bind a task to another use this when configuring a newly created task to do work on behalf of another project owning target task name location and description are all copied important this method does not call link task init if you are creating a task to delegate work to call link task init to initialize it param owner owning target since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name bind to owner end_name begin_parameter_list begin_param begin_decl begin_type begin_name task end_name end_type begin_name owner end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set project end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name owner end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set owning target end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name owner end_name begin_operator DOT end_operator begin_name get owning target end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set task name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name owner end_name begin_operator DOT end_operator begin_name get task name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set description end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name owner end_name begin_operator DOT end_operator begin_name get description end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set location end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name owner end_name begin_operator DOT end_operator begin_name get location end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set task type end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name owner end_name begin_operator DOT end_operator begin_name get task type end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns a helper for the given class either from the cache or by creating a new instance the method will make sure the helper will be cleaned up at the end of the project and only one instance will be created for each class param p the project instance param c the class for which a helper is required must not be code null code return a helper for the specified class end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name introspection helper end_name end_type begin_name get helper end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param begin_param begin_decl begin_type begin_name class end_name end_type begin_name c end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name introspection helper end_name end_type begin_name ih end_name begin_init begin_expr begin_operator LPAR end_operator begin_name introspection helper end_name begin_operator RPAR end_operator begin_call begin_name begin_name helpers end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment if a helper cannot be found or if the helper is for another end_comment begin_comment classloader create a new ih end_comment begin_if begin_condition begin_expr begin_name ih end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name begin_name ih end_name begin_operator DOT end_operator begin_name bean end_name end_name begin_operator UNP end_operator begin_name c end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name ih end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name introspection helper end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name p end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment 30162 do not cache this if there is no project as we end_comment begin_comment cannot guarantee that the cache will be cleared end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name helpers end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name ih end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_return begin_expr begin_name ih end_name end_expr end_return end_block 
 begin_comment a check attributes for zip file set if there is a reference and it is a zip file set the zip fileset attributes cannot be used end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check zip file set attributes allowed end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name get refid end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get referenced object end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_name zip file set end_name begin_operator RPAR end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name check attributes allowed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name register non crash end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name crash file end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name file writer end_name end_type begin_name out end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name out end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file writer end_name begin_argument_list begin_argument begin_expr begin_name crash file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name constants end_name begin_operator DOT end_operator begin_name terminated successfully end_name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_if begin_condition begin_expr begin_name out end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try end_block end_then end_if end_block 
 begin_comment set the archive that holds this resource param a the archive as a file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set archive end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name a end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name check attributes allowed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name archive end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file resource end_name begin_argument_list begin_argument begin_expr begin_name a end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the failure property name return the name of the property to set on failure end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get error property end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name error property end_name end_expr end_return end_block 
 begin_comment the directory which will have the expected subdirectories specs sources build srpms optional if this isn t specified the tt base dir tt value is used param td the directory containing the normal rpm directories end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set top dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name td end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name top dir end_name end_name begin_operator EQ end_operator begin_name td end_name end_expr end_expr_stmt end_block 
 begin_comment create a new file optionally creating parent directories param f the file to be created param mkdirs code boolean code whether to create parent directories return true if the file did not exist already throws io exception on error since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name create new file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name f end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name mkdirs end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name parent end_name begin_init begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get parent file end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name mkdirs end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name mkdirs end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name create new file end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment set the classname of the class to be used for the nested element this specifies the class directly and is an alternative to specifying the ant type name param class name the name of the class to use for this nested element end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set class name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name class name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name class name end_name end_name begin_operator EQ end_operator begin_name class name end_name end_expr end_expr_stmt end_block 
 begin_comment should the resource have a name param name the name of the resource end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name name end_name end_name begin_operator EQ end_operator begin_name name end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 9 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get filtered file end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment name of the definition param name the name of the definition end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name name end_name end_name begin_operator EQ end_operator begin_name name end_name end_expr end_expr_stmt end_block 
 begin_comment empty no arg constructor end_comment begin_specifier end_specifier begin_name abstract cvs task end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment see org apache tools ant build listener target started build event end_comment begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name target started end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get target end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name begin_operator PLUS end_operator begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get target end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name target start time end_name begin_operator EQ end_operator begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add an arbitrary resource collection to be deleted param rc the filesystem only resource collection end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource collection end_name end_type begin_name rc end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name rc end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name rcs end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name rcs end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator UNP end_operator begin_call begin_name resources end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_name rcs end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name rcs end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name rc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment replace all known author s id s with their maven specified names end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name replace author id with name end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name properties end_name end_type begin_name user list end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name begin_name cvs entry end_name begin_index end_index end_name end_type begin_name entry set end_name end_decl end_param end_parameter_list begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name entry set end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name cvs entry end_name end_type begin_name entry end_name begin_init begin_expr begin_name begin_name entry set end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name user list end_name begin_operator DOT end_operator begin_name contains key end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get author end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name set author end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name user list end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get author end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for end_block 
 begin_comment send a quot message logged quot task level event to the build listeners for this project param task the task generating the event must not be code null code param message the message to send should not be code null code param priority the priority of the message end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name fire message logged end_name begin_parameter_list begin_param begin_decl begin_type begin_name task end_name end_type begin_name task end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name message end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name priority end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name fire message logged end_name begin_argument_list begin_argument begin_expr begin_name task end_name end_expr end_argument begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name priority end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_name rcs file end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name revision end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name previous revision end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name name end_name end_name begin_operator EQ end_operator begin_name name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name revision end_name end_name begin_operator EQ end_operator begin_name revision end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name revision end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name previous revision end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name previous revision end_name end_name begin_operator EQ end_operator begin_name previous revision end_name end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment writes the directory entries from the first and the filenames from the second list to the given writer one entry per line param dirs a list of directories param files a list of files param writer the writer to write to throws io exception on error since ant 1 6 2 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name write index like list end_name begin_parameter_list begin_param begin_decl begin_type begin_name list end_name end_type begin_name dirs end_name end_decl end_param begin_param begin_decl begin_type begin_name list end_name end_type begin_name files end_name end_decl end_param begin_param begin_decl begin_type begin_name print writer end_name end_type begin_name writer end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_comment jar index is sorting the directories by ascending order end_comment begin_comment it has no value but cosmetic since it will be read into a end_comment begin_comment hashtable by the classloader but we ll do so anyway end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name collections end_name begin_operator DOT end_operator begin_name sort end_name end_name begin_argument_list begin_argument begin_expr begin_name dirs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name collections end_name begin_operator DOT end_operator begin_name sort end_name end_name begin_argument_list begin_argument begin_expr begin_name files end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name iterator end_name end_type begin_name iter end_name begin_init begin_expr begin_call begin_name begin_name dirs end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name dir end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment try to be smart not to be fooled by a weird directory name end_comment begin_expr_stmt begin_expr begin_name dir end_name begin_operator EQ end_operator begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name dir end_name begin_operator EQ end_operator begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_while begin_condition begin_expr begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name dir end_name begin_operator EQ end_operator begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name pos end_name begin_init begin_expr begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name last index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name pos end_name begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name dir end_name begin_operator EQ end_operator begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name pos end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment looks like nothing from meta inf should be added end_comment begin_comment and the check is not case insensitive end_comment begin_comment see sun misc jar index end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_comment name newline end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name writer end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_name iter end_name begin_operator EQ end_operator begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name writer end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test circular reference check end_name begin_parameter_list end_parameter_list begin_block begin_comment catalog catalog end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name catalog end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name catalog end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name input source end_name end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name catalog end_name begin_operator DOT end_operator begin_name resolve entity end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_comment catalog 1 catalog 2 catalog 3 catalog 1 end_comment begin_decl_stmt begin_decl begin_type begin_name xml catalog end_name end_type begin_name catalog 1 end_name begin_init begin_expr begin_call begin_name new catalog end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name catalog 1 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name xml catalog end_name end_type begin_name catalog 2 end_name begin_init begin_expr begin_call begin_name new catalog end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name catalog 2 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name xml catalog end_name end_type begin_name catalog 3 end_name begin_init begin_expr begin_call begin_name new catalog end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name catalog 3 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name catalog 3 end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name catalog 2 end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name catalog 1 end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name input source end_name end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name catalog 1 end_name begin_operator DOT end_operator begin_name resolve entity end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment construct a new property output stream for the specified project and property name trimming the property value param p the associated ant project param s the string property name end_comment begin_specifier end_specifier begin_name property output stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name s end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment make sure there are no issues concerning line separator interpretation end_comment begin_comment a line separator for regex perl is always a unix line ie n end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test paragraph character end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name set pattern end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name matches end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment learn whether this resource represents a directory return boolean flag indicating whether the entry is a directory end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is directory end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name is directory end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name check entry end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment sets a property which must not already exist with a space separated list of files and directories relative to the jar file s parent directory end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name dir end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name path end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment normalize the reference directory containing the jar end_comment begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name file utils end_name end_type begin_name file utils end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name get file utils end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name dir end_name begin_operator EQ end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name normalize end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment create as many directory prefixes as parent levels to traverse end_comment begin_comment in addition to the reference directory itself end_comment begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name curr dir end_name begin_init begin_expr begin_name dir end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name dirs end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_name max parent levels end_name begin_operator PLUS end_operator end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name max parent levels end_name begin_operator PLUS end_operator end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name begin_name dirs end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_call begin_name begin_name curr dir end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name curr dir end_name begin_operator EQ end_operator begin_call begin_name begin_name curr dir end_name begin_operator DOT end_operator begin_name get parent file end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name curr dir end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name max parent levels end_name begin_operator EQ end_operator begin_name i end_name begin_operator PLUS end_operator end_expr end_expr_stmt begin_break end_break end_block end_then end_if end_block end_for begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name elements end_name begin_init begin_expr begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name buffer end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name element end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name elements end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_comment normalize the current file end_comment begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name path entry end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name begin_name elements end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name path entry end_name begin_operator EQ end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name normalize end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name path entry end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name full path end_name begin_init begin_expr begin_call begin_name begin_name path entry end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment find the longest prefix shared by the current file end_comment begin_comment and the reference directory end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name rel path end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name j end_name begin_operator LE end_operator begin_name max parent levels end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name j end_name end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name dir end_name begin_init begin_expr begin_name begin_name dirs end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name full path end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr begin_name dir end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_comment we have a match add as many as parent end_comment begin_comment directory traversed to get the relative path end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name element end_name begin_operator DOT end_operator begin_name set length end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name k end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name k end_name begin_operator LT end_operator begin_name j end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name k end_name end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name element end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name element end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name element end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name full path end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name rel path end_name begin_operator EQ end_operator begin_call begin_name begin_name element end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_block end_for begin_comment no match so bail out end_comment begin_if begin_condition begin_expr begin_name rel path end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name dir end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name full path end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment manifest s class path attribute always uses forward end_comment begin_comment slashes and is space separated ant will properly end_comment begin_comment format it on 72 columns with proper line continuation end_comment begin_if begin_condition begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name rel path end_name begin_operator EQ end_operator begin_call begin_name begin_name rel path end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name path entry end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name rel path end_name begin_operator EQ end_operator begin_name rel path end_name begin_operator PLUS end_operator end_expr end_expr_stmt end_block end_then end_if begin_try begin_block begin_expr_stmt begin_expr begin_name rel path end_name begin_operator EQ end_operator begin_call begin_name begin_name locator end_name begin_operator DOT end_operator begin_name encode uri end_name end_name begin_argument_list begin_argument begin_expr begin_name rel path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name unsupported encoding exception end_name end_type begin_name exc end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name exc end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name rel path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_comment finally assign the property with the manifest classpath end_comment begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set new property end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name trim end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment tar a file param file the file to tar param t out the output stream param v path the path name of the file to tar param tar file set the fileset that the file came from throws io exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tar file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param begin_param begin_decl begin_type begin_name tar output stream end_name end_type begin_name t out end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name v path end_name end_decl end_param begin_param begin_decl begin_type begin_name tar file set end_name end_type begin_name tar file set end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name tar file end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment if the archive is built for the first time and it is end_comment begin_comment matched by a resource collection then it hasn t been end_comment begin_comment found in check it hasn t been there but will be end_comment begin_comment included now end_comment begin_comment end_comment begin_comment for some strange reason the old code would simply skip end_comment begin_comment the entry and not fail do the same now for backwards end_comment begin_comment compatibility reasons without this the which 4 j build end_comment begin_comment fails in gump end_comment begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name tar resource end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file resource end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name t out end_name end_expr end_argument begin_argument begin_expr begin_name v path end_name end_expr end_argument begin_argument begin_expr begin_name tar file set end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 3 end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test prefix success end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a selector size entry on the selector list param selector the selector to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add size end_name begin_parameter_list begin_param begin_decl begin_type begin_name size selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name append selector end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test cr cr lf sequence dos end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get a compiled representation of the regexp pattern param options the options return the compiled pattern throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name pattern end_name end_type begin_name get compiled pattern end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name options end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name c options end_name begin_init begin_expr begin_call begin_name get compiler options end_name begin_argument_list begin_argument begin_expr begin_name options end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name pattern end_name end_type begin_name p end_name begin_init begin_expr begin_call begin_name begin_name pattern end_name begin_operator DOT end_operator begin_name compile end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name pattern end_name end_name end_expr end_argument begin_argument begin_expr begin_name c options end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_name p end_name end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name pattern syntax exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment constructor for the build file test object param name string to pass up to test case constructor end_comment begin_specifier end_specifier begin_name script condition test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is split end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name classname end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name simplename end_name begin_init begin_expr begin_call begin_name begin_name classname end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name classname end_name begin_operator DOT end_operator begin_name last index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name split classes end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name simplename end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name split classes end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name simplename end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name split classes end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_for begin_return begin_expr end_expr end_return end_block 
 begin_comment form the option string for option explicit return the parameter string end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get option explicit parameter end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name option explicit end_name begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment print any results in the statement deprecated since 1 6 x use link print results java sql result set java io print stream the two arg version instead param out the place to print results throws sql exception on sql problems end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name print results end_name begin_parameter_list begin_param begin_decl begin_type begin_name print stream end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name sql exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name result set end_name end_type begin_name rs end_name begin_init begin_expr begin_call begin_name begin_name statement end_name begin_operator DOT end_operator begin_name get result set end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name print results end_name begin_argument_list begin_argument begin_expr begin_name rs end_name end_expr end_argument begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_if begin_condition begin_expr begin_name rs end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name rs end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try end_block 
 begin_comment creates a nested element param uri the uri of the nested element param name the localname of the nested element param q name the qualified name of the nested element return an object that the element is applied to end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name create dynamic element end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name uri end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name q name end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name element end_name end_type begin_name e end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name uri end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name e end_name begin_operator EQ end_operator begin_call begin_name begin_name doc end_name begin_operator DOT end_operator begin_name create element end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name e end_name begin_operator EQ end_operator begin_call begin_name begin_name doc end_name begin_operator DOT end_operator begin_name create element ns end_name end_name begin_argument_list begin_argument begin_expr begin_name uri end_name end_expr end_argument begin_argument begin_expr begin_name q name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name fragment end_name begin_operator DOT end_operator begin_name append child end_name end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_operator UNP end_operator begin_call begin_name child end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment get the argument or null for no argument needed return the keyfile parameter value end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get keyfile parameter end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name keyfile end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name keyfile end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr end_expr end_return end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test concat filter end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name do test end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name file prepend end_name end_expr end_argument begin_argument begin_expr begin_name file append end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment signals that a task has finished param event recieved build event end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name task finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name get delay update end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name save cache end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment gets the classpath return the classpath end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name get classpath end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name compile classpath end_name end_expr end_return end_block 
 begin_comment creates a new filtered reader param in a reader object providing the underlying stream must not be code null code end_comment begin_specifier end_specifier begin_name line contains end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name reader end_name end_type begin_name in end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment construct a new code concat file input stream code with the specified code file code param file code file code throws io exception if i o errors occur end_comment begin_specifier end_specifier begin_name concat file input stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name file end_name begin_index end_index end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name file end_name end_name begin_operator EQ end_operator begin_name file end_name end_expr end_expr_stmt end_block 
 begin_comment changes the password to so it isn t displayed on screen if the build fails param cmd the command line to clean return the command line as a string with out the password end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name format command line end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name s buff end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name index user end_name begin_init begin_expr begin_call begin_name begin_name s buff end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr begin_name flag login end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name index user end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name index pass end_name begin_init begin_expr begin_call begin_name begin_name s buff end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name index user end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name index after pass end_name begin_init begin_expr begin_call begin_name begin_name s buff end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name index pass end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr begin_name index pass end_name begin_operator PLUS end_operator end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name index after pass end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name s buff end_name begin_operator DOT end_operator begin_name set char at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name s buff end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test resource plain with mapper end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment for each file in the fileset do the appropriate action send get delete or list param ftp the ftp client instance used to perform ftp actions param fs the fileset on which the actions are performed return the number of files to be transferred throws io exception if there is a problem reading a file throws build exception if there is a problem in the configuration end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name transfer files end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name ftp client end_name end_type begin_name ftp end_name end_decl end_param begin_param begin_decl begin_type begin_name file set end_name end_type begin_name fs end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds end_name end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name action end_name begin_operator EQT end_operator begin_name send files end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name ds end_name begin_operator EQ end_operator begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name get directory scanner end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment warn that selectors are not supported end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name get selectors end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_name length end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name ds end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name ftp directory scanner end_name begin_argument_list begin_argument begin_expr begin_name ftp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name setup directory scanner end_name end_name begin_argument_list begin_argument begin_expr begin_name ds end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set follow symlinks end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name is follow symlinks end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name dsfiles end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name action end_name begin_operator EQT end_operator begin_name rm dir end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name dsfiles end_name begin_operator EQ end_operator begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get included directories end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name dsfiles end_name begin_operator EQ end_operator begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get included files end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name dir end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get basedir end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name action end_name begin_operator EQT end_operator begin_name send files end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name action end_name begin_operator EQT end_operator begin_name get files end_name begin_operator RPAR end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name action end_name begin_operator EQT end_operator begin_name send files end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name action end_name begin_operator EQT end_operator begin_name get files end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name dir end_name begin_operator EQ end_operator begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get basedir end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if begin_comment if we are doing a listing we need the output stream created now end_comment begin_decl_stmt begin_decl begin_type begin_name buffered writer end_name end_type begin_name bw end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_if begin_condition begin_expr begin_name action end_name begin_operator EQT end_operator begin_name list files end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name pd end_name begin_init begin_expr begin_call begin_name begin_name listing end_name begin_operator DOT end_operator begin_name get parent file end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name pd end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name pd end_name begin_operator DOT end_operator begin_name mkdirs end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name bw end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name buffered writer end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file writer end_name begin_argument_list begin_argument begin_expr begin_name listing end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name retry handler end_name end_type begin_name h end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name retry handler end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name retries allowed end_name end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name action end_name begin_operator EQT end_operator begin_name rm dir end_name end_expr end_condition begin_then begin_block begin_comment to remove directories start by the end of the list end_comment begin_comment the trunk does not let itself be removed before the leaves end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr begin_name begin_name dsfiles end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator MINUS end_operator end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator GE end_operator end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator MMINUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name dsfile end_name begin_init begin_expr begin_name begin_name dsfiles end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name execute retryable end_name begin_argument_list begin_argument begin_expr begin_name h end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_class begin_super begin_name retryable end_name end_super begin_argument_list end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name rm dir end_name begin_argument_list begin_argument begin_expr begin_name ftp end_name end_expr end_argument begin_argument begin_expr begin_name dsfile end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_function end_block end_class end_expr end_argument begin_argument begin_expr begin_name dsfile end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name buffered writer end_name end_type begin_name fbw end_name begin_init begin_expr begin_name bw end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name fdir end_name begin_init begin_expr begin_name dir end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name newer only end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name granularity millis end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name timestamp granularity end_name begin_operator DOT end_operator begin_name get milliseconds end_name end_name begin_argument_list begin_argument begin_expr begin_name action end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name dsfiles end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name dsfile end_name begin_init begin_expr begin_name begin_name dsfiles end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name execute retryable end_name begin_argument_list begin_argument begin_expr begin_name h end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_class begin_super begin_name retryable end_name end_super begin_argument_list end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_switch begin_condition begin_expr begin_name action end_name end_expr end_condition begin_block begin_case begin_expr begin_name send files end_name end_expr begin_expr_stmt begin_expr begin_call begin_name send file end_name begin_argument_list begin_argument begin_expr begin_name ftp end_name end_expr end_argument begin_argument begin_expr begin_name fdir end_name end_expr end_argument begin_argument begin_expr begin_name dsfile end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name get files end_name end_expr begin_expr_stmt begin_expr begin_call begin_name get file end_name begin_argument_list begin_argument begin_expr begin_name ftp end_name end_expr end_argument begin_argument begin_expr begin_name fdir end_name end_expr end_argument begin_argument begin_expr begin_name dsfile end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name del files end_name end_expr begin_expr_stmt begin_expr begin_call begin_name del file end_name begin_argument_list begin_argument begin_expr begin_name ftp end_name end_expr end_argument begin_argument begin_expr begin_name dsfile end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name list files end_name end_expr begin_expr_stmt begin_expr begin_call begin_name list file end_name begin_argument_list begin_argument begin_expr begin_name ftp end_name end_expr end_argument begin_argument begin_expr begin_name fbw end_name end_expr end_argument begin_argument begin_expr begin_name dsfile end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name chmod end_name end_expr begin_expr_stmt begin_expr begin_call begin_name do site command end_name begin_argument_list begin_argument begin_expr begin_name ftp end_name end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator begin_name chmod end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr begin_name dsfile end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name transferred end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_break end_break end_case begin_default begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name action end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_default end_block end_switch end_block end_function end_block end_class end_expr end_argument begin_argument begin_expr begin_name dsfile end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_else end_if end_block begin_finally begin_block begin_if begin_condition begin_expr begin_name bw end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name bw end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try begin_return begin_expr begin_name begin_name dsfiles end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_return end_block 
 begin_comment sets up the required environment and executes the command line param cmd the command line to execute return the return code from the exec d process end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name run end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name end_decl end_param end_parameter_list begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name execute end_name end_type begin_name exe end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name execute end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name log stream handler end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment if location of ss ini is specified we need to set the end_comment begin_comment environment variable ssdir to this value end_comment begin_if begin_condition begin_expr begin_name server path end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name env end_name begin_init begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name get environment end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name env end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name env end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr end_expr end_index end_name end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name new env end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_name begin_name env end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator PLUS end_operator end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_name env end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name new env end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name env end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name new env end_name begin_index begin_expr begin_name begin_name env end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_index end_name begin_operator EQ end_operator begin_operator PLUS end_operator begin_name server path end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set environment end_name end_name begin_argument_list begin_argument begin_expr begin_name new env end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set ant run end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set working directory end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set commandline end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name get commandline end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment use the os launcher so we get environment variables end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set vm launcher end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment whether to keep the script engine between calls param keep engine if true keep the engine end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set keep engine end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name keep engine end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name keep engine end_name end_name begin_operator EQ end_operator begin_name keep engine end_name end_expr end_expr_stmt end_block 
 begin_comment execute the parallel tasks exception build exception if any of the threads failed end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name update thread counts end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name num threads end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name num threads end_name begin_operator EQ end_operator begin_call begin_name begin_name nested tasks end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name spin threads end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets the autocommit return returns a boolean end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is autocommit end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name autocommit end_name end_expr end_return end_block 
 begin_comment convenience constructor param r the resource selector to add end_comment begin_specifier end_specifier begin_name or end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name resource selector end_name begin_index end_index end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the run method of the watch dog thread this simply does a wait for the timeout time and if the stop flag has not been set when the wait has returned or has been interrupted the watch dog listeners are informed end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name run end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name until end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_name timeout end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name now end_name end_decl end_decl_stmt begin_while begin_condition begin_expr begin_operator UNP end_operator begin_name stopped end_name begin_operator UNP end_operator begin_name until end_name begin_operator GT end_operator begin_operator LPAR end_operator begin_name now end_name begin_operator EQ end_operator begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name wait end_name begin_argument_list begin_argument begin_expr begin_name until end_name begin_operator MINUS end_operator begin_name now end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name interrupted exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment ignore exception end_comment end_block end_catch end_try end_block end_while begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name stopped end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name fire timeout occured end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name echo end_name begin_operator DOT end_operator begin_name message end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the files to be merged into the output param mergefiles a path end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set mergefiles end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name mergefiles end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name mergefiles end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name mergefiles end_name end_name begin_operator EQ end_operator begin_name mergefiles end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name mergefiles end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name mergefiles end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment d flag of p 4 labelsync indicates an intention of deleting from the label the files specified in the view return delete attribute end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is delete end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name delete end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no log output end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr begin_name pass test target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert false end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name has build listener events end_name begin_argument_list begin_argument begin_expr begin_call begin_name get log end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name vms command launcher end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name no such method exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment configures the wrapped element the attributes and text for the wrapped element are configured each time the wrapper is configured the attributes and text for it are reset if the element has an code id code attribute a reference is added to the project as well param p the project containing the wrapped element must not be code null code param configure children ignored exception build exception if the configuration fails for instance due to invalid attributes or text being added to an element which doesn t accept it end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name maybe configure end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name configure children end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name proxy configured end_name end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_comment configure the object end_comment begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name target end_name begin_init begin_expr begin_operator LPAR end_operator begin_name wrapped object end_name begin_operator UNP end_operator begin_name type adapter end_name begin_operator RPAR end_operator begin_operator QM end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name type adapter end_name begin_operator RPAR end_operator begin_name wrapped object end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get proxy end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_name wrapped object end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name introspection helper end_name end_type begin_name ih end_name begin_init begin_expr begin_call begin_name begin_name introspection helper end_name begin_operator DOT end_operator begin_name get helper end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name attribute names end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name attribute names end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name attribute names end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name value end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name attribute map end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment reflect these into the target end_comment begin_expr_stmt begin_expr begin_name value end_name begin_operator EQ end_operator begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name replace properties end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name target end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name unsupported attribute exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_comment id attribute must be set externally end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment do nothing end_comment end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name get element tag end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_name be end_name end_expr end_throw end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name get element tag end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get attribute end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name be end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_else end_if end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment assume that this is an not supported attribute type end_comment begin_comment thrown for example by a dymanic attribute task end_comment begin_comment do nothing end_comment end_block end_then begin_else begin_block begin_throw begin_expr begin_name be end_name end_expr end_throw end_block end_else end_if end_block end_catch end_try end_block end_for end_block end_then end_if begin_if begin_condition begin_expr begin_name characters end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project helper end_name begin_operator DOT end_operator begin_name add text end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name wrapped object end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name characters end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name id end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr begin_name id end_name end_expr end_argument begin_argument begin_expr begin_name wrapped object end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name proxy configured end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment chooses a blocksize based on the given length of the data to compress return the blocksize between link min blocksize and link max blocksize both inclusive for a negative tt input length tt this method returns tt max blocksize tt always param input length the length of the data which will be compressed by tt cb zip 2 output stream tt end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name int end_name end_type begin_name choose block size end_name begin_parameter_list begin_param begin_decl begin_type begin_name long end_name end_type begin_name input length end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name input length end_name begin_operator GT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator LPAR end_operator begin_name int end_name begin_operator RPAR end_operator begin_call begin_name begin_name math end_name begin_operator DOT end_operator begin_name min end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name input length end_name begin_operator SLASH end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DP end_operator begin_name max blocksize end_name end_expr end_return end_block 
 begin_comment parse an octal integer from a header buffer param value the header value param buf the buffer from which to parse param offset the offset into the buffer from which to parse param length the number of header bytes to parse return the integer value of the octal bytes end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name int end_name end_type begin_name get octal bytes end_name begin_parameter_list begin_param begin_decl begin_type begin_name long end_name end_type begin_name value end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name buf end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name offset end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name length end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name idx end_name begin_init begin_expr begin_name length end_name begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name buf end_name begin_index begin_expr begin_name offset end_name begin_operator PLUS end_operator begin_name idx end_name end_expr end_index end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_operator MMINUS end_operator begin_name idx end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name buf end_name begin_index begin_expr begin_name offset end_name begin_operator PLUS end_operator begin_name idx end_name end_expr end_index end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_operator MMINUS end_operator begin_name idx end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name value end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name buf end_name begin_index begin_expr begin_name offset end_name begin_operator PLUS end_operator begin_name idx end_name end_expr end_index end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_operator MMINUS end_operator begin_name idx end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_for begin_init begin_decl begin_type begin_name long end_name end_type begin_name val end_name begin_init begin_expr begin_name value end_name end_expr end_init end_decl end_init begin_condition begin_expr begin_name idx end_name begin_operator GE end_operator begin_operator UNP end_operator begin_name val end_name begin_operator GT end_operator end_expr end_condition begin_incr begin_expr begin_operator MMINUS end_operator begin_name idx end_name end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name begin_name buf end_name begin_index begin_expr begin_name offset end_name begin_operator PLUS end_operator begin_name idx end_name end_expr end_index end_name begin_operator EQ end_operator begin_call begin_name byte end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator begin_operator PLUS end_operator begin_call begin_name byte end_name begin_argument_list begin_argument begin_expr begin_name val end_name begin_operator UNP end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name val end_name begin_operator EQ end_operator begin_name val end_name begin_operator UNP end_operator end_expr end_expr_stmt end_block end_for end_block end_else end_if begin_for begin_init end_init begin_condition begin_expr begin_name idx end_name begin_operator GE end_operator end_expr end_condition begin_incr begin_expr begin_operator MMINUS end_operator begin_name idx end_name end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name begin_name buf end_name begin_index begin_expr begin_name offset end_name begin_operator PLUS end_operator begin_name idx end_name end_expr end_index end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_name offset end_name begin_operator PLUS end_operator begin_name length end_name end_expr end_return end_block 
 begin_comment not reached end_comment begin_comment a method to convert an invocation target exception to a buildexception and throw it param t the invocation target exception throws build exception the converted exception end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name throw build exception end_name begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name t end_name begin_operator UNP end_operator begin_name invocation target exception end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name throwable end_name end_type begin_name t 2 end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name invocation target exception end_name begin_operator RPAR end_operator begin_name t end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get target exception end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name t 2 end_name begin_operator UNP end_operator begin_name build exception end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator LPAR end_operator begin_name build exception end_name begin_operator RPAR end_operator begin_name t 2 end_name end_expr end_throw end_block end_then end_if begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name t 2 end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_block 
 begin_comment the i as ejbc utility doesn t require the public id of the descriptor s dtd for it to process correctly this method always returns code null code return code null code end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get public id end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment set the stylesheet file param stylesheet a code file code value throws exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set stylesheet end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name stylesheet end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name file resource end_name end_type begin_name fr end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file resource end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fr end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fr end_name begin_operator DOT end_operator begin_name set file end_name end_name begin_argument_list begin_argument begin_expr begin_name stylesheet end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set stylesheet end_name begin_argument_list begin_argument begin_expr begin_name fr end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the assignable class for this definition param adapt to class the assignable class end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set adapt to class end_name begin_parameter_list begin_param begin_decl begin_type begin_name class end_name end_type begin_name adapt to class end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name adapt to class end_name end_name begin_operator EQ end_operator begin_name adapt to class end_name end_expr end_expr_stmt end_block 
 begin_comment test small classfileset end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test small set end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name project end_name end_type begin_name p end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file set end_name end_type begin_name result file set end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file set end_name begin_operator RPAR end_operator begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get reference end_name end_name begin_argument_list begin_argument begin_expr begin_name result fileset end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name scanner end_name begin_init begin_expr begin_call begin_name begin_name result file set end_name begin_operator DOT end_operator begin_name get directory scanner end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name scanned files end_name begin_init begin_expr begin_call begin_name begin_name scanner end_name begin_operator DOT end_operator begin_name get included files end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name hashtable end_name end_type begin_name files end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name scanned files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name scanned files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name scanned files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name contains key end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name contains key end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name configuration has been set end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name is configuration set end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment logs the compilation parameters adds the files to compile and logs the quot nice source list quot param cmd the command line end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name log and add files to compile end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name describe arguments end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name nice source list end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name begin_name compile list end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name nice source list end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name nice source list end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name nice source list end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name compile list end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name arg end_name begin_init begin_expr begin_name begin_name compile list end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name arg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name nice source list end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name nice source list end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name arg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name nice source list end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name nice source list end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the start tag param s the start tag end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set start tag end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name mystart tag end_name begin_operator EQ end_operator begin_name s end_name end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name native 2 ascii test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment this method is a delegate method handling the classpath attribute p this attribute can set a path to add to the classpath p param classpath the path to use for the classpath end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classpath end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name classpath end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name end_name begin_operator EQ end_operator begin_name classpath end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name classpath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment send a carriage return after connecting optional defaults to false param b a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set initial cr end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name add carriage return end_name end_name begin_operator EQ end_operator begin_name b end_name end_expr end_expr_stmt end_block 
 begin_comment sets the file permission mode unix only for files sent to the server param the mode unix style file mode for the files sent to the remote system end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set chmod end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name the mode end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name chmod end_name end_name begin_operator EQ end_operator begin_name the mode end_name end_expr end_expr_stmt end_block 
 begin_comment get the to file specification return the to file specification end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get tofile end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name tofile end_name end_expr end_return end_block 
 begin_comment test conversion from bytes end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test from bytes end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name val end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name byte end_name begin_index end_index end_name begin_block begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr end_block end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name zip long end_name end_type begin_name zl end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name zip long end_name begin_argument_list begin_argument begin_expr begin_name val end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name zl end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a replyto address element param address the address to reply to since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add reply to end_name begin_parameter_list begin_param begin_decl begin_type begin_name email address end_name end_type begin_name address end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name reply to list end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name address end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment encoding to use for input defaults to the platform s default encoding p for a list of possible values see a href http java sun com j 2 se 1 5 0 docs guide intl encoding doc html http java sun com j 2 se 1 5 0 docs guide intl encoding doc html a p param encoding the new encoding value end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set encoding end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name encoding end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name encoding end_name end_name begin_operator EQ end_operator begin_name encoding end_name end_expr end_expr_stmt end_block 
 begin_comment get the borland descriptor handler param src dir the source directory return the descriptor end_comment begin_type begin_specifier end_specifier begin_name descriptor handler end_name end_type begin_name get borland descriptor handler end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name src dir end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name descriptor handler end_name end_type begin_name handler end_name begin_init begin_expr begin_operator UNP end_operator begin_class begin_super begin_name descriptor handler end_name end_super begin_argument_list begin_argument begin_expr begin_call begin_name get task end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name src dir end_name end_expr end_argument end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process element end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name current element end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment get the filename of vendor specific descriptor end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name file name with meta end_name begin_init begin_expr begin_name current text end_name end_expr end_init end_decl end_decl_stmt begin_comment trim the meta inf off of the file name end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name file name end_name begin_init begin_expr begin_call begin_name begin_name file name with meta end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name meta dir end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file name with meta end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name descriptor file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name src dir end_name end_expr end_argument begin_argument begin_expr begin_name file name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ejb files end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name file name with meta end_name end_expr end_argument begin_argument begin_expr begin_name descriptor file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_function end_block end_class end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name handler end_name begin_operator DOT end_operator begin_name register dtd end_name end_name begin_argument_list begin_argument begin_expr begin_name publicid borland ejb end_name end_expr end_argument begin_argument begin_expr begin_name borland dtd end_name begin_operator EQT end_operator begin_operator QM end_operator begin_name default bas dtd location end_name begin_operator DP end_operator begin_name borland dtd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name get config end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name begin_name dtd locations end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name ejb jar end_name begin_operator DOT end_operator begin_name dtd location end_name end_name end_type begin_name dtd location end_name begin_init begin_expr begin_operator LPAR end_operator begin_name begin_name ejb jar end_name begin_operator DOT end_operator begin_name dtd location end_name end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name handler end_name begin_operator DOT end_operator begin_name register dtd end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name dtd location end_name begin_operator DOT end_operator begin_name get public id end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name dtd location end_name begin_operator DOT end_operator begin_name get location end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_name handler end_name end_expr end_return end_block 
 begin_comment sets the compression level for subsequent entries p default is deflater default compression p param level the compression level throws illegal argument exception if an invalid compression level is specified since 1 1 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set level end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name level end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name begin_name level end_name begin_argument_list begin_argument begin_name begin_name deflater end_name begin_operator DOT end_operator begin_name default compression end_name end_name begin_operator UNP end_operator begin_name level end_name end_argument end_argument_list end_name begin_name begin_name deflater end_name begin_operator DOT end_operator begin_name best compression end_name end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name illegal argument exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name level end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name has compression level changed end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name level end_name end_name begin_operator UNP end_operator begin_name level end_name begin_operator RPAR end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name level end_name end_name begin_operator EQ end_operator begin_name level end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name has next end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name occurrence end_name begin_operator GT end_operator begin_operator UNP end_operator begin_call begin_name begin_name key iter end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 6 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name invocation target exception end_name end_expr end_argument begin_argument begin_expr begin_name illegal access exception end_name end_expr end_argument begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name object end_name begin_index end_index end_type begin_name args end_name begin_init begin_expr begin_operator LPAR end_operator begin_name final include project end_name begin_operator RPAR end_operator begin_operator QM end_operator begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_name p end_name end_expr begin_expr begin_name value end_name end_expr end_block begin_operator DP end_operator begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_name value end_name end_expr end_block end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name attribute end_name begin_init begin_expr begin_call begin_name begin_name final constructor end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list begin_argument begin_expr begin_name args end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name p end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name set project reference end_name end_name begin_argument_list begin_argument begin_expr begin_name attribute end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_name attribute end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name instantiation exception end_name end_type begin_name ie end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name ie end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_specifier end_specifier begin_name j unit test listener test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment d flag of p 4 labelsync indicates an intention of deleting from the label the files specified in the view param delete indicates intention of deleting from the label the files specified in the view end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set delete end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name delete end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_operator EQ end_operator begin_name delete end_name end_expr end_expr_stmt end_block 
 begin_comment the output file name param output file the output file name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set output file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name output file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name output file end_name end_name begin_operator EQ end_operator begin_name output file end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 16 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment interface test listener for j unit gt 3 4 p a test failed param test the test param t the assertion thrown by the test end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add failure end_name begin_parameter_list begin_param begin_decl begin_type begin_name test end_name end_type begin_name test end_name end_decl end_param begin_param begin_decl begin_type begin_name assertion failed error end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add failure end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name throwable end_name begin_operator RPAR end_operator begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test that runs the new xnew compiler adapter throws exception end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test xnew compiler end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment validates the passed in attributes ensures the class name and arguments attribute have been set exception org apache tools ant build exception if the attributes are invalid or incomplete end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name validate attributes end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name validate attributes end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name class name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment dictionary does not have an equals please use map equals p follows the equals contract of java 2 s map p param d 1 the first directory param d 2 the second directory return true if the directories are equal since ant 1 5 deprecated since 1 6 x end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name equals end_name begin_parameter_list begin_param begin_decl begin_type begin_name dictionary end_name end_type begin_name d 1 end_name end_decl end_param begin_param begin_decl begin_type begin_name dictionary end_name end_type begin_name d 2 end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name d 1 end_name begin_operator EQT end_operator begin_name d 2 end_name end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name d 1 end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name d 2 end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name d 1 end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name d 2 end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e 1 end_name begin_init begin_expr begin_call begin_name begin_name d 1 end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e 1 end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name key end_name begin_init begin_expr begin_call begin_name begin_name e 1 end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name value 1 end_name begin_init begin_expr begin_call begin_name begin_name d 1 end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name value 2 end_name begin_init begin_expr begin_call begin_name begin_name d 2 end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name value 2 end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name value 1 end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name value 2 end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_while begin_comment don t need the opposite check as the dictionaries have the end_comment begin_comment same size so we ve also covered all keys of d 2 already end_comment begin_return begin_expr end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test empty dir copy end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name d end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert file is not present end_name begin_argument_list begin_argument begin_expr begin_name d end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name c end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert file is present end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name get full log end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor for a tar buffer on an output stream param out stream the output stream to use end_comment begin_specifier end_specifier begin_name tar buffer end_name begin_parameter_list begin_param begin_decl begin_type begin_name output stream end_name end_type begin_name out stream end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr begin_name out stream end_name end_expr end_argument begin_argument begin_expr begin_name begin_name tar buffer end_name begin_operator DOT end_operator begin_name default blksize end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test selection set by default end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment move the generated source file s to the base directory throws org apache tools ant build exception when error copying removing files end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name move generated file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name base dir end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name source base file end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name classname end_name end_decl end_param begin_param begin_decl begin_type begin_name rmic adapter end_name end_type begin_name adapter end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name class file name end_name begin_init begin_expr begin_call begin_name begin_name classname end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name generated files end_name begin_init begin_expr begin_call begin_name begin_name adapter end_name begin_operator DOT end_operator begin_name get mapper end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name map file name end_name begin_argument_list begin_argument begin_expr begin_name class file name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name generated files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name generated file end_name begin_init begin_expr begin_name begin_name generated files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name generated file end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment don t know how to handle that a idl file doesn t end_comment begin_comment have a corresponding java source for example end_comment begin_continue end_continue end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name pos end_name begin_init begin_expr begin_call begin_name begin_name generated file end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name source file name end_name begin_init begin_expr begin_call begin_name begin_name generated file end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name pos end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name old file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name base dir end_name end_expr end_argument begin_argument begin_expr begin_name source file name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name old file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment no source file generated nothing to move end_comment begin_continue end_continue end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name new file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name source base file end_name end_expr end_argument begin_argument begin_expr begin_name source file name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_if begin_condition begin_expr begin_name filtering end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name copy file end_name end_name begin_argument_list begin_argument begin_expr begin_name old file end_name end_expr end_argument begin_argument begin_expr begin_name new file end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name filter set collection end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get global filter set end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name copy file end_name end_name begin_argument_list begin_argument begin_expr begin_name old file end_name end_expr end_argument begin_argument begin_expr begin_name new file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name old file end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_name old file end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name new file end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name ioe end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name ioe end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_for end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test file resource with mapper end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file 1 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file 2 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file 3 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file 1 end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file 2 end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file 3 end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment a no arg constructor end_comment begin_specifier end_specifier begin_name b zip 2 resource end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment sets the to file specification param tof the to file specification end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set tofile end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name tof end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name tofile end_name end_name begin_operator EQ end_operator begin_name tof end_name end_expr end_expr_stmt end_block 
 begin_comment get the commentfile command param cmd containing the command line string with or without the commentfile flag and file appended end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name get comment file command end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name get comment file end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes this breaks clearcase end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag commentfile end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get comment file end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment semicolon separated list of modules to refer to param params the new additional modules value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set additional modules end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name params end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name additional modules end_name begin_operator EQ end_operator begin_name params end_name end_expr end_expr_stmt end_block 
 begin_comment get the class name of this entry return the class name end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get class name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name class name end_name end_expr end_return end_block 
 begin_comment adds an implementation specific command line argument return a implementation specific argument to be configured end_comment begin_type begin_specifier end_specifier begin_name implementation specific argument end_name end_type begin_name create compiler arg end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name implementation specific argument end_name end_type begin_name arg end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name implementation specific argument end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name facade end_name begin_operator DOT end_operator begin_name add implementation argument end_name end_name begin_argument_list begin_argument begin_expr begin_name arg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name arg end_name end_expr end_return end_block 
 begin_comment create an instance of an xsl parameter for configuration by ant return an instance of the param class to be configured since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name begin_name xslt process end_name begin_operator DOT end_operator begin_name param end_name end_name end_type begin_name create param end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name xslt process end_name begin_operator DOT end_operator begin_name param end_name end_name end_type begin_name p end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name xslt process end_name begin_operator DOT end_operator begin_name param end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name params end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name p end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test g zip end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name log end_name begin_init begin_expr begin_call begin_name get log end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name log end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name log end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test base dirs end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name target end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name dirs end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name sub ant test end_name begin_operator DOT end_operator begin_name basedir checker end_name end_name end_type begin_name bc end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name sub ant test end_name begin_operator DOT end_operator begin_name basedir checker end_name end_name begin_argument_list begin_argument begin_expr begin_name dirs end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add build listener end_name end_name begin_argument_list begin_argument begin_expr begin_name bc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name assertion failed error end_name end_type begin_name ae end_name begin_init begin_expr begin_call begin_name begin_name bc end_name begin_operator DOT end_operator begin_name get error end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name ae end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_name ae end_name end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name remove build listener end_name end_name begin_argument_list begin_argument begin_expr begin_name bc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return an enumeration listing each test then each batchtest return enumeration since ant 1 3 end_comment begin_type begin_specifier end_specifier begin_name enumeration end_name end_type begin_name all tests end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name enumeration end_name begin_index end_index end_type begin_name enums end_name begin_init begin_expr begin_block begin_expr begin_call begin_name begin_name tests end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr begin_expr begin_call begin_name begin_name batch tests end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_block end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name enumerations end_name begin_operator DOT end_operator begin_name from compound end_name end_name begin_argument_list begin_argument begin_expr begin_name enums end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment compare a jar file with its corresponding signed jar the logic for this is complex and best explained in the source itself essentially if either file doesnt exist or the destfile has an out of date timestamp then the return value is false p if we are signing ourself the check link is signed file is used to trigger the process param jar file the unsigned jar file param signedjar file the result signed jar file return true if the signedjar file is considered up to date end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is up to date end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name jar file end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name signedjar file end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator EQT end_operator begin_name jar file end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name jar file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment these are pathological cases but retained in case somebody end_comment begin_comment subclassed us end_comment begin_return begin_expr end_expr end_return end_block end_then end_if begin_comment we normally compare destination with source end_comment begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name dest file end_name begin_init begin_expr begin_name signedjar file end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name dest file end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment but if no dest is specified compare source to source end_comment begin_expr_stmt begin_expr begin_name dest file end_name begin_operator EQ end_operator begin_name jar file end_name end_expr end_expr_stmt end_block end_then end_if begin_comment if by any means the destfile and source match end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name jar file end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name dest file end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name lazy end_name end_expr end_condition begin_then begin_block begin_comment we check the presence of signatures on lazy signing end_comment begin_return begin_expr begin_call begin_name is signed end_name begin_argument_list begin_argument begin_expr begin_name jar file end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_comment unsigned or non lazy self signings are always false end_comment begin_return begin_expr end_expr end_return end_block end_then end_if begin_comment if they are different the timestamps are used end_comment begin_return begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name is up to date end_name end_name begin_argument_list begin_argument begin_expr begin_name jar file end_name end_expr end_argument begin_argument begin_expr begin_name dest file end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment setters called by ant end_comment begin_comment the p 4 d server and port to connect to optional default perforce 1666 param p 4 port the port one wants to set such as localhost 1666 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set port end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name p 4 port end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name p 4 port end_name end_name begin_operator EQ end_operator begin_operator PLUS end_operator begin_name p 4 port end_name end_expr end_expr_stmt end_block 
 begin_comment handle error output send it the the new project if is present otherwise call the super class param error output to flush the string to output see task handle error flush string since ant 1 5 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name handle error flush end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name error output to flush end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name new project end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name new project end_name begin_operator DOT end_operator begin_name demux flush end_name end_name begin_argument_list begin_argument begin_expr begin_name error output to flush end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name handle error flush end_name end_name begin_argument_list begin_argument begin_expr begin_name error output to flush end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name enumeration end_name end_type begin_name keys end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name collection utils end_name begin_operator DOT end_operator begin_name as enumeration end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name key list end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment enable verbose output when signing optional default false param verbose if true enable verbose output end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set verbose end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name verbose end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name verbose end_name end_name begin_operator EQ end_operator begin_name verbose end_name end_expr end_expr_stmt end_block 
 begin_comment set the user attribute param user the value to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set internal user end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name user end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name user end_name end_name begin_operator EQ end_operator begin_name user end_name end_expr end_expr_stmt end_block 
 begin_comment a convenience method that several other methods might call end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add to output stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name zip output stream end_name end_type begin_name output end_name end_decl end_param begin_param begin_decl begin_type begin_name input stream end_name end_type begin_name input end_name end_decl end_param begin_param begin_decl begin_type begin_name zip entry end_name end_type begin_name ze end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name output end_name begin_operator DOT end_operator begin_name put next entry end_name end_name begin_argument_list begin_argument begin_expr begin_name ze end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name zip exception end_name end_type begin_name zip ex end_name end_decl end_param end_parameter_list begin_block begin_comment this entry already exists so go with the first one end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name input end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_catch end_try begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name num bytes end_name begin_init begin_expr begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_operator LPAR end_operator begin_name num bytes end_name begin_operator EQ end_operator begin_call begin_name begin_name input end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator GT end_operator end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name output end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name num bytes end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_call begin_name begin_name output end_name begin_operator DOT end_operator begin_name close entry end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name input end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment carry out the transfer throws io exception on i o errors throws j sch exception on errors detected by scp end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument begin_argument begin_expr begin_name j sch exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name command end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name is recursive end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name command end_name begin_operator UNP end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name command end_name begin_operator UNP end_operator begin_name remote file end_name end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name channel end_name end_type begin_name channel end_name begin_init begin_expr begin_call begin_name open exec channel end_name begin_argument_list begin_argument begin_expr begin_name command end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_comment get i o streams for remote scp end_comment begin_decl_stmt begin_decl begin_type begin_name output stream end_name end_type begin_name out end_name begin_init begin_expr begin_call begin_name begin_name channel end_name begin_operator DOT end_operator begin_name get output stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name in end_name begin_init begin_expr begin_call begin_name begin_name channel end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name channel end_name begin_operator DOT end_operator begin_name connect end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name send ack end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name start remote cp protocol end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr begin_name local file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_if begin_condition begin_expr begin_name channel end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name channel end_name begin_operator DOT end_operator begin_name disconnect end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment run the test end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name run end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name res end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name test result end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name add listener end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name wrap listener end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name formatters end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name add listener end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name wrap listener end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name test listener end_name begin_operator RPAR end_operator begin_call begin_name begin_name formatters end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_decl_stmt begin_decl begin_type begin_name byte array output stream end_name end_type begin_name err strm end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name byte array output stream end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name system error end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name print stream end_name begin_argument_list begin_argument begin_expr begin_name err strm end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name byte array output stream end_name end_type begin_name out strm end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name byte array output stream end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name system out end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name print stream end_name begin_argument_list begin_argument begin_expr begin_name out strm end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name print stream end_name end_type begin_name saved err end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name forked end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name output to formatters end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name show output end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name saved out end_name begin_operator EQ end_operator begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name saved err end_name begin_operator EQ end_operator begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name set out end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name print stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_class begin_super begin_name output stream end_name end_super begin_argument_list end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block end_block end_function end_block end_class end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name set err end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name print stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_class begin_super begin_name output stream end_name end_super begin_argument_list end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block end_block end_function end_block end_class end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name saved out end_name begin_operator EQ end_operator begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name saved err end_name begin_operator EQ end_operator begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name show output end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name set out end_name end_name begin_argument_list begin_argument begin_expr begin_name system out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name set err end_name end_name begin_argument_list begin_argument begin_expr begin_name system error end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name set out end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name print stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name tee output stream end_name begin_argument_list begin_argument begin_expr begin_name saved out end_name end_expr end_argument begin_argument begin_expr begin_name system out end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name set err end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name print stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name tee output stream end_name begin_argument_list begin_argument begin_expr begin_name saved err end_name end_expr end_argument begin_argument begin_expr begin_name system error end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_name perm end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_else end_if end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_name perm end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name perm end_name begin_operator DOT end_operator begin_name set security manager end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if begin_decl_stmt begin_decl begin_type begin_name test end_name end_type begin_name suite end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name throwable end_name end_type begin_name exception end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name start test suite success end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name test class end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name loader end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name test class end_name begin_operator EQ end_operator begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name junit test end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name test class end_name begin_operator EQ end_operator begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name junit test end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name loader end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_comment check for a static suite method first even when using end_comment begin_comment j unit 4 end_comment begin_decl_stmt begin_decl begin_type begin_name method end_name end_type begin_name suite method end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_comment check if there is a suite method end_comment begin_expr_stmt begin_expr begin_name suite method end_name begin_operator EQ end_operator begin_call begin_name begin_name test class end_name begin_operator DOT end_operator begin_name get method end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name class end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no such method exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment no appropriate suite method found we don t report any end_comment begin_comment error here since it might be perfectly normal end_comment end_block end_catch end_try begin_if begin_condition begin_expr begin_name suite method end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment if there is a suite method available then try end_comment begin_comment to extract the suite from it if there is an error end_comment begin_comment here it will be caught below and reported end_comment begin_expr_stmt begin_expr begin_name suite end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name test end_name begin_operator RPAR end_operator begin_call begin_name begin_name suite method end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name class end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name junit 4 test adapter class end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment check for jdk 5 first will not help on jdk 1 4 end_comment begin_comment if only junit 4 0 jar in cp because in that case end_comment begin_comment linkage of whole task will already have failed but end_comment begin_comment will help if cp has junit 3 8 2 jar junit 4 0 jar end_comment begin_comment in that case first c f n will fail with cnfe and we end_comment begin_comment will avoid unsupported class version error end_comment begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name loader end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name junit 4 test adapter class end_name begin_operator EQ end_operator begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name junit 4 test adapter class end_name begin_operator EQ end_operator begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name loader end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment ok fall back to j unit 3 end_comment end_block end_catch end_try begin_expr_stmt begin_expr begin_name junit 4 end_name begin_operator EQ end_operator begin_name junit 4 test adapter class end_name begin_operator UNP end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name junit 4 end_name end_expr end_condition begin_then begin_block begin_comment let s use it end_comment begin_expr_stmt begin_expr begin_name suite end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name test end_name begin_operator RPAR end_operator begin_call begin_name begin_name junit 4 test adapter class end_name begin_operator DOT end_operator begin_name get constructor end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name class end_name begin_index end_index end_name begin_block begin_expr begin_name begin_name class end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_block end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name new instance end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_name test class end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment use j unit 3 end_comment begin_comment try to extract a test suite automatically this end_comment begin_comment will generate warnings if the class is no end_comment begin_comment suitable test end_comment begin_expr_stmt begin_expr begin_name suite end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name test suite end_name begin_argument_list begin_argument begin_expr begin_name test class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_else end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name ret code end_name begin_operator EQ end_operator begin_name errors end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name exception end_name begin_operator EQ end_operator begin_name e end_name end_expr end_expr_stmt end_block end_catch end_try begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name start end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name fire start test suite end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name start test suite success end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name exception end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment had an exception constructing suite end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name formatters end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name test listener end_name begin_operator RPAR end_operator begin_call begin_name begin_name formatters end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name add error end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name exception end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name junit test end_name begin_operator DOT end_operator begin_name set counts end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name junit test end_name begin_operator DOT end_operator begin_name set run time end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name log test listener event end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name suite end_name begin_operator DOT end_operator begin_name count test cases end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name suite end_name begin_operator DOT end_operator begin_name run end_name end_name begin_argument_list begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_if begin_condition begin_expr begin_name junit 4 end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name begin_index end_index end_type begin_name cnts end_name begin_init begin_expr begin_call begin_name find j unit 4 failure error count end_name begin_argument_list begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name junit test end_name begin_operator DOT end_operator begin_name set counts end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name run count end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name cnts end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name cnts end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name junit test end_name begin_operator DOT end_operator begin_name set counts end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name run count end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name failure count end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name error count end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name junit test end_name begin_operator DOT end_operator begin_name set run time end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator begin_name start end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block end_else end_if end_block begin_finally begin_block begin_if begin_condition begin_expr begin_name perm end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name perm end_name begin_operator DOT end_operator begin_name restore security manager end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name saved out end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name set out end_name end_name begin_argument_list begin_argument begin_expr begin_name saved out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name saved err end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name set err end_name end_name begin_argument_list begin_argument begin_expr begin_name saved err end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name system error end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name system error end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system out end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name system out end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name start test suite success end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name send out and err end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name out strm end_name begin_operator DOT end_operator begin_name to byte array end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name err strm end_name begin_operator DOT end_operator begin_name to byte array end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try begin_expr_stmt begin_expr begin_call begin_name fire end test suite end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name ret code end_name begin_operator UNP end_operator begin_name success end_name begin_operator UNP end_operator begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name error count end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name ret code end_name begin_operator EQ end_operator begin_name errors end_name end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name failure count end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name ret code end_name begin_operator EQ end_operator begin_name failures end_name end_expr end_expr_stmt end_block end_then end_if end_else end_if end_block 
 begin_comment set the error code filter chain code s param error filter chains code vector code containing code filter chain code end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set error filter chains end_name begin_parameter_list begin_param begin_decl begin_type begin_name vector end_name end_type begin_name error filter chains end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name error filter chains end_name end_name begin_operator EQ end_operator begin_name error filter chains end_name end_expr end_expr_stmt end_block 
 begin_comment create a demux input stream for the given project param project the project instance end_comment begin_specifier end_specifier begin_name demux input stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name project end_name end_name begin_operator EQ end_operator begin_name project end_name end_expr end_expr_stmt end_block 
 begin_comment since ant 1 5 return a clone of this test end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name clone end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name j unit test end_name end_type begin_name t end_name begin_init begin_expr begin_operator LPAR end_operator begin_name j unit test end_name begin_operator RPAR end_operator begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name t end_name begin_operator DOT end_operator begin_name props end_name end_name begin_operator EQ end_operator begin_name props end_name begin_operator EQT end_operator begin_operator QM end_operator begin_operator DP end_operator begin_operator LPAR end_operator begin_name properties end_name begin_operator RPAR end_operator begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name t end_name begin_operator DOT end_operator begin_name formatters end_name end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name vector end_name begin_operator RPAR end_operator begin_call begin_name begin_name formatters end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name t end_name end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name clone not supported exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment plain impossible end_comment begin_return begin_expr begin_name this end_name end_expr end_return end_block end_catch end_try end_block 
 begin_comment set the implementation url of extension param implementation url the implementation url of extension end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set implementation url end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name implementation url end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name verify not a reference end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name implementation url end_name end_name begin_operator EQ end_operator begin_name implementation url end_name end_expr end_expr_stmt end_block 
 begin_comment constructor for watchdog param timeout the timeout to use in milliseconds must be 1 end_comment begin_specifier end_specifier begin_name watchdog end_name begin_parameter_list begin_param begin_decl begin_type begin_name long end_name end_type begin_name timeout end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name timeout end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name illegal argument exception end_name begin_argument_list begin_argument begin_expr begin_name error invalid timeout end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name timeout end_name end_name begin_operator EQ end_operator begin_name timeout end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is delim end_name begin_parameter_list begin_param begin_decl begin_type begin_name char end_name end_type begin_name ch end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name delims end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name is whitespace end_name end_name begin_argument_list begin_argument begin_expr begin_name ch end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name delims end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name begin_name delims end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQT end_operator begin_name ch end_name end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_for begin_return begin_expr end_expr end_return end_block 
 begin_comment grabs all included files and directors from the file set and returns them as an array of relative file names param fs the fileset to operate on return a list of the filenames since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get file names end_name begin_parameter_list begin_param begin_decl begin_type begin_name file set end_name end_type begin_name fs end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds end_name begin_init begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name get directory scanner end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name directories end_name begin_init begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get included directories end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name files per se end_name begin_init begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get included files end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name files end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_name begin_name directories end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator PLUS end_operator begin_name begin_name files per se end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_name directories end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name files end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name directories end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_name files per se end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name files end_name end_expr end_argument begin_argument begin_expr begin_name begin_name directories end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name files per se end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name files end_name end_expr end_return end_block 
 begin_comment convert the filesets to urls return null for no files end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name filesets to url end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name is empty end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name count end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name urls end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name list iterator end_name end_type begin_name list end_name begin_init begin_expr begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name list iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name list end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name file set end_name end_type begin_name set end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file set end_name begin_operator RPAR end_operator begin_call begin_name begin_name list end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name scanner end_name begin_init begin_expr begin_call begin_name begin_name set end_name begin_operator DOT end_operator begin_name get directory scanner end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name files end_name begin_init begin_expr begin_call begin_name begin_name scanner end_name begin_operator DOT end_operator begin_name get included files end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name scanner end_name begin_operator DOT end_operator begin_name get basedir end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name validate file end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name as url end_name begin_init begin_expr begin_call begin_name to url end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name urls end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name as url end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name as url end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name urls end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name separator end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name count end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_for end_block end_while begin_comment at this point there is one trailing space to remove if the list is not empty end_comment begin_return begin_expr begin_call begin_name strip trailing separator end_name begin_argument_list begin_argument begin_expr begin_name urls end_name end_expr end_argument begin_argument begin_expr begin_name count end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment sets case sensitivity of the file system param is case sensitive true on yes if file system is case sensitive false off no when not end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set case sensitive end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name is case sensitive end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name used matching task end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set case sensitive end_name end_name begin_argument_list begin_argument begin_expr begin_name is case sensitive end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name testnodirs end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name execute target end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name expect log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment create a path to be configured with the boot classpath return a new path instance to be configured with the boot classpath end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name create bootclasspath end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name bootclasspath end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name bootclasspath end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name bootclasspath end_name begin_operator DOT end_operator begin_name create path end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no cvs root end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment do the work param exec name the name that will be passed to bsf for this script execution return the result of the evalulation exception build exception if someting goes wrong exectuing the script end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name evaluate script end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name exec name end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name check language end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name class loader end_name end_type begin_name orig loader end_name begin_init begin_expr begin_call begin_name replace context loader end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name bsf manager end_name end_type begin_name m end_name begin_init begin_expr begin_call begin_name create manager end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name declare beans end_name begin_argument_list begin_argument begin_expr begin_name m end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment execute the script end_comment begin_if begin_condition begin_expr begin_name engine end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name eval end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get language end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name exec name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get script end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr begin_call begin_name begin_name engine end_name begin_operator DOT end_operator begin_name eval end_name end_name begin_argument_list begin_argument begin_expr begin_name exec name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get script end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block end_else end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name bsf exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name throw build exception end_name begin_argument_list begin_argument begin_expr begin_name be end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment not reached end_comment begin_return begin_expr end_expr end_return end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name restore context loader end_name begin_argument_list begin_argument begin_expr begin_name orig loader end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment update policy either update or replace default is replace param m the mode value update or replace end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set mode end_name begin_parameter_list begin_param begin_decl begin_type begin_name mode end_name end_type begin_name m end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name mode end_name begin_operator EQ end_operator begin_name m end_name end_expr end_expr_stmt end_block 
 begin_comment turns recursion on or off param recursion if it is true the default subfolders are searched recursively for files to check out otherwise only files specified by code folder name code are scanned see get recursion end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set recursion end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name recursion end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name recursion end_name end_name begin_operator EQ end_operator begin_name recursion end_name end_expr end_expr_stmt end_block 
 begin_comment inflater needs an extra dummy byte for nowrap see inflater s javadocs end_comment begin_type begin_name void end_name end_type begin_name add dummy end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name add dummy byte end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment makes this instance in effect a reference to another filter chain instance p you must not set another attribute or nest elements inside this element if you make it a reference p param r the reference to which this instance is associated exception build exception if this instance already has been configured end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set refid end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name filter readers end_name begin_operator DOT end_operator begin_name is empty end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment change this to get the objects from the other reference end_comment begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name o end_name begin_init begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name get referenced object end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name o end_name begin_operator UNP end_operator begin_name filter chain end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name filter chain end_name end_type begin_name fc end_name begin_init begin_expr begin_operator LPAR end_operator begin_name filter chain end_name begin_operator RPAR end_operator begin_name o end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name filter readers end_name begin_operator EQ end_operator begin_call begin_name begin_name fc end_name begin_operator DOT end_operator begin_name get filter readers end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name get ref id end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_name boolean end_name end_type begin_name eval end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name t end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name f end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_name t end_name begin_operator EQT end_operator end_expr end_return end_block 
 begin_comment add files under web inf lib param fs the zip file set to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add lib end_name begin_parameter_list begin_param begin_decl begin_type begin_name zip file set end_name end_type begin_name fs end_name end_decl end_param end_parameter_list begin_block begin_comment we just set the prefix for this fileset and pass it up end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name set prefix end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name add fileset end_name end_name begin_argument_list begin_argument begin_expr begin_name fs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the replyto address this method may be called multiple times param rto the replyto address end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name replyto end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name rto end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name replyto end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name rto end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets the fully qualified name of the java class with underscores separating the components of the class name rather than periods this format is used in naming some of the stub and skeleton classes for the i planet application server return string representing the fully qualified class name using underscores instead of periods end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get qualified with underscores end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name qualified name end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment from code base code traverse the filesystem in order to find a file that matches the given stack of names param base base file dir param path elements vector of path elements dirs file param cs whether to scan case sensitively return file object that points to the file in question or null since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name find file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name base end_name end_decl end_param begin_param begin_decl begin_type begin_name vector end_name end_type begin_name path elements end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name cs end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name path elements end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_name base end_name end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name current end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name path elements end_name begin_operator DOT end_operator begin_name remove end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name base end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name find file end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name current end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name path elements end_name end_expr end_argument begin_argument begin_expr begin_name cs end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name base end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name files end_name begin_init begin_expr begin_call begin_name list end_name begin_argument_list begin_argument begin_expr begin_name base end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name files end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name base end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name boolean end_name begin_index end_index end_type begin_name match case end_name begin_init begin_expr begin_name cs end_name begin_operator QM end_operator begin_name cs scan only end_name begin_operator DP end_operator begin_name cs then non cs end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name match case end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name j end_name begin_operator LT end_operator begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name j end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name begin_name match case end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator QM end_operator begin_name begin_name files end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name current end_name end_expr end_argument end_argument_list end_call begin_operator DP end_operator begin_name begin_name files end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name equals ignore case end_name begin_argument_list begin_argument begin_expr begin_name current end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name find file end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name base end_name end_expr end_argument begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name path elements end_name end_expr end_argument begin_argument begin_expr begin_name cs end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if end_block end_for end_block end_for begin_return begin_expr end_expr end_return end_block 
 begin_comment fulfill the resource collection contract return number of elements as int since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name size end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name file set end_name begin_operator RPAR end_operator begin_call begin_name get ref end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name size end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr begin_call begin_name get directory scanner end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get included files count end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_call begin_name get directory scanner end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get included dirs count end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment create a path return a path to be configured end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name create path end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name path end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name path end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name path end_name end_expr end_return end_block 
 begin_comment convert a class name from class file slash notation to java source file dot notation param name the class name in slash notation org apache ant return the class name in dot notation eg java lang object end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name convert slash name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name supports symlinks end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment load an adapter by name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test explicit class end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test escape end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return the number of arguments that preceded this marker p the name of the executable if set is counted as the first argument p return the position of this marker end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get position end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name real pos end_name begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name real pos end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name executable end_name begin_operator EQT end_operator begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name position end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name argument end_name end_type begin_name arg end_name begin_init begin_expr begin_operator LPAR end_operator begin_name argument end_name begin_operator RPAR end_operator begin_call begin_name begin_name arguments end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name real pos end_name begin_operator UNP end_operator begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get parts end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_name length end_name end_expr end_expr_stmt end_block end_for end_block end_then end_if begin_return begin_expr begin_name real pos end_name end_expr end_return end_block 
 begin_comment get the cvs client version return cvs client version end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get client version end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name client version end_name end_expr end_return end_block 
 begin_comment to the bootstrap path this adds a reference to a classpath defined elsewhere param r a reference to a classpath todo this needs to be documented in the html end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set boot classpath ref end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name create bootclasspath end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set refid end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a footer to the concatenated output param footer to add the footer since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add footer end_name begin_parameter_list begin_param begin_decl begin_type begin_name text element end_name end_type begin_name footer to add end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name footer end_name end_name begin_operator EQ end_operator begin_name footer to add end_name end_expr end_expr_stmt end_block 
 begin_comment similiar to link set file set file but explicitly states that the file is a remote file param a from uri a string representing the source of the copy since ant 1 6 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set remote file end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name a from uri end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set from uri end_name begin_argument_list begin_argument begin_expr begin_name a from uri end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name is from remote end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment fired when a message is logged this adds a message element to the most appropriate parent element task target or build and records the priority and text of the message param event an event with any relevant extra information will not be code null code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name message logged end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name priority end_name begin_init begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get priority end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name priority end_name begin_operator GT end_operator begin_name msg output level end_name end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name element end_name end_type begin_name message element end_name begin_init begin_expr begin_call begin_name begin_name doc end_name begin_operator DOT end_operator begin_name create element end_name end_name begin_argument_list begin_argument begin_expr begin_name message tag end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_switch begin_condition begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get priority end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_case begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr begin_expr_stmt begin_expr begin_name name end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr begin_expr_stmt begin_expr begin_name name end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr begin_expr_stmt begin_expr begin_name name end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_break end_break end_case begin_default begin_expr_stmt begin_expr begin_name name end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_break end_break end_default end_block end_switch begin_expr_stmt begin_expr begin_call begin_name begin_name message element end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name priority attr end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name throwable end_name end_type begin_name ex end_name begin_init begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get exception end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name begin_operator LE end_operator begin_name msg output level end_name begin_operator UNP end_operator begin_name ex end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name text end_name end_type begin_name err text end_name begin_init begin_expr begin_call begin_name begin_name doc end_name begin_operator DOT end_operator begin_name create cdata section end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name get stack trace end_name end_name begin_argument_list begin_argument begin_expr begin_name ex end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name element end_name end_type begin_name stacktrace end_name begin_init begin_expr begin_call begin_name begin_name doc end_name begin_operator DOT end_operator begin_name create element end_name end_name begin_argument_list begin_argument begin_expr begin_name stacktrace tag end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name stacktrace end_name begin_operator DOT end_operator begin_name append child end_name end_name begin_argument_list begin_argument begin_expr begin_name err text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name build element end_name begin_operator DOT end_operator begin_name element end_name begin_operator DOT end_operator begin_name append child end_name end_name begin_argument_list begin_argument begin_expr begin_name stacktrace end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name text end_name end_type begin_name message text end_name begin_init begin_expr begin_call begin_name begin_name doc end_name begin_operator DOT end_operator begin_name create cdata section end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name message element end_name begin_operator DOT end_operator begin_name append child end_name end_name begin_argument_list begin_argument begin_expr begin_name message text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name timed element end_name end_type begin_name parent element end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name task end_name end_type begin_name task end_name begin_init begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get task end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name target end_name end_type begin_name target end_name begin_init begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get target end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name task end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name parent element end_name begin_operator EQ end_operator begin_call begin_name get task element end_name begin_argument_list begin_argument begin_expr begin_name task end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name parent element end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name target end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name parent element end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name timed element end_name begin_operator RPAR end_operator begin_call begin_name begin_name targets end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment if parent element null stack thread stack stack thread stacks get thread current thread if thread stack null if thread stack empty parent element timed element thread stack peek end_comment begin_if begin_condition begin_expr begin_name parent element end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name parent element end_name begin_operator DOT end_operator begin_name element end_name begin_operator DOT end_operator begin_name append child end_name end_name begin_argument_list begin_argument begin_expr begin_name message element end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name build element end_name begin_operator DOT end_operator begin_name element end_name begin_operator DOT end_operator begin_name append child end_name end_name begin_argument_list begin_argument begin_expr begin_name message element end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment add nested text expanding properties as we go param s the text to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add text end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add text end_name begin_argument_list begin_argument begin_expr begin_name fragment end_name end_expr end_argument begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get where the current value supports absolute files return true if the compiler does supports absolute files end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name supports absolute files end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name absolute files end_name begin_index begin_expr begin_call begin_name get index end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_return end_block 
 begin_comment the grammar file to process param target file the grammar file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set target end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name target file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name target file end_name end_name begin_operator EQ end_operator begin_name target file end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name determine out of date classes end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name out of date classes end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name src path list end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name src dir end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr begin_name begin_name src path list end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name src dir end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds end_name begin_init begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name get directory scanner end_name end_name begin_argument_list begin_argument begin_expr begin_name src dir end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name files end_name begin_init begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get included files end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name scan dir end_name begin_argument_list begin_argument begin_expr begin_name src dir end_name end_expr end_argument begin_argument begin_expr begin_name files end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for begin_comment now check classpath file dependencies end_comment begin_if begin_condition begin_expr begin_name classpath dependencies end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name classpath deps enum end_name begin_init begin_expr begin_call begin_name begin_name classpath dependencies end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name classpath deps enum end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name class name end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name classpath deps enum end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name out of date classes end_name begin_operator DOT end_operator begin_name contains key end_name end_name begin_argument_list begin_argument begin_expr begin_name class name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name class file info end_name end_type begin_name info end_name begin_init begin_expr begin_operator LPAR end_operator begin_name class file info end_name begin_operator RPAR end_operator begin_call begin_name begin_name class file info map end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name class name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment if we have no info about the class it may have been deleted already and we end_comment begin_comment are using cached info end_comment begin_if begin_condition begin_expr begin_name info end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name hashtable end_name end_type begin_name dependencies end_name begin_init begin_expr begin_operator LPAR end_operator begin_name hashtable end_name begin_operator RPAR end_operator begin_call begin_name begin_name classpath dependencies end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name class name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e 2 end_name begin_init begin_expr begin_call begin_name begin_name dependencies end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e 2 end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name classpath file end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file end_name begin_operator RPAR end_operator begin_call begin_name begin_name e 2 end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name classpath file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_call begin_name begin_name info end_name begin_operator DOT end_operator begin_name absolute file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name class name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name classpath file end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out of date classes end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name class name end_name end_expr end_argument begin_argument begin_expr begin_name class name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_block end_then end_if end_block end_for end_block end_then end_if end_block end_while end_block 
 begin_comment reads a byte from the current tar archive entry this method simply calls read byte int int return the byte read or 1 at eof throws io exception on error end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name read end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name num end_name begin_init begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name one buf end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_name num end_name begin_operator EQT end_operator begin_operator MINUS end_operator begin_operator QM end_operator begin_operator MINUS end_operator begin_operator DP end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name int end_name begin_operator RPAR end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name one buf end_name begin_index begin_expr end_expr end_index end_name begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_return end_block 
 begin_comment check in files recursively defaults to false param recursive the boolean value for recursive end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set recursive end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name recursive end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal recursive end_name end_name begin_argument_list begin_argument begin_expr begin_name recursive end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment using the front end arguments set up the command line to run apt param apt task param cmd command that is set up with the various switches from the task options end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set apt commandline switches end_name begin_parameter_list begin_param begin_decl begin_type begin_name apt end_name end_type begin_name apt end_name end_decl end_param begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name apt end_name begin_operator DOT end_operator begin_name is compile end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment process the factory class end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name factory end_name begin_init begin_expr begin_call begin_name begin_name apt end_name begin_operator DOT end_operator begin_name get factory end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name factory end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name factory end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment process the factory path end_comment begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name factory path end_name begin_init begin_expr begin_call begin_name begin_name apt end_name begin_operator DOT end_operator begin_name get factory path end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name factory path end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set path end_name begin_argument_list begin_argument begin_expr begin_name factory path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name preprocess dir end_name begin_init begin_expr begin_call begin_name begin_name apt end_name begin_operator DOT end_operator begin_name get preprocess dir end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name preprocess dir end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set file end_name begin_argument_list begin_argument begin_expr begin_name preprocess dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment process the processor options end_comment begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name options end_name begin_init begin_expr begin_call begin_name begin_name apt end_name begin_operator DOT end_operator begin_name get options end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name elements end_name begin_init begin_expr begin_call begin_name begin_name options end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name apt end_name begin_operator DOT end_operator begin_name option end_name end_name end_type begin_name opt end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name arg end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name elements end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name opt end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name begin_name apt end_name begin_operator DOT end_operator begin_name option end_name end_name begin_operator RPAR end_operator begin_call begin_name begin_name elements end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name arg end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name opt end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name opt end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name opt end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block 
 begin_comment create a nested header element return a header instance end_comment begin_type begin_specifier end_specifier begin_name header end_name end_type begin_name create header end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name header end_name end_type begin_name h end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name header end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name headers end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name h end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name h end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name j unit report test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment corresponds to code lt ant gt code s nested code lt property gt code element param p the property to pass on explicitly to the sub build end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add property end_name begin_parameter_list begin_param begin_decl begin_type begin_name property end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name properties end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the classes which this class references return a vector of class names which this class references end_comment begin_type begin_specifier end_specifier begin_name vector end_name end_type begin_name get class refs end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name class refs end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name constant pool end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name constant pool entry end_name end_type begin_name entry end_name begin_init begin_expr begin_call begin_name begin_name constant pool end_name begin_operator DOT end_operator begin_name get entry end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name entry end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get tag end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_name begin_name constant pool entry end_name begin_operator DOT end_operator begin_name constant class end_name end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name class cp info end_name end_type begin_name class entry end_name begin_init begin_expr begin_operator LPAR end_operator begin_name class cp info end_name begin_operator RPAR end_operator begin_name entry end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name class entry end_name begin_operator DOT end_operator begin_name get class name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name class name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name class refs end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name class file utils end_name begin_operator DOT end_operator begin_name convert slash name end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name class entry end_name begin_operator DOT end_operator begin_name get class name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block end_for begin_return begin_expr begin_name class refs end_name end_expr end_return end_block 
 begin_comment sets the map of tokens to replace param hash a map string string of token keys to replacement values must not be code null code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set tokens end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name hashtable end_name end_type begin_name hash end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name hash end_name end_name begin_operator EQ end_operator begin_name hash end_name end_expr end_expr_stmt end_block 
 begin_comment constructor for regexp matcher factory end_comment begin_specifier end_specifier begin_name regexp matcher factory end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment constructs an unsupported element exception param msg the string containing the message param element the name of the incorrect element end_comment begin_specifier end_specifier begin_name unsupported element exception end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name msg end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name element end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name element end_name end_name begin_operator EQ end_operator begin_name element end_name end_expr end_expr_stmt end_block 
 begin_comment call a method on the object with no parameters param obj the object to invoke the method on param method name the name of the method to call return the object returned by the method end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name object end_name end_type begin_name invoke end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name obj end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name method name end_name end_decl end_param end_parameter_list begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name method end_name end_type begin_name method end_name end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name method end_name begin_operator EQ end_operator begin_call begin_name begin_name obj end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get method end_name begin_argument_list begin_argument begin_expr begin_name method name end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name begin_name class end_name begin_index end_index end_name begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name method end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_name obj end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name begin_name object end_name begin_index end_index end_name begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name throw build exception end_name begin_argument_list begin_argument begin_expr begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return begin_comment not reached end_comment end_block end_catch end_try end_block 
 begin_comment end of if end_comment begin_comment read the output stream to retrieve the new task number param is input stream throws io exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set process output stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name input stream end_name end_type begin_name is end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name buffer end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name buffered reader end_name end_type begin_name reader end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name buffered reader end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name input stream reader end_name begin_argument_list begin_argument begin_expr begin_name is end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name buffer end_name begin_operator EQ end_operator begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name buffer end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name buffer end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name taskstring end_name begin_init begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name trim end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name taskstring end_name begin_operator EQ end_operator begin_call begin_name begin_name taskstring end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name taskstring end_name begin_operator DOT end_operator begin_name last index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name trim end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set task end_name begin_argument_list begin_argument begin_expr begin_name taskstring end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get task end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment end of if end_comment end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name null pointer exception end_name end_type begin_name npe end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name npe end_name begin_operator DOT end_operator begin_name print stack trace end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name npe end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_comment end of try catch end_comment end_block 
 begin_comment construct a archive resource representing the specified entry in the specified archive param a the archive as file end_comment begin_specifier end_specifier begin_name archive resource end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name a end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr begin_name a end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name end test suite end_name begin_parameter_list begin_param begin_decl begin_type begin_name j unit test end_name end_type begin_name suite end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name out end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name grafitto end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioex end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name ioex end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_if begin_condition begin_expr begin_name out end_name begin_operator UNP end_operator begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name end_name begin_operator UNP end_operator begin_name out end_name begin_operator UNP end_operator begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name end_name end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try end_block end_then end_if end_block end_finally end_try end_block end_then end_if end_block 
 begin_specifier end_specifier begin_name zip test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name file name mapper end_name end_type begin_name get mapper end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name file name mapper end_name end_type begin_name mapper end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name mapper element end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name merging mapper end_name end_type begin_name mm end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name merging mapper end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name mm end_name begin_operator DOT end_operator begin_name set to end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name target file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name mapper end_name begin_operator EQ end_operator begin_name mm end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name mapper end_name begin_operator EQ end_operator begin_call begin_name begin_name mapper element end_name begin_operator DOT end_operator begin_name get implementation end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_return begin_expr begin_name mapper end_name end_expr end_return end_block 
 begin_specifier end_specifier begin_name nested end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return the project description if one has been set return the project description or code null code if it hasn t been set end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get description end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name description end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name description end_name begin_operator EQ end_operator begin_call begin_name begin_name description end_name begin_operator DOT end_operator begin_name get description end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name description end_name end_expr end_return end_block 
 begin_comment create a nested option return an option to be configured end_comment begin_type begin_specifier end_specifier begin_name option end_name end_type begin_name create option end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name option end_name end_type begin_name opt end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name option end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name options end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name opt end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name opt end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name start end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name worker end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name thread end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name my build file end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name worker end_name begin_operator DOT end_operator begin_name start end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name int end_name end_type begin_name resource compare end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource end_name end_type begin_name foo end_name end_decl end_param begin_param begin_decl begin_type begin_name resource end_name end_type begin_name bar end_name end_decl end_param end_parameter_list begin_block begin_comment if no nested natural order end_comment begin_if begin_condition begin_expr begin_name v end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name is empty end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name begin_name foo end_name begin_operator DOT end_operator begin_name compare to end_name end_name begin_argument_list begin_argument begin_expr begin_name bar end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name result end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_name result end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name resource comparator end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name resource compare end_name begin_argument_list begin_argument begin_expr begin_name foo end_name end_expr end_argument begin_argument begin_expr begin_name bar end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_name result end_name end_expr end_return end_block 
 begin_comment return whether to trust or not end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get trust end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name trust all certificates end_name end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test empty copy end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name d end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert file is not present end_name begin_argument_list begin_argument begin_expr begin_name d end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name c end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert file is not present end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name get full log end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test too slow end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment adapt the specified enumeration to the iterator interface param e the enumeration to adapt return an iterator end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name iterator end_name end_type begin_name as iterator end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name enumeration end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_class begin_super begin_name iterator end_name end_super begin_argument_list end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name has next end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_function begin_function begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name next end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_function begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name remove end_name begin_parameter_list end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name unsupported operation exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_function end_block end_class end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test value equals suffix with dot end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name checkprop end_name begin_init begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name checkprop end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment checks whether or not a class is suitable to be adapted by task adapter if the class is of type dispatchable the check is not performed because the method that will be executed will be determined only at runtime of the actual task and not during parse time this only checks conditions which are additionally required for tasks adapted by task adapter thus this method should be called by project check task class throws a build exception and logs as project msg err for conditions that will cause the task execution to fail logs other suspicious conditions with project msg warn param task class class to test for suitability must not be code null code param project project to log warnings errors to must not be code null code see project check task class class end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name check task class end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name class end_name end_type begin_name task class end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name dispatchable end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name is assignable from end_name end_name end_name begin_argument_list begin_argument begin_expr begin_name task class end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment don t have to check for interface since then end_comment begin_comment task class would be abstract too end_comment begin_try begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name method end_name end_type begin_name execute m end_name begin_init begin_expr begin_call begin_name begin_name task class end_name begin_operator DOT end_operator begin_name get method end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name begin_name class end_name begin_index end_index end_name begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment don t have to check for public since end_comment begin_comment get method finds public method only end_comment begin_comment don t have to check for abstract since then end_comment begin_comment task class would be abstract too end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name void end_name begin_operator DOT end_operator begin_name type end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name execute m end_name begin_operator DOT end_operator begin_name get return type end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name message end_name begin_init begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name execute m end_name begin_operator DOT end_operator begin_name get return type end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name task class end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no such method exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name message end_name begin_init begin_expr begin_operator PLUS end_operator begin_name task class end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name linkage error end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name message end_name begin_init begin_expr begin_operator PLUS end_operator begin_name task class end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name e end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_then end_if end_block 
 begin_comment creates an implementation of attribute setter for the given attribute type conversions where necessary are automatically made for the following types ul li string left as it is li character char first character is used li boolean boolean link project to boolean string project to boolean string is used li class class for name is used li file resolved relative to the appropriate project li path resolve relative to the appropriate project li enumerated attribute uses its own link enumerated attribute set value string set value method li other primitive types wrapper classes are used with constructors taking string ul if none of the above covers the given parameters a constructor for the appropriate class taking a string parameter is used if it is available param m the method to invoke on the bean when the setter is invoked must not be code null code param arg the type of the single argument of the bean s method must not be code null code param attr name the name of the attribute for which the setter is being created return an appropriate attribute setter instance or code null code if no appropriate conversion is available end_comment begin_type begin_specifier end_specifier begin_name attribute setter end_name end_type begin_name create attribute setter end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name method end_name end_type begin_name m end_name end_decl end_param begin_param begin_decl begin_type begin_name class end_name end_type begin_name arg end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name attr name end_name end_decl end_param end_parameter_list begin_block begin_comment use wrappers for primitive classes e g int and end_comment begin_comment integer are treated identically end_comment begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name class end_name end_type begin_name reflected arg end_name begin_init begin_expr begin_call begin_name begin_name primitive type map end_name begin_operator DOT end_operator begin_name contains key end_name end_name begin_argument_list begin_argument begin_expr begin_name arg end_name end_expr end_argument end_argument_list end_call begin_operator QM end_operator begin_operator LPAR end_operator begin_name class end_name begin_operator RPAR end_operator begin_call begin_name begin_name primitive type map end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name arg end_name end_expr end_argument end_argument_list end_call begin_operator DP end_operator begin_name arg end_name end_expr end_init end_decl end_decl_stmt begin_comment simplest case set attribute expects string end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name lang end_name begin_operator DOT end_operator begin_name string end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name equals end_name end_name end_name begin_argument_list begin_argument begin_expr begin_name reflected arg end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator UNP end_operator begin_class begin_super begin_name attribute setter end_name end_super begin_argument_list begin_argument begin_expr begin_name m end_name end_expr end_argument end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name invocation target exception end_name end_expr end_argument begin_argument begin_expr begin_name illegal access exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name begin_name object end_name begin_index end_index end_name begin_operator RPAR end_operator begin_operator LPAR end_operator begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr begin_name value end_name end_expr end_block begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_function end_block end_class end_expr end_return begin_comment char and character get special treatment take the first character end_comment end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name lang end_name begin_operator DOT end_operator begin_name character end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name equals end_name end_name end_name begin_argument_list begin_argument begin_expr begin_name reflected arg end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator UNP end_operator begin_class begin_super begin_name attribute setter end_name end_super begin_argument_list begin_argument begin_expr begin_name m end_name end_expr end_argument end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name invocation target exception end_name end_expr end_argument begin_argument begin_expr begin_name illegal access exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name attr name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name begin_name object end_name begin_index end_index end_name begin_operator RPAR end_operator begin_operator LPAR end_operator begin_operator UNP end_operator begin_name begin_name character end_name begin_index end_index end_name begin_block begin_expr begin_operator UNP end_operator begin_call begin_name character end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_block begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_function end_block end_class end_expr end_return begin_comment boolean and boolean get special treatment because we end_comment begin_comment have a nice method in project end_comment end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name lang end_name begin_operator DOT end_operator begin_name boolean end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name equals end_name end_name end_name begin_argument_list begin_argument begin_expr begin_name reflected arg end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator UNP end_operator begin_class begin_super begin_name attribute setter end_name end_super begin_argument_list begin_argument begin_expr begin_name m end_name end_expr end_argument end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name invocation target exception end_name end_expr end_argument begin_argument begin_expr begin_name illegal access exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name begin_name object end_name begin_index end_index end_name begin_operator RPAR end_operator begin_operator LPAR end_operator begin_operator UNP end_operator begin_name begin_name boolean end_name begin_index end_index end_name begin_block begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name to boolean end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call begin_operator QM end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name true end_name end_name begin_operator DP end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name false end_name end_name end_expr end_block begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_function end_block end_class end_expr end_return begin_comment class doesn t have a string constructor but a decent factory method end_comment end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name lang end_name begin_operator DOT end_operator begin_name class end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name equals end_name end_name end_name begin_argument_list begin_argument begin_expr begin_name reflected arg end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator UNP end_operator begin_class begin_super begin_name attribute setter end_name end_super begin_argument_list begin_argument begin_expr begin_name m end_name end_expr end_argument end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name invocation target exception end_name end_expr end_argument begin_argument begin_expr begin_name illegal access exception end_name end_expr end_argument begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name ce end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name ce end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_function end_block end_class end_expr end_return begin_comment resolve relative paths through project end_comment end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name equals end_name end_name end_name begin_argument_list begin_argument begin_expr begin_name reflected arg end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator UNP end_operator begin_class begin_super begin_name attribute setter end_name end_super begin_argument_list begin_argument begin_expr begin_name m end_name end_expr end_argument end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name invocation target exception end_name end_expr end_argument begin_argument begin_expr begin_name illegal access exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_function end_block end_class end_expr end_return begin_comment enumerated attributes have their own helper class end_comment end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name enumerated attribute end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name is assignable from end_name end_name end_name begin_argument_list begin_argument begin_expr begin_name reflected arg end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator UNP end_operator begin_class begin_super begin_name attribute setter end_name end_super begin_argument_list begin_argument begin_expr begin_name m end_name end_expr end_argument end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name invocation target exception end_name end_expr end_argument begin_argument begin_expr begin_name illegal access exception end_name end_expr end_argument begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name enumerated attribute end_name end_type begin_name ea end_name begin_init begin_expr begin_operator LPAR end_operator begin_name enumerated attribute end_name begin_operator RPAR end_operator begin_call begin_name begin_name reflected arg end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ea end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_name ea end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name instantiation exception end_name end_type begin_name ie end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name ie end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_function end_block end_class end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name reflected arg end_name begin_operator DOT end_operator begin_name get superclass end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name reflected arg end_name begin_operator DOT end_operator begin_name get superclass end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator UNP end_operator begin_class begin_super begin_name attribute setter end_name end_super begin_argument_list begin_argument begin_expr begin_name m end_name end_expr end_argument end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name invocation target exception end_name end_expr end_argument begin_argument begin_expr begin_name illegal access exception end_name end_expr end_argument begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_call begin_name begin_name reflected arg end_name begin_operator DOT end_operator begin_name get method end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name class end_name begin_index end_index end_name begin_block begin_expr begin_name begin_name string end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_block end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name invoke end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_name value end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name invocation target exception end_name end_type begin_name x end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name x end_name begin_operator DOT end_operator begin_name get target exception end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name illegal argument exception end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name value end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name reflected arg end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name x end_name begin_operator DOT end_operator begin_name get target exception end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name x end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name x end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_function end_block end_class end_expr end_return begin_comment worst case look for a public string constructor and use it end_comment begin_comment also supports new whatever project string as for path or reference end_comment begin_comment this is used deliberately for all primitives wrappers other than end_comment begin_comment char and boolean end_comment end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name include project end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name constructor end_name end_type begin_name c end_name end_decl end_decl_stmt begin_try begin_block begin_comment first try with project end_comment begin_expr_stmt begin_expr begin_name c end_name begin_operator EQ end_operator begin_call begin_name begin_name reflected arg end_name begin_operator DOT end_operator begin_name get constructor end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name class end_name begin_index end_index end_name begin_block begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr begin_operator UNP end_operator begin_expr begin_name begin_name string end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name include project end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no such method exception end_name end_type begin_name nme end_name end_decl end_param end_parameter_list begin_block begin_comment ok try without end_comment begin_try begin_block begin_expr_stmt begin_expr begin_name c end_name begin_operator EQ end_operator begin_call begin_name begin_name reflected arg end_name begin_operator DOT end_operator begin_name get constructor end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name class end_name begin_index end_index end_name begin_block begin_expr begin_name begin_name string end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name include project end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no such method exception end_name end_type begin_name nme 2 end_name end_decl end_param end_parameter_list begin_block begin_comment well no matching constructor end_comment begin_return begin_expr end_expr end_return end_block end_catch end_try end_block end_catch end_try begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name final include project end_name begin_init begin_expr begin_name include project end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name constructor end_name end_type begin_name final constructor end_name begin_init begin_expr begin_name c end_name end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_operator UNP end_operator begin_class begin_super begin_name attribute setter end_name end_super begin_argument_list begin_argument begin_expr begin_name m end_name end_expr end_argument end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name invocation target exception end_name end_expr end_argument begin_argument begin_expr begin_name illegal access exception end_name end_expr end_argument begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name object end_name begin_index end_index end_type begin_name args end_name begin_init begin_expr begin_operator LPAR end_operator begin_name final include project end_name begin_operator RPAR end_operator begin_operator QM end_operator begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_name p end_name end_expr begin_expr begin_name value end_name end_expr end_block begin_operator DP end_operator begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_name value end_name end_expr end_block end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name attribute end_name begin_init begin_expr begin_call begin_name begin_name final constructor end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list begin_argument begin_expr begin_name args end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name p end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name set project reference end_name end_name begin_argument_list begin_argument begin_expr begin_name attribute end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_name attribute end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name instantiation exception end_name end_type begin_name ie end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name ie end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_function end_block end_class end_expr end_return end_block end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_block 
 begin_comment longest match comes first end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name compare end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name o 1 end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name o 2 end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name o 1 end_name begin_operator UNP end_operator begin_name string end_name begin_operator UNP end_operator begin_name o 2 end_name begin_operator UNP end_operator begin_name string end_name end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_name o 2 end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_name o 1 end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr end_expr end_return end_block 
 begin_comment add a majority selector entry on the selector list param selector the selector to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add majority end_name begin_parameter_list begin_param begin_decl begin_type begin_name majority selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name append selector end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment handles the start of an element within this one task containers will always use a task handler and all other elements will always use another nested element handler param name the name of the element being started will not be code null code param attrs attributes of the element being started will not be code null code exception sax parse exception if an error occurs when initialising the appropriate child handler end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name start element end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name attribute list end_name end_type begin_name attrs end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name sax parse exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name child end_name begin_operator UNP end_operator begin_name task container end_name end_expr end_condition begin_then begin_block begin_comment taskcontainer nested element can contain other tasks no other end_comment begin_comment nested elements possible end_comment begin_expr_stmt begin_expr begin_operator UNP end_operator begin_call begin_name task handler end_name begin_argument_list begin_argument begin_expr begin_name helper impl end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name task container end_name begin_operator RPAR end_operator begin_name child end_name end_expr end_argument begin_argument begin_expr begin_name child wrapper end_name end_expr end_argument begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name init end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name attrs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_operator UNP end_operator begin_call begin_name nested element handler end_name begin_argument_list begin_argument begin_expr begin_name helper impl end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_name child end_name end_expr end_argument begin_argument begin_expr begin_name child wrapper end_name end_expr end_argument begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name init end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name attrs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment any extra options which are not explicitly supported by this task param extra options the new extra options value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set extra options end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name extra options end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name extra options end_name end_name begin_operator EQ end_operator begin_name extra options end_name end_expr end_expr_stmt end_block 
 begin_comment set the extension looking for param extension set the extension looking for end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add configured extension end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name extension adapter end_name end_type begin_name extension end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name required extension end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name message end_name begin_init begin_expr begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name required extension end_name begin_operator EQ end_operator begin_name extension end_name end_expr end_expr_stmt end_block 
 begin_comment if true recurse on subproject default false param v value to assign to recurse end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set recurse end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name v end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name recurse end_name end_name begin_operator EQ end_operator begin_name v end_name end_expr end_expr_stmt end_block 
 begin_comment perform the binary concatenation end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name binary cat end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource collection end_name end_type begin_name c end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name destination file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file output stream end_name end_type begin_name out end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name in end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_try begin_block begin_expr_stmt begin_expr begin_name out end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file output stream end_name begin_argument_list begin_argument begin_expr begin_name destination file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name destination file end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_expr_stmt begin_expr begin_name in end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name concat resource input stream end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name concat resource input stream end_name begin_operator RPAR end_operator begin_name in end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name set managing component end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name thread end_name end_type begin_name t end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name thread end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name stream pumper end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name start end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name join end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name interrupted exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name join end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name interrupted exception end_name end_type begin_name ee end_name end_decl end_param end_parameter_list begin_block begin_comment empty end_comment end_block end_catch end_try end_block end_catch end_try end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name out end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name destination file end_name end_expr end_argument begin_argument begin_expr begin_name ex end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_then end_if end_block end_finally end_try end_block 
 begin_comment get the class fully qualified name in dot format return the class name in dot format eg java lang object end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get full class name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name class file utils end_name begin_operator DOT end_operator begin_name convert slash name end_name end_name begin_argument_list begin_argument begin_expr begin_name class name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment add a present selector entry on the selector list param selector the selector to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add present end_name begin_parameter_list begin_param begin_decl begin_type begin_name present selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name append selector end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment check style visibility modifier on end_comment begin_comment default constructor end_comment begin_specifier end_specifier begin_name base extend selector end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get command line end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name debug end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name descriptor file end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name v end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name debug end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name keep generated end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name generated files directory end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name descriptor file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name args end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name copy into end_name end_name begin_argument_list begin_argument begin_expr begin_name args end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name args end_name end_expr end_return end_block 
 begin_comment return the nested text element since ant 1 6 1 end_comment begin_type begin_specifier end_specifier begin_name text end_name end_type begin_name get text end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name text end_name end_expr end_return end_block 
 begin_comment creates a new strip line breaks using the passed in reader for instantiation param rdr a reader object providing the underlying stream must not be code null code return a new filter based on this configuration but filtering the specified reader end_comment begin_type begin_specifier end_specifier begin_name reader end_name end_type begin_name chain end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name reader end_name end_type begin_name rdr end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name strip line breaks end_name end_type begin_name new filter end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name strip line breaks end_name begin_argument_list begin_argument begin_expr begin_name rdr end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name new filter end_name begin_operator DOT end_operator begin_name set line breaks end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get line breaks end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name new filter end_name begin_operator DOT end_operator begin_name set initialized end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name new filter end_name end_expr end_return end_block 
 begin_comment spin up required threads with a maximum number active at any given time exception build exception if any of the threads failed end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name spin threads end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name num tasks end_name begin_init begin_expr begin_call begin_name begin_name nested tasks end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name task runnable end_name begin_index end_index end_type begin_name runnables end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name task runnable end_name begin_index begin_expr begin_name num tasks end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name still running end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name timed out end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name thread number end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name nested tasks end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name thread number end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name task end_name end_type begin_name nested task end_name begin_init begin_expr begin_operator LPAR end_operator begin_name task end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name runnables end_name begin_index begin_expr begin_name thread number end_name end_expr end_index end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name task runnable end_name begin_argument_list begin_argument begin_expr begin_name nested task end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name max running end_name begin_init begin_expr begin_name num tasks end_name begin_operator LT end_operator begin_name num threads end_name begin_operator QM end_operator begin_name num tasks end_name begin_operator DP end_operator begin_name num threads end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name task runnable end_name begin_index end_index end_type begin_name running end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name task runnable end_name begin_index begin_expr begin_name max running end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name thread number end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name thread group end_name end_type begin_name group end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name thread group end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name task runnable end_name begin_index end_index end_type begin_name daemons end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name daemon tasks end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name daemon tasks end_name begin_operator DOT end_operator begin_name tasks end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name daemons end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_name begin_name task runnable end_name begin_index begin_expr begin_call begin_name begin_name daemon tasks end_name begin_operator DOT end_operator begin_name tasks end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_expr_stmt end_block end_then end_if begin_synchronized begin_expr begin_name semaphore end_name end_expr begin_block begin_comment when we leave this block we can be sure all data is really end_comment begin_comment stored in main memory before the new threads start the new end_comment begin_comment threads will for sure load the data from main memory end_comment begin_comment end_comment begin_comment this probably is slightly paranoid end_comment end_block end_synchronized begin_synchronized begin_expr begin_name semaphore end_name end_expr begin_block begin_comment start any daemon threads end_comment begin_if begin_condition begin_expr begin_name daemons end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name daemons end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name begin_name daemons end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name task runnable end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name task end_name begin_operator RPAR end_operator begin_call begin_name begin_name daemon tasks end_name begin_operator DOT end_operator begin_name tasks end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name thread end_name end_type begin_name daemon thread end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name thread end_name begin_argument_list begin_argument begin_expr begin_name group end_name end_expr end_argument begin_argument begin_expr begin_name begin_name daemons end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name daemon thread end_name begin_operator DOT end_operator begin_name set daemon end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name daemon thread end_name begin_operator DOT end_operator begin_name start end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if begin_comment now run main threads in limited numbers end_comment begin_comment start initial batch of threads end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name max running end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name begin_name running end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_name begin_name runnables end_name begin_index begin_expr begin_name thread number end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name thread end_name end_type begin_name thread end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name thread end_name begin_argument_list begin_argument begin_expr begin_name group end_name end_expr end_argument begin_argument begin_expr begin_name begin_name running end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name start end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_if begin_condition begin_expr begin_name timeout end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment start the timeout thread end_comment begin_decl_stmt begin_decl begin_type begin_name thread end_name end_type begin_name timeout thread end_name begin_init begin_expr begin_operator UNP end_operator begin_class begin_super begin_name thread end_name end_super begin_argument_list end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name run end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name wait end_name begin_argument_list begin_argument begin_expr begin_name timeout end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_synchronized begin_expr begin_name semaphore end_name end_expr begin_block begin_expr_stmt begin_expr begin_name still running end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name timed out end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name semaphore end_name begin_operator DOT end_operator begin_name notify all end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_synchronized end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name interrupted exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try end_block end_function end_block end_class end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name timeout thread end_name begin_operator DOT end_operator begin_name start end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment now find available running slots for the remaining threads end_comment begin_label begin_name outer end_name end_label begin_while begin_condition begin_expr begin_name thread number end_name begin_operator LT end_operator begin_name num tasks end_name begin_operator UNP end_operator begin_name still running end_name end_expr end_condition begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name max running end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name begin_name running end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name begin_name running end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name is finished end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name running end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_name begin_name runnables end_name begin_index begin_expr begin_name thread number end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name thread end_name end_type begin_name thread end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name thread end_name begin_argument_list begin_argument begin_expr begin_name group end_name end_expr end_argument begin_argument begin_expr begin_name begin_name running end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name start end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment continue on outer while loop to get another end_comment begin_comment available slot end_comment begin_continue end_continue end_block end_then end_if end_block end_for begin_comment if we got here all slots in use so sleep until end_comment begin_comment something happens end_comment begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name semaphore end_name begin_operator DOT end_operator begin_name wait end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name interrupted exception end_name end_type begin_name ie end_name end_decl end_param end_parameter_list begin_block begin_comment doesn t java know interruptions are rude end_comment begin_comment just pretend it didn t happen and go about out business end_comment begin_comment sheesh end_comment end_block end_catch end_try end_block end_while begin_comment are all threads finished end_comment begin_label begin_name outer 2 end_name end_label begin_while begin_condition begin_expr begin_name still running end_name end_expr end_condition begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name max running end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name begin_name running end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_name begin_name running end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name is finished end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment system out println thread i is still alive end_comment begin_comment still running wait for it end_comment begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name semaphore end_name begin_operator DOT end_operator begin_name wait end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name interrupted exception end_name end_type begin_name ie end_name end_decl end_param end_parameter_list begin_block begin_comment who would interrupt me at a time like this end_comment end_block end_catch end_try begin_continue end_continue end_block end_then end_if end_block end_for begin_expr_stmt begin_expr begin_name still running end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_while end_block end_synchronized begin_if begin_condition begin_expr begin_name timed out end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment now did any of the threads throw an exception end_comment begin_expr_stmt begin_expr begin_name exception message end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name num exceptions end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name first exception end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name first location end_name begin_operator EQ end_operator begin_name begin_name location end_name begin_operator DOT end_operator begin_name unknown location end_name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name process exceptions end_name begin_argument_list begin_argument begin_expr begin_name daemons end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name process exceptions end_name begin_argument_list begin_argument begin_expr begin_name runnables end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name num exceptions end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name first exception end_name begin_operator UNP end_operator begin_name build exception end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator LPAR end_operator begin_name build exception end_name begin_operator RPAR end_operator begin_name first exception end_name end_expr end_throw end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name first exception end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_name num exceptions end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name exception message end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name first location end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_else end_if end_block 
 begin_comment get the userid return the userid end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get user id end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name user id end_name end_expr end_return end_block 
 begin_comment get the value of add uncontrolled return value of add uncontrolled end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is add uncontrolled end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name add uncontrolled end_name end_name end_expr end_return end_block 
 begin_comment sets the comment string param comment the comment string end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set comment end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name comment end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m comment end_name begin_operator EQ end_operator begin_name comment end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name task finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name action performed end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor which just delegates to the superconstructor param parent handler the handler which should be restored to the parser at the end of the element must not be code null code end_comment begin_specifier end_specifier begin_name project handler end_name begin_parameter_list begin_param begin_decl begin_type begin_name project helper impl end_name end_type begin_name helper impl end_name end_decl end_param begin_param begin_decl begin_type begin_name document handler end_name end_type begin_name parent handler end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name helper impl end_name end_expr end_argument begin_argument begin_expr begin_name parent handler end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the stylesheet file param stylesheet a link org apache tools ant types resource value throws exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set stylesheet end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource end_name end_type begin_name stylesheet end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name stylesheet end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment resetting the stylesheet reset transformer end_comment begin_expr_stmt begin_expr begin_name transformer end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_comment do we need to reset templates as well end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name stylesheet end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name stylesheet end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name stylesheet end_name begin_operator DOT end_operator begin_name get last modified end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name templates mod time end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name templates end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name stylesheet end_name end_name begin_operator EQ end_operator begin_name stylesheet end_name end_expr end_expr_stmt end_block 
 begin_comment determines if the os on which ant is executing matches the given os name param name the os name to check for return true if the os matches since 1 7 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name is name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name is os end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment get the location of a class stolen from axis webapps happyaxis jsp param clazz return the jar file or path where a class was found or null end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get class location end_name begin_parameter_list begin_param begin_decl begin_type begin_name class end_name end_type begin_name clazz end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_call begin_name begin_name loader utils end_name begin_operator DOT end_operator begin_name get class source end_name end_name begin_argument_list begin_argument begin_expr begin_name clazz end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_name f end_name begin_operator EQT end_operator begin_operator QM end_operator begin_operator DP end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment sets whether local properties need to be qualified explicitly using code this code valid true values are on or true anything else sets the flag to false the default value is false param strictprops a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set strictprops end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name strictprops end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name strictprops end_name end_name begin_operator EQ end_operator begin_name strictprops end_name end_expr end_expr_stmt end_block 
 begin_comment this method sets which is the source tlb file this is an operation which is required to have been performed param src file the source file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set src file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name src file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name src file end_name end_name begin_operator EQ end_operator begin_name src file end_name end_expr end_expr_stmt end_block 
 begin_comment if true conditionally download a file based on the timestamp of the local copy p in this situation the if modified since header is set so that the file is only fetched if it is newer than the local file or there is no local file this flag is only valid on http connections it is ignored in other cases when the flag is set the local copy of the downloaded file will also have its timestamp set to the remote file time p p note that remote files of date 1 1 1970 gmt are treated as no timestamp and web servers often serve files with a timestamp in the future by replacing their timestamp with that of the current time also inter computer clock differences can cause no end of grief p param v true to enable file time fetching end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set use timestamp end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name v end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name use timestamp end_name begin_operator EQ end_operator begin_name v end_name end_expr end_expr_stmt end_block 
 begin_comment gets the extra options attribute return the extra options value end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get extra options end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name extra options end_name end_name end_expr end_return end_block 
 begin_comment configure the given object from this unknown element param real object the real object this unknown element is representing end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name configure end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name real object end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name real thing end_name begin_operator EQ end_operator begin_name real object end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name get wrapper end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set proxy end_name begin_argument_list begin_argument begin_expr begin_name real thing end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name task end_name end_type begin_name task end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name real thing end_name begin_operator UNP end_operator begin_name task end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name task end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name task end_name begin_operator RPAR end_operator begin_name real thing end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name set runtime configurable wrapper end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get wrapper end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment for script example that modifies id ed tasks in other end_comment begin_comment targets to work very ugly end_comment begin_comment the reference is replaced by runtime configurable end_comment begin_if begin_condition begin_expr begin_call begin_name get wrapper end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get id end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name get owning target end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace child end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name task end_name begin_operator RPAR end_operator begin_name real thing end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_comment configure attributes of the object and it s children if it is end_comment begin_comment a task container defer the configuration till the task container end_comment begin_comment attempts to use the task end_comment begin_if begin_condition begin_expr begin_name task end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name maybe configure end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name get wrapper end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name maybe configure end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name handle children end_name begin_argument_list begin_argument begin_expr begin_name real thing end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get wrapper end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns the millisecond value the selector is set for return the millisecond value end_comment begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name get millis end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name date time end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name validate end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name millis end_name end_expr end_return end_block 
 begin_comment set a property unless it is already defined as a user property in which case the method returns silently param name the name of the property must not be code null code param value the property value must not be code null code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set property internal end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name property helper end_name end_type begin_name ph end_name begin_init begin_expr begin_call begin_name begin_name property helper end_name begin_operator DOT end_operator begin_name get property helper end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ph end_name begin_operator DOT end_operator begin_name set property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the next line from the input param in the input reader return the line excluding r or n unless includedelims is set exception io exception if an error occurs reading end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get token end_name begin_parameter_list begin_param begin_decl begin_type begin_name reader end_name end_type begin_name in end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name ch end_name begin_init begin_expr begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name pushed end_name begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name ch end_name begin_operator EQ end_operator begin_name pushed end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name pushed end_name begin_operator EQ end_operator begin_operator MINUS end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name ch end_name begin_operator EQ end_operator begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_name ch end_name begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name line end end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name line end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name state end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_name ch end_name begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_block begin_if begin_condition begin_expr begin_name state end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name ch end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name state end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name ch end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name line end end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_break end_break end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name char end_name begin_operator RPAR end_operator begin_name ch end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name state end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name ch end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name line end end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name pushed end_name begin_operator EQ end_operator begin_name ch end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name line end end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_else end_if begin_break end_break end_block end_else end_if begin_expr_stmt begin_expr begin_name ch end_name begin_operator EQ end_operator begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_if begin_condition begin_expr begin_name ch end_name begin_operator EQT end_operator begin_operator MINUS end_operator begin_operator UNP end_operator begin_name state end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name line end end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name include delims end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name line end end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test get extension points end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name list end_name end_type begin_name extensions end_name begin_init begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name get extension points end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name adders end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name adders end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name extensions end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment this original test assumed something about the order of end_comment begin_comment add number and add configured map returned by reflection end_comment begin_comment unfortunately the assumption doesn t hold for all v ms end_comment begin_comment failed on mac os x using jdk 1 4 2 05 and the possible end_comment begin_comment combinatorics are too hard to check we really only want end_comment begin_comment to ensure that the more derived hashtable can be found end_comment begin_comment before map end_comment begin_comment assert ext method extensions get 0 add number class end_comment begin_comment new integer 2 new integer 3 end_comment begin_comment add configured hashtable should come before add configured map end_comment begin_expr_stmt begin_expr begin_call begin_name assert ext method end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name extensions end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name adders end_name begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name hashtable end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name make table end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name make table end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert ext method end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name extensions end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name adders end_name begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name map end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name hash map end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name make table end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a tabs to spaces filter param tabs to spaces a code tabs to spaces code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add tabs to spaces end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name tabs to spaces end_name end_type begin_name tabs to spaces end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name filter readers end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name tabs to spaces end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment shall we assume jdk 1 1 command line switches return true if jdk 1 1 since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name assume java 11 end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get compiler version end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment set the name of the parameter param name the name of parameter end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set name end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name name end_name end_name begin_operator EQ end_operator begin_name name end_name end_expr end_expr_stmt end_block 
 begin_comment get the algorithm type to use return the enumerated algorithm type end_comment begin_type begin_specifier end_specifier begin_name algorithm end_name end_type begin_name get algorithm end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name algorithm end_name end_expr end_return end_block 
 begin_comment set the timestamp attribute param timestamp the value to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set internal file time stamp end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name current mod updated end_name end_type begin_name timestamp end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name timestamp end_name end_name begin_operator EQ end_operator begin_name timestamp end_name end_expr end_expr_stmt end_block 
 begin_comment set the provider classname param class name the classname of a provider of this service end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set provider end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name class name end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name provider end_name end_type begin_name provider end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name provider end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name provider end_name begin_operator DOT end_operator begin_name set class name end_name end_name begin_argument_list begin_argument begin_expr begin_name class name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name provider list end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name provider end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment whether to match should be multiline param b the value to set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set multiline end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name multi line end_name begin_operator EQ end_operator begin_name b end_name end_expr end_expr_stmt end_block 
 begin_comment enforce strict language semantics param flag on off flag end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set option strict end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name flag end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name option strict end_name begin_operator EQ end_operator begin_name flag end_name end_expr end_expr_stmt end_block 
 begin_comment populate data from this array as if it was in local file data param data an array of bytes param offset the start offset param length the number of bytes in the array from offset since 1 1 throws zip exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name parse from local file data end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name data end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name offset end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name length end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name zip exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name given checksum end_name begin_init begin_expr begin_call begin_name begin_name zip long end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list begin_argument begin_expr begin_name data end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name tmp end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name byte end_name begin_index begin_expr begin_name length end_name begin_operator MINUS end_operator end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_name data end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name tmp end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name length end_name begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name crc end_name begin_operator DOT end_operator begin_name reset end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name crc end_name begin_operator DOT end_operator begin_name update end_name end_name begin_argument_list begin_argument begin_expr begin_name tmp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name real checksum end_name begin_init begin_expr begin_call begin_name begin_name crc end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name given checksum end_name begin_operator UNP end_operator begin_name real checksum end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name zip exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name long end_name begin_operator DOT end_operator begin_name to hex string end_name end_name begin_argument_list begin_argument begin_expr begin_name given checksum end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name long end_name begin_operator DOT end_operator begin_name to hex string end_name end_name begin_argument_list begin_argument begin_expr begin_name real checksum end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name new mode end_name begin_init begin_expr begin_call begin_name begin_name zip short end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list begin_argument begin_expr begin_name tmp end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name link array end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name byte end_name begin_index begin_expr begin_operator LPAR end_operator begin_name int end_name begin_operator RPAR end_operator begin_call begin_name begin_name zip long end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list begin_argument begin_expr begin_name tmp end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name uid end_name begin_operator EQ end_operator begin_call begin_name begin_name zip short end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list begin_argument begin_expr begin_name tmp end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name gid end_name begin_operator EQ end_operator begin_call begin_name begin_name zip short end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list begin_argument begin_expr begin_name tmp end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name begin_name link array end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name link end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_name tmp end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name link array end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name link array end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name link end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_name link array end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name set directory end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name new mode end_name begin_operator UNP end_operator begin_name dir flag end_name begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set mode end_name begin_argument_list begin_argument begin_expr begin_name new mode end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment fulfill the resource collection interface return an iterator of resources since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name iterator end_name end_type begin_name iterator end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name get properties end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name property names end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_operator UNP end_operator begin_class begin_super begin_name iterator end_name end_super begin_argument_list end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name has next end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_function begin_function begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name next end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name property resource end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block end_function begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name remove end_name begin_parameter_list end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name unsupported operation exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_function end_block end_class end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment creates an empty class loader the classloader should be configured with path elements to specify where the loader is to look for classes param parent the parent classloader to which unsatisfied loading attempts are delegated may be code null code in which case the classloader which loaded this class is used as the parent param parent first if code true code indicates that the parent classloader should be consulted before trying to load the a class through this loader end_comment begin_specifier end_specifier begin_name ant class loader end_name begin_parameter_list begin_param begin_decl begin_type begin_name class loader end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name parent first end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set parent end_name begin_argument_list begin_argument begin_expr begin_name parent end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name project end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name parent first end_name end_name begin_operator EQ end_operator begin_name parent first end_name end_expr end_expr_stmt end_block 
 begin_comment test if two specifications are equal except for their sections param specification one specificaiton param other the ohter specification return true if two specifications are equal except for their sections else false end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name is equal end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name specification end_name end_type begin_name specification end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name specification end_name end_type begin_name other end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name specification end_name begin_operator DOT end_operator begin_name get specification title end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name other end_name begin_operator DOT end_operator begin_name get specification title end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name specification end_name begin_operator DOT end_operator begin_name get specification version end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name is equal end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name other end_name begin_operator DOT end_operator begin_name get specification version end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name specification end_name begin_operator DOT end_operator begin_name get specification vendor end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name other end_name begin_operator DOT end_operator begin_name get specification vendor end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name specification end_name begin_operator DOT end_operator begin_name get implementation title end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name other end_name begin_operator DOT end_operator begin_name get implementation title end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name specification end_name begin_operator DOT end_operator begin_name get implementation version end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name other end_name begin_operator DOT end_operator begin_name get implementation version end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name specification end_name begin_operator DOT end_operator begin_name get implementation vendor end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name other end_name begin_operator DOT end_operator begin_name get implementation vendor end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test dont add newline 2 end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name content equals end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name project path end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name project path end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 1 end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a root class the root classes are used to drive the determination of dependency information the analyzer will start at the root classes and add dependencies from there param class name the name of the class in java dot notation end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add root class end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name class name end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name class name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name root classes end_name begin_operator DOT end_operator begin_name contains end_name end_name begin_argument_list begin_argument begin_expr begin_name class name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name root classes end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name class name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_specifier end_specifier begin_name protected jar methods test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test custom comparator end_name begin_parameter_list end_parameter_list begin_block begin_comment same logic as on algorithm no testcases created end_comment end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name task started end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment constructor using a fileset arguement param fileset the fileset to use end_comment begin_specifier end_specifier begin_name tar file set end_name begin_parameter_list begin_param begin_decl begin_type begin_name file set end_name end_type begin_name fileset end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name fileset end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment this end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get compile options as array end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name options end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name options end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name binary end_name begin_operator QM end_operator begin_operator DP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name options end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name comments end_name begin_operator QM end_operator begin_operator DP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name options end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name compile end_name begin_operator QM end_operator begin_operator DP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name options end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name compact end_name begin_operator QM end_operator begin_operator DP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name options end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name console end_name begin_operator QM end_operator begin_operator DP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name options end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name crossref end_name begin_operator QM end_operator begin_operator DP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name options end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name decimal end_name begin_operator QM end_operator begin_operator DP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name options end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name diag end_name begin_operator QM end_operator begin_operator DP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name options end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name explicit end_name begin_operator QM end_operator begin_operator DP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name options end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name format end_name begin_operator QM end_operator begin_operator DP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name options end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name keep end_name begin_operator QM end_operator begin_operator DP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name options end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name logo end_name begin_operator QM end_operator begin_operator DP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name options end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name replace end_name begin_operator QM end_operator begin_operator DP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name options end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name savelog end_name begin_operator QM end_operator begin_operator DP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name options end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name sourcedir end_name begin_operator QM end_operator begin_operator DP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name options end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name strictargs end_name begin_operator QM end_operator begin_operator DP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name options end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name strictassign end_name begin_operator QM end_operator begin_operator DP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name options end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name strictcase end_name begin_operator QM end_operator begin_operator DP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name options end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name strictimport end_name begin_operator QM end_operator begin_operator DP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name options end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name strictprops end_name begin_operator QM end_operator begin_operator DP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name options end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name strictsignal end_name begin_operator QM end_operator begin_operator DP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name options end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name symbols end_name begin_operator QM end_operator begin_operator DP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name options end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name time end_name begin_operator QM end_operator begin_operator DP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name options end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name trace end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name options end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name utf 8 end_name begin_operator QM end_operator begin_operator DP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name options end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name verbose end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name results end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_call begin_name begin_name options end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name options end_name begin_operator DOT end_operator begin_name copy into end_name end_name begin_argument_list begin_argument begin_expr begin_name results end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name results end_name end_expr end_return end_block 
 begin_comment add a draw image operation to the chain draw operation data type objects can be nested inside the draw object param instr the draw operation to add to the chain see org apache tools ant types optional image draw see org apache tools ant types optional image draw operation end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add draw end_name begin_parameter_list begin_param begin_decl begin_type begin_name draw end_name end_type begin_name instr end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name instructions end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name instr end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test multiple assertions end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the code force code attribute to the given value param force if true it overwrites files in the target directory by default it set to false as a safeguard note that if the target directory does not exist this setting has no effect see get force end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set force end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name force end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name force end_name end_name begin_operator EQ end_operator begin_name force end_name end_expr end_expr_stmt end_block 
 begin_comment check style method name check off bc end_comment begin_comment protected function to allow subclasses to set the label or not sets the star team label param label name of the star team label to be set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set label end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name label end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name label end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name label end_name begin_operator EQ end_operator begin_call begin_name begin_name label end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name label end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name label end_name end_name begin_operator EQ end_operator begin_name label end_name end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block 
 begin_comment add a resource collection param rc a resource collection since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource collection end_name end_type begin_name rc end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name resources specified end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name resources end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name rc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment end_comment begin_comment accessor methods end_comment begin_comment sets the name of the file to log to and the name of the recorder entry param fname file name of logfile end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name fname end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name filename end_name begin_operator EQ end_operator begin_name fname end_name end_expr end_expr_stmt end_block 
 begin_comment return true if value is warn end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is warn mode end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name warn end_name begin_operator DOT end_operator begin_name equals ignore case end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment set a single source file to copy param file the file to copy end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name file end_name end_name begin_operator EQ end_operator begin_name file end_name end_expr end_expr_stmt end_block 
 begin_comment the substitution pattern to place in the file s in place of the regular expression required if no nested lt substitution gt is used param replace the replace attribute end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set replace end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name replace end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name subs end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name subs end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name substitution end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name subs end_name begin_operator DOT end_operator begin_name set expression end_name end_name begin_argument_list begin_argument begin_expr begin_name replace end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment name of signed jar file optional param signedjar the name of the signed jar file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set signedjar end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name signedjar end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name signedjar end_name end_name begin_operator EQ end_operator begin_name signedjar end_name end_expr end_expr_stmt end_block 
 begin_comment set the property name whose value should be set to the error of the process param error property property name since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set error property end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name error property end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name set error property end_name end_name begin_argument_list begin_argument begin_expr begin_name error property end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name incompatible with spawn end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 4 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name jar file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name temp jar end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name jar file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment override of base class abstract function creates an appropriately configured view for checkouts either the current view or a view from this label or the raw view itself in the case of a revision label param raw the unconfigured code view code return the snapshot code view code appropriately configured exception build exception on error end_comment begin_type begin_specifier end_specifier begin_name view end_name end_type begin_name create snapshot view end_name begin_parameter_list begin_param begin_decl begin_type begin_name view end_name end_type begin_name raw end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name label id end_name begin_init begin_expr begin_call begin_name get label id end_name begin_argument_list begin_argument begin_expr begin_name raw end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment if a label has been supplied and it is a view label use it end_comment begin_comment to configure the view end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name is using view label end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name view end_name begin_argument_list begin_argument begin_expr begin_name raw end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name view configuration end_name begin_operator DOT end_operator begin_name create from label end_name end_name begin_argument_list begin_argument begin_expr begin_name label id end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return begin_comment if a label has been supplied and it is a revision label use the raw end_comment begin_comment the view as the snapshot end_comment end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name is using revision label end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name raw end_name end_expr end_return end_block end_then end_if end_else end_if begin_comment if a date has been supplied use a view configured to the date end_comment begin_decl_stmt begin_decl begin_type begin_name view end_name end_type begin_name view end_name begin_init begin_expr begin_call begin_name get view configured by date end_name begin_argument_list begin_argument begin_expr begin_name raw end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name view end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_name view end_name end_expr end_return begin_comment otherwise use this view configured as the tip end_comment end_block end_then begin_else begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name view end_name begin_argument_list begin_argument begin_expr begin_name raw end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name view configuration end_name begin_operator DOT end_operator begin_name create tip end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name log end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name message end_name end_decl end_param end_parameter_list begin_block begin_comment do nothing end_comment end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no file without write end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name los end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_name f end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test target with default end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name set new property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name javac end_name begin_operator DOT end_operator begin_name get target end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment pr 38370 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test pathelement location path end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment get the vendor of the extensions implementation return the vendor of the extensions implementation end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get implementation vendor end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name implementation vendor end_name end_expr end_return end_block 
 begin_comment override of base class abstract function creates an appropriately configured view for checkins this is always the current or tip view param raw the unconfigured code view code return the snapshot code view code appropriately configured end_comment begin_type begin_specifier end_specifier begin_name view end_name end_type begin_name create snapshot view end_name begin_parameter_list begin_param begin_decl begin_type begin_name view end_name end_type begin_name raw end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name view end_name begin_argument_list begin_argument begin_expr begin_name raw end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name view configuration end_name begin_operator DOT end_operator begin_name create tip end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name nested creator end_name end_type begin_name get nested creator end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name parent uri end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name element name end_name end_decl end_param begin_param begin_decl begin_type begin_name unknown element end_name end_type begin_name child end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name uri end_name begin_init begin_expr begin_call begin_name begin_name project helper end_name begin_operator DOT end_operator begin_name extract uri from component name end_name end_name begin_argument_list begin_argument begin_expr begin_name element name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_call begin_name begin_name project helper end_name begin_operator DOT end_operator begin_name extract name from component name end_name end_name begin_argument_list begin_argument begin_expr begin_name element name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name uri end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name project helper end_name begin_operator DOT end_operator begin_name ant core uri end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name uri end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name parent uri end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name project helper end_name begin_operator DOT end_operator begin_name ant core uri end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name parent uri end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name nested creator end_name end_type begin_name nc end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name uri end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name parent uri end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name uri end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name nc end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name nested creator end_name begin_operator RPAR end_operator begin_call begin_name begin_name nested creators end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name to lower case end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name nc end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name nc end_name begin_operator EQ end_operator begin_call begin_name create add type creator end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_name element name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name nc end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name parent end_name begin_operator UNP end_operator begin_name dynamic element ns end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name dynamic element ns end_name end_type begin_name dc end_name begin_init begin_expr begin_operator LPAR end_operator begin_name dynamic element ns end_name begin_operator RPAR end_operator begin_name parent end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name q name end_name begin_init begin_expr begin_operator LPAR end_operator begin_name child end_name begin_operator EQT end_operator begin_operator QM end_operator begin_name name end_name begin_operator DP end_operator begin_call begin_name begin_name child end_name begin_operator DOT end_operator begin_name get q name end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name nested element end_name begin_init begin_expr begin_call begin_name begin_name dc end_name begin_operator DOT end_operator begin_name create dynamic element end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name child end_name begin_operator EQT end_operator begin_operator QM end_operator begin_operator DP end_operator begin_call begin_name begin_name child end_name begin_operator DOT end_operator begin_name get namespace end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name q name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name nested element end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name nc end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_class begin_super begin_name nested creator end_name end_super begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list begin_block begin_function begin_type begin_name object end_name end_type begin_name create end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name ignore end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_name nested element end_name end_expr end_return end_block end_function end_block end_class end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_if begin_condition begin_expr begin_name nc end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name parent end_name begin_operator UNP end_operator begin_name dynamic element end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name dynamic element end_name end_type begin_name dc end_name begin_init begin_expr begin_operator LPAR end_operator begin_name dynamic element end_name begin_operator RPAR end_operator begin_name parent end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name nested element end_name begin_init begin_expr begin_call begin_name begin_name dc end_name begin_operator DOT end_operator begin_name create dynamic element end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name to lower case end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name nested element end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name nc end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_class begin_super begin_name nested creator end_name end_super begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list begin_block begin_function begin_type begin_name object end_name end_type begin_name create end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name ignore end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_name nested element end_name end_expr end_return end_block end_function end_block end_class end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_if begin_condition begin_expr begin_name nc end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name throw not supported end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_name element name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name nc end_name end_expr end_return end_block 
 begin_comment line format is formatter classname pathname end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name create and store formatter end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name line end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name formatter element end_name end_type begin_name fe end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name formatter element end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name pos end_name begin_init begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name pos end_name begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name fe end_name begin_operator DOT end_operator begin_name set classname end_name end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fe end_name begin_operator DOT end_operator begin_name set use file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name fe end_name begin_operator DOT end_operator begin_name set classname end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name pos end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fe end_name begin_operator DOT end_operator begin_name set use file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name multiple tests end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name fe end_name begin_operator DOT end_operator begin_name set outfile end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name pos end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name f name end_name begin_init begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name ignored file name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name f name end_name begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name fe end_name begin_operator DOT end_operator begin_name set extension end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name f name end_name begin_operator PLUS end_operator begin_call begin_name begin_name ignored file name end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name from cmd line end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name fe end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name register test case end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name test case end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name crash file end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name file writer end_name end_type begin_name out end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name out end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file writer end_name begin_argument_list begin_argument begin_expr begin_name crash file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name test case end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_if begin_condition begin_expr begin_name out end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment ignored end_comment end_block end_catch end_try end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test get follow symlinks false end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name supports symlinks end_name end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name login suceeded end_name end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name change remote dir end_name begin_argument_list begin_argument begin_expr begin_name remote tmp dir end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file set end_name end_type begin_name fs destination end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file set end_name begin_operator RPAR end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds destination end_name begin_init begin_expr begin_call begin_name begin_name fs destination end_name begin_operator DOT end_operator begin_name get directory scanner end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds destination end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name compare files end_name begin_argument_list begin_argument begin_expr begin_name ds destination end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block end_block end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the character encoding param encoding the encoding of the input stream and unless outputencoding is set the outputstream end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set encoding end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name encoding end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name encoding end_name end_name begin_operator EQ end_operator begin_name encoding end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name output encoding end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name output encoding end_name begin_operator EQ end_operator begin_name encoding end_name end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment check style visibility modifier on end_comment begin_comment sole constructor end_comment begin_specifier end_specifier begin_name project component end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment set the class to resolve entities during the transformation param a resolver the resolver class end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set entity resolver end_name begin_parameter_list begin_param begin_decl begin_type begin_name entity resolver end_name end_type begin_name a resolver end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name entity resolver end_name begin_operator EQ end_operator begin_name a resolver end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test test gzip tar task end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name io exception end_name end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name test logo extraction end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the used class loader if you invoke this selector by api e g inside some testcases the selector will use a different classloader for loading the interface implementations than the caller therefore you will get a class cast exception if you get the implementations from the selector and cast them param loader the class loader to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set class loader end_name begin_parameter_list begin_param begin_decl begin_type begin_name class loader end_name end_type begin_name loader end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name my class loader end_name begin_operator EQ end_operator begin_name loader end_name end_expr end_expr_stmt end_block 
 begin_comment constructor for the msvss test object param s test name end_comment begin_specifier end_specifier begin_name msvss test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment did an error happen during last parsing return did an error happen during last parsing end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get failure end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name failed end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name source end_name end_type begin_name resolve end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name href end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name base end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name transformer exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name sax source end_name end_type begin_name result end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name input source end_name end_type begin_name source end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name process external catalogs end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name resource location end_name end_type begin_name matching entry end_name begin_init begin_expr begin_call begin_name find matching entry end_name begin_argument_list begin_argument begin_expr begin_name href end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name matching entry end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name matching entry end_name begin_operator DOT end_operator begin_name get public id end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name matching entry end_name begin_operator DOT end_operator begin_name get location end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment end_comment begin_comment use the passed in base in preference to the base end_comment begin_comment from matching entry which is either null or the end_comment begin_comment directory in which the external catalog file from end_comment begin_comment which it was obtained is located we make a copy end_comment begin_comment so matching entry s original base is untouched of end_comment begin_comment course if there is no base no need to make a end_comment begin_comment copy end_comment begin_comment end_comment begin_comment this is the standard behavior as per my reading of end_comment begin_comment the jaxp and xml catalog specs cks 11 7 2002 end_comment begin_comment end_comment begin_decl_stmt begin_decl begin_type begin_name resource location end_name end_type begin_name entry copy end_name begin_init begin_expr begin_name matching entry end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name base end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name url end_name end_type begin_name base url end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name url end_name begin_argument_list begin_argument begin_expr begin_name base end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name entry copy end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name resource location end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name entry copy end_name begin_operator DOT end_operator begin_name set base end_name end_name begin_argument_list begin_argument begin_expr begin_name base url end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name malformed url exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name entry copy end_name begin_operator DOT end_operator begin_name set public id end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name matching entry end_name begin_operator DOT end_operator begin_name get public id end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name entry copy end_name begin_operator DOT end_operator begin_name set location end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name matching entry end_name begin_operator DOT end_operator begin_name get location end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name source end_name begin_operator EQ end_operator begin_call begin_name filesystem lookup end_name begin_argument_list begin_argument begin_expr begin_name entry copy end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name source end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name source end_name begin_operator EQ end_operator begin_call begin_name classpath lookup end_name begin_argument_list begin_argument begin_expr begin_name entry copy end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name source end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name sax source end_name begin_argument_list begin_argument begin_expr begin_name source end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_try begin_block begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name sax source end_name begin_operator RPAR end_operator begin_call begin_name begin_name resolve end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_name resolver impl end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_name href end_name end_expr begin_operator UNP end_operator begin_expr begin_name base end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name ex end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_else end_if end_block end_then begin_else begin_block begin_comment end_comment begin_comment we didn t match a resource location but since we end_comment begin_comment only support public and uri entry types internally end_comment begin_comment it is still possible that there is another entry in end_comment begin_comment an external catalog that will match we call end_comment begin_comment apache resolver s resolve entity method to cover end_comment begin_comment this possibility end_comment begin_comment end_comment begin_try begin_block begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name sax source end_name begin_operator RPAR end_operator begin_call begin_name begin_name resolve end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_name resolver impl end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_name href end_name end_expr begin_operator UNP end_operator begin_expr begin_name base end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name ex end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_else end_if begin_return begin_expr begin_name result end_name end_expr end_return end_block 
 begin_comment set the name of the permission param a name the name of the permission end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name a name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name name end_name begin_operator EQ end_operator begin_call begin_name begin_name a name end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment specifies the name of the promotiongroup argument param w string end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set promotiongroup end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name w end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name promotiongroup end_name begin_operator EQ end_operator begin_name w end_name end_expr end_expr_stmt end_block 
 begin_comment sets whether variables must be declared explicitly before use valid true values are on or true anything else sets the flag to false the default value is false param explicit a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set explicit end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name explicit end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name explicit end_name end_name begin_operator EQ end_operator begin_name explicit end_name end_expr end_expr_stmt end_block 
 begin_comment add an extended selector entry on the selector list param selector the selector to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add custom end_name begin_parameter_list begin_param begin_decl begin_type begin_name extend selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name append selector end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment a debug to string this gets a comma separated list of key value pairs for the properties in the set the output order is sorted according to the keys i natural order i return a string rep of this object end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name b end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name tree map end_name end_type begin_name sorted end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name tree map end_name begin_argument_list begin_argument begin_expr begin_call begin_name get properties end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name sorted end_name begin_operator DOT end_operator begin_name entry set end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name map end_name begin_operator DOT end_operator begin_name entry end_name end_name end_type begin_name e end_name begin_init begin_expr begin_operator LPAR end_operator begin_name begin_name map end_name begin_operator DOT end_operator begin_name entry end_name end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name b end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name b end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name b end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get key end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name b end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name b end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_call begin_name begin_name b end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment set the string to be used as text param str the string to be used end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set string end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name str end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name str text end_name begin_operator EQ end_operator begin_name str end_name end_expr end_expr_stmt end_block 
 begin_comment delegates to a comparison of names param other the object to compare to return a negative integer zero or a positive integer as this resource is less than equal to or greater than the specified resource end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name compare to end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name other end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name other end_name begin_operator EQT end_operator begin_name this end_name end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name other end_name begin_operator UNP end_operator begin_name compressed resource end_name end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name get resource end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name compare to end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name compressed resource end_name begin_operator RPAR end_operator begin_name other end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get resource end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr begin_call begin_name get resource end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name compare to end_name begin_argument_list begin_argument begin_expr begin_name other end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment sets the bootclasspath that will be used to compile the classes against param bootclasspath a path to use as a boot class path may be more than one end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set bootclasspath end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name bootclasspath end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name bootclasspath end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name bootclasspath end_name end_name begin_operator EQ end_operator begin_name bootclasspath end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name bootclasspath end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name bootclasspath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment end_comment begin_comment other methods end_comment begin_comment end_comment begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process descriptor end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name a descriptor name end_name end_decl end_param begin_param begin_decl begin_type begin_name sax parser end_name end_type begin_name sax parser end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name descriptor name end_name begin_operator EQ end_operator begin_name a descriptor name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name descriptor name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name process descriptor end_name end_name begin_argument_list begin_argument begin_expr begin_name descriptor name end_name end_expr end_argument begin_argument begin_expr begin_name sax parser end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name outputdir end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment the method delete on exit do not work because the directory is not empty end_comment begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name outputdir end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name delete all files end_name begin_argument_list begin_argument begin_expr begin_name outputdir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment gets the code password code attribute return the password given by the user see set password string password end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get password end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name password end_name end_expr end_return end_block 
 begin_comment the timestamp of the build that will be stored with the label required must be formatted code yyyy m mdd h hmmss code param lastbuild the timestamp of the last build throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set last build end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name lastbuild end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name date end_name end_type begin_name last build time end_name begin_init begin_expr begin_call begin_name begin_name date format end_name begin_operator DOT end_operator begin_name parse end_name end_name begin_argument_list begin_argument begin_expr begin_name lastbuild end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name last build end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name ole date end_name begin_argument_list begin_argument begin_expr begin_name last build time end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name parse exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name lastbuild end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment handles output sent to system out by this task or its real task param output the output to log should not be code null code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name handle flush end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name output end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name real thing end_name begin_operator UNP end_operator begin_name task end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name task end_name begin_operator RPAR end_operator begin_name real thing end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name handle flush end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name handle flush end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_type begin_name object end_name end_type begin_name create end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name ant type definition end_name end_type begin_name def end_name begin_init begin_expr begin_call begin_name get definition end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_operator LPAR end_operator begin_name def end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator DP end_operator begin_call begin_name begin_name def end_name begin_operator DOT end_operator begin_name create end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test trim string condition end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment run the definition exception build exception if an error occurs end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name class loader end_name end_type begin_name al end_name begin_init begin_expr begin_call begin_name create loader end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name definer set end_name end_expr end_condition begin_then begin_block begin_comment we arent fully defined yet this is an error unless end_comment begin_comment we are in an antlib in which case the resource name is determined end_comment begin_comment automatically end_comment begin_comment nb ur is in the ant core package will be at this point end_comment begin_if begin_condition begin_expr begin_call begin_name get uri end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get task name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name get uri end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name starts with end_name begin_argument_list begin_argument begin_expr begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name antlib prefix end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment convert the uri to a resource end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name uri 1 end_name begin_init begin_expr begin_call begin_name get uri end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name set resource end_name begin_argument_list begin_argument begin_expr begin_call begin_name make resource from uri end_name begin_argument_list begin_argument begin_expr begin_name uri 1 end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name get uri end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_block end_then end_if begin_if begin_condition begin_expr begin_name name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name classname end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get task name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name add definition end_name begin_argument_list begin_argument begin_expr begin_name al end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name classname end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_name classname end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_comment url end_comment begin_name urls end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name file end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name url end_name end_type begin_name url end_name begin_init begin_expr begin_call begin_name file to url end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name url end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name urls end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_class begin_super begin_name enumeration end_name end_super begin_argument_list end_argument_list begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name more end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_function begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name has more elements end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name more end_name end_expr end_return end_block end_function begin_function begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name next element end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name no such element exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name more end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name more end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_return begin_expr begin_name url end_name end_expr end_return end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name no such element exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_else end_if end_block end_function end_block end_class end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name urls end_name begin_operator EQ end_operator begin_call begin_name resource to ur ls end_name begin_argument_list begin_argument begin_expr begin_name al end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_while begin_condition begin_expr begin_call begin_name begin_name urls end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name url end_name end_type begin_name url end_name begin_init begin_expr begin_operator LPAR end_operator begin_name url end_name begin_operator RPAR end_operator begin_call begin_name begin_name urls end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name fmt end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name format end_name end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name url end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to lower case end_name begin_argument_list begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name fmt end_name begin_operator EQ end_operator begin_name begin_name format end_name begin_operator DOT end_operator begin_name xml end_name end_name end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name fmt end_name begin_operator EQT end_operator begin_name begin_name format end_name begin_operator DOT end_operator begin_name properties end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name load properties end_name begin_argument_list begin_argument begin_expr begin_name al end_name end_expr end_argument begin_argument begin_expr begin_name url end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name resource stack end_name begin_operator DOT end_operator begin_name get stack end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get end_name begin_argument_list begin_argument begin_expr begin_name url end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name url end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name get location end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name resource stack end_name begin_operator DOT end_operator begin_name get stack end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get end_name begin_argument_list begin_argument begin_expr begin_name url end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name resource stack end_name begin_operator DOT end_operator begin_name get stack end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name put end_name begin_argument_list begin_argument begin_expr begin_name url end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name load antlib end_name begin_argument_list begin_argument begin_expr begin_name al end_name end_expr end_argument begin_argument begin_expr begin_name url end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name resource stack end_name begin_operator DOT end_operator begin_name get stack end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name remove end_name begin_argument_list begin_argument begin_expr begin_name url end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block end_else end_if end_block end_else end_if end_block end_while end_block end_else end_if end_block 
 begin_comment whether the user has specified the mode explicitly return true if it has been set end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name has file mode been set end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name archive file set end_name begin_operator RPAR end_operator begin_call begin_name get ref end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name has file mode been set end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr begin_name file mode has been set end_name end_expr end_return end_block 
 begin_comment the output file for the list action this attribute is ignored for any other actions param listing file in which to store the listing end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set listing end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name listing end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name listing end_name end_name begin_operator EQ end_operator begin_name listing end_name end_expr end_expr_stmt end_block 
 begin_comment adds the optional attributes to the command line end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name get optional attributes end_name begin_parameter_list end_parameter_list begin_block begin_comment verbose end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get verbose end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment disable compression end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get no compress end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment path to the source off site home directory home user sos end_comment begin_if begin_condition begin_expr begin_call begin_name get sos home end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment if soshome was not specified then we can look for nocache end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get no cache end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag sos home end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get sos home end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_comment if a working directory was specified then add it to the command line end_comment begin_if begin_condition begin_expr begin_call begin_name get local path end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag working dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get local path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment filter the specified entries according to an appropriate rule param entry set the entry set to filter return the filtered entry set end_comment begin_type begin_specifier end_specifier begin_name cvs entry end_name begin_index end_index end_type begin_name filter entry set end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name begin_name cvs entry end_name begin_index end_index end_name end_type begin_name entry set end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name vector end_name end_type begin_name results end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name entry set end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name cvs entry end_name end_type begin_name cvs entry end_name begin_init begin_expr begin_name begin_name entry set end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name date end_name end_type begin_name date end_name begin_init begin_expr begin_call begin_name begin_name cvs entry end_name begin_operator DOT end_operator begin_name get date end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment bug 30471 end_comment begin_comment this is caused by date after throwing a null pointer exception end_comment begin_comment for some reason there s no date set in the cvs entry end_comment begin_comment java 1 3 1 api end_comment begin_comment http java sun com j 2 se 1 3 docs api java util date html after java util date end_comment begin_comment doesn t throw null pointer exception end_comment begin_comment java 1 4 2 1 5 api end_comment begin_comment http java sun com j 2 se 1 4 2 docs api java util date html after java util date end_comment begin_comment according to the docs it doesn t throw according to the bug report it does end_comment begin_comment http java sun com j 2 se 1 5 0 docs api java util date html after java util date end_comment begin_comment according to the docs it does throw end_comment begin_comment for now skip entries which are missing a date end_comment begin_if begin_condition begin_expr begin_operator EQT end_operator begin_name date end_name end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name start date end_name begin_operator UNP end_operator begin_call begin_name begin_name start date end_name begin_operator DOT end_operator begin_name after end_name end_name begin_argument_list begin_argument begin_expr begin_name date end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment skip dates that are too early end_comment begin_continue end_continue end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name end date end_name begin_operator UNP end_operator begin_call begin_name begin_name end date end_name begin_operator DOT end_operator begin_name before end_name end_name begin_argument_list begin_argument begin_expr begin_name date end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment skip dates that are too late end_comment begin_continue end_continue end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name cvs entry end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name cvs entry end_name begin_index end_index end_type begin_name result array end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name cvs entry end_name begin_index begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name copy into end_name end_name begin_argument_list begin_argument begin_expr begin_name result array end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name result array end_name end_expr end_return end_block 
 begin_comment gets the source dirs to find the source java files return source base the directory containing the source files end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get source base end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name source base end_name end_expr end_return end_block 
 begin_comment a list of hosts to bypass the proxy on these should be separated with the vertical bar character only in java 1 4 does ftp use this list e g fozbot corp sun com eng sun com param non proxy hosts lists of hosts to talk direct to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set non proxy hosts end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name non proxy hosts end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name non proxy hosts end_name end_name begin_operator EQ end_operator begin_name non proxy hosts end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add all system properties which aren t already defined as user properties to the project properties end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set system properties end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name properties end_name end_type begin_name system p end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get properties end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name system p end_name begin_operator DOT end_operator begin_name property names end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name property name end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name value end_name begin_init begin_expr begin_call begin_name begin_name system p end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name property name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name set property internal end_name end_name begin_argument_list begin_argument begin_expr begin_name property name end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 17 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_name local end_name begin_operator EQ end_operator begin_call begin_name begin_name inet address end_name begin_operator DOT end_operator begin_name get local host end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get host name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name net end_name begin_operator DOT end_operator begin_name unknown host exception end_name end_name end_type begin_name uhe end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try end_block 
 begin_comment if an asof date parameter has been supplied by the user return a star team view based on the configuration of the star team view specified the user as of the date specified in the parameter if no asof date has been specified return null this method is meant to be called from within implementations of the code create snapshot view code abstract method param raw the raw view to be configured as of the supplied date return the view as configured exception build exception thrown if the date is not parsable by the default or supplied format patterns since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name view end_name end_type begin_name get view configured by date end_name begin_parameter_list begin_param begin_decl begin_type begin_name view end_name end_type begin_name raw end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name as of date end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name date end_name end_type begin_name as of date end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name simple date format end_name end_type begin_name fmt end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name as of date format end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name fmt end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name simple date format end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name as of date format end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name as of date end_name begin_operator EQ end_operator begin_call begin_name begin_name fmt end_name begin_operator DOT end_operator begin_name parse end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name as of date end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name parse exception end_name end_type begin_name px end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name as of date end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name as of date format end_name end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_then begin_else begin_block begin_try begin_block begin_expr_stmt begin_expr begin_name as of date end_name begin_operator EQ end_operator begin_call begin_name begin_name date utils end_name begin_operator DOT end_operator begin_name parse iso 8601 date time or date end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name as of date end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name parse exception end_name end_type begin_name px end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name as of date end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_else end_if begin_return begin_expr begin_operator UNP end_operator begin_call begin_name view end_name begin_argument_list begin_argument begin_expr begin_name raw end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name view configuration end_name begin_operator DOT end_operator begin_name create from time end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name ole date end_name begin_argument_list begin_argument begin_expr begin_name as of date end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment sets the one table documentation option param one table a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set onetable end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name one table end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name optional attrs end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name one table end_name end_expr end_argument begin_argument begin_expr begin_name one table end_name begin_operator QM end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name true end_name end_name begin_operator DP end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name false end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test recreate with update newer file end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name test recreate end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment execute by creating an instance of an implementation class and getting to do the work throws org apache tools ant build exception if there s a problem with base dir or rmic end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name base dir end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name error base not set end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name base dir end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name error no base exists end_name begin_operator PLUS end_operator begin_name base dir end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name base dir end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name error not a dir end_name begin_operator PLUS end_operator begin_name base dir end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name verify end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name rmic adapter end_name end_type begin_name adapter end_name begin_init begin_expr begin_call begin_name begin_name rmic adapter factory end_name begin_operator DOT end_operator begin_name get rmic end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get compiler end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment now we need to populate the compiler adapter end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name adapter end_name begin_operator DOT end_operator begin_name set rmic end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name classpath end_name begin_init begin_expr begin_call begin_name begin_name adapter end_name begin_operator DOT end_operator begin_name get classpath end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name loader end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name create class loader end_name begin_argument_list begin_argument begin_expr begin_name classpath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_comment scan base dirs to build up compile lists only if a end_comment begin_comment specific classname is not given end_comment begin_if begin_condition begin_expr begin_name classname end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds end_name begin_init begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name get directory scanner end_name end_name begin_argument_list begin_argument begin_expr begin_name base dir end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name files end_name begin_init begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get included files end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name scan dir end_name begin_argument_list begin_argument begin_expr begin_name base dir end_name end_expr end_argument begin_argument begin_expr begin_name files end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name adapter end_name begin_operator DOT end_operator begin_name get mapper end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment otherwise perform a timestamp comparison at least end_comment begin_expr_stmt begin_expr begin_call begin_name scan dir end_name begin_argument_list begin_argument begin_expr begin_name base dir end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr begin_call begin_name begin_name classname end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_block end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name adapter end_name begin_operator DOT end_operator begin_name get mapper end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name file count end_name begin_init begin_expr begin_call begin_name begin_name compile list end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name file count end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name file count end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name file count end_name begin_operator GT end_operator begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name base dir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment finally lets execute the compiler end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name adapter end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name error rmic failed end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_then end_if begin_comment move the generated source file to the base directory if base directory and sourcebase are the same the generated sources are already in place end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name source base end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name base dir end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name source base end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_name file count end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name idl end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name j end_name begin_operator LT end_operator begin_name file count end_name end_expr end_condition begin_incr begin_expr begin_name j end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name move generated file end_name begin_argument_list begin_argument begin_expr begin_name base dir end_name end_expr end_argument begin_argument begin_expr begin_name source base end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name compile list end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name j end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name adapter end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_else end_if end_block end_then end_if end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name compile list end_name begin_operator DOT end_operator begin_name remove all elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name line end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test symlinked imports end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name ln end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name ln end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name exists end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name ln end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name ln end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name exists end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment running on windows or something so skip it end_comment begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name symlink end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name symlink file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name symlink end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name runtime end_name begin_operator DOT end_operator begin_name get runtime end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name exec end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name ln end_name end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr begin_call begin_name begin_name symlink file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block begin_parameter_list end_parameter_list 
 begin_comment execute the task throws build exception if the task fails end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name validate end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name library displayer end_name end_type begin_name displayer end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name library displayer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment check if list of files to check has been specified end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name library file sets end_name begin_operator DOT end_operator begin_name is empty end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name iterator end_name end_type begin_name iterator end_name begin_init begin_expr begin_call begin_name begin_name library file sets end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name iterator end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name file set end_name end_type begin_name file set end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file set end_name begin_operator RPAR end_operator begin_call begin_name begin_name iterator end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name directory scanner end_name end_type begin_name scanner end_name begin_init begin_expr begin_call begin_name begin_name file set end_name begin_operator DOT end_operator begin_name get directory scanner end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name basedir end_name begin_init begin_expr begin_call begin_name begin_name scanner end_name begin_operator DOT end_operator begin_name get basedir end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name files end_name begin_init begin_expr begin_call begin_name begin_name scanner end_name begin_operator DOT end_operator begin_name get included files end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name displayer end_name begin_operator DOT end_operator begin_name display library end_name end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_while end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name displayer end_name begin_operator DOT end_operator begin_name display library end_name end_name begin_argument_list begin_argument begin_expr begin_name library file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment param base the base url of the resource associated with the public id if the location specifies a relative url pathname it is resolved using the base the default base for an external catalog file is the directory in which it is located end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set base end_name begin_parameter_list begin_param begin_decl begin_type begin_name url end_name end_type begin_name base end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name base end_name end_name begin_operator EQ end_operator begin_name base end_name end_expr end_expr_stmt end_block 
 begin_comment return a hash code value for this object end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name hash code end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name object hash code end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment read a constant pool entry from a stream this is a factory method which reads a constant pool entry form a stream and returns the appropriate subclass for the entry param cp stream the stream from which the constant pool entry is to be read return the appropriate constant pool entry subclass representing the constant pool entry from the stream exception io exception if the constant pool entry cannot be read from the stream end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name constant pool entry end_name end_type begin_name read entry end_name begin_parameter_list begin_param begin_decl begin_type begin_name data input stream end_name end_type begin_name cp stream end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name constant pool entry end_name end_type begin_name cp info end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name cp tag end_name begin_init begin_expr begin_call begin_name begin_name cp stream end_name begin_operator DOT end_operator begin_name read unsigned byte end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_switch begin_condition begin_expr begin_name cp tag end_name end_expr end_condition begin_block begin_case begin_expr begin_name constant utf 8 end_name end_expr begin_expr_stmt begin_expr begin_name cp info end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name utf 8 cp info end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name constant integer end_name end_expr begin_expr_stmt begin_expr begin_name cp info end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name integer cp info end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name constant float end_name end_expr begin_expr_stmt begin_expr begin_name cp info end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name float cp info end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name constant long end_name end_expr begin_expr_stmt begin_expr begin_name cp info end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name long cp info end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name constant double end_name end_expr begin_expr_stmt begin_expr begin_name cp info end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name double cp info end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name constant class end_name end_expr begin_expr_stmt begin_expr begin_name cp info end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name class cp info end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name constant string end_name end_expr begin_expr_stmt begin_expr begin_name cp info end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name string cp info end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name constant fieldref end_name end_expr begin_expr_stmt begin_expr begin_name cp info end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name field ref cp info end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name constant methodref end_name end_expr begin_expr_stmt begin_expr begin_name cp info end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name method ref cp info end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name constant interfacemethodref end_name end_expr begin_expr_stmt begin_expr begin_name cp info end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name interface method ref cp info end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name constant nameandtype end_name end_expr begin_expr_stmt begin_expr begin_name cp info end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name name and type cp info end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_default begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name class format error end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name cp tag end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_default end_block end_switch begin_expr_stmt begin_expr begin_call begin_name begin_name cp info end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list begin_argument begin_expr begin_name cp stream end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name cp info end_name end_expr end_return end_block 
 begin_comment set the base name of the ejb jar that is to be created if it is not to be determined from the name of the deployment descriptor files param in value the basename that will be used when writing the jar file containing the ejb end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set basejarname end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name in value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name config end_name begin_operator DOT end_operator begin_name base jar name end_name end_name begin_operator EQ end_operator begin_name in value end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name begin_name config end_name begin_operator DOT end_operator begin_name naming scheme end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name config end_name begin_operator DOT end_operator begin_name naming scheme end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name naming scheme end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name config end_name begin_operator DOT end_operator begin_name naming scheme end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name naming scheme end_name begin_operator DOT end_operator begin_name basejarname end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name config end_name begin_operator DOT end_operator begin_name naming scheme end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name naming scheme end_name begin_operator DOT end_operator begin_name basejarname end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name config end_name begin_operator DOT end_operator begin_name naming scheme end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_else end_if end_block 
 begin_comment creates a new class constants using the passed in reader for instantiation param rdr a reader object providing the underlying stream must not be code null code return a new filter based on this configuration but filtering the specified reader end_comment begin_type begin_specifier end_specifier begin_name reader end_name end_type begin_name chain end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name reader end_name end_type begin_name rdr end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name class constants end_name end_type begin_name new filter end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name class constants end_name begin_argument_list begin_argument begin_expr begin_name rdr end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_name new filter end_name end_expr end_return end_block 
 begin_comment autoresponce behaviour valid options are y and n param response the auto response value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set autoresponse end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name response end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal auto response end_name end_name begin_argument_list begin_argument begin_expr begin_name response end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add an and selector entry on the selector list param selector the selector to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add and end_name begin_parameter_list begin_param begin_decl begin_type begin_name and selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name fileset end_name begin_operator DOT end_operator begin_name add and end_name end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor that inverts the meaning of its argument param other the selector to invert since ant 1 7 end_comment begin_specifier end_specifier begin_name not selector end_name begin_parameter_list begin_param begin_decl begin_type begin_name file selector end_name end_type begin_name other end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name append selector end_name begin_argument_list begin_argument begin_expr begin_name other end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment creates an exception that indicates that refid has to be the only attribute if it is set return the exception to throw end_comment begin_type begin_specifier end_specifier begin_name build exception end_name end_type begin_name too many attributes end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment clear out the whole command line end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name clear end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name executable end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name arguments end_name begin_operator DOT end_operator begin_name remove all elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name funnel end_name begin_parameter_list end_parameter_list begin_block begin_synchronized begin_expr begin_name begin_name output stream funneler end_name begin_operator DOT end_operator begin_name this end_name end_name end_expr begin_block begin_expr_stmt begin_expr begin_operator PPLUS end_operator begin_name count end_name end_expr end_expr_stmt end_block end_synchronized end_block 
 begin_comment the forceoverwrite attribute default is false param force if true overwrite even if the destination file is newer that the source file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set forceoverwrite end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name force end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name force overwrite end_name begin_operator EQ end_operator begin_name force end_name end_expr end_expr_stmt end_block 
 begin_comment parse an unknown element from a url param project the current project param source the url containing the task return a configured task exception build exception if an error occurs end_comment begin_type begin_specifier end_specifier begin_name unknown element end_name end_type begin_name parse unknown element end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param begin_param begin_decl begin_type begin_name url end_name end_type begin_name source end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name target end_name end_type begin_name dummy target end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name target end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dummy target end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name ant xml context end_name end_type begin_name context end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name ant xml context end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name context end_name begin_operator DOT end_operator begin_name add target end_name end_name begin_argument_list begin_argument begin_expr begin_name dummy target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name context end_name begin_operator DOT end_operator begin_name set implicit target end_name end_name begin_argument_list begin_argument begin_expr begin_name dummy target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name parse end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name context end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name source end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name root handler end_name begin_argument_list begin_argument begin_expr begin_name context end_name end_expr end_argument begin_argument begin_expr begin_name element handler end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name task end_name begin_index end_index end_type begin_name tasks end_name begin_init begin_expr begin_call begin_name begin_name dummy target end_name begin_operator DOT end_operator begin_name get tasks end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name begin_name tasks end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_return begin_expr begin_operator LPAR end_operator begin_name unknown element end_name begin_operator RPAR end_operator begin_name begin_name tasks end_name begin_index begin_expr end_expr end_index end_name end_expr end_return end_block 
 begin_comment automatically calls the target called tear down from the build file tested if it exits this allows to use ant tasks directly in the build file to clean up after each test note that no set up target is automatically called since it s trivial to have a test target depend on it end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name tear down end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get targets end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name contains key end_name begin_argument_list begin_argument begin_expr begin_name tear down end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name execute target end_name end_name begin_argument_list begin_argument begin_expr begin_name tear down end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment clear the result caches for a scan end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name clear results end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name files included end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name files not included end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name files excluded end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name files deselected end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name dirs included end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name dirs not included end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name dirs excluded end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name dirs deselected end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name everything included end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name basedir end_name begin_operator UNP end_operator begin_operator RPAR end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name scanned dirs end_name begin_operator DOT end_operator begin_name clear end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return the enumerated values end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get values end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name formats end_name end_expr end_return end_block 
 begin_comment execute this task throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name to uri end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name exactly one end_name begin_argument_list begin_argument begin_expr begin_name to attrs end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name from uri end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name file sets end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name exactly one end_name begin_argument_list begin_argument begin_expr begin_name from attrs end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_try begin_block begin_if begin_condition begin_expr begin_name is from remote end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name is to remote end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name download end_name begin_argument_list begin_argument begin_expr begin_name from uri end_name end_expr end_argument begin_argument begin_expr begin_name to uri end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name is from remote end_name begin_operator UNP end_operator begin_name is to remote end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name file sets end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name upload end_name begin_argument_list begin_argument begin_expr begin_name file sets end_name end_expr end_argument begin_argument begin_expr begin_name to uri end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name upload end_name begin_argument_list begin_argument begin_expr begin_name from uri end_name end_expr end_argument begin_argument begin_expr begin_name to uri end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_name is from remote end_name begin_operator UNP end_operator begin_name is to remote end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_else end_if end_else end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name get failonerror end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_catch end_try end_block 
 begin_comment get the sos home directory return if it was set null if not end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get sos home end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name sos home end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name main end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name args end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment here is a comment with an embedded tab end_comment begin_if begin_condition begin_expr begin_name mybool end_name end_expr end_condition begin_then begin_block begin_comment here is a multi line with embedded tab comment end_comment begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name mychar end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment tab end_comment end_block end_then end_if begin_comment end of if mybool end_comment end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set primary key end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name primary key end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set primary key end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name classname end_name begin_argument_list begin_argument begin_expr begin_name primary key end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment include the source as comments default false param show source a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set show source end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name show source end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name show source end_name end_name begin_operator EQ end_operator begin_name show source end_name end_expr end_expr_stmt end_block 
 begin_comment set a managing code project component code for this code lead pipe input stream code param pc the managing code project component code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set managing component end_name begin_parameter_list begin_param begin_decl begin_type begin_name project component end_name end_type begin_name pc end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name managing pc end_name end_name begin_operator EQ end_operator begin_name pc end_name end_expr end_expr_stmt end_block 
 begin_comment gets the user id return returns a string end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get user id end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name user id end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name create dynamic element end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name sub end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment receive notification that character data has been found in an i as specific descriptor we re interested in retrieving data indicating whether the bean must support rmi iiop access whether the bean must provide highly available stubs and skeletons in the case of stateful session beans and if this bean uses additional cmp xml descriptors in the case of entity beans with cmp param value string data found in the xml document end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name ias characters end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name base end_name begin_init begin_expr begin_operator PLUS end_operator begin_name ejb type end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name current loc end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name base end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name current ejb end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name ejb info end_name begin_operator RPAR end_operator begin_call begin_name begin_name ejbs end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name current ejb end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name current ejb end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name ejb info end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ejbs end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument begin_argument begin_expr begin_name current ejb end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name current loc end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name base end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name current ejb end_name begin_operator DOT end_operator begin_name set iiop end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name current loc end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name base end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name current ejb end_name begin_operator DOT end_operator begin_name set hasession end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name current loc end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name base end_name begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name current ejb end_name begin_operator DOT end_operator begin_name add cmp descriptor end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if end_else end_if end_else end_if end_block 
 begin_comment encode a single line of data less than or equal to 45 characters param data the array of byte data param off the starting offset within the data param length length of the data to encode param out the output stream the encoded data is written to exception io exception end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name encode line end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name data end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name offset end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name length end_name end_decl end_param begin_param begin_decl begin_type begin_name output stream end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_comment write out the number of characters encoded in this line end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name byte end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name length end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name byte end_name end_type begin_name a end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name byte end_name end_type begin_name b end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name byte end_name end_type begin_name c end_name end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name length end_name end_expr end_condition begin_incr end_incr begin_block begin_comment set the padding defaults end_comment begin_expr_stmt begin_expr begin_name b end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name c end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_comment get the next 3 bytes if we have them end_comment begin_expr_stmt begin_expr begin_name a end_name begin_operator EQ end_operator begin_name begin_name data end_name begin_index begin_expr begin_name offset end_name begin_operator PLUS end_operator begin_name i end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name length end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name b end_name begin_operator EQ end_operator begin_name begin_name data end_name begin_index begin_expr begin_name offset end_name begin_operator PLUS end_operator begin_name i end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name length end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name c end_name begin_operator EQ end_operator begin_name begin_name data end_name begin_index begin_expr begin_name offset end_name begin_operator PLUS end_operator begin_name i end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name byte end_name end_type begin_name d 1 end_name begin_init begin_expr begin_call begin_name byte end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name a end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name byte end_name end_type begin_name d 2 end_name begin_init begin_expr begin_call begin_name byte end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name a end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name b end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name byte end_name end_type begin_name d 3 end_name begin_init begin_expr begin_call begin_name byte end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name b end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name c end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name byte end_name end_type begin_name d 4 end_name begin_init begin_expr begin_call begin_name byte end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name c end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name d 1 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name d 2 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name d 3 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name d 4 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_comment terminate with a linefeed alone end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor for zip file set end_comment begin_specifier end_specifier begin_name zip file set end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment combine all specifications objects that are identical except for the sections p note this is very inefficent and should probably be fixed in the future p param list the array of results to trim return an array list with all duplicates removed end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name array list end_name end_type begin_name remove duplicates end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name array list end_name end_type begin_name list end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name array list end_name end_type begin_name results end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name array list end_name end_type begin_name sections end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name list end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name specification end_name end_type begin_name specification end_name begin_init begin_expr begin_operator LPAR end_operator begin_name specification end_name begin_operator RPAR end_operator begin_call begin_name begin_name list end_name begin_operator DOT end_operator begin_name remove end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name iterator end_name end_type begin_name iterator end_name begin_init begin_expr begin_call begin_name begin_name list end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name iterator end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name specification end_name end_type begin_name other end_name begin_init begin_expr begin_operator LPAR end_operator begin_name specification end_name begin_operator RPAR end_operator begin_call begin_name begin_name iterator end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name is equal end_name begin_argument_list begin_argument begin_expr begin_name specification end_name end_expr end_argument begin_argument begin_expr begin_name other end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name other sections end_name begin_init begin_expr begin_call begin_name begin_name other end_name begin_operator DOT end_operator begin_name get sections end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name sections end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sections end_name begin_operator DOT end_operator begin_name add all end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name arrays end_name begin_operator DOT end_operator begin_name as list end_name end_name begin_argument_list begin_argument begin_expr begin_name other sections end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name iterator end_name begin_operator DOT end_operator begin_name remove end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_while begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name specification end_name end_type begin_name merged end_name begin_init begin_expr begin_call begin_name merge in sections end_name begin_argument_list begin_argument begin_expr begin_name specification end_name end_expr end_argument begin_argument begin_expr begin_name sections end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name merged end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment reset list of sections end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name sections end_name begin_operator DOT end_operator begin_name clear end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_return begin_expr begin_name results end_name end_expr end_return end_block 
 begin_specifier end_specifier begin_name outdated end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource end_name end_type begin_name control end_name end_decl end_param begin_param begin_decl begin_type begin_name long end_name end_type begin_name granularity end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name control end_name end_name begin_operator EQ end_operator begin_name control end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name granularity end_name end_name begin_operator EQ end_operator begin_name granularity end_name end_expr end_expr_stmt end_block 
 begin_comment interface test listener for j unit gt 3 4 p a test failed param test the test param t the assertion that failed end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add failure end_name begin_parameter_list begin_param begin_decl begin_type begin_name test end_name end_type begin_name test end_name end_decl end_param begin_param begin_decl begin_type begin_name assertion failed error end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add failure end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name throwable end_name begin_operator RPAR end_operator begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment ignore end_comment begin_comment send the key value pairs in the hashtable to the given output stream only those properties matching the tt prefix tt constraint will be sent to the output stream the output stream will be closed when this method returns param all props propfile to save param os output stream throws io exception on output errors throws build exception on other errors end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name save properties end_name begin_parameter_list begin_param begin_decl begin_type begin_name hashtable end_name end_type begin_name all props end_name end_decl end_param begin_param begin_decl begin_type begin_name output stream end_name end_type begin_name os end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name list end_name end_type begin_name key list end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name all props end_name begin_operator DOT end_operator begin_name key set end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name collections end_name begin_operator DOT end_operator begin_name sort end_name end_name begin_argument_list begin_argument begin_expr begin_name key list end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name properties end_name end_type begin_name props end_name begin_init begin_expr begin_operator UNP end_operator begin_class begin_super begin_name properties end_name end_super begin_argument_list end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name enumeration end_name end_type begin_name keys end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name collection utils end_name begin_operator DOT end_operator begin_name as enumeration end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name key list end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block end_function begin_function begin_type begin_specifier end_specifier begin_name set end_name end_type begin_name entry set end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name set end_name end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name entry set end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name is kaffe end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name tree set end_name end_type begin_name t end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name tree set end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_class begin_super begin_name comparator end_name end_super begin_argument_list end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name compare end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name o 1 end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name o 2 end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name key 1 end_name begin_init begin_expr begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name begin_name map end_name begin_operator DOT end_operator begin_name entry end_name end_name begin_operator RPAR end_operator begin_name o 1 end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get key end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name key 2 end_name begin_init begin_expr begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name begin_name map end_name begin_operator DOT end_operator begin_name entry end_name end_name begin_operator RPAR end_operator begin_name o 2 end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get key end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name key 1 end_name begin_operator DOT end_operator begin_name compare to end_name end_name begin_argument_list begin_argument begin_expr begin_name key 2 end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_function end_block end_class end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name add all end_name end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_name t end_name end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name result end_name end_expr end_return end_block end_function end_block end_class end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name key list end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_call begin_name begin_name key list end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name value end_name begin_init begin_expr begin_call begin_name begin_name all props end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name set property end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name format end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name jdk save properties end_name begin_argument_list begin_argument begin_expr begin_name props end_name end_expr end_argument begin_argument begin_expr begin_name os end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name format end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name xml save properties end_name begin_argument_list begin_argument begin_expr begin_name props end_name end_expr end_argument begin_argument begin_expr begin_name os end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if end_block 
 begin_comment end_comment begin_comment utilitary methods end_comment begin_comment end_comment begin_comment create a temporary directory for gen ic output return the temp directory throws build exception if a temp directory cannot be created end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name create temp dir end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name tmp dir end_name begin_init begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name create temp file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tmp dir end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name tmp dir end_name begin_operator DOT end_operator begin_name mkdir end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name io exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name tmp dir end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_return begin_expr begin_name tmp dir end_name end_expr end_return end_block 
 begin_comment default constructor end_comment begin_specifier end_specifier begin_name majority end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment return the excludes patterns end_comment begin_type begin_specifier end_specifier begin_name pattern set end_name end_type begin_name get excludes end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name default patterns end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test noop end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name line end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name util end_name begin_operator DOT end_operator begin_name match end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator begin_operator PLUS end_operator begin_name lock end_name end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name label spec end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name line end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test the code that validates the selector end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test validate end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name present selector end_name end_type begin_name s end_name begin_init begin_expr begin_operator LPAR end_operator begin_name present selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name create mapper end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name create mapper end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be 1 end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be 1 end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name present selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name is selected end_name end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name filenames end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be 2 end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be 2 end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment get the ie classid value return the value end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get ieplugin end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name iepluginid end_name end_expr end_return end_block 
 begin_comment sets the set of include patterns patterns may be separated by a comma or a space param includes the string containing the include patterns end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set includes end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name includes end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name default set defined end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name default set end_name begin_operator DOT end_operator begin_name set includes end_name end_name begin_argument_list begin_argument begin_expr begin_name includes end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test typed mapper end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name exists end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name expect file contains end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment create a classpath return a path for configuration end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name create classpath end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name begin_operator DOT end_operator begin_name create path end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment get this entry s group id return this entry s group id end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get group id end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name group id end_name end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name document builder end_name end_type begin_name get document builder end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_return begin_expr begin_call begin_name begin_name document builder factory end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name new document builder end_name begin_argument_list end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name exc end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name exception in initializer error end_name begin_argument_list begin_argument begin_expr begin_name exc end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get executable end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name exe end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name corrected exe end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name get pvcsbin end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name pvcsbin end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name corrected exe end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name pvcsbin end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name corrected exe end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name pvcsbin end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name corrected exe end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name exe end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment if true output files should always be written jdk 1 2 only param force the value to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set force end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name force end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name force end_name end_name begin_operator EQ end_operator begin_name force end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name istore end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name child end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name invocation target exception end_name end_expr end_argument begin_argument begin_expr begin_name illegal access exception end_name end_expr end_argument begin_argument begin_expr begin_name instantiation exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name get method end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name invoke end_name begin_argument_list begin_argument begin_expr begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_name child end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor for fork true or when the user hasn t specified a classpath param test the test to run param halt on error whether to stop the run if an error is found param filtertrace whether to filter junit stack frames out of exceptions param halt on failure whether to stop the run if failure is found end_comment begin_specifier end_specifier begin_name j unit test runner end_name begin_parameter_list begin_param begin_decl begin_type begin_name j unit test end_name end_type begin_name test end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name halt on error end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name filtertrace end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name halt on failure end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument begin_argument begin_expr begin_name halt on error end_name end_expr end_argument begin_argument begin_expr begin_name filtertrace end_name end_expr end_argument begin_argument begin_expr begin_name halt on failure end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment find the password file return password file end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get pass file end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name pass file end_name end_name end_expr end_return end_block 
 begin_comment drop characters that are illegal in xml documents p also ensure that we are not including an code gt code marker by replacing that sequence with code amp x 5 d amp x 5 d amp gt code p p see xml 1 0 2 2 a href http www w 3 org tr 1998 rec xml 19980210 charsets http www w 3 org tr 1998 rec xml 19980210 charsets a and 2 7 a href http www w 3 org tr 1998 rec xml 19980210 sec cdata sect http www w 3 org tr 1998 rec xml 19980210 sec cdata sect a p param value the value to be encoded return the encoded value end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name encodedata end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name sb end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name len end_name begin_init begin_expr begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name len end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name c end_name begin_init begin_expr begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name is legal character end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name cd end end_name begin_init begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_name cd end end_name begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name set length end_name end_name begin_argument_list begin_argument begin_expr begin_name cd end end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name cd end end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name cd end end_name begin_operator EQ end_operator begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_return begin_expr begin_name result end_name end_expr end_return end_block 
 begin_comment add a selector filename entry on the selector list param selector the code filename selector code to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add filename end_name begin_parameter_list begin_param begin_decl begin_type begin_name filename selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name append selector end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment checks to make sure all settings are kosher in this case it means that the dest attribute has been set and we have a mapper end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name verify settings end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name targetdir end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set error end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name mapper element end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name map end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name identity mapper end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name map end_name begin_operator EQ end_operator begin_call begin_name begin_name mapper element end_name begin_operator DOT end_operator begin_name get implementation end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_name map end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set error end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment creates a named element and appends it to the given element returns it p this means pre create child element lt a gt b pre creates pre lt a gt lt b gt lt a gt pre and returns code lt b gt code p param parent element that will receive the new element as child param name name of the new element return the new element since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name element end_name end_type begin_name create child element end_name begin_parameter_list begin_param begin_decl begin_type begin_name element end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name document end_name end_type begin_name doc end_name begin_init begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name get owner document end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name element end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name doc end_name begin_operator DOT end_operator begin_name create element end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name append child end_name end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name e end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name compare end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name o 1 end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name o 2 end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get values end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment should ant resolve the link attribute relative to the current basedir return the resolve link attribute end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name should resolve link end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name resolve link end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test checksum algorithm adler end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name checksum algorithm end_name end_type begin_name algo end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name checksum algorithm end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name algo end_name begin_operator DOT end_operator begin_name set algorithm end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name do test end_name begin_argument_list begin_argument begin_expr begin_name algo end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment default constructor end_comment begin_specifier end_specifier begin_name default rmic adapter end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment creates a new zip output stream writing to a file will use random access if possible param file the file to zip to since 1 14 throws io exception on error end_comment begin_specifier end_specifier begin_name zip output stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name raf end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name random access file end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name raf end_name begin_operator DOT end_operator begin_name set length end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name raf end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name raf end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name inner end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try begin_expr_stmt begin_expr begin_name raf end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name out end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file output stream end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment get nowarn flag status return boolean containing status of nwarn flag end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get no warn end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m nwarn end_name end_expr end_return end_block 
 begin_comment constructor names this task waitfor end_comment begin_specifier end_specifier begin_name wait for end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return a string describing this object end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name buf end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name type end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test type end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment append the arguments to the existing command param line an array of arguments to append end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add arguments end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name line end_name end_decl end_param end_parameter_list begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name line end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name create argument end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name begin_name line end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_comment add a continuation line from the manifest file when lines are too long in a manifest they are continued on the next line by starting with a space this method adds the continuation data to the attribute value by skipping the first character param line the continuation line end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add continuation end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name line end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name current value end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name values end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name current index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name current value end_name begin_operator PLUS end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name executor end_name end_type begin_name get sub project executor end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name this end_name end_expr end_return end_block 
 begin_specifier end_specifier begin_name default excludes test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment does the command line argument processing for modern doesn t add the files to compile param cmd the command line return the command line end_comment begin_type begin_specifier end_specifier begin_name commandline end_name end_type begin_name setup modern javac commandline switches end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name setup javac commandline switches end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get source end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name assume java 13 end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name source end_name begin_init begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get source end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_call begin_name assume java 14 end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name assume java 15 end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name source end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name source end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_comment support for source 1 1 and source 1 2 has been end_comment begin_comment added with jdk 1 4 2 and isn t present in 1 5 0 either end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name source end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_call begin_name assume java 15 end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name assume java 16 end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get target end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name t end_name begin_init begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get target end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name s end_name begin_init begin_expr begin_name t end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment 1 5 0 doesn t support source 1 1 end_comment begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name t end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name s end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name s end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_else end_if begin_return begin_expr begin_name cmd end_name end_expr end_return end_block 
 begin_comment create a symlink throws build exception on error since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name single end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_if begin_condition begin_expr begin_name resource end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name handle error end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name link end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name handle error end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name do link end_name begin_argument_list begin_argument begin_expr begin_name resource end_name end_expr end_argument begin_argument begin_expr begin_name link end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name set defaults end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment run a target expect an exception string containing the substring we look for case sensitive match param target target to run param cause information string to reader of report param contains substring of the build exception to look for end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name expect build exception containing end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name target end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name cause end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name contains end_name end_decl end_param end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name begin_name org end_name begin_operator DOT end_operator begin_name apache end_name begin_operator DOT end_operator begin_name tools end_name begin_operator DOT end_operator begin_name ant end_name begin_operator DOT end_operator begin_name build exception end_name end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name build exception end_name begin_operator EQ end_operator begin_name ex end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_operator UNP end_operator begin_name contains end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name ex end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr begin_name contains end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_operator MINUS end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name cause end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name contains end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name ex end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return end_return end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name cause end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the code server port code attribute to the given value the given value must be a valid integer but it must be a string object param server port a string containing the port on the star team server to use see get server port end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set server port end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name server port end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name server port end_name end_name begin_operator EQ end_operator begin_name server port end_name end_expr end_expr_stmt end_block 
 begin_comment equality method for this definition param obj another definition return true if the definitions are the same end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name same definition end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name obj end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name same or similar end_name begin_argument_list begin_argument begin_expr begin_name obj end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment fired when a target is started see build event get target end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name target started end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_comment system out println target started event get target get name end_comment end_block 
 begin_comment flag to compute hash of entire manifest optional default false param sectionsonly flag to compute hash of entire manifest end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set sectionsonly end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name sectionsonly end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name sectionsonly end_name end_name begin_operator EQ end_operator begin_name sectionsonly end_name end_expr end_expr_stmt end_block 
 begin_comment enables the linksource switch will be ignored if javadoc is not the 1 4 version default is false param b a code string code value since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set linksource end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name linksource end_name end_name begin_operator EQ end_operator begin_name b end_name end_expr end_expr_stmt end_block 
 begin_comment the file to check param file the file to check if if passes the embedded selector end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name file end_name end_name begin_operator EQ end_operator begin_name file end_name end_expr end_expr_stmt end_block 
 begin_comment get the local data return the local data end_comment begin_type begin_specifier end_specifier begin_name byte end_name begin_index end_index end_type begin_name get local file data data end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name local data end_name end_expr end_return end_block 
 begin_comment specific configuration for the t ra x liaison param xslt task the xslt process task instance from which this liasion is to be configured end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name configure end_name begin_parameter_list begin_param begin_decl begin_type begin_name xslt process end_name end_type begin_name xslt task end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name project end_name begin_operator EQ end_operator begin_call begin_name begin_name xslt task end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name xslt process end_name begin_operator DOT end_operator begin_name factory end_name end_name end_type begin_name factory end_name begin_init begin_expr begin_call begin_name begin_name xslt task end_name begin_operator DOT end_operator begin_name get factory end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name factory end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set factory end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name factory end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment configure factory attributes end_comment begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name attrs end_name begin_init begin_expr begin_call begin_name begin_name factory end_name begin_operator DOT end_operator begin_name get attributes end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name attrs end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name xslt process end_name begin_operator DOT end_operator begin_name factory end_name begin_operator DOT end_operator begin_name attribute end_name end_name end_type begin_name attr end_name begin_init begin_expr begin_operator LPAR end_operator begin_name begin_name xslt process end_name begin_operator DOT end_operator begin_name factory end_name begin_operator DOT end_operator begin_name attribute end_name end_name begin_operator RPAR end_operator begin_call begin_name begin_name attrs end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name set attribute end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attr end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name attr end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name xml catalog end_name end_type begin_name xml catalog end_name begin_init begin_expr begin_call begin_name begin_name xslt task end_name begin_operator DOT end_operator begin_name get xml catalog end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment use xml catalog as the entity resolver and uri resolver end_comment begin_if begin_condition begin_expr begin_name xml catalog end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set entity resolver end_name begin_argument_list begin_argument begin_expr begin_name xml catalog end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set uri resolver end_name begin_argument_list begin_argument begin_expr begin_name xml catalog end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment configure output properties end_comment begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name props end_name begin_init begin_expr begin_call begin_name begin_name xslt task end_name begin_operator DOT end_operator begin_name get output properties end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name xslt process end_name begin_operator DOT end_operator begin_name output property end_name end_name end_type begin_name prop end_name begin_init begin_expr begin_operator LPAR end_operator begin_name begin_name xslt process end_name begin_operator DOT end_operator begin_name output property end_name end_name begin_operator RPAR end_operator begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name set output property end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name prop end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name prop end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_comment set the type attribute param type a code string code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set type end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name type end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name type end_name end_name begin_operator EQ end_operator begin_name type end_name end_expr end_expr_stmt end_block 
 begin_comment pr 38370 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test fileset path end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment since we do not support marking just yet we return false return false end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name mark supported end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment ensure that we have a connection throws io exception if the connection cannot be established end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name connect end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name url end_name end_type begin_name u end_name begin_init begin_expr begin_call begin_name get url end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name u end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name conn end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_name conn end_name begin_operator EQ end_operator begin_call begin_name begin_name u end_name begin_operator DOT end_operator begin_name open connection end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name conn end_name begin_operator DOT end_operator begin_name connect end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name conn end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_throw begin_expr begin_name e end_name end_expr end_throw end_block end_catch end_try end_block end_then end_if end_block 
 begin_comment add all the commands to a list identified by the iterator passed in param list iterator an iterator that supports the add method since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add commands to list end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name list iterator end_name end_type begin_name list iterator end_name end_decl end_param end_parameter_list begin_block begin_comment create the command to run java including user specified options end_comment begin_expr_stmt begin_expr begin_call begin_name get actual vm command end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name add command to list end_name begin_argument_list begin_argument begin_expr begin_name list iterator end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment properties are part of the vm options end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name sys properties end_name begin_operator DOT end_operator begin_name add definitions to list end_name end_name begin_argument_list begin_argument begin_expr begin_name list iterator end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name is clone vm end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name sys properties end_name end_type begin_name cloned sys properties end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name sys properties end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name property set end_name end_type begin_name ps end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name property set end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name property set end_name begin_operator DOT end_operator begin_name builtin property set name end_name end_name end_type begin_name sys end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name property set end_name begin_operator DOT end_operator begin_name builtin property set name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sys end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ps end_name begin_operator DOT end_operator begin_name append builtin end_name end_name begin_argument_list begin_argument begin_expr begin_name sys end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cloned sys properties end_name begin_operator DOT end_operator begin_name add syspropertyset end_name end_name begin_argument_list begin_argument begin_expr begin_name ps end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cloned sys properties end_name begin_operator DOT end_operator begin_name add definitions to list end_name end_name begin_argument_list begin_argument begin_expr begin_name list iterator end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment boot classpath end_comment begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name bcp end_name begin_init begin_expr begin_call begin_name calculate bootclasspath end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name bcp end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name list iterator end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name bcp end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment main classpath end_comment begin_if begin_condition begin_expr begin_call begin_name have classpath end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name list iterator end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name list iterator end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name classpath end_name begin_operator DOT end_operator begin_name concat system classpath end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment now any assertions are added end_comment begin_if begin_condition begin_expr begin_call begin_name get assertions end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get assertions end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name apply assertions end_name begin_argument_list begin_argument begin_expr begin_name list iterator end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment jdk usage command line says that jar must be the first option as there is end_comment begin_comment a bug in jdk 1 4 that forces the jvm type to be specified as the first end_comment begin_comment option it is appended here as specified in the docs even though there is end_comment begin_comment in fact no order end_comment begin_if begin_condition begin_expr begin_name execute jar end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name list iterator end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment this is the classname to run as well as its arguments end_comment begin_comment in case of execute jar the executable is a jar file end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name java command end_name begin_operator DOT end_operator begin_name add command to list end_name end_name begin_argument_list begin_argument begin_expr begin_name list iterator end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return the filtering attribute end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get filtering end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name filtering end_name end_expr end_return end_block 
 begin_comment returns an inputstream to a given resource in the given file which may either be a directory or a zip file param file the file directory or jar in which to search for the resource must not be code null code param resource name the name of the resource for which a stream is required must not be code null code return a stream to the required resource or code null code if the resource cannot be found in the given file end_comment begin_type begin_specifier end_specifier begin_name input stream end_name end_type begin_name get resource stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name resource name end_name end_decl end_param end_parameter_list begin_block begin_try begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name resource end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument begin_argument begin_expr begin_name resource name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name resource end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_name resource end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if end_block end_then begin_else begin_block begin_comment is the zip file in the cache end_comment begin_decl_stmt begin_decl begin_type begin_name zip file end_name end_type begin_name zip file end_name begin_init begin_expr begin_operator LPAR end_operator begin_name zip file end_name begin_operator RPAR end_operator begin_call begin_name begin_name zip files end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name zip file end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name zip file end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name zip file end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name zip files end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument begin_argument begin_expr begin_name zip file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name zip entry end_name end_type begin_name entry end_name begin_init begin_expr begin_call begin_name begin_name zip file end_name begin_operator DOT end_operator begin_name get entry end_name end_name begin_argument_list begin_argument begin_expr begin_name resource name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name entry end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name begin_name zip file end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list begin_argument begin_expr begin_name entry end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if end_block end_else end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name resource name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name file end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_return begin_expr end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the input encoding param input encoding code string code end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set input encoding end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name input encoding end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name input encoding end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name illegal argument exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name input encoding end_name end_name begin_operator EQ end_operator begin_name input encoding end_name end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment constructor for brief j unit result formatter end_comment begin_specifier end_specifier begin_name brief j unit result formatter end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name results end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name string writer end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name result writer end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name print writer end_name begin_argument_list begin_argument begin_expr begin_name results end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 2 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name java test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the value of recurse return value of recurse end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is recurse end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name recurse end_name end_expr end_return end_block 
 begin_comment check style visibility modifier on end_comment begin_comment has the refid attribute of this element been set return true if the refid attribute has been set end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is reference end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name ref end_name begin_operator UNP end_operator end_expr end_return end_block 
 begin_comment create a reference to a named id in a particular project param p the project this reference is associated with param id the name of this reference since ant 1 6 3 end_comment begin_specifier end_specifier begin_name reference end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name id end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set ref id end_name begin_argument_list begin_argument begin_expr begin_name id end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set project end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name driver property info end_name begin_index end_index end_type begin_name get property info end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name url end_name end_decl end_param begin_param begin_decl begin_type begin_name properties end_name end_type begin_name info end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name sql exception end_name end_expr end_argument end_throws begin_block begin_return begin_expr begin_operator UNP end_operator begin_name begin_name driver property info end_name begin_index begin_expr end_expr end_index end_name end_expr end_return end_block 
 begin_comment assert that a property is null param property property name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name assert property unset end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name property end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert property equals end_name begin_argument_list begin_argument begin_expr begin_name property end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the management username to run the server optional and only applicable to wl 6 0 param username the management username of the server end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set username end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name username end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name management username end_name end_name begin_operator EQ end_operator begin_name username end_name end_expr end_expr_stmt end_block 
 begin_comment return any extra arguments for the compiler return extra compiler arguments end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get extra args end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name extra compiler args end_name begin_index begin_expr begin_call begin_name get index end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_return end_block 
 begin_specifier end_specifier begin_name dir set test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the name of the package the compiled jsp files should be in param pkg the name of the package end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set package end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name pkg end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name package name end_name end_name begin_operator EQ end_operator begin_name pkg end_name end_expr end_expr_stmt end_block 
 begin_comment report locale information param out stream to print to end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name do report locale end_name begin_parameter_list begin_param begin_decl begin_type begin_name print stream end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_block begin_comment calendar stuff end_comment begin_decl_stmt begin_decl begin_type begin_name calendar end_name end_type begin_name cal end_name begin_init begin_expr begin_call begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name get instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name time zone end_name end_type begin_name tz end_name begin_init begin_expr begin_call begin_name begin_name cal end_name begin_operator DOT end_operator begin_name get time zone end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name tz end_name begin_operator DOT end_operator begin_name get display name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name tz end_name begin_operator DOT end_operator begin_name get offset end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name cal end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name era end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name cal end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name year end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name cal end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name month end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name cal end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name day of month end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name cal end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name day of week end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_call begin_name begin_name cal end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name hour of day end_name end_name end_expr end_argument end_argument_list end_call begin_operator STAR end_operator begin_name minutes per hour end_name begin_operator PLUS end_operator begin_call begin_name begin_name cal end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name minute end_name end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator STAR end_operator begin_name seconds per minute end_name begin_operator PLUS end_operator begin_call begin_name begin_name cal end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name second end_name end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator STAR end_operator begin_name seconds per millisecond end_name begin_operator PLUS end_operator begin_call begin_name begin_name cal end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name millisecond end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the check every time unit param unit an enumerated code unit code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set check every unit end_name begin_parameter_list begin_param begin_decl begin_type begin_name unit end_name end_type begin_name unit end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name check every multiplier end_name begin_operator EQ end_operator begin_call begin_name begin_name unit end_name begin_operator DOT end_operator begin_name get multiplier end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the default date format config attribute param default date format configuration to be set unless it is null or empty string in which case ignored see org apache commons net ftp ftp client config end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set default date format config end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name default date format end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name default date format end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name default date format end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name default date format config end_name end_name begin_operator EQ end_operator begin_name default date format end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name configuration has been set end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment this sets whether to select a file if its dest file is present it could be a code negate code boolean but by doing things this way we get some documentation on how the system works a user looking at the documentation should clearly understand that the only files whose presence is being tested are those that already exist in the source directory hence the lack of a code destonly code option param fp an attribute set to either code srconly code or code both code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set present end_name begin_parameter_list begin_param begin_decl begin_type begin_name file presence end_name end_type begin_name fp end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name fp end_name begin_operator DOT end_operator begin_name get index end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name destmustexist end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_specifier end_specifier begin_name resource output test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the classloader to use to create an instance of the definition param class loader the class loader end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set class loader end_name begin_parameter_list begin_param begin_decl begin_type begin_name class loader end_name end_type begin_name class loader end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name class loader end_name end_name begin_operator EQ end_operator begin_name class loader end_name end_expr end_expr_stmt end_block 
 begin_comment launch the generate client using system api throws build exception if there is an error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute fork v 4 end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name borland deployment tool end_name begin_operator DOT end_operator begin_name bas end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name exec task end_name end_type begin_name exec task end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name exec task end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exec task end_name begin_operator DOT end_operator begin_name set dir end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exec task end_name begin_operator DOT end_operator begin_name set executable end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exec task end_name begin_operator DOT end_operator begin_name create arg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name debug end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name exec task end_name begin_operator DOT end_operator begin_name create arg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name exec task end_name begin_operator DOT end_operator begin_name create arg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exec task end_name begin_operator DOT end_operator begin_name create arg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment ejb jar file end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name exec task end_name begin_operator DOT end_operator begin_name create arg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ejbjarfile end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment client jar file end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name exec task end_name begin_operator DOT end_operator begin_name create arg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exec task end_name begin_operator DOT end_operator begin_name create arg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exec task end_name begin_operator DOT end_operator begin_name create arg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name clientjarfile end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exec task end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment have to catch this because of the semantics of calling main end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment set the time between each check param time a code long code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set check every end_name begin_parameter_list begin_param begin_decl begin_type begin_name long end_name end_type begin_name time end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name check every millis end_name begin_operator EQ end_operator begin_name time end_name end_expr end_expr_stmt end_block 
 begin_comment constructor for dummy instances see base filter reader base filter reader end_comment begin_specifier end_specifier begin_name line contains reg exp end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment validates the passed in attributes subclasses should chain to this super method to insure validation of boilerplate attributes p only the action attribute is required in the base class subclasses should check attributes accordingly exception org apache tools ant build exception if the attributes are invalid or incomplete end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name validate attributes end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name get action end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name is action valid end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name get action end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name classpath end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment exact match end_comment begin_comment return code true code if this code dewey decimal code is less than the other code dewey decimal code param other the other dewey decimal return true if less than other dewey decimal false otherwise end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is less than end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name dewey decimal end_name end_type begin_name other end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name is greater than or equal end_name begin_argument_list begin_argument begin_expr begin_name other end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment return the list of directories from this directory scanner that should be included on the command line param base dir the file base directory param ds the directory scanner to use for file scanning return a string containing the directory names end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get dirs end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name base dir end_name end_decl end_param begin_param begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name restrict end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get included directories end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name base dir end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment checks to make sure all settings are kosher in this case it means that the name attribute has been set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name verify settings end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name pattern end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set error end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment support for i selres i attribute param new value the new value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set selres end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name new value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name select resources without input stream end_name end_name begin_operator EQ end_operator begin_name new value end_name end_expr end_expr_stmt end_block 
 begin_comment return the classpath for this definition end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name get classpath end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get delegate end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get classpath end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment override object to string return some information about this algorithm end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name buf end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name algorithm end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment format this files collection as a string return a descriptive code string code end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name get ref end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name sb end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name path separator char end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_return begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment sets the classname of the custom selector param classname is the class which implements this selector end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classname end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name classname end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classname end_name end_name begin_operator EQ end_operator begin_name classname end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test jasper 41 end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name jsp mangler end_name end_type begin_name mangler end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name jasper 41 mangler end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment java keywords are not special end_comment begin_expr_stmt begin_expr begin_call begin_name assert mapped end_name begin_argument_list begin_argument begin_expr begin_name mangler end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment underscores go in front of invalid start chars end_comment begin_expr_stmt begin_expr begin_call begin_name assert mapped end_name begin_argument_list begin_argument begin_expr begin_name mangler end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment underscores at the front get an underscore too end_comment begin_expr_stmt begin_expr begin_call begin_name assert mapped end_name begin_argument_list begin_argument begin_expr begin_name mangler end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non java char at start underscore then the the hex value end_comment begin_expr_stmt begin_expr begin_call begin_name assert mapped end_name begin_argument_list begin_argument begin_expr begin_name mangler end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment and paths are stripped end_comment begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name s end_name begin_init begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert mapped end_name begin_argument_list begin_argument begin_expr begin_name mangler end_name end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator begin_name s end_name begin_operator PLUS end_operator begin_name s end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name s end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name s end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get any extra options or null for no argument needed return the extra options parameter to csc end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get extra options parameter end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name extra options end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name extra options end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_name extra options end_name end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr end_expr end_return end_block end_else end_if end_block 
 begin_comment closes this stream calls the tar buffer s close method throws io exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name close end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name buffer end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name throwable end_name end_type begin_name or cause end_name begin_parameter_list begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name deflt end_name end_decl end_param begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name ignore cnfe end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name deflt end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_name deflt end_name end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name begin_init begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get exception end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_name ignore cnfe end_name begin_operator UNP end_operator begin_name t end_name begin_operator UNP end_operator begin_name class not found exception end_name begin_operator QM end_operator begin_operator DP end_operator begin_name t end_name end_expr end_return end_block 
 begin_comment adds a code comment code element to the list of prefixes param comment the code comment code element to add to the list of comment prefixes to strip must not be code null code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add configured comment end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name comment end_name end_type begin_name comment end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name comments end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name comment end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment overrides the super version param r the reference to set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set refid end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name loader end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name classpath end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment should fail since a recursion will occur end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 3 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the path to the item in a clearcase view return mview path end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get view path end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name mview path end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name main end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name args end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment here is a comment with an embedded tab end_comment begin_if begin_condition begin_expr begin_name mybool end_name end_expr end_condition begin_then begin_block begin_comment here is a multi line with embedded tab comment end_comment begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name mychar end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment tab end_comment end_block end_then end_if begin_comment end of if mybool end_comment end_block 
 begin_comment get replacement code string code return replacement or null end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get value end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name value end_name end_expr end_return end_block 
 begin_comment task s classpath enables or disables including the default run time libraries from the executing vm optional defaults to false param include if true include default run time libraries end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set includejavaruntime end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name include end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name include java runtime end_name begin_operator EQ end_operator begin_name include end_name end_expr end_expr_stmt end_block 
 begin_comment specify whether the parser should be validating default is code true code p if set to false the validation will fail only if the parsed document is not well formed xml p this option is ignored if the specified class with link set class name string is not a sax 2 xml reader param bool if set to code false code only fail on malformed xml end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set lenient end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name bool end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name lenient end_name begin_operator EQ end_operator begin_name bool end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment if true debugging output will be generated when ejbc is executed param debug a boolean indicating if debugging output should be generated end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set debug end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name debug end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_operator EQ end_operator begin_name debug end_name end_expr end_expr_stmt end_block 
 begin_comment password for keystore integrity required param storepass the password for the keystore end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set storepass end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name storepass end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name storepass end_name end_name begin_operator EQ end_operator begin_name storepass end_name end_expr end_expr_stmt end_block 
 begin_comment get attribute type name return string containing type name end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get type name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m type name end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test value equals suffix without dot end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name checkprop end_name begin_init begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name checkprop end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns a hashtable which contains a list of ejb class files processed by the ejbc utility both source class files as well as stubs and skeletons the key for the hashtable is a string representing the path to the class file relative to the destination directory the value for the hashtable is a file object which reference the actual class file return the list of ejb files processed by the ejbc utility end_comment begin_type begin_specifier end_specifier begin_name hashtable end_name end_type begin_name get ejb files end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name ejb files end_name end_expr end_return end_block 
 begin_comment adds path to bootstrap class files return a path to be configured end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name create bootclasspath end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name bootclasspath end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name bootclasspath end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name bootclasspath end_name begin_operator DOT end_operator begin_name create path end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment set an inline sql command to execute nb properties are not expanded in this text unless link expand properties is set param sql an inline string containing the sql command end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add text end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name sql end_name end_decl end_param end_parameter_list begin_block begin_comment there is no need to expand properties here as that happens when transaction add text is end_comment begin_comment called to do so here would be an error end_comment begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name sql command end_name end_name begin_operator UNP end_operator begin_name sql end_name end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name concat filter test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a code file name mapper code param file name mapper a code file name mapper code throws illegal argument exception if attempting to add this code container mapper code to itself or if the specified code file name mapper code is itself a code container mapper code that contains this code container mapper code end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name add end_name begin_parameter_list begin_param begin_decl begin_type begin_name file name mapper end_name end_type begin_name file name mapper end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name this end_name begin_operator EQT end_operator begin_name file name mapper end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_name file name mapper end_name begin_operator UNP end_operator begin_name container mapper end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name container mapper end_name begin_operator RPAR end_operator begin_name file name mapper end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name contains end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name illegal argument exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name mappers end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name file name mapper end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name do end test 2 end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name text end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name set pattern end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name matches end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name matches end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument begin_argument begin_expr begin_name begin_name regexp matcher end_name begin_operator DOT end_operator begin_name match singleline end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name matches end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument begin_argument begin_expr begin_name begin_name regexp matcher end_name begin_operator DOT end_operator begin_name match multiline end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add extdirs to classpath param classpath the classpath to use deprecated since 1 5 x use org apache tools ant types path add extdirs instead end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add extdirs to classpath end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name classpath end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name classpath end_name begin_operator DOT end_operator begin_name add extdirs end_name end_name begin_argument_list begin_argument begin_expr begin_name extdirs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test signed jar end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment extract a uri from a component name param component name the stringified form for uri name return the uri or if not present end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name extract uri from component name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name component name end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name component name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name index end_name begin_init begin_expr begin_call begin_name begin_name component name end_name begin_operator DOT end_operator begin_name last index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name index end_name begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name component name end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name index end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment compare two times param t 1 the first time to compare param t 2 the second time to compare param g the timestamp granularity return a negative integer a positive integer or zero as t 1 is before after or equal to t 2 accounting for the specified granularity end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name int end_name end_type begin_name compare end_name begin_parameter_list begin_param begin_decl begin_type begin_name long end_name end_type begin_name t 1 end_name end_decl end_param begin_param begin_decl begin_type begin_name long end_name end_type begin_name t 2 end_name end_decl end_param begin_param begin_decl begin_type begin_name long end_name end_type begin_name g end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name diff end_name begin_init begin_expr begin_name t 1 end_name begin_operator MINUS end_operator begin_name t 2 end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name abs end_name begin_init begin_expr begin_call begin_name begin_name math end_name begin_operator DOT end_operator begin_name abs end_name end_name begin_argument_list begin_argument begin_expr begin_name diff end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_name abs end_name begin_operator GT end_operator begin_call begin_name begin_name math end_name begin_operator DOT end_operator begin_name abs end_name end_name begin_argument_list begin_argument begin_expr begin_name g end_name end_expr end_argument end_argument_list end_call begin_operator QM end_operator begin_call begin_name int end_name begin_argument_list begin_argument begin_expr begin_name diff end_name begin_operator SLASH end_operator begin_name abs end_name end_expr end_argument end_argument_list end_call begin_operator DP end_operator end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name next element end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name no such element exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name more end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name more end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_return begin_expr begin_name url end_name end_expr end_return end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name no such element exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_else end_if end_block 
 begin_comment start the watch dog end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name start end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name stopped end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name thread end_name end_type begin_name t end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name thread end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name set daemon end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name start end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the directory to use as a base directory for the new ant project defaults to the current project s basedir unless inheritall has been set to false in which case it doesn t have a default value this will override the basedir setting of the called project param dir new directory as code file code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name dir end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name dir end_name end_name begin_operator EQ end_operator begin_name dir end_name end_expr end_expr_stmt end_block 
 begin_comment gets the code view name code attribute return the view to find the specified folder in see set view name string view name end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get view name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name view name end_name end_expr end_return end_block 
 begin_comment constructor for archive file set end_comment begin_specifier end_specifier begin_name archive file set end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets behavior for when a duplicate file is about to be added one of code add code code preserve code or code fail code possible values are code add code keep both of the files code preserve code keep the first version of the file found code fail code halt a problem default for zip tasks is code add code param df a code duplicate code enumerated value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set duplicate end_name begin_parameter_list begin_param begin_decl begin_type begin_name duplicate end_name end_type begin_name df end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name duplicate end_name begin_operator EQ end_operator begin_call begin_name begin_name df end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment wrap the input stream with the internal filters necessary to perform the configuration settings end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name init internal filters end_name begin_parameter_list end_parameter_list begin_block begin_comment if i m removing an eof character do so first so that the other end_comment begin_comment filters don t see that character end_comment begin_expr_stmt begin_expr begin_name in end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name ctrlz end_name begin_operator EQT end_operator begin_name begin_name add asis remove end_name begin_operator DOT end_operator begin_name remove end_name end_name begin_operator RPAR end_operator begin_operator QM end_operator begin_operator UNP end_operator begin_call begin_name remove eof filter end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call begin_operator DP end_operator begin_name in end_name end_expr end_expr_stmt begin_comment change all eol characters to match the calculated eol string if end_comment begin_comment configured to do so append a trailing eol so that the file ends on end_comment begin_comment a eol end_comment begin_expr_stmt begin_expr begin_name in end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name normalize eol filter end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument begin_argument begin_expr begin_call begin_name calculate eol string end_name begin_argument_list begin_argument begin_expr begin_name eol end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get fixlast end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name tabs end_name begin_operator UNP end_operator begin_name begin_name add asis remove end_name begin_operator DOT end_operator begin_name asis end_name end_name end_expr end_condition begin_then begin_block begin_comment if filtering java source prevent changes to whitespace in end_comment begin_comment character and string literals end_comment begin_if begin_condition begin_expr begin_call begin_name get javafiles end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name in end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name mask java tab literals filter end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment add remove tabs end_comment begin_expr_stmt begin_expr begin_name in end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name tabs end_name begin_operator EQT end_operator begin_name begin_name add asis remove end_name begin_operator DOT end_operator begin_name add end_name end_name begin_operator RPAR end_operator begin_operator QM end_operator begin_operator LPAR end_operator begin_name reader end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_call begin_name add tab filter end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get tablength end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DP end_operator begin_operator LPAR end_operator begin_name reader end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_call begin_name remove tab filter end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get tablength end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment add missing eof character end_comment begin_expr_stmt begin_expr begin_name in end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name ctrlz end_name begin_operator EQT end_operator begin_name begin_name add asis remove end_name begin_operator DOT end_operator begin_name add end_name end_name begin_operator RPAR end_operator begin_operator QM end_operator begin_operator UNP end_operator begin_call begin_name add eof filter end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call begin_operator DP end_operator begin_name in end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name initialized end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_type begin_name void end_name end_type begin_name method 1 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name outer end_name begin_operator DOT end_operator begin_name inner end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment executes the ej bc utility using the sax parser provided param sax parser sax parser that may be used to process the ejb descriptors throws build exception if there is an error reading or parsing the xml descriptors end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute ejbc end_name begin_parameter_list begin_param begin_decl begin_type begin_name sax parser end_name end_type begin_name sax parser end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name i planet ejbc end_name end_type begin_name ejbc end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name i planet ejbc end_name begin_argument_list begin_argument begin_expr begin_name ejbdescriptor end_name end_expr end_argument begin_argument begin_expr begin_name iasdescriptor end_name end_expr end_argument begin_argument begin_expr begin_name dest end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get classpath end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name sax parser end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ejbc end_name begin_operator DOT end_operator begin_name set retain source end_name end_name begin_argument_list begin_argument begin_expr begin_name keepgenerated end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ejbc end_name begin_operator DOT end_operator begin_name set debug output end_name end_name begin_argument_list begin_argument begin_expr begin_name debug end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name iashome end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ejbc end_name begin_operator DOT end_operator begin_name set ias home dir end_name end_name begin_argument_list begin_argument begin_expr begin_name iashome end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ejbc end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name sax exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name begin_name i planet ejbc end_name begin_operator DOT end_operator begin_name ejbc exception end_name end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 3 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment creates a new code depend selector code instance end_comment begin_specifier end_specifier begin_name depend selector end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment overridden from zip class to deal with manifests and index lists param is the input stream param z out the zip output stream param v path the name this entry shall have in the archive param last modified last modification time for the entry param from archive the original archive we are copying this entry from will be null if we are not copying from an archive param mode the unix permissions to set throws io exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name zip file end_name begin_parameter_list begin_param begin_decl begin_type begin_name input stream end_name end_type begin_name is end_name end_decl end_param begin_param begin_decl begin_type begin_name zip output stream end_name end_type begin_name z out end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name v path end_name end_decl end_param begin_param begin_decl begin_type begin_name long end_name end_type begin_name last modified end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name from archive end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name mode end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name manifest name end_name begin_operator DOT end_operator begin_name equals ignore case end_name end_name begin_argument_list begin_argument begin_expr begin_name v path end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name double file pass end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_name double file pass end_name begin_operator UNP end_operator begin_name skip writing end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name fileset manifest end_name begin_argument_list begin_argument begin_expr begin_name from archive end_name end_expr end_argument begin_argument begin_expr begin_name is end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name index name end_name begin_operator DOT end_operator begin_name equals ignore case end_name end_name begin_argument_list begin_argument begin_expr begin_name v path end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_name index end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name archive type end_name begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_name index end_name begin_operator UNP end_operator begin_call begin_name begin_name v path end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name root entries end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name v path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name zip file end_name end_name begin_argument_list begin_argument begin_expr begin_name is end_name end_expr end_argument begin_argument begin_expr begin_name z out end_name end_expr end_argument begin_argument begin_expr begin_name v path end_name end_expr end_argument begin_argument begin_expr begin_name last modified end_name end_expr end_argument begin_argument begin_expr begin_name from archive end_name end_expr end_argument begin_argument begin_expr begin_name mode end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if end_block 
 begin_comment assumes a negative integer really is a positive integer that has wrapped around and re creates the original value param i the value to treat as unsigned int return the unsigned int as a long since 1 34 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name long end_name end_type begin_name adjust to long end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name i end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name i end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator STAR end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name long end_name begin_operator RPAR end_operator begin_name begin_name integer end_name begin_operator DOT end_operator begin_name max value end_name end_name begin_operator RPAR end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name i end_name end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr begin_name i end_name end_expr end_return end_block end_else end_if end_block 
 begin_comment whether to remove integer checks default false param flag on off flag end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set remove int checks end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name flag end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name remove int checks end_name begin_operator EQ end_operator begin_name flag end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test contains regexp end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name taskdef for regexp test end_name end_type begin_name my task end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name taskdef for regexp test end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name my task end_name begin_operator DOT end_operator begin_name set up end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name my task end_name begin_operator DOT end_operator begin_name test end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name my task end_name begin_operator DOT end_operator begin_name tear down end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment did this execute return in a failure see is failure int return true if and only if the exit code is interpreted as a failure since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is failure end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name is failure end_name begin_argument_list begin_argument begin_expr begin_call begin_name get exit value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test basedir attribute end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test ftpurl end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the url attribute return the url attribute end_comment begin_type begin_specifier end_specifier begin_name url end_name end_type begin_name get url end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name url end_name end_expr end_return end_block 
 begin_comment add an xml catalog as a nested element optional param catalog xml catalog to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add configured xml catalog end_name begin_parameter_list begin_param begin_decl begin_type begin_name xml catalog end_name end_type begin_name catalog end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name xml catalog end_name begin_operator DOT end_operator begin_name add configured xml catalog end_name end_name begin_argument_list begin_argument begin_expr begin_name catalog end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the dir attribute param dir the directory this filelist is relative to exception build exception if an error occurs end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name dir end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name check attributes allowed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name dir end_name end_name begin_operator EQ end_operator begin_name dir end_name end_expr end_expr_stmt end_block 
 begin_comment remove a string if it is a default exclude param s the string to attempt to remove return code true code if code s code was a default exclude and thus was removed code false code if code s code was not in the default excludes list to begin with since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name remove default exclude end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name default excludes end_name begin_operator DOT end_operator begin_name remove end_name end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test resourcesmatch multiple binary end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a delete characters filter param filter a code token filter delete characters code value since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add delete characters end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name token filter end_name begin_operator DOT end_operator begin_name delete characters end_name end_name end_type begin_name filter end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name filter readers end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name filter end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment comment to apply to files added to source safe param comment the comment to apply in source safe end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set comment end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name comment end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal comment end_name end_name begin_argument_list begin_argument begin_expr begin_name comment end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the text of the element param val the string to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add text end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name val end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name val end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment this method builds the file name to use in conjunction with directories p defaults to build xml if code genericantfile code is set this attribute is ignored p param antfile the short build file name defaults to build xml end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set antfile end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name antfile end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name antfile end_name end_name begin_operator EQ end_operator begin_name antfile end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test redirector 10 end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name test redirector 9 thru 12 end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name input handler end_name end_type begin_name get input handler end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name type end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name begin_name type end_name begin_operator DOT end_operator begin_name get input handler end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name refid end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_return begin_expr begin_call begin_name input handler end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get reference end_name begin_argument_list begin_argument begin_expr begin_name refid end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class cast exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name refid end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_then end_if begin_if begin_condition begin_expr begin_name classname end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name input handler end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name classpath utils end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument begin_argument begin_expr begin_call begin_name create loader end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name input handler end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get in file end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name in file end_name end_expr end_return end_block 
 begin_comment shall we assume jdk 1 5 command line switches return true if jdk 1 5 since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name assume java 15 end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get compiler version end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get compiler version end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name is java version end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name java 1 5 end_name end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get compiler version end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name is java version end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name java 1 5 end_name end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get compiler version end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name is java version end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name java 1 5 end_name end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment nothing to add for generic tool end_comment begin_comment get the vendor specific name of the jar that will be output the modification date of this jar will be checked against the dependent bean classes param base name the basename to use end_comment begin_type begin_name file end_name end_type begin_name get vendor output jar file end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name base name end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name dest dir end_name end_expr end_argument begin_argument begin_expr begin_name base name end_name begin_operator PLUS end_operator begin_name generic jar suffix end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment call a method on the object with one argument param method name the name of the method to call param arg type 1 the type of the first argument param arg 1 the value of the first argument param arg type 2 the type of the second argument param arg 2 the value of the second argument return the object returned by the method end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name invoke end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name method name end_name end_decl end_param begin_param begin_decl begin_type begin_name class end_name end_type begin_name arg type 1 end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name arg 1 end_name end_decl end_param begin_param begin_decl begin_type begin_name class end_name end_type begin_name arg type 2 end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name arg 2 end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name reflect util end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_name obj end_name end_expr end_argument begin_argument begin_expr begin_name method name end_name end_expr end_argument begin_argument begin_expr begin_name arg type 1 end_name end_expr end_argument begin_argument begin_expr begin_name arg 1 end_name end_expr end_argument begin_argument begin_expr begin_name arg type 2 end_name end_expr end_argument begin_argument begin_expr begin_name arg 2 end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment returns the classpath to be used when calling ej bc if no user classpath is specified the system classpath is returned instead return path the classpath to be used for ej bc end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name get classpath end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name cp end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name classpath end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name cp end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name concat system classpath end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name cp end_name begin_operator EQ end_operator begin_call begin_name begin_name classpath end_name begin_operator DOT end_operator begin_name concat system classpath end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_return begin_expr begin_name cp end_name end_expr end_return end_block 
 begin_comment sets whether default exclusions should be used or not param use default excludes true on yes when default exclusions should be used false off no when they shouldn t be used end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set defaultexcludes end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name use default excludes end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name default set defined end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name default set end_name begin_operator DOT end_operator begin_name set defaultexcludes end_name end_name begin_argument_list begin_argument begin_expr begin_name use default excludes end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test copy and remove end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name target end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name d end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert file is present end_name begin_argument_list begin_argument begin_expr begin_name d end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name f end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert file is not present end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name get full log end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert debuglog containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert debuglog containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment adds the classpath to convert param path the classpath to convert end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add class path end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name path end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name path end_name end_name begin_operator EQ end_operator begin_name path end_name end_expr end_expr_stmt end_block 
 begin_comment sets the login user id to use on the specified server param userid remote system userid end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set userid end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name userid end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name userid end_name end_name begin_operator EQ end_operator begin_name userid end_name end_expr end_expr_stmt end_block 
 begin_comment constructor for ccm checkin default end_comment begin_specifier end_specifier begin_name ccm checkin default end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set ccm action end_name begin_argument_list begin_argument begin_expr begin_name command checkin end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set task end_name begin_argument_list begin_argument begin_expr begin_name default task end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns a sax parser that may be used to process the xml descriptors return parser which may be used to process the ejb descriptors throws build exception if the parser cannot be created or configured end_comment begin_type begin_specifier end_specifier begin_name sax parser end_name end_type begin_name get parser end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name sax parser end_name end_type begin_name sax parser end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name sax parser factory end_name end_type begin_name sax parser factory end_name begin_init begin_expr begin_call begin_name begin_name sax parser factory end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sax parser factory end_name begin_operator DOT end_operator begin_name set validating end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name sax parser end_name begin_operator EQ end_operator begin_call begin_name begin_name sax parser factory end_name begin_operator DOT end_operator begin_name new sax parser end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name sax exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name parser configuration exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_return begin_expr begin_name sax parser end_name end_expr end_return end_block 
 begin_comment default constructor end_comment begin_specifier end_specifier begin_name none selector end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment sets this logger to produce emacs and other editor friendly output param emacs mode code true code if output is to be unadorned so that emacs and other editors can parse files names etc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set emacs mode end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name emacs mode end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name emacs mode end_name end_name begin_operator EQ end_operator begin_name emacs mode end_name end_expr end_expr_stmt end_block 
 begin_comment constructor for the filters file object end_comment begin_specifier end_specifier begin_name filters file end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test checksum algorithm end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name checksum algorithm end_name end_type begin_name algo end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name checksum algorithm end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name do test end_name begin_argument_list begin_argument begin_expr begin_name algo end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the file which must be more up to date than each of the source file s if the property is to be set param file the file we are checking against end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set target file end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name target file end_name end_name begin_operator EQ end_operator begin_name file end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name message logged end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment if true enables the unsafe keyword param unsafe the new unsafe value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set unsafe end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name unsafe end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name unsafe end_name end_name begin_operator EQ end_operator begin_name unsafe end_name end_expr end_expr_stmt end_block 
 begin_comment test that the watchdog ends the process end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test time out end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name process end_name end_type begin_name process end_name begin_init begin_expr begin_call begin_name get process end_name begin_argument_list begin_argument begin_expr begin_name time out end_name begin_operator STAR end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name now end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name watchdog end_name begin_operator DOT end_operator begin_name start end_name end_name begin_argument_list begin_argument begin_expr begin_name process end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name ret code end_name begin_init begin_expr begin_call begin_name begin_name process end_name begin_operator DOT end_operator begin_name wait for end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name elapsed end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator begin_name now end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name watchdog end_name begin_operator DOT end_operator begin_name killed process end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment assert true return code is invalid ret code ret code 0 end_comment begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name elapsed end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name time out test end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name elapsed end_name begin_operator GE end_operator begin_name time out test end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name elapsed end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name time out end_name begin_operator STAR end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name elapsed end_name begin_operator LT end_operator begin_name time out end_name begin_operator STAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment fulfill the resource collection contract return an iterator of resources end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_specifier end_specifier begin_name iterator end_name end_type begin_name iterator end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name base resource collection wrapper end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name die on circular reference end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_operator UNP end_operator begin_call begin_name fail fast end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_call begin_name cache collection end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment constructor for dummy instances see base filter reader base filter reader end_comment begin_specifier end_specifier begin_name token filter end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor for scp from message param session the ssh session to use end_comment begin_specifier end_specifier begin_name scp from message end_name begin_parameter_list begin_param begin_decl begin_type begin_name session end_name end_type begin_name session end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name session end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the jjtree grammar file to process param target file the grammar file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set target end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name target file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name target file end_name end_name begin_operator EQ end_operator begin_name target file end_name end_expr end_expr_stmt end_block 
 begin_comment check that something which is not a testcase generates no errors end_comment begin_comment at first even though this is incorrect end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no test case end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name test runner end_name end_type begin_name runner end_name begin_init begin_expr begin_call begin_name create runner end_name begin_argument_list begin_argument begin_expr begin_name begin_name no test case end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name runner end_name begin_operator DOT end_operator begin_name run end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment on junit 3 this is a failure on junit 4 this is an error end_comment begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name ret end_name begin_init begin_expr begin_call begin_name begin_name runner end_name begin_operator DOT end_operator begin_name get ret code end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name ret end_name begin_operator UNP end_operator begin_name begin_name j unit test runner end_name begin_operator DOT end_operator begin_name failures end_name end_name begin_operator UNP end_operator begin_name ret end_name begin_operator UNP end_operator begin_name begin_name j unit test runner end_name begin_operator DOT end_operator begin_name errors end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name ret end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment j unit 3 test end_comment begin_comment assert equals runner get formatter get error j unit test runner failures runner get ret code end_comment end_block 
 begin_comment constructor param object the object that the reference will refer to end_comment begin_specifier end_specifier begin_name hard reference end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name object end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name object end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment load the script from an external file optional param file the file containing the script source end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set src end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name src file end_name end_name begin_operator EQ end_operator begin_name file end_name end_expr end_expr_stmt end_block 
 begin_comment ignore exceptions this is to allow future implementations to log at a verbose level param thrown end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name ignore throwable end_name begin_parameter_list begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name thrown end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment shorthand method to set the message from a file param file the file from which to take the message end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set message file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name message end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name message end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name message end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name message end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test replace strings end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name expect log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment since ant 1 6 2 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name int end_name end_type begin_name launch end_name begin_parameter_list begin_param begin_decl begin_type begin_name j unit test end_name end_type begin_name t end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name halt error end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name stackfilter end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name halt fail end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name show out end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name output to format end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name log test listener events end_name end_decl end_param begin_param begin_decl begin_type begin_name properties end_name end_type begin_name props end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name set properties end_name end_name begin_argument_list begin_argument begin_expr begin_name props end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name j unit test runner end_name end_type begin_name runner end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name j unit test runner end_name begin_argument_list begin_argument begin_expr begin_name t end_name end_expr end_argument begin_argument begin_expr begin_name halt error end_name end_expr end_argument begin_argument begin_expr begin_name stackfilter end_name end_expr end_argument begin_argument begin_expr begin_name halt fail end_name end_expr end_argument begin_argument begin_expr begin_name show out end_name end_expr end_argument begin_argument begin_expr begin_name log test listener events end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name runner end_name begin_operator DOT end_operator begin_name forked end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name runner end_name begin_operator DOT end_operator begin_name output to formatters end_name end_name begin_operator EQ end_operator begin_name output to format end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name transfer formatters end_name begin_argument_list begin_argument begin_expr begin_name runner end_name end_expr end_argument begin_argument begin_expr begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name runner end_name begin_operator DOT end_operator begin_name run end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name runner end_name begin_operator DOT end_operator begin_name get ret code end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment convenience method to copy a file from a source to a destination specifying if token filtering must be used param source file name of file to copy from must not be code null code param dest file name of file to copy to must not be code null code param filters the collection of filters to apply to this copy throws io exception if the copying fails end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name copy file end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name source file end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name dest file end_name end_decl end_param begin_param begin_decl begin_type begin_name filter set collection end_name end_type begin_name filters end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name copy file end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name source file end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name dest file end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name filters end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the command line for the exe on vms hands off to link setup command line for vms execute string param exe executable param command command to execute end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name setup command line end_name begin_parameter_list begin_param begin_decl begin_type begin_name execute end_name end_type begin_name exe end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name command end_name end_decl end_param end_parameter_list begin_block begin_comment on vms platform we need to create a special java options file end_comment begin_comment containing the arguments and classpath for the java command end_comment begin_comment the special file is supported by the v switch on the vms jvm end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name setup command line for vms end_name begin_argument_list begin_argument begin_expr begin_name exe end_name end_expr end_argument begin_argument begin_expr begin_name command end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set commandline end_name end_name begin_argument_list begin_argument begin_expr begin_name command end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment set the filenames attribute param filenames a string contains filenames separated by or by whitespace end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set files end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name filenames end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name check attributes allowed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name filenames end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name filenames end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string tokenizer end_name end_type begin_name tok end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string tokenizer end_name begin_argument_list begin_argument begin_expr begin_name filenames end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name tok end_name begin_operator DOT end_operator begin_name has more tokens end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name filenames end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name tok end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add twelve end_name begin_parameter_list begin_param begin_decl begin_type begin_name class end_name end_type begin_name c end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment file is not found in specified filepath end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test search in path is there end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment new section not starting with name attribute end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 6 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name output end_name begin_init begin_expr begin_call begin_name get log end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name has warning end_name begin_init begin_expr begin_call begin_name begin_name output end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name has warning end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment adds a task to this target param task the task to be added must not be code null code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add task end_name begin_parameter_list begin_param begin_decl begin_type begin_name task end_name end_type begin_name task end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name children end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name task end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the verbose flag param verbose if true output more verbose logging since ant 1 6 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set verbose end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name verbose end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name verbose end_name end_name begin_operator EQ end_operator begin_name verbose end_name end_expr end_expr_stmt end_block 
 begin_comment get the value of this header return value as string end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get value end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name value end_name end_expr end_return end_block 
 begin_comment log message project msg debug end_comment begin_comment implementation of ui keyboard interactive prompt keyboard interactive param destination not used param name not used param instruction not used param prompt the method checks if this is one in length param echo the method checks if the first element is false return the password in an size one array if there is a password and if the prompt and echo checks pass end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name prompt keyboard interactive end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name destination end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name instruction end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name prompt end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name boolean end_name begin_index end_index end_name end_type begin_name echo end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name begin_name prompt end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name begin_name echo end_name begin_index begin_expr end_expr end_index end_name begin_operator UNP end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name password end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name response end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name response end_name begin_index begin_expr end_expr end_index end_name begin_operator EQ end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name password end_name end_name end_expr end_expr_stmt begin_return begin_expr begin_name response end_name end_expr end_return end_block 
 begin_comment specify a project within the pvcs repository to extract files from param p the pvcs project to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add pvcsproject end_name begin_parameter_list begin_param begin_decl begin_type begin_name pvcs project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name pvcs projects end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment overrides the super version param r the reference to set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set refid end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name file end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name base dir end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment a unit test for j unit end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test catch no dtd end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test documentation claims on copy end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name io exception end_name end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name test real test end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment see build listener target started end_comment begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name target started end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name initialized end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name log end_name end_type begin_name log end_name begin_init begin_expr begin_call begin_name get log end_name begin_argument_list begin_argument begin_expr begin_name target log end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get target end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment since task log category includes target we don t really end_comment begin_comment need this message end_comment begin_expr_stmt begin_expr begin_call begin_name real log end_name begin_argument_list begin_argument begin_expr begin_name log end_name end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get target end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test fileset out of date end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect property unset end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name xest end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource collection end_name end_type begin_name rc end_name end_decl end_param begin_param begin_decl begin_type begin_name resource comparator end_name end_type begin_name c end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name rc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets the target type attribute return the target type value end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get target type end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name target type end_name end_expr end_return end_block 
 begin_specifier end_specifier begin_name output end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write run end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name last shadow end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name last end_name end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name last shadow end_name begin_operator LT end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name allowable block size end_name end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name current char shadow end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name current char end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name data end_name end_type begin_name data shadow end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name data end_name end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name data shadow end_name begin_operator DOT end_operator begin_name in use end_name begin_index begin_expr begin_name current char shadow end_name end_expr end_index end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name byte end_name end_type begin_name ch end_name begin_init begin_expr begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator begin_name current char shadow end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name run length shadow end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name run length end_name end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name crc end_name begin_operator DOT end_operator begin_name update crc end_name end_name begin_argument_list begin_argument begin_expr begin_name current char shadow end_name end_expr end_argument begin_argument begin_expr begin_name run length shadow end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_switch begin_condition begin_expr begin_name run length shadow end_name end_expr end_condition begin_block begin_case begin_expr end_expr begin_expr_stmt begin_expr begin_name begin_name data shadow end_name begin_operator DOT end_operator begin_name block end_name begin_index begin_expr begin_name last shadow end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_name ch end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name last end_name end_name begin_operator EQ end_operator begin_name last shadow end_name begin_operator PLUS end_operator end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr end_expr begin_expr_stmt begin_expr begin_name begin_name data shadow end_name begin_operator DOT end_operator begin_name block end_name begin_index begin_expr begin_name last shadow end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_name ch end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name data shadow end_name begin_operator DOT end_operator begin_name block end_name begin_index begin_expr begin_name last shadow end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_name ch end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name last end_name end_name begin_operator EQ end_operator begin_name last shadow end_name begin_operator PLUS end_operator end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr end_expr begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name byte end_name begin_index end_index end_type begin_name block end_name begin_init begin_expr begin_name begin_name data shadow end_name begin_operator DOT end_operator begin_name block end_name end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name block end_name begin_index begin_expr begin_name last shadow end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_name ch end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name block end_name begin_index begin_expr begin_name last shadow end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_name ch end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name block end_name begin_index begin_expr begin_name last shadow end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_name ch end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name last end_name end_name begin_operator EQ end_operator begin_name last shadow end_name begin_operator PLUS end_operator end_expr end_expr_stmt end_block begin_break end_break end_case begin_default begin_block begin_expr_stmt begin_expr begin_name run length shadow end_name begin_operator UNP end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name data shadow end_name begin_operator DOT end_operator begin_name in use end_name begin_index begin_expr begin_name run length shadow end_name end_expr end_index end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name byte end_name begin_index end_index end_type begin_name block end_name begin_init begin_expr begin_name begin_name data shadow end_name begin_operator DOT end_operator begin_name block end_name end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name block end_name begin_index begin_expr begin_name last shadow end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_name ch end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name block end_name begin_index begin_expr begin_name last shadow end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_name ch end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name block end_name begin_index begin_expr begin_name last shadow end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_name ch end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name block end_name begin_index begin_expr begin_name last shadow end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_name ch end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name block end_name begin_index begin_expr begin_name last shadow end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator begin_name run length shadow end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name last end_name end_name begin_operator EQ end_operator begin_name last shadow end_name begin_operator PLUS end_operator end_expr end_expr_stmt end_block begin_break end_break end_default end_block end_switch end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name end block end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name init block end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write run end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment set the resource selector param s the resource selector to negate throws illegal state exception if already set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource selector end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name sel end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name illegal state exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name sel end_name begin_operator EQ end_operator begin_name s end_name end_expr end_expr_stmt end_block 
 begin_comment sets the database connection url required param url the url to set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set url end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name url end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name url end_name end_name begin_operator EQ end_operator begin_name url end_name end_expr end_expr_stmt end_block 
 begin_comment override methods that use code equals code comparisons on elements param o the object to search for param pos the position from which to search backward return the position of the object 1 if not found see java util vector index of object int end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name int end_name end_type begin_name last index of end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name o end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name pos end_name end_decl end_param end_parameter_list begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr begin_name pos end_name end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator GE end_operator end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator MMINUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_call begin_name get end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_name o end_name end_expr end_condition begin_then begin_block begin_return begin_expr begin_name i end_name end_expr end_return end_block end_then end_if end_block end_for begin_return begin_expr begin_operator MINUS end_operator end_expr end_return end_block 
 begin_comment set the resolver object to callback param resolver the apache catalog resolver end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set resolver end_name begin_parameter_list begin_param begin_decl begin_type begin_name apache catalog resolver end_name end_type begin_name resolver end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name resolver end_name end_name begin_operator EQ end_operator begin_name resolver end_name end_expr end_expr_stmt end_block 
 begin_comment add a set of directories upon which to operate param set the dir set to add since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add dirset end_name begin_parameter_list begin_param begin_decl begin_type begin_name dir set end_name end_type begin_name set end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name set end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the cvs server version return cvs server version end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get server version end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name server version end_name end_expr end_return end_block 
 begin_comment validate the parameters specified for task exception build exception if a parameter is not correctly set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name validate end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator EQT end_operator begin_name mypackage end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator EQT end_operator begin_name mydestfile end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator EQT end_operator begin_name mystart tag end_name begin_operator UNP end_operator begin_operator EQT end_operator begin_name mystart date end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name mystart tag end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name mystart date end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator EQT end_operator begin_name myend tag end_name begin_operator UNP end_operator begin_operator EQT end_operator begin_name myend date end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name myend tag end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name myend date end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment specifies a single xml document to be styled should be used with the tt out tt attribute required if tt out tt is set param in file the input file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set in end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name in file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name in file end_name end_name begin_operator EQ end_operator begin_name in file end_name end_expr end_expr_stmt end_block 
 begin_comment add a new source directory to the compile param src a fileset end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add src end_name begin_parameter_list begin_param begin_decl begin_type begin_name file set end_name end_type begin_name src end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name src end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the prefix attribute return the prefix attribute since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get prefix end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name prefix end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name testrvexists end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the list of classes upon which root classes depend this is a list of java classnames in dot notation return an enumeration of strings each being the name of a java class in dot notation end_comment begin_type begin_specifier end_specifier begin_name enumeration end_name end_type begin_name get class dependencies end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name determined end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name determine dependencies end_name begin_argument_list begin_argument begin_expr begin_name file dependencies end_name end_expr end_argument begin_argument begin_expr begin_name class dependencies end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name class dependencies end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment sets the list of comment prefixes to strip param comments a list of strings each of which is a prefix for a comment line must not be code null code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set comments end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name vector end_name end_type begin_name comments end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name comments end_name end_name begin_operator EQ end_operator begin_name comments end_name end_expr end_expr_stmt end_block 
 begin_comment throws an exception if this permission is revoked param perm the permission being checked end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check revoked end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name security end_name begin_operator DOT end_operator begin_name permission end_name end_name end_type begin_name perm end_name end_decl end_param end_parameter_list begin_block begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name revoked permissions end_name begin_operator DOT end_operator begin_name list iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name begin_name permissions end_name begin_operator DOT end_operator begin_name permission end_name end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name matches end_name begin_argument_list begin_argument begin_expr begin_name perm end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name security exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name perm end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_for end_block 
 begin_comment get the content of this string resource return a string if the project has been set properties replacement will be attempted end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get content end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name string resource end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get content end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name value end_name begin_init begin_expr begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name value end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_name value end_name end_expr end_return end_block end_then end_if begin_return begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator QM end_operator begin_name value end_name begin_operator DP end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace properties end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment set the value of the new cmp scheme the old cmp scheme locates the websphere cmp descriptor based on the naming convention where the websphere cmp file is expected to be named with the bean name as the prefix under this scheme the name of the cmp descriptor does not match the name actually used in the main websphere ejb descriptor also descriptors which contain multiple cmp references could not be used param new cmp a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set new cmp end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name new cmp end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name new cmp end_name end_name begin_operator EQ end_operator begin_name new cmp end_name end_expr end_expr_stmt end_block 
 begin_comment fulfill the resource collection contract return whether this is a filesystem only resource collection end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name is filesystem only end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name base resource collection container end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name is filesystem only end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name die on circular reference end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment first the easy way if all children are filesystem only return true end_comment begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name go early end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name rc end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_name go early end_name begin_operator UNP end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_name go early end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name resource collection end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name is filesystem only end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_if begin_condition begin_expr begin_name go early end_name end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_comment now check each resource in case the child only lets through files from any children it may have end_comment begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name cache collection end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name file resource end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_for begin_return begin_expr end_expr end_return end_block 
 begin_comment fulfill the resource collection contract return number of elements as int end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name int end_name end_type begin_name size end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name get ref end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name size end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name validate end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name coll end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment this method is vms specific and used by get proc environment parses vms logicals from code in code and adds them to code environment code code in code is expected to be the output of show logical the method takes care of parsing the output correctly as well as making sure that a logical defined in multiple tables only gets added from the highest order table logicals with multiple equivalence names are mapped to a variable with multiple values separated by a comma end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name vector end_name end_type begin_name add vms logicals end_name begin_parameter_list begin_param begin_decl begin_type begin_name vector end_name end_type begin_name environment end_name end_decl end_param begin_param begin_decl begin_type begin_name buffered reader end_name end_type begin_name in end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name hash map end_name end_type begin_name logicals end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name hash map end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name log name end_name begin_init begin_expr end_expr end_init begin_operator UNP end_operator begin_name log value end_name begin_init begin_expr end_expr end_init begin_operator UNP end_operator begin_name new log name end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name line end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_operator LPAR end_operator begin_name line end_name begin_operator EQ end_operator begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_block begin_comment parse the vms logicals into required format var val val 2 end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment further equivalence name of previous logical end_comment begin_if begin_condition begin_expr begin_name log name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name log value end_name begin_operator UNP end_operator begin_operator PLUS end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment new logical end_comment begin_if begin_condition begin_expr begin_name log name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name logicals end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name log name end_name end_expr end_argument begin_argument begin_expr begin_name log value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name eq index end_name begin_init begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name new log name end_name begin_operator EQ end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name eq index end_name begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name logicals end_name begin_operator DOT end_operator begin_name contains key end_name end_name begin_argument_list begin_argument begin_expr begin_name new log name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment already got this logical from a higher order table end_comment begin_expr_stmt begin_expr begin_name log name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name log name end_name begin_operator EQ end_operator begin_name new log name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name log value end_name begin_operator EQ end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name eq index end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if end_else end_if end_block end_while begin_comment since we look ahead before adding there s one last env var end_comment begin_if begin_condition begin_expr begin_name log name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name logicals end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name log name end_name end_expr end_argument begin_argument begin_expr begin_name log value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name logicals end_name begin_operator DOT end_operator begin_name key set end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name logical end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name environment end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name logical end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name logicals end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name logical end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_name environment end_name end_expr end_return end_block 
 begin_comment returns the name of the star team user return the name of the star team user end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get user name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name user name end_name end_name end_expr end_return end_block 
 begin_comment filename of a property file to load param file filename ant attribute group noname end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name file end_name end_name begin_operator EQ end_operator begin_name file end_name end_expr end_expr_stmt end_block 
 begin_comment return at most the 30 first chars of the label logging a warning message about the truncation return at most the 30 first chars of the label end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get short label end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name short label end_name end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name label end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name label end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name short label end_name begin_operator EQ end_operator begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name label end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name short label end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name short label end_name begin_operator EQ end_operator begin_name label end_name end_expr end_expr_stmt end_block end_else end_if begin_return begin_expr begin_name short label end_name end_expr end_return end_block 
 begin_comment determines whether output will be compressed param compress if true use compression end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set compression end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name compress end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name compression end_name end_name begin_operator EQ end_operator begin_name compress end_name end_expr end_expr_stmt end_block 
 begin_comment checks for the magic property that enables class loader reuse for taskdef and typedef in ant 1 5 and earlier end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name is magic property set end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name reuse loader ref end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test unnamed nesting end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name log end_name begin_init begin_expr begin_call begin_name get log end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name log end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 7 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_block begin_comment 2 is 0 and even so it is considered end_comment begin_comment failure on any platform currently supported end_comment begin_comment by execute is failure end_comment begin_return begin_expr end_expr end_return end_block 
 begin_comment adds text to the task using the wrapper param buf a character array of the text within the element will not be code null code param start the start element in the array param count the number of characters to read from the array param context the current context exception sax parse exception if the element doesn t support text see project helper add text project java lang object char int int end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name characters end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name char end_name begin_index end_index end_name end_type begin_name buf end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name start end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name count end_name end_decl end_param begin_param begin_decl begin_type begin_name ant xml context end_name end_type begin_name context end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name sax parse exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name runtime configurable end_name end_type begin_name wrapper end_name begin_init begin_expr begin_call begin_name begin_name context end_name begin_operator DOT end_operator begin_name current wrapper end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name wrapper end_name begin_operator DOT end_operator begin_name add text end_name end_name begin_argument_list begin_argument begin_expr begin_name buf end_name end_expr end_argument begin_argument begin_expr begin_name start end_name end_expr end_argument begin_argument begin_expr begin_name count end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment auto commit flag for database connection optional default false param autocommit the autocommit to set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set autocommit end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name autocommit end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name autocommit end_name end_name begin_operator EQ end_operator begin_name autocommit end_name end_expr end_expr_stmt end_block 
 begin_comment map a namespaced uri name to an internal string format for bc purposes the names from the ant core uri will be mapped to name other names will be mapped to uri name param uri the namepace uri param name the localname return the stringified form of the ns name end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name gen component name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name uri end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name uri end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name uri end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name uri end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name ant core uri end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name name end_name end_expr end_return end_block end_then end_if begin_return begin_expr begin_name uri end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name name end_name end_expr end_return end_block 
 begin_comment if true emulate sun s jar utility by not adding parent directories optional defaults to false param f if true emulate sun s jar by not adding parent directories end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set filesonly end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name f end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name do filesonly end_name begin_operator EQ end_operator begin_name f end_name end_expr end_expr_stmt end_block 
 begin_comment logs information about failed tests potentially stops processing by throwing a build exception if a failure error occurred or sets a property param exit value the exit value of the test param was killed if true the test had been killed param test the test in question param name the name of the test since ant 1 6 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name act on test result end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name exit value end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name was killed end_name end_decl end_param begin_param begin_decl begin_type begin_name j unit test end_name end_type begin_name test end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name test result holder end_name end_type begin_name t end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name test result holder end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name t end_name begin_operator DOT end_operator begin_name exit code end_name end_name begin_operator EQ end_operator begin_name exit value end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name t end_name begin_operator DOT end_operator begin_name timed out end_name end_name begin_operator EQ end_operator begin_name was killed end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name act on test result end_name begin_argument_list begin_argument begin_expr begin_name t end_name end_expr end_argument begin_argument begin_expr begin_name test end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment access the stylesheet to be used as a resource return stylesheet as a resource end_comment begin_type begin_specifier end_specifier begin_name resource end_name end_type begin_name get stylesheet end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name xslname end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name noframes end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name format end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name xslname end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name style dir end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment if style dir is not specified we have to retrieve end_comment begin_comment the stylesheet from the classloader end_comment begin_decl_stmt begin_decl begin_type begin_name url resource end_name end_type begin_name stylesheet end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name url resource end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name url end_name end_type begin_name stylesheet url end_name begin_init begin_expr begin_call begin_name get class end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get class loader end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get resource end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name xslname end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name stylesheet end_name begin_operator DOT end_operator begin_name set url end_name end_name begin_argument_list begin_argument begin_expr begin_name stylesheet url end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name stylesheet end_name end_expr end_return end_block end_then end_if begin_comment if we are here then the style dir is here and we end_comment begin_comment should read the stylesheet from the filesystem end_comment begin_decl_stmt begin_decl begin_type begin_name file resource end_name end_type begin_name stylesheet end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file resource end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name stylesheet file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name style dir end_name end_expr end_argument begin_argument begin_expr begin_name xslname end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name stylesheet end_name begin_operator DOT end_operator begin_name set file end_name end_name begin_argument_list begin_argument begin_expr begin_name stylesheet file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name stylesheet end_name end_expr end_return end_block 
 begin_comment creates a new instance of a data type param type name the name of the data type to create an instance of must not be code null code return an instance of the specified data type or code null code if the data type name is not recognised exception build exception if the data type name is recognised but instance creation fails end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name create data type end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name type name end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_return begin_expr begin_call begin_name create component end_name begin_argument_list begin_argument begin_expr begin_name type name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment where oh where has my test case 3 gone end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 4 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 1 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment creates a new instance of a cvs entry param date the date param author the author param comment a comment to be added to the revision end_comment begin_specifier end_specifier begin_name cvs entry end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name date end_name end_type begin_name date end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name author end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name comment end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name date end_name end_name begin_operator EQ end_operator begin_name date end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name author end_name end_name begin_operator EQ end_operator begin_name author end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name comment end_name end_name begin_operator EQ end_operator begin_name comment end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test full path matches case insensitive end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name login suceeded end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name change remote dir end_name begin_argument_list begin_argument begin_expr begin_name remote tmp dir end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name ftp directory scanner end_name end_name end_type begin_name ds end_name begin_init begin_expr begin_call begin_name begin_name my ftp task end_name begin_operator DOT end_operator begin_name new scanner end_name end_name begin_argument_list begin_argument begin_expr begin_name ftp end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set case sensitive end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set basedir end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set includes end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name compare files end_name begin_argument_list begin_argument begin_expr begin_name ds end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr end_block end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block 
 begin_name rmic file name mapper end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment validation code throws build exception if validation failed end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name validate end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name dest file end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name error no dest file end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name dest file end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name error dest file is dir end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name wsdl end_name begin_operator DOT end_operator begin_name validate end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor for scp from message by sftp param verbose if true log extra information param session the scp session to use param a remote file the remote file name param a local file the local file param recursive if true use recursion since ant 1 7 end_comment begin_specifier end_specifier begin_name scp from message by sftp end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name verbose end_name end_decl end_param begin_param begin_decl begin_type begin_name session end_name end_type begin_name session end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name a remote file end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name a local file end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name recursive end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name verbose end_name end_expr end_argument begin_argument begin_expr begin_name session end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name verbose end_name end_name begin_operator EQ end_operator begin_name verbose end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name remote file end_name end_name begin_operator EQ end_operator begin_name a remote file end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name local file end_name end_name begin_operator EQ end_operator begin_name a local file end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name is recursive end_name end_name begin_operator EQ end_operator begin_name recursive end_name end_expr end_expr_stmt end_block 
 begin_comment set additional arguments for iiop param iiop opts additional arguments for iiop end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set iiopopts end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name iiop opts end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name iiop opts end_name end_name begin_operator EQ end_operator begin_name iiop opts end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test appending end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name p end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name l end_name begin_init begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name set location end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name l end_name begin_operator EQ end_operator begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name set path end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name l end_name begin_operator EQ end_operator begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name l end_name begin_operator EQ end_operator begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name create path end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set location end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name l end_name begin_operator EQ end_operator begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test override 2 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the active mapper may be null return mapper or null since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name file name mapper end_name end_type begin_name get mapper end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name mapper end_name end_expr end_return end_block 
 begin_comment sets the author of the cvs entry param author the author end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set author end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name author end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name author end_name end_name begin_operator EQ end_operator begin_name author end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test each end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 1 end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name login suceeded end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name change remote dir end_name begin_argument_list begin_argument begin_expr begin_name remote tmp dir end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name ftp directory scanner end_name end_name end_type begin_name ds end_name begin_init begin_expr begin_call begin_name begin_name my ftp task end_name begin_operator DOT end_operator begin_name new scanner end_name end_name begin_argument_list begin_argument begin_expr begin_name ftp end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set basedir end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set includes end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name compare files end_name begin_argument_list begin_argument begin_expr begin_name ds end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block end_block end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test with space simple end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name expect log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment evaluate two times against this time comparison param t 1 the first time to compare param t 2 the second time to compare param g the timestamp granularity return true if the comparison result fell within the parameters of this time comparison end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name evaluate end_name begin_parameter_list begin_param begin_decl begin_type begin_name long end_name end_type begin_name t 1 end_name end_decl end_param begin_param begin_decl begin_type begin_name long end_name end_type begin_name t 2 end_name end_decl end_param begin_param begin_decl begin_type begin_name long end_name end_type begin_name g end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name cmp end_name begin_init begin_expr begin_call begin_name get index end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name cmp end_name begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name cmp end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_name t 1 end_name begin_operator MINUS end_operator begin_name g end_name begin_operator LT end_operator begin_name t 2 end_name end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name cmp end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_name t 1 end_name begin_operator PLUS end_operator begin_name g end_name begin_operator GT end_operator begin_name t 2 end_name end_expr end_return end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name math end_name begin_operator DOT end_operator begin_name abs end_name end_name begin_argument_list begin_argument begin_expr begin_name t 1 end_name begin_operator MINUS end_operator begin_name t 2 end_name end_expr end_argument end_argument_list end_call begin_operator LE end_operator begin_name g end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name input source end_name end_type begin_name resolve entity end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name public id end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name system id end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name input source end_name end_type begin_name result end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name process external catalogs end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name resource location end_name end_type begin_name matching entry end_name begin_init begin_expr begin_call begin_name find matching entry end_name begin_argument_list begin_argument begin_expr begin_name public id end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name matching entry end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name matching entry end_name begin_operator DOT end_operator begin_name get public id end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name matching entry end_name begin_operator DOT end_operator begin_name get location end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name filesystem lookup end_name begin_argument_list begin_argument begin_expr begin_name matching entry end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name result end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name classpath lookup end_name begin_argument_list begin_argument begin_expr begin_name matching entry end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name result end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name input source end_name begin_operator RPAR end_operator begin_call begin_name begin_name resolve entity end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_name resolver impl end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_name public id end_name end_expr begin_operator UNP end_operator begin_expr begin_name system id end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name ex end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_then end_if end_block end_then begin_else begin_block begin_comment end_comment begin_comment we didn t match a resource location but since we end_comment begin_comment only support public and uri entry types internally end_comment begin_comment it is still possible that there is another entry in end_comment begin_comment an external catalog that will match we call end_comment begin_comment apache resolver s resolve entity method to cover end_comment begin_comment this possibility end_comment begin_comment end_comment begin_try begin_block begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name input source end_name begin_operator RPAR end_operator begin_call begin_name begin_name resolve entity end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_name resolver impl end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_name public id end_name end_expr begin_operator UNP end_operator begin_expr begin_name system id end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name ex end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_else end_if begin_return begin_expr begin_name result end_name end_expr end_return end_block 
 begin_comment get name of the project in the pvcs repository return string end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get pvcsproject end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name pvcs project end_name end_expr end_return end_block 
 begin_comment indicate whether only package protected and public classes and members are to be included in the scope processed param b true if scope is to be package level end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set package end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add arg if end_name begin_argument_list begin_argument begin_expr begin_name b end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment tests the combination of the newer parameter and the server timezone config parameter in the get action the default configuration is an ftp server on localhost which formats timestamps as gmt end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test timezone get end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name count log listener end_name end_type begin_name log end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name count log listener end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name add build listener end_name begin_argument_list begin_argument begin_expr begin_name log end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name get count end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the the login password to use required if tt userid tt is set param p a code string code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set password end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name password end_name end_name begin_operator EQ end_operator begin_name p end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name next element end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name no such element exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name e 1 end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name begin_name e 1 end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr begin_call begin_name begin_name e 2 end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_else end_if end_block 
 begin_comment constructor param src file the file to read throws build exception if there is an error end_comment begin_specifier end_specifier begin_name one liner end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name src file end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name src file end_name end_name begin_operator EQ end_operator begin_name src file end_name end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name reader end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name buffered reader end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name encoding end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator UNP end_operator begin_call begin_name file reader end_name begin_argument_list begin_argument begin_expr begin_name src file end_name end_expr end_argument end_argument_list end_call begin_operator DP end_operator begin_operator UNP end_operator begin_call begin_name input stream reader end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_name src file end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name encoding end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_argument begin_argument begin_expr begin_name inbuflen end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name next line end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name src file end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 1 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment this implementation returns a mapper that may return up to two file names ul li for jrmp it will return get stub class suffix and get skel class suffix if jdk 1 1 is used li li for idl it will return a random name causing lt rmic gt to always recompile li li for iiop it will return get stub class suffix for interfaces and get stub class suffix for non interfaces and determine the interface and create stub from that li ul return a code file name mapper code end_comment begin_type begin_specifier end_specifier begin_name file name mapper end_name end_type begin_name get mapper end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name mapper end_name end_expr end_return end_block 
 begin_comment returns a configuration associated to a specific database if you want to test on your specific base you d better tweak this to make it run or add your own database the driver lib should be dropped into the system classloader end_comment begin_type begin_specifier end_specifier begin_name properties end_name end_type begin_name get properties end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name database end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name properties end_name end_type begin_name props end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_switch begin_condition begin_expr begin_name database end_name end_expr end_condition begin_block begin_case begin_expr begin_name oracle end_name end_expr begin_expr_stmt begin_expr begin_name props end_name begin_operator EQ end_operator begin_call begin_name get properties end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name mysql end_name end_expr begin_expr_stmt begin_expr begin_name props end_name begin_operator EQ end_operator begin_call begin_name get properties end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name null end_name end_expr end_case begin_default begin_expr_stmt begin_expr begin_name props end_name begin_operator EQ end_operator begin_call begin_name get properties end_name begin_argument_list begin_argument begin_expr begin_name null driver end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_default end_block end_switch begin_comment look for the driver path end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name path end_name begin_init begin_expr begin_call begin_name find resource path end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name driver end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name path end_name end_expr end_argument begin_argument begin_expr begin_name path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name sql end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name props end_name end_expr end_return end_block 
 begin_comment sets the name of the property whose value should be set to the error of the process param error property name of property since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set error property end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name error property end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name set error property end_name end_name begin_argument_list begin_argument begin_expr begin_name error property end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name incompatible with spawn end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment this entry point is used by the java xml tests to generate failure strings to handle argv 0 exit code optional argv 1 string to print to system out optional argv 1 string to print to system err optional end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name main end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name argv end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name exit code end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name begin_name argv end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_name exit code end_name begin_operator EQ end_operator begin_call begin_name begin_name integer end_name begin_operator DOT end_operator begin_name parse int end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name argv end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name number format exception end_name end_type begin_name nfe end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name exit code end_name begin_operator EQ end_operator begin_operator MINUS end_operator end_expr end_expr_stmt end_block end_catch end_try end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name argv end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name argv end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name argv end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name argv end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name exit code end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name exit end_name end_name begin_argument_list begin_argument begin_expr begin_name exit code end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name accepts url end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name url end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name sql exception end_name end_expr end_argument end_throws begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment end_comment begin_type begin_specifier end_specifier begin_name nested creator end_name end_type begin_name create add type creator end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name element name end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name add type methods end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name component helper end_name end_type begin_name helper end_name begin_init begin_expr begin_call begin_name begin_name component helper end_name begin_operator DOT end_operator begin_name get component helper end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name added object end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name method end_name end_type begin_name add method end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name clazz end_name begin_init begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name get component class end_name end_name begin_argument_list begin_argument begin_expr begin_name element name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name clazz end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name add method end_name begin_operator EQ end_operator begin_call begin_name find matching method end_name begin_argument_list begin_argument begin_expr begin_name clazz end_name end_expr end_argument begin_argument begin_expr begin_name add type methods end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name add method end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name added object end_name begin_operator EQ end_operator begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name create component end_name end_name begin_argument_list begin_argument begin_expr begin_name element name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name added object end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name r object end_name begin_init begin_expr begin_name added object end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name added object end_name begin_operator UNP end_operator begin_name begin_name pre set def end_name begin_operator DOT end_operator begin_name pre set definition end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name r object end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name begin_name pre set def end_name begin_operator DOT end_operator begin_name pre set definition end_name end_name begin_operator RPAR end_operator begin_name added object end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name create object end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name nested object end_name begin_init begin_expr begin_name added object end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name real object end_name begin_init begin_expr begin_name r object end_name end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_operator UNP end_operator begin_class begin_super begin_name nested creator end_name end_super begin_argument_list begin_argument begin_expr begin_name add method end_name end_expr end_argument end_argument_list begin_block begin_function begin_type begin_name object end_name end_type begin_name create end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name ignore end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name invocation target exception end_name end_expr end_argument begin_argument begin_expr begin_name illegal access exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name get method end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get method end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name invoke end_name begin_argument_list begin_argument begin_expr begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_name real object end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name nested object end_name end_expr end_return end_block end_function begin_function begin_type begin_name object end_name end_type begin_name get real object end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name real object end_name end_expr end_return end_block end_function begin_function begin_type begin_name void end_name end_type begin_name store end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name child end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name invocation target exception end_name end_expr end_argument begin_argument begin_expr begin_name illegal access exception end_name end_expr end_argument begin_argument begin_expr begin_name instantiation exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name get method end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get method end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name invoke end_name begin_argument_list begin_argument begin_expr begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_name real object end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_function end_block end_class end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test a end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment get the index of a given constant interfacemethodref entry in the constant pool param interface method class name the name of the interface which contains the method being referenced param interface method name the name of the method being referenced param interface method type the type descriptor of the method being referenced return the index at which the given method ref entry occurs in the constant pool or 1 if the value does not occur end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get interface method ref entry end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name interface method class name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name interface method name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name interface method type end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name index end_name begin_init begin_expr begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name entries end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name index end_name begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name element end_name begin_init begin_expr begin_call begin_name begin_name entries end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name element end_name begin_operator UNP end_operator begin_name interface method ref cp info end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name interface method ref cp info end_name end_type begin_name interface method ref entry end_name begin_init begin_expr begin_operator LPAR end_operator begin_name interface method ref cp info end_name begin_operator RPAR end_operator begin_name element end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name interface method ref entry end_name begin_operator DOT end_operator begin_name get interface method class name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name interface method class name end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name interface method ref entry end_name begin_operator DOT end_operator begin_name get interface method name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name interface method name end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name interface method ref entry end_name begin_operator DOT end_operator begin_name get interface method type end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name interface method type end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name index end_name begin_operator EQ end_operator begin_name i end_name end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block end_for begin_return begin_expr begin_name index end_name end_expr end_return end_block 
 begin_comment adds a packageset p all included directories will be translated into package names be converting the directory separator into dots p param package set a directory set since 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add packageset end_name begin_parameter_list begin_param begin_decl begin_type begin_name dir set end_name end_type begin_name package set end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name package sets end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name package set end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_name result formatter end_name end_type begin_name get formatter end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name formatter end_name end_expr end_return end_block 
 begin_comment copies all user properties that have been set on the command line or a gui tool from this instance to the project instance given as the argument p to copy all user properties you will also have to call link copy inherited properties copy inherited properties p param other the project to copy the properties to must not be null since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name copy user properties end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name other end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name user properties end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name arg end_name begin_init begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name inherited properties end_name begin_operator DOT end_operator begin_name contains key end_name end_name begin_argument_list begin_argument begin_expr begin_name arg end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name value end_name begin_init begin_expr begin_call begin_name begin_name user properties end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name arg end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name other end_name begin_operator DOT end_operator begin_name set user property end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block 
 begin_comment concatenates the system class path in the order specified by the build sysclasspath property using the supplied value if build sysclasspath has not been set param def value the order first last only return the concatenated path end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name concat system classpath end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name def value end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name concat special path end_name begin_argument_list begin_argument begin_expr begin_name def value end_name end_expr end_argument begin_argument begin_expr begin_name begin_name path end_name begin_operator DOT end_operator begin_name system classpath end_name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment any cleanup logic end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name end execution end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name redirector end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment builds the prefix arguments to pass to weblogic deploy these arguments are generic across all actions return a string buffer containing the prefix arguments the action specific build methods will append to this string buffer end_comment begin_type begin_specifier end_specifier begin_name string buffer end_name end_type begin_name build args prefix end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name server deploy end_name end_type begin_name task end_name begin_init begin_expr begin_call begin_name get task end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment constructs the url url debug action password portion end_comment begin_comment of the commmand line end_comment begin_return begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_call begin_name get server end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator PLUS end_operator begin_call begin_name get server end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name debug end_name begin_operator QM end_operator begin_operator DP end_operator end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_call begin_name get user name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator PLUS end_operator begin_call begin_name get user name end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name get action end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_call begin_name get password end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test pass end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test dirs with spaces end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name exists end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name assert equals end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name message end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name expected end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name actual end_name end_decl end_param end_parameter_list begin_block begin_comment check that both arrays have the same size end_comment begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name message end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name expected end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name actual end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name counter end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name counter end_name begin_operator LT end_operator begin_name begin_name expected end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name counter end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name message end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name counter end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name expected end_name begin_index begin_expr begin_name counter end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name actual end_name begin_index begin_expr begin_name counter end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_comment check that an invalid suite generates an error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test invalid suite end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name test runner end_name end_type begin_name runner end_name begin_init begin_expr begin_call begin_name create runner end_name begin_argument_list begin_argument begin_expr begin_name begin_name invalid suite test case end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name runner end_name begin_operator DOT end_operator begin_name run end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name error end_name begin_init begin_expr begin_call begin_name begin_name runner end_name begin_operator DOT end_operator begin_name get formatter end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get error end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name error end_name end_expr end_argument begin_argument begin_expr begin_name begin_name j unit test runner end_name begin_operator DOT end_operator begin_name errors end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name runner end_name begin_operator DOT end_operator begin_name get ret code end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_name error end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name error end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name bs finished with stream end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_while begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name bs live end_name end_name begin_operator GT end_operator end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name ch end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name bs buff end_name end_name begin_operator UNP end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name ch end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment write 8 bit end_comment begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name bs buff end_name end_name begin_operator UNP end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name bs live end_name end_name begin_operator UNP end_operator end_expr end_expr_stmt end_block end_while end_block 
 begin_comment close the current reader end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name close end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name reader end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment return the intratoken string end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get post token end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name suppress delims end_name begin_operator UNP end_operator begin_name include delims end_name begin_operator QM end_operator begin_operator DP end_operator begin_name intra string end_name end_expr end_return end_block 
 begin_comment get the on missing filters file setting return the on missing instance end_comment begin_type begin_specifier end_specifier begin_name on missing end_name end_type begin_name get on missing filters file end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name on missing filters file end_name end_expr end_return end_block 
 begin_comment xslt process end_comment begin_comment whether to style all files in the included directories as well optional default is true param b true if files in included directories are processed since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set scan included directories end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name perform directory scan end_name begin_operator EQ end_operator begin_name b end_name end_expr end_expr_stmt end_block 
 begin_comment set the subject param subject the subject line end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set subject end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name subject end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name subject end_name end_name begin_operator EQ end_operator begin_name subject end_name end_expr end_expr_stmt end_block 
 begin_comment fired after the last target has finished this event will still be thrown if an error occurred during the build see build event get exception end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name build finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment create a new filters file return the filtersfile that was created end_comment begin_type begin_specifier end_specifier begin_name filters file end_name end_type begin_name create filtersfile end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name no children allowed end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_return begin_expr begin_operator UNP end_operator begin_call begin_name filters file end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name send mtf values 7 end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name n selectors end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name data end_name end_type begin_name data shadow end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name data end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name byte end_name begin_index end_index begin_index end_index end_type begin_name len end_name begin_init begin_expr begin_name begin_name data shadow end_name begin_operator DOT end_operator begin_name send mtf values len end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name begin_index end_index begin_index end_index end_type begin_name code end_name begin_init begin_expr begin_name begin_name data shadow end_name begin_operator DOT end_operator begin_name send mtf values code end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name output stream end_name end_type begin_name out shadow end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name out end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name byte end_name begin_index end_index end_type begin_name selector end_name begin_init begin_expr begin_name begin_name data shadow end_name begin_operator DOT end_operator begin_name selector end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name char end_name begin_index end_index end_type begin_name sfmap end_name begin_init begin_expr begin_name begin_name data shadow end_name begin_operator DOT end_operator begin_name sfmap end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name n mtf shadow end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name n mtf end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name sel ctr end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name bs live shadow end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name bs live end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name bs buff shadow end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name bs buff end_name end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name gs end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name gs end_name begin_operator LT end_operator begin_name n mtf shadow end_name end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name ge end_name begin_init begin_expr begin_call begin_name begin_name math end_name begin_operator DOT end_operator begin_name min end_name end_name begin_argument_list begin_argument begin_expr begin_name gs end_name begin_operator PLUS end_operator begin_name g size end_name begin_operator MINUS end_operator end_expr end_argument begin_argument begin_expr begin_name n mtf shadow end_name begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name selector sel ctr end_name begin_init begin_expr begin_name begin_name selector end_name begin_index begin_expr begin_name sel ctr end_name end_expr end_index end_name begin_operator UNP end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name begin_index end_index end_type begin_name code sel ctr end_name begin_init begin_expr begin_name begin_name code end_name begin_index begin_expr begin_name selector sel ctr end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name byte end_name begin_index end_index end_type begin_name len sel ctr end_name begin_init begin_expr begin_name begin_name len end_name begin_index begin_expr begin_name selector sel ctr end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_name gs end_name begin_operator LE end_operator begin_name ge end_name end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name sfmap i end_name begin_init begin_expr begin_name begin_name sfmap end_name begin_index begin_expr begin_name gs end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_comment end_comment begin_comment inlined bs w len sel ctr sfmap i 0 xff end_comment begin_comment code sel ctr sfmap i end_comment begin_comment end_comment begin_while begin_condition begin_expr begin_name bs live shadow end_name begin_operator GE end_operator end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out shadow end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name bs buff shadow end_name begin_operator UNP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name bs buff shadow end_name begin_operator UNP end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name bs live shadow end_name begin_operator UNP end_operator end_expr end_expr_stmt end_block end_while begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name n end_name begin_init begin_expr begin_name begin_name len sel ctr end_name begin_index begin_expr begin_name sfmap i end_name end_expr end_index end_name begin_operator UNP end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name bs buff shadow end_name begin_operator UNP end_operator begin_name begin_name code sel ctr end_name begin_index begin_expr begin_name sfmap i end_name end_expr end_index end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator MINUS end_operator begin_name bs live shadow end_name begin_operator MINUS end_operator begin_name n end_name begin_operator RPAR end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name bs live shadow end_name begin_operator UNP end_operator begin_name n end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name gs end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_name gs end_name begin_operator EQ end_operator begin_name ge end_name begin_operator PLUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name sel ctr end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name bs buff end_name end_name begin_operator EQ end_operator begin_name bs buff shadow end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name bs live end_name end_name begin_operator EQ end_operator begin_name bs live shadow end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test both end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name is reachable end_name begin_operator DOT end_operator begin_name error both targets end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get thge relative path of this file param current path base path param current relative path relative path of the base path with regards to remote dir return relative path end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get relative path end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name current path end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name current relative path end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name path elements end_name begin_init begin_expr begin_call begin_name begin_name selector utils end_name begin_operator DOT end_operator begin_name tokenize path end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name remote file sep end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name path elements 2 end_name begin_init begin_expr begin_call begin_name begin_name selector utils end_name begin_operator DOT end_operator begin_name tokenize path end_name end_name begin_argument_list begin_argument begin_expr begin_name current path end_name end_expr end_argument begin_argument begin_expr begin_name remote file sep end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name rel path end_name begin_init begin_expr begin_name current relative path end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name pcount end_name begin_init begin_expr begin_call begin_name begin_name path elements 2 end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_name pcount end_name begin_operator LT end_operator begin_call begin_name begin_name path elements end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name pcount end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name current element end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name path elements end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name pcount end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name ftp file end_name begin_index end_index end_type begin_name the files end_name begin_init begin_expr begin_call begin_name list files end_name begin_argument_list begin_argument begin_expr begin_name current path end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name ftp file end_name end_type begin_name the file end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name the files end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name the file end_name begin_operator EQ end_operator begin_call begin_name get file end_name begin_argument_list begin_argument begin_expr begin_name the files end_name end_expr end_argument begin_argument begin_expr begin_name current element end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name rel path end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name rel path end_name begin_operator EQ end_operator begin_name rel path end_name begin_operator PLUS end_operator begin_name remote file sep end_name end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name the file end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment hit a hidden file assume not a symlink end_comment begin_expr_stmt begin_expr begin_name rel path end_name begin_operator EQ end_operator begin_name rel path end_name begin_operator PLUS end_operator begin_name current element end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name current path end_name begin_operator EQ end_operator begin_name current path end_name begin_operator PLUS end_operator begin_name remote file sep end_name begin_operator PLUS end_operator begin_name current element end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name rel path end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name traverses symlinks end_name begin_operator EQ end_operator begin_name traverses symlinks end_name begin_operator UNP end_operator begin_call begin_name begin_name the file end_name begin_operator DOT end_operator begin_name is symbolic link end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name rel path end_name begin_operator EQ end_operator begin_name rel path end_name begin_operator PLUS end_operator begin_call begin_name begin_name the file end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name current path end_name begin_operator EQ end_operator begin_name current path end_name begin_operator PLUS end_operator begin_name remote file sep end_name begin_operator PLUS end_operator begin_call begin_name begin_name the file end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_for begin_return begin_expr begin_name rel path end_name end_expr end_return end_block 
 begin_comment simple constructor end_comment begin_specifier end_specifier begin_name ant end_name begin_parameter_list end_parameter_list begin_block begin_comment default end_comment end_block 
 begin_comment optional suffix to remove from base name param suffix suffix to remove from base name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set suffix end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name suffix end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name suffix end_name end_name begin_operator EQ end_operator begin_name suffix end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test with prefix and regex end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name expect specific build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment clone our filesets vector and patch in the jar attribute as a new fileset if is defined return a vector of file set instances end_comment begin_type begin_specifier end_specifier begin_name vector end_name end_type begin_name create unified sources end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name sources end_name begin_init begin_expr begin_operator LPAR end_operator begin_name vector end_name begin_operator RPAR end_operator begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name jar end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment we create a fileset with the source file end_comment begin_comment this lets us combine our logic for handling output directories end_comment begin_comment mapping etc end_comment begin_decl_stmt begin_decl begin_type begin_name file set end_name end_type begin_name source jar end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file set end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name source jar end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name source jar end_name begin_operator DOT end_operator begin_name set file end_name end_name begin_argument_list begin_argument begin_expr begin_name jar end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name source jar end_name begin_operator DOT end_operator begin_name set dir end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name jar end_name begin_operator DOT end_operator begin_name get parent file end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sources end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name source jar end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name sources end_name end_expr end_return end_block 
 begin_comment saves modification of the cache cache is only saved if there is one ore more entries because entries can not be deleted by this api this cache implementation checks the existence of entries before creating the file for performance optimisation end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name save end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name cache dirty end_name end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name cachefile end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_call begin_name begin_name cache end_name begin_operator DOT end_operator begin_name property names end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name has more elements end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name buffered output stream end_name end_type begin_name bos end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name buffered output stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file output stream end_name begin_argument_list begin_argument begin_expr begin_name cachefile end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cache end_name begin_operator DOT end_operator begin_name store end_name end_name begin_argument_list begin_argument begin_expr begin_name bos end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name print stack trace end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_then end_if begin_expr_stmt begin_expr begin_name cache dirty end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment get the value of file return value of file end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get file end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name file end_name end_expr end_return end_block 
 begin_comment implements base class abstract function to perform the checkout operation on the files in each folder of the tree param starteam folder the star team folder from which files to be checked out param target folder the local mapping of root starteam folder throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name visit end_name begin_parameter_list begin_param begin_decl begin_type begin_name folder end_name end_type begin_name starteam folder end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name end_type begin_name target folder end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name get root local folder end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name starteam folder end_name begin_operator DOT end_operator begin_name set alternate path fragment end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name target folder end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name folder end_name begin_index end_index end_type begin_name sub folders end_name begin_init begin_expr begin_call begin_name begin_name starteam folder end_name begin_operator DOT end_operator begin_name get sub folders end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name item end_name begin_index end_index end_type begin_name files end_name begin_init begin_expr begin_call begin_name begin_name starteam folder end_name begin_operator DOT end_operator begin_name get items end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get type names end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name unmatched file map end_name end_type begin_name ufm end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name unmatched listing map end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name init end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name target folder end_name begin_operator DOT end_operator begin_name get absolute file end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name starteam folder end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name starteam folder end_name begin_operator DOT end_operator begin_name get folder hierarchy end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name target folder end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment for all files in this folder we need to check end_comment begin_comment if there have been modifications end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name each file end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file end_name begin_operator RPAR end_operator begin_name begin_name files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name filename end_name begin_init begin_expr begin_call begin_name begin_name each file end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name end_type begin_name local file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name begin_argument_list begin_argument begin_expr begin_name target folder end_name end_expr end_argument begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ufm end_name begin_operator DOT end_operator begin_name remove controlled item end_name end_name begin_argument_list begin_argument begin_expr begin_name local file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment if the file doesn t pass the include exclude tests skip it end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name should process end_name begin_argument_list begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name list end_name begin_argument_list begin_argument begin_expr begin_name each file end_name end_expr end_argument begin_argument begin_expr begin_name local file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_comment now we recursively call this method on all sub folders in this end_comment begin_comment folder unless recursive attribute is off end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name sub folders end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name end_type begin_name target subfolder end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name begin_argument_list begin_argument begin_expr begin_name target folder end_name end_expr end_argument begin_argument begin_expr begin_name begin_name sub folders end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ufm end_name begin_operator DOT end_operator begin_name remove controlled item end_name end_name begin_argument_list begin_argument begin_expr begin_name target subfolder end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name is recursive end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name visit end_name begin_argument_list begin_argument begin_expr begin_name begin_name sub folders end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name target subfolder end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name list uncontrolled end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ufm end_name begin_operator DOT end_operator begin_name process uncontrolled items end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment return the base directory to be scanned this is the directory which is scanned recursively return the base directory to be scanned end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name file end_name end_type begin_name get basedir end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name basedir end_name end_expr end_return end_block 
 begin_comment returns the environment used to create a subprocess return the environment used to create a subprocess end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get environment end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name env end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name new environment end_name begin_operator RPAR end_operator begin_operator QM end_operator begin_name env end_name begin_operator DP end_operator begin_call begin_name patch environment end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment creates a new code date selector code instance end_comment begin_specifier end_specifier begin_name date selector end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name granularity end_name begin_operator EQ end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name get file timestamp granularity end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment performs the check for circular references and returns the referenced object this version allows the fallback project instance to be specified param required class the class that this reference should be a subclass of param data type name the name of the datatype that the reference should be error message use only param project the fallback project instance for dereferencing return the dereferenced object throws build exception if the reference is invalid circular ref wrong class etc or if code project code is code null code since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name get checked ref end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name class end_name end_type begin_name required class end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name data type name end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name project end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name die on circular reference end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name o end_name begin_init begin_expr begin_call begin_name begin_name ref end_name begin_operator DOT end_operator begin_name get referenced object end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name required class end_name begin_operator DOT end_operator begin_name is assignable from end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name o end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name o end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name required class end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_call begin_name begin_name ref end_name begin_operator DOT end_operator begin_name get ref id end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name data type name end_name end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_return begin_expr begin_name o end_name end_expr end_return end_block 
 begin_comment collect a list of xml files in the specified folder and below end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name get files end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name starting dir end_name end_decl end_param begin_param begin_decl begin_type begin_name vector end_name end_type begin_name collect end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name file filter end_name end_type begin_name filter end_name begin_init begin_expr begin_operator UNP end_operator begin_class begin_super begin_name file filter end_name end_super begin_argument_list end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name accept end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator GT end_operator begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to lower case end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_return end_block end_else end_if end_block end_function end_block end_class end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name begin_index end_index end_type begin_name files end_name begin_init begin_expr begin_call begin_name begin_name starting dir end_name begin_operator DOT end_operator begin_name list files end_name end_name begin_argument_list begin_argument begin_expr begin_name filter end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name collect end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name get files end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument begin_argument begin_expr begin_name collect end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_for end_block 
 begin_comment sets an inherited user property which cannot be overwritten by set unset property calls any previous value is overwritten also marks these properties as properties that have not come from the command line param ns the namespace for the property currently not used param name the name of property to set must not be code null code param value the new value of the property must not be code null code end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set inherited property end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name ns end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name inherited properties end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name value end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name user properties end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name done end_name begin_init begin_expr begin_call begin_name set property hook end_name begin_argument_list begin_argument begin_expr begin_name ns end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name done end_name end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name properties end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment not significant for the class loader end_comment begin_comment empty implementation to satisfy the build listener interface param event the message logged event end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name message logged end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_comment not significant for the class loader end_comment end_block 
 begin_comment set the url to get param u url for the file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set src end_name begin_parameter_list begin_param begin_decl begin_type begin_name url end_name end_type begin_name u end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name source end_name end_name begin_operator EQ end_operator begin_name u end_name end_expr end_expr_stmt end_block 
 begin_comment the value to set the named property to if the target file is more up to date than each of the source file s defaults to true param value the value to set the property to if target is up to date end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set value end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name value end_name end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block 
 begin_comment constructor param name testname end_comment begin_specifier end_specifier begin_name dotnet test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment unify the contained resources param as string indicates whether the resulting collection should contain strings instead of resources return a collection of resources end_comment begin_type begin_specifier end_specifier begin_name collection end_name end_type begin_name get collection end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name as string end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name list end_name end_type begin_name rc end_name begin_init begin_expr begin_call begin_name get resource collections end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name rc end_name begin_operator DOT end_operator begin_name is empty end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name begin_name collections end_name begin_operator DOT end_operator begin_name empty list end_name end_name end_expr end_return end_block end_then end_if begin_comment preserve order encountered using a list enforce set logic manually end_comment begin_decl_stmt begin_decl begin_type begin_name array list end_name end_type begin_name union end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name rc end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator STAR end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name rc iter end_name begin_init begin_expr begin_call begin_name begin_name rc end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name rc iter end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name r end_name begin_init begin_expr begin_call begin_name next rc end_name begin_argument_list begin_argument begin_expr begin_name rc iter end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name o end_name begin_init begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name as string end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name o end_name begin_operator EQ end_operator begin_call begin_name begin_name o end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name union end_name begin_operator DOT end_operator begin_name contains end_name end_name begin_argument_list begin_argument begin_expr begin_name o end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name union end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name o end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for end_block end_for begin_return begin_expr begin_name union end_name end_expr end_return end_block 
 begin_specifier end_specifier begin_name tar resource test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name run end_name begin_parameter_list begin_param begin_decl begin_type begin_name test result end_name end_type begin_name result end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment delete a directory param d the directory to delete end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name remove dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name d end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name list end_name begin_init begin_expr begin_call begin_name begin_name d end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name list end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name list end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr end_expr end_index end_name end_expr end_expr_stmt end_block end_then end_if begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name list end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name s end_name begin_init begin_expr begin_name begin_name list end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name d end_name end_expr end_argument begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name remove dir end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name quiet end_name begin_operator QM end_operator begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name begin_operator DP end_operator begin_name verbosity end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name delete end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name handle end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if end_block end_for begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name d end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name verbosity end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name delete end_name begin_argument_list begin_argument begin_expr begin_name d end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name handle end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment a zip fileset accepts another zip file set or a file set as reference file sets are often used by the war task for the lib attribute param p the project to use return the abstract fileset instance end_comment begin_type begin_specifier end_specifier begin_name abstract file set end_name end_type begin_name get ref end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name die on circular reference end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name o end_name begin_init begin_expr begin_call begin_name get refid end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get referenced object end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name o end_name begin_operator UNP end_operator begin_name zip file set end_name end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name abstract file set end_name begin_operator RPAR end_operator begin_name o end_name end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_name o end_name begin_operator UNP end_operator begin_name file set end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name zip file set end_name end_type begin_name zfs end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name zip file set end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name file set end_name begin_operator RPAR end_operator begin_name o end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name configure file set end_name begin_argument_list begin_argument begin_expr begin_name zfs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name zfs end_name end_expr end_return end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_call begin_name get refid end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get ref id end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 5 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment read the entry from a stream param cp stream the stream containing the constant pool entry to be read exception io exception thrown if there is a problem reading the entry from the stream end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name read end_name begin_parameter_list begin_param begin_decl begin_type begin_name data input stream end_name end_type begin_name cp stream end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_name index end_name begin_operator EQ end_operator begin_call begin_name begin_name cp stream end_name begin_operator DOT end_operator begin_name read unsigned short end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name class name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment methods below all add specific selectors end_comment begin_comment add a select selector entry on the selector list param selector the code select selector code to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add selector end_name begin_parameter_list begin_param begin_decl begin_type begin_name select selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name append selector end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 11 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f 1 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name f 1 end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment if true force ant to re classload all classes for each j unit test case param value force class reloading for each test case end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set reloading end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name reloading end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test ant type test end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment check style visibility modifier on end_comment begin_comment sets the angle of rotation in degrees param ang the angle at which to rotate the image end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set angle end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name ang end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name angle end_name begin_operator EQ end_operator begin_call begin_name begin_name float end_name begin_operator DOT end_operator begin_name parse float end_name end_name begin_argument_list begin_argument begin_expr begin_name ang end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 2 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns a newly created sax 1 parser using the default parser factory return a sax 1 parser throws build exception on error see get parser factory since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name parser end_name end_type begin_name get parser end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_return begin_expr begin_call begin_name new sax parser end_name begin_argument_list begin_argument begin_expr begin_call begin_name get parser factory end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get parser end_name begin_argument_list end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name sax exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_call begin_name convert to build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment checks whether code rpmbuild code is on the path and returns the absolute path to it falls back to code rpm code otherwise return the command used to build rpm s since 1 6 end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name guess rpm build command end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name env end_name begin_init begin_expr begin_call begin_name begin_name execute end_name begin_operator DOT end_operator begin_name get proc environment end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name path end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name env end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name var end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name var end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr begin_name path 1 end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name var end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr begin_name path 2 end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name var end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr begin_name path 3 end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name path end_name begin_operator EQ end_operator begin_call begin_name begin_name var end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name path len end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_block end_then end_if end_block end_for begin_if begin_condition begin_expr begin_name path end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name p end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name path end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name p elements end_name begin_init begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name p elements end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name begin_name p elements end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator begin_operator LPAR end_operator begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name can read end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if end_block end_for end_block end_then end_if begin_return begin_expr end_expr end_return end_block 
 begin_comment sets whether or not to include ant s own classpath in this task s classpath optional default is code true code param include if true include ant s classpath end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set includeantruntime end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name include end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name include ant runtime end_name begin_operator EQ end_operator begin_name include end_name end_expr end_expr_stmt end_block 
 begin_comment set whether decimal arithmetic should be used for the netrexx code binary arithmetic is used when this flag is turned off valid true values are on or true anything else sets the flag to false the default value is true param decimal a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set decimal end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name decimal end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name decimal end_name end_name begin_operator EQ end_operator begin_name decimal end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is selected end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name selector utils end_name begin_operator DOT end_operator begin_name is out of date end_name end_name begin_argument_list begin_argument begin_expr begin_name control end_name end_expr end_argument begin_argument begin_expr begin_name r end_name end_expr end_argument begin_argument begin_expr begin_name granularity end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment get version flag status return boolean containing status of version flag end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get version end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m version end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test add configured end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment prints the message of the throwable if it the message is not code null code param t throwable to print the message of must not be code null code end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name print message end_name begin_parameter_list begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name message end_name begin_init begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name message end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test nested 1 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect specific build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the number of lines to be returned in the filtered stream param lines the number of lines to be returned in the filtered stream end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set lines end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name lines end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name lines end_name end_name begin_operator EQ end_operator begin_name lines end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test jar option end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name commandline java end_name end_type begin_name c end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name commandline java end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name set jar end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name create vm argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name create vm argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name s end_name begin_init begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name get commandline end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name s end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name s end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name s end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name s end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name s end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment if true produce a listing off by default param b flag set to true for listing on end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set listing end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name listing end_name begin_operator EQ end_operator begin_name b end_name end_expr end_expr_stmt end_block 
 begin_comment returns the next element of this enumeration if this enumeration object has at least one more element to provide return the next element of this enumeration throws no such element exception if no more elements exist end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name next element end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name no such element exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name has more elements end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name begin_name enum array end_name begin_index begin_expr begin_name index end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name next element end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name no such element exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test filter replace strings end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name expect log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment output the default excludes end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 1 end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name expected end_name begin_init begin_expr begin_block begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr end_block end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name execute target end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name expected end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name directory scanner end_name begin_operator DOT end_operator begin_name get default excludes end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the language return the scripting language end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get language end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name language end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 8 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get values end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_return end_block 
 begin_comment this method is to be overridden by extending unarchival tasks param src r the source resource param dir the destination directory since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name expand resource end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource end_name end_type begin_name src r end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name dir end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name i end_name begin_operator EQ end_operator begin_call begin_name begin_name src r end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name expand stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name src r end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name i end_name end_expr end_argument begin_argument begin_expr begin_name dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name src r end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name ioe end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment a unit test for j unit end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test local wsdl server vb end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 3 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment param from the regex pattern end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set pattern end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name from end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name from end_name end_name begin_operator EQ end_operator begin_name from end_name end_expr end_expr_stmt end_block 
 begin_comment adds a reference to a classpath defined elsewhere param r a reference to a classpath end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set boot classpath ref end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name create bootclasspath end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set refid end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment indicates if the build should fail if the sourcesafe command does defaults to true param fail on error true if task should fail on any error end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set fail on error end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name fail on error end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name fail on error end_name end_name begin_operator EQ end_operator begin_name fail on error end_name end_expr end_expr_stmt end_block 
 begin_comment convenience method to copy a file from a source to a destination specifying if token filtering should be used and if source files may overwrite newer destination files param source file file to copy from must not be code null code param dest file file to copy to must not be code null code param filtering whether or not token filtering should be used during the copy param overwrite whether or not the destination file should be overwritten if it already exists exception io exception if the file cannot be copied deprecated since 1 4 x end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name copy file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name source file end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name dest file end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name filtering end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name overwrite end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name copy file end_name end_name begin_argument_list begin_argument begin_expr begin_name source file end_name end_expr end_argument begin_argument begin_expr begin_name dest file end_name end_expr end_argument begin_argument begin_expr begin_name filtering end_name begin_operator QM end_operator begin_name global filters end_name begin_operator DP end_operator end_expr end_argument begin_argument begin_expr begin_name overwrite end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment check for invalid options throws build exception if something goes wrong end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check options end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_comment set the destination directory relative from the project if needed end_comment begin_if begin_condition begin_expr begin_name to dir end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name to dir end_name begin_operator EQ end_operator begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name to dir end_name begin_operator DOT end_operator begin_name is absolute end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name to dir end_name begin_operator EQ end_operator begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name to dir end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if end_block 
 begin_comment sets property to true if target file s have a more recent timestamp than each of the corresponding source file s throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name property end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name up to date end_name begin_init begin_expr begin_call begin_name eval end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name up to date end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set new property end_name begin_argument_list begin_argument begin_expr begin_name property end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name mapper element end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name target file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if end_block 
 begin_comment sleep for a period of time param millis time to sleep end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name do sleep end_name begin_parameter_list begin_param begin_decl begin_type begin_name long end_name end_type begin_name millis end_name end_decl end_param end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name sleep end_name end_name begin_argument_list begin_argument begin_expr begin_name millis end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name interrupted exception end_name end_type begin_name ie end_name end_decl end_param end_parameter_list begin_block begin_comment ignore exception end_comment end_block end_catch end_try end_block 
 begin_comment file the output of the process is redirected to if error is not redirected it too will appear in the output param out the file to which output stream is written end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set output end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set output end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name out end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator DP end_operator begin_operator UNP end_operator begin_name begin_name file end_name begin_index end_index end_name begin_block begin_expr begin_name out end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment check style constant name check on end_comment begin_comment check style visibility modifier on end_comment begin_comment set the javac instance which contains the configured compilation attributes param attributes a configured javac task end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set javac end_name begin_parameter_list begin_param begin_decl begin_type begin_name javac end_name end_type begin_name attributes end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name attributes end_name end_name begin_operator EQ end_operator begin_name attributes end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name src end_name begin_operator EQ end_operator begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get srcdir end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name dest dir end_name begin_operator EQ end_operator begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get destdir end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name encoding end_name begin_operator EQ end_operator begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get encoding end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name debug end_name begin_operator EQ end_operator begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get debug end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name optimize end_name begin_operator EQ end_operator begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get optimize end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name deprecation end_name begin_operator EQ end_operator begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get deprecation end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name depend end_name begin_operator EQ end_operator begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get depend end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name verbose end_name begin_operator EQ end_operator begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get verbose end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name target end_name begin_operator EQ end_operator begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get target end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name bootclasspath end_name begin_operator EQ end_operator begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get bootclasspath end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name extdirs end_name begin_operator EQ end_operator begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get extdirs end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name compile list end_name begin_operator EQ end_operator begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get file list end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name compile classpath end_name begin_operator EQ end_operator begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get classpath end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name compile sourcepath end_name begin_operator EQ end_operator begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get sourcepath end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name project end_name begin_operator EQ end_operator begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name location end_name begin_operator EQ end_operator begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get location end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name include ant runtime end_name begin_operator EQ end_operator begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get includeantruntime end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name include java runtime end_name begin_operator EQ end_operator begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get includejavaruntime end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name memory initial size end_name begin_operator EQ end_operator begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get memory initial size end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name memory maximum size end_name begin_operator EQ end_operator begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get memory maximum size end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment format this base resource collection wrapper as a string return a descriptive code string code end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name cache collection end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name size end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name sb end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name coll end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name path separator char end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment finds or creates the classloader for this object return the class loader end_comment begin_type begin_specifier end_specifier begin_name class loader end_name end_type begin_name get class loader end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get class loader for path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get context project end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get class load id end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name reverse loader end_name end_name end_expr end_argument begin_argument begin_expr begin_name loader id end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name is magic property set end_name begin_argument_list begin_argument begin_expr begin_call begin_name get context project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test dest dir fileset end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the site command attribute this attribute names the command that will be executed if the action is site param site command the site command to set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set site command end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name site command end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name site command end_name end_name begin_operator EQ end_operator begin_name site command end_name end_expr end_expr_stmt end_block 
 begin_comment scans an attribute list for the code id code attribute and stores a reference to the target object in the project if an id is found p this method was moved out of the configure method to allow it to be executed at parse time param element the current element param attr attributes of the current element end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name configure id end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name element end_name end_decl end_param begin_param begin_decl begin_type begin_name attributes end_name end_type begin_name attr end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name id end_name begin_init begin_expr begin_call begin_name begin_name attr end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name id end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add id reference end_name end_name begin_argument_list begin_argument begin_expr begin_name id end_name end_expr end_argument begin_argument begin_expr begin_name element end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment test that the watchdog ends the process end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test time out end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name begin_init begin_expr begin_call begin_name get commandline end_name begin_argument_list begin_argument begin_expr begin_name time out end_name begin_operator STAR end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ej end_name begin_operator DOT end_operator begin_name set java command end_name end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name now end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ej end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name elapsed end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator begin_name now end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name ej end_name begin_operator DOT end_operator begin_name killed process end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name elapsed end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name time out test end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name elapsed end_name begin_operator GE end_operator begin_name time out test end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name elapsed end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name time out end_name begin_operator STAR end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name elapsed end_name begin_operator LT end_operator begin_name time out end_name begin_operator STAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a filterset return a filter set object end_comment begin_type begin_specifier end_specifier begin_name filter set end_name end_type begin_name create filter set end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name filter set end_name end_type begin_name filter set end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name filter set end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name filter sets end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name filter set end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name filter set end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name accept end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name dir end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment set a mapper to change property names param type mapper type param from source pattern param to output pattern end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set mapper end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name type end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name from end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name to end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name mapper end_name end_type begin_name m end_name begin_init begin_expr begin_call begin_name create mapper end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name mapper end_name begin_operator DOT end_operator begin_name mapper type end_name end_name end_type begin_name mapper type end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name mapper end_name begin_operator DOT end_operator begin_name mapper type end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name mapper type end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr begin_name type end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name set type end_name end_name begin_argument_list begin_argument begin_expr begin_name mapper type end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name set from end_name end_name begin_argument_list begin_argument begin_expr begin_name from end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name set to end_name end_name begin_argument_list begin_argument begin_expr begin_name to end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test mapper path end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the appropriate stream based on the format frames noframes end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name output stream end_name end_type begin_name get output stream end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name aggregate transformer end_name begin_operator DOT end_operator begin_name frames end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name caller end_name begin_operator DOT end_operator begin_name format end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment dummy output for the framed report end_comment begin_comment it s all done by extension end_comment begin_return begin_expr begin_operator UNP end_operator begin_call begin_name byte array output stream end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name buffered output stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file output stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name begin_name caller end_name begin_operator DOT end_operator begin_name to dir end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block end_else end_if end_block 
 begin_comment if true list all names of deleted files param verbose true or on end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set verbose end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name verbose end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name verbose end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name verbosity end_name end_name begin_operator EQ end_operator begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name verbosity end_name end_name begin_operator EQ end_operator begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment sets the wrapper to be used for runtime configuration this method should be used only by the project helper and ant internals it is public to allow helper plugins to operate on tasks normal tasks should never use it param wrapper the wrapper to be used for runtime configuration may be code null code in which case the next call to get runtime configurable wrapper will generate a new wrapper end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set runtime configurable wrapper end_name begin_parameter_list begin_param begin_decl begin_type begin_name runtime configurable end_name end_type begin_name wrapper end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name wrapper end_name end_name begin_operator EQ end_operator begin_name wrapper end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test rc out of date end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect property unset end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor for scp from message param session the scp session to use param a remote file the remote file name param a local file the local file param recursive if true use recursion r option to scp end_comment begin_specifier end_specifier begin_name scp from message end_name begin_parameter_list begin_param begin_decl begin_type begin_name session end_name end_type begin_name session end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name a remote file end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name a local file end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name recursive end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name session end_name end_expr end_argument begin_argument begin_expr begin_name a remote file end_name end_expr end_argument begin_argument begin_expr begin_name a local file end_name end_expr end_argument begin_argument begin_expr begin_name recursive end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment is the verbose attribute set return true if the verbose attribute is set since ant 1 6 2 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name get verbose end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name verbose end_name end_expr end_return end_block 
 begin_comment tests property element using xml schema properties as an example end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test property schema for valid xml end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set whether to append the output file param b boolean append flag end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set append end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name append end_name begin_operator EQ end_operator begin_name b end_name end_expr end_expr_stmt end_block 
 begin_comment default constructor end_comment begin_specifier end_specifier begin_name project helper end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment test whether there is a nested condition return code boolean code end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name nested condition present end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name nested condition end_name begin_operator UNP end_operator begin_operator RPAR end_operator end_expr end_return end_block 
 begin_type begin_name method end_name end_type begin_name get method end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name method end_name end_expr end_return end_block 
 begin_comment gets the stub class suffix return the stub suffix quot stub quot end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get stub class suffix end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name rmi stub suffix end_name end_expr end_return end_block 
 begin_comment get an input stream for the resource return an input stream containing this resource s content throws io exception if unable to provide the content of this resource as a stream throws unsupported operation exception if input streams are not supported for this resource type end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name input stream end_name end_type begin_name get input stream end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get input stream end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name connect end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_return begin_expr begin_call begin_name begin_name conn end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block begin_finally begin_block begin_expr_stmt begin_expr begin_name conn end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment key accessor return key end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get key end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name key end_name end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test filter reader before end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name do test end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name file prepend with end_name end_expr end_argument begin_argument begin_expr begin_name file append end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the file extension that is be to used to create or identify destination file param fileext a code string code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set fileext end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name fileext end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name fileext end_name end_name begin_operator EQ end_operator begin_name fileext end_name end_expr end_expr_stmt end_block 
 begin_comment get a list of files and directories specified in the fileset param p the current project return a list of file and directory names relative to the base dir for the project end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get files end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name files end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name files end_name begin_operator EQ end_operator begin_call begin_name get file names end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name files end_name end_expr end_return end_block 
 begin_comment converts the buffer to a string and sends it to code process line code throws io exception if there is an error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process buffer end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name process line end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name reset end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_specifier end_specifier begin_name checksum test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sax parser call back method that is used to initialize the values of some instance variables to ensure safe operation throws sax exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name start document end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name sax exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name ejb files end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list begin_argument begin_expr begin_name default hash table size end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name current element end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name in ejb ref end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test filesmatch oddsizes end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect property unset end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets the code username code attribute return the username given by the user see set username string username end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get username end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name username end_name end_expr end_return end_block 
 begin_comment since we do not support marking just yet we do nothing end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name reset end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment load named class either via the system classloader or a given custom classloader as a side effect the loader is set as the thread context classloader param classname the name of the class to load return the requested class exception exception if the class could not be loaded end_comment begin_type begin_specifier end_specifier begin_name class end_name end_type begin_name load class end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name classname end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name classpath end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name loader end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name create class loader end_name begin_argument_list begin_argument begin_expr begin_name classpath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name loader end_name begin_operator DOT end_operator begin_name set thread context loader end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name c end_name begin_init begin_expr begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name loader end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_name c end_name end_expr end_return end_block end_else end_if end_block 
 begin_comment set the unit type using string param unit the unit to use deprecated since 1 5 x set unit string is deprecated and is replaced with set unit tstamp unit to make ant s introspection mechanism do the work and also to encapsulate operations on the unit in its own class end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set unit end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name unit end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name unit end_name end_type begin_name u end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name unit end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name u end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr begin_name unit end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name field end_name begin_operator EQ end_operator begin_call begin_name begin_name u end_name begin_operator DOT end_operator begin_name get calendar field end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment validate the tasks parameters throws build exception if invalid parameters found end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name validate end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator EQT end_operator begin_name required extension end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name message end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator EQT end_operator begin_name library file end_name begin_operator UNP end_operator begin_call begin_name begin_name extension file sets end_name begin_operator DOT end_operator begin_name is empty end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name message end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name library file end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name library file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name message end_name begin_init begin_expr begin_operator PLUS end_operator begin_name library file end_name begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name library file end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name library file end_name begin_operator DOT end_operator begin_name is file end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name message end_name begin_init begin_expr begin_operator PLUS end_operator begin_name library file end_name begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment add a name entry on the include files list return a nested includesfile element to be configured end_comment begin_type begin_specifier end_specifier begin_name name entry end_name end_type begin_name create includes file end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name no children allowed end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_return begin_expr begin_call begin_name add pattern to list end_name begin_argument_list begin_argument begin_expr begin_name includes file list end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test bad timeout end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name is reachable end_name begin_operator DOT end_operator begin_name error bad timeout end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment implementation of base extend selector is selected param basedir as described in base extend selector param filename as described in base extend selector param file as described in base extend selector return as described in base extend selector end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is selected end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name basedir end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name filename end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name is selected end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr begin_name filename end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name target finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment sets the node uses parser grammar option param node uses parser a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set nodeusesparser end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name node uses parser end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name optional attrs end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name node uses parser end_name end_expr end_argument begin_argument begin_expr begin_name node uses parser end_name begin_operator QM end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name true end_name end_name begin_operator DP end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name false end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment check if a given resource can be loaded end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name check resource end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name resource end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name loader end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name loader end_name begin_operator DOT end_operator begin_name get resource as stream end_name end_name begin_argument_list begin_argument begin_expr begin_name resource end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator RPAR end_operator end_expr end_return end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name class loader end_name end_type begin_name c l end_name begin_init begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get class loader end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name c l end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name c l end_name begin_operator DOT end_operator begin_name get resource as stream end_name end_name begin_argument_list begin_argument begin_expr begin_name resource end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator RPAR end_operator end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name class loader end_name begin_operator DOT end_operator begin_name get system resource as stream end_name end_name begin_argument_list begin_argument begin_expr begin_name resource end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator RPAR end_operator end_expr end_return end_block end_else end_if end_block end_else end_if end_block 
 begin_comment sets the enablebaselessmerges flag param setrest value chosen for enablebaselessmerges end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set enable baseless merges end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name setrest end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name enablebaselessmerges end_name end_name begin_operator EQ end_operator begin_name setrest end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 8 using zip fileset src end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name test 8 end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment if true delete empty directories param include empty if true delete empty directories only for filesets default is false end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set include empty dirs end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name include empty end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name include empty end_name end_name begin_operator EQ end_operator begin_name include empty end_name end_expr end_expr_stmt end_block 
 begin_comment initialisation routine called after handler creation with the element name and attributes this configures the element with its attributes and sets it up with its parent container if any nested elements are then added later as the parser encounters them param uri the namespace uri for this element param tag name of the element which caused this handler to be created must not be code null code param qname the qualified name for this element param attrs attributes of the element which caused this handler to be created must not be code null code param context the current context exception sax parse exception in case of error not thrown in this implementation end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name on start element end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name uri end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name tag end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name qname end_name end_decl end_param begin_param begin_decl begin_type begin_name attributes end_name end_type begin_name attrs end_name end_decl end_param begin_param begin_decl begin_type begin_name ant xml context end_name end_type begin_name context end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name sax parse exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name runtime configurable end_name end_type begin_name parent wrapper end_name begin_init begin_expr begin_call begin_name begin_name context end_name begin_operator DOT end_operator begin_name current wrapper end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name parent end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name parent wrapper end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name parent end_name begin_operator EQ end_operator begin_call begin_name begin_name parent wrapper end_name begin_operator DOT end_operator begin_name get proxy end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment unknown element is used for tasks and data types with delayed eval end_comment begin_decl_stmt begin_decl begin_type begin_name unknown element end_name end_type begin_name task end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name unknown element end_name begin_argument_list begin_argument begin_expr begin_name tag end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name context end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name set namespace end_name end_name begin_argument_list begin_argument begin_expr begin_name uri end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name set q name end_name end_name begin_argument_list begin_argument begin_expr begin_name qname end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name set task type end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project helper end_name begin_operator DOT end_operator begin_name gen component name end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name get namespace end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name tag end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name set task name end_name end_name begin_argument_list begin_argument begin_expr begin_name qname end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name location end_name end_type begin_name location end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name location end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name context end_name begin_operator DOT end_operator begin_name get locator end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get system id end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name context end_name begin_operator DOT end_operator begin_name get locator end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get line number end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name context end_name begin_operator DOT end_operator begin_name get locator end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get column number end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name set location end_name end_name begin_argument_list begin_argument begin_expr begin_name location end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name set owning target end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name context end_name begin_operator DOT end_operator begin_name get current target end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name parent end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment nested element end_comment begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name unknown element end_name begin_operator RPAR end_operator begin_name parent end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name add child end_name begin_argument_list begin_argument begin_expr begin_name task end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment task included in a target including the default one end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name context end_name begin_operator DOT end_operator begin_name get current target end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name add task end_name begin_argument_list begin_argument begin_expr begin_name task end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name context end_name begin_operator DOT end_operator begin_name configure id end_name end_name begin_argument_list begin_argument begin_expr begin_name task end_name end_expr end_argument begin_argument begin_expr begin_name attrs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment container add task task end_comment begin_comment this is a nop in ue task init end_comment begin_decl_stmt begin_decl begin_type begin_name runtime configurable end_name end_type begin_name wrapper end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name runtime configurable end_name begin_argument_list begin_argument begin_expr begin_name task end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name get task name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name attrs end_name begin_operator DOT end_operator begin_name get length end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_call begin_name begin_name attrs end_name begin_operator DOT end_operator begin_name get local name end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name attr uri end_name begin_init begin_expr begin_call begin_name begin_name attrs end_name begin_operator DOT end_operator begin_name get uri end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name attr uri end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name attr uri end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name attr uri end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name uri end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name name end_name begin_operator EQ end_operator begin_name attr uri end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name attrs end_name begin_operator DOT end_operator begin_name get q name end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name value end_name begin_init begin_expr begin_call begin_name begin_name attrs end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment pr hack for ant type value end_comment begin_comment an ant type is a component name which can end_comment begin_comment be namespaced need to extract the name end_comment begin_comment and convert from qualified name to uri name end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name ant type end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name ant core uri end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name attr uri end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name ant type end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attrs end_name begin_operator DOT end_operator begin_name get local name end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name name end_name begin_operator EQ end_operator begin_name ant type end_name end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name index end_name begin_init begin_expr begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name index end_name begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name prefix end_name begin_init begin_expr begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name mapped uri end_name begin_init begin_expr begin_call begin_name begin_name context end_name begin_operator DOT end_operator begin_name get prefix mapping end_name end_name begin_argument_list begin_argument begin_expr begin_name prefix end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name mapped uri end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name prefix end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name value end_name begin_operator EQ end_operator begin_call begin_name begin_name project helper end_name begin_operator DOT end_operator begin_name gen component name end_name end_name begin_argument_list begin_argument begin_expr begin_name mapped uri end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name index end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name wrapper end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_if begin_condition begin_expr begin_name parent wrapper end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name parent wrapper end_name begin_operator DOT end_operator begin_name add child end_name end_name begin_argument_list begin_argument begin_expr begin_name wrapper end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name context end_name begin_operator DOT end_operator begin_name push wrapper end_name end_name begin_argument_list begin_argument begin_expr begin_name wrapper end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment if true modification time should be preserved from the vob time either currenttime or preservetime can be specified param pt the status to set the flag to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set preserve time end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name pt end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m ptime end_name begin_operator EQ end_operator begin_name pt end_name end_expr end_expr_stmt end_block 
 begin_comment param test junit test return array of formatter element since ant 1 3 end_comment begin_type begin_specifier end_specifier begin_name formatter element end_name begin_index end_index end_type begin_name merge formatters end_name begin_parameter_list begin_param begin_decl begin_type begin_name j unit test end_name end_type begin_name test end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name fe vector end_name begin_init begin_expr begin_operator LPAR end_operator begin_name vector end_name begin_operator RPAR end_operator begin_call begin_name begin_name formatters end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test end_name begin_operator DOT end_operator begin_name add formatters to end_name end_name begin_argument_list begin_argument begin_expr begin_name fe vector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name formatter element end_name begin_index end_index end_type begin_name fe array end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name formatter element end_name begin_index begin_expr begin_call begin_name begin_name fe vector end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fe vector end_name begin_operator DOT end_operator begin_name copy into end_name end_name begin_argument_list begin_argument begin_expr begin_name fe array end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name fe array end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 10 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f 1 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name f 1 end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test contains incomplete 1 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect specific build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test nested end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name start prefix mapping end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name prefix end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name uri end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name sax exception end_name end_expr end_argument end_throws begin_block end_block 
 begin_comment get the weblogic descriptor handler param src dir the source directory return the descriptor end_comment begin_type begin_specifier end_specifier begin_name descriptor handler end_name end_type begin_name get weblogic descriptor handler end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name src dir end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name descriptor handler end_name end_type begin_name handler end_name begin_init begin_expr begin_operator UNP end_operator begin_class begin_super begin_name descriptor handler end_name end_super begin_argument_list begin_argument begin_expr begin_call begin_name get task end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name src dir end_name end_expr end_argument end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process element end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name current element end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment get the filename of vendor specific descriptor end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name file name with meta end_name begin_init begin_expr begin_name current text end_name end_expr end_init end_decl end_decl_stmt begin_comment trim the meta inf off of the file name end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name file name end_name begin_init begin_expr begin_call begin_name begin_name file name with meta end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name meta dir end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file name with meta end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name descriptor file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name src dir end_name end_expr end_argument begin_argument begin_expr begin_name file name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ejb files end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name file name with meta end_name end_expr end_argument begin_argument begin_expr begin_name descriptor file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_function end_block end_class end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name handler end_name begin_operator DOT end_operator begin_name register dtd end_name end_name begin_argument_list begin_argument begin_expr begin_name publicid weblogic ejb 510 end_name end_expr end_argument begin_argument begin_expr begin_name default wl 51 dtd location end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name handler end_name begin_operator DOT end_operator begin_name register dtd end_name end_name begin_argument_list begin_argument begin_expr begin_name publicid weblogic ejb 510 end_name end_expr end_argument begin_argument begin_expr begin_name default wl 60 51 dtd location end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name handler end_name begin_operator DOT end_operator begin_name register dtd end_name end_name begin_argument_list begin_argument begin_expr begin_name publicid weblogic ejb 600 end_name end_expr end_argument begin_argument begin_expr begin_name default wl 60 dtd location end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name handler end_name begin_operator DOT end_operator begin_name register dtd end_name end_name begin_argument_list begin_argument begin_expr begin_name publicid weblogic ejb 700 end_name end_expr end_argument begin_argument begin_expr begin_name default wl 70 dtd location end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name handler end_name begin_operator DOT end_operator begin_name register dtd end_name end_name begin_argument_list begin_argument begin_expr begin_name publicid weblogic ejb 510 end_name end_expr end_argument begin_argument begin_expr begin_name weblogic dtd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name handler end_name begin_operator DOT end_operator begin_name register dtd end_name end_name begin_argument_list begin_argument begin_expr begin_name publicid weblogic ejb 600 end_name end_expr end_argument begin_argument begin_expr begin_name weblogic dtd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name get config end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name begin_name dtd locations end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name ejb jar end_name begin_operator DOT end_operator begin_name dtd location end_name end_name end_type begin_name dtd location end_name begin_init begin_expr begin_operator LPAR end_operator begin_name begin_name ejb jar end_name begin_operator DOT end_operator begin_name dtd location end_name end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name handler end_name begin_operator DOT end_operator begin_name register dtd end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name dtd location end_name begin_operator DOT end_operator begin_name get public id end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name dtd location end_name begin_operator DOT end_operator begin_name get location end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_name handler end_name end_expr end_return end_block 
 begin_comment get recurse flag status return boolean containing status of recurse flag end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get recurse end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m recurse end_name end_expr end_return end_block 
 begin_comment specify the jdk version for the generated stub code specify quot 1 1 quot to pass the quot v 1 1 quot option to rmic td param stub version the jdk version end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set stub version end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name stub version end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name stub version end_name end_name begin_operator EQ end_operator begin_name stub version end_name end_expr end_expr_stmt end_block 
 begin_comment list files dates and statuses as of this date optional if not specified the most recent version of each file will be listed param as of date param the date as of which the listing to be made since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set as of date end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name as of date param end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set as of date end_name begin_argument_list begin_argument begin_expr begin_name as of date param end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name project end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name project end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name set basedir end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment this causes xml catalog to print out detailed logging end_comment begin_comment messages for debugging end_comment begin_comment end_comment begin_comment default logger logger new default logger end_comment begin_comment logger set message output level project msg debug end_comment begin_comment logger set output print stream system out end_comment begin_comment logger set error print stream system err end_comment begin_comment project add build listener logger end_comment begin_expr_stmt begin_expr begin_name catalog end_name begin_operator EQ end_operator begin_call begin_name new catalog end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name visit class declaration end_name begin_parameter_list begin_param begin_decl begin_type begin_name class declaration end_name end_type begin_name d end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name echo end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name d end_name begin_operator DOT end_operator begin_name get qualified name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment check if specified file satisfies extension if it does then set the relevent property else throw a build exception param file the candidate library throws build exception if library does not satisfy extension end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check extension end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name message end_name begin_init begin_expr begin_operator PLUS end_operator begin_name file end_name begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name is file end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name message end_name begin_init begin_expr begin_operator PLUS end_operator begin_name file end_name begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name check extension end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name message end_name begin_init begin_expr begin_operator PLUS end_operator begin_name file end_name begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set library property end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name file end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name manifest end_name end_type begin_name manifest end_name begin_init begin_expr begin_call begin_name begin_name extension util end_name begin_operator DOT end_operator begin_name get manifest end_name end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name extension end_name begin_index end_index end_type begin_name extensions end_name begin_init begin_expr begin_call begin_name begin_name extension end_name begin_operator DOT end_operator begin_name get available end_name end_name begin_argument_list begin_argument begin_expr begin_name manifest end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name extensions end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name extension end_name end_type begin_name extension end_name begin_init begin_expr begin_name begin_name extensions end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name extension end_name begin_operator DOT end_operator begin_name is compatible with end_name end_name begin_argument_list begin_argument begin_expr begin_name required extension end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set library property end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if end_block end_for begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name file end_name begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name message end_name begin_init begin_expr begin_operator PLUS end_operator begin_name file end_name begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_block 
 begin_comment set the class mandatory param a class the class name of the permission end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set class end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name a class end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name class name end_name begin_operator EQ end_operator begin_call begin_name begin_name a class end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment emptyness test param string param to check return true if it is empty end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name empty end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name string end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_name string end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name string end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test all end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name print stream end_name end_type begin_name ps end_name begin_init begin_expr begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name print stream end_name end_type begin_name newps end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name print stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file output stream end_name begin_argument_list begin_argument begin_expr begin_name f 2 end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name set out end_name end_name begin_argument_list begin_argument begin_expr begin_name newps end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name execute target end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name set out end_name end_name begin_argument_list begin_argument begin_expr begin_name ps end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name newps end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name content equals end_name end_name begin_argument_list begin_argument begin_expr begin_name f 1 end_name end_expr end_argument begin_argument begin_expr begin_name f 2 end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test utf 16 encoding end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the facade task that fronts this adapter return task instance see default compiler adapter get javac end_comment begin_type begin_specifier end_specifier begin_name apt end_name end_type begin_name get apt end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name apt end_name begin_operator RPAR end_operator begin_call begin_name get javac end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test nested 5 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect specific build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment append code excludes code to the current list of exclude patterns p patterns may be separated by a comma or a space p param excludes the code string code containing the exclude patterns end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set excludes end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name excludes end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name check attributes allowed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name default patterns end_name begin_operator DOT end_operator begin_name set excludes end_name end_name begin_argument_list begin_argument begin_expr begin_name excludes end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name ds end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment default constructor end_comment begin_specifier end_specifier begin_name not end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment initialisation routine called after handler creation with the element name and attributes this configures the element with its attributes and sets it up with its parent container if any nested elements are then added later as the parser encounters them param tag name of the element which caused this handler to be created must not be code null code param attrs attributes of the element which caused this handler to be created must not be code null code exception sax parse exception in case of error not thrown in this implementation end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name init end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name tag end_name end_decl end_param begin_param begin_decl begin_type begin_name attribute list end_name end_type begin_name attrs end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name sax parse exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_expr_stmt begin_expr begin_name task end_name begin_operator EQ end_operator begin_call begin_name begin_name helper impl end_name begin_operator DOT end_operator begin_name project end_name begin_operator DOT end_operator begin_name create task end_name end_name begin_argument_list begin_argument begin_expr begin_name tag end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment swallow here will be thrown again in end_comment begin_comment unknown element maybe configure if the problem persists end_comment end_block end_catch end_try begin_if begin_condition begin_expr begin_name task end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name task end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name unknown element end_name begin_argument_list begin_argument begin_expr begin_name tag end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name helper impl end_name begin_operator DOT end_operator begin_name project end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment xxx task set task type tag end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name set task name end_name end_name begin_argument_list begin_argument begin_expr begin_name tag end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name set location end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name location end_name begin_argument_list begin_argument begin_expr begin_name begin_name helper impl end_name begin_operator DOT end_operator begin_name locator end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name helper impl end_name begin_operator DOT end_operator begin_name configure id end_name end_name begin_argument_list begin_argument begin_expr begin_name task end_name end_expr end_argument begin_argument begin_expr begin_name attrs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name set owning target end_name end_name begin_argument_list begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name container end_name begin_operator DOT end_operator begin_name add task end_name end_name begin_argument_list begin_argument begin_expr begin_name task end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name init end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name wrapper end_name begin_operator EQ end_operator begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name get runtime configurable wrapper end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name wrapper end_name begin_operator DOT end_operator begin_name set attributes end_name end_name begin_argument_list begin_argument begin_expr begin_name attrs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name parent wrapper end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name parent wrapper end_name begin_operator DOT end_operator begin_name add child end_name end_name begin_argument_list begin_argument begin_expr begin_name wrapper end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the file represented by this file resource return the file end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get file end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name file resource end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get file end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_name file end_name end_expr end_return end_block 
 begin_comment set the subject line of the email param subject subject of this email end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set subject end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name subject end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name subject end_name end_name begin_operator EQ end_operator begin_name subject end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment if true on failure to delete note the error and set the deleteonexit flag and continue param delete on exit true or false end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set delete on exit end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name delete on exit end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name delete on exit end_name end_name begin_operator EQ end_operator begin_name delete on exit end_name end_expr end_expr_stmt end_block 
 begin_comment ignore end_comment begin_comment end of write jar end_comment begin_comment add all available classes that depend on remote home bean pk param check entries files that are extracted from the deployment descriptor throws build exception if there is a problem end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check and add dependants end_name begin_parameter_list begin_param begin_decl begin_type begin_name hashtable end_name end_type begin_name check entries end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name dependency analyzer end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name dependency analyzer end_name begin_operator DOT end_operator begin_name reset end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name check entries end_name begin_operator DOT end_operator begin_name key set end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name entry name end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name entry name end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name class name end_name begin_init begin_expr begin_call begin_name begin_name entry name end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name entry name end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name class name end_name begin_operator EQ end_operator begin_call begin_name begin_name class name end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name class name end_name begin_operator EQ end_operator begin_call begin_name begin_name class name end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dependency analyzer end_name begin_operator DOT end_operator begin_name add root class end_name end_name begin_argument_list begin_argument begin_expr begin_name class name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_while begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name dependency analyzer end_name begin_operator DOT end_operator begin_name get class dependencies end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name classname end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name location end_name begin_init begin_expr begin_call begin_name begin_name classname end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name class file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name begin_name config end_name begin_operator DOT end_operator begin_name src dir end_name end_name end_expr end_argument begin_argument begin_expr begin_name location end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name class file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name check entries end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name location end_name end_expr end_argument begin_argument begin_expr begin_name class file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name classname end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name class file end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_while end_block 
 begin_comment get the urlbase return the urlbase end_comment begin_type begin_name string end_name end_type begin_name get url base end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name url base end_name end_expr end_return end_block 
 begin_comment convenience overloaded version of link get class loader for path project reference boolean p assumes the logical false for the reverse loader p param p the project param ref the reference return the class loader end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name class loader end_name end_type begin_name get class loader for path end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param begin_param begin_decl begin_type begin_name reference end_name end_type begin_name ref end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name get class loader for path end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name ref end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment the initial version used date format short for the time format which ignores seconds if we want seconds as well we need date format medium which in turn would break all old build files first try to parse with date format short and if that fails with medium throw an exception if both fail end_comment begin_type begin_specifier end_specifier begin_name date format end_name end_type begin_name get primary format end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name date format end_name begin_operator DOT end_operator begin_name get date time instance end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name date format end_name begin_operator DOT end_operator begin_name short end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name date format end_name begin_operator DOT end_operator begin_name short end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment set a reference to a classpath to use when loading the files to actually share the same loader set loaderref as well param r the reference to the classpath end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classpath ref end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name get delegate end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set classpathref end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment use the most recent revision no later than the given date param p a date as string in a format that the cvs executable can understand see man cvs end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set date end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name p end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name add command argument end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add command argument end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get values end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr begin_name ascii end_name end_expr begin_operator UNP end_operator begin_expr begin_name utf 8 end_name end_expr begin_operator UNP end_operator begin_expr begin_name unicode end_name end_expr begin_operator UNP end_operator end_block end_expr end_return end_block 
 begin_comment add a selector filename entry on the selector list param selector the selector to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add filename end_name begin_parameter_list begin_param begin_decl begin_type begin_name filename selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name append selector end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment bugzilla report 20840 will fail with an exception if the parent directories do not get created end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test create parent dirs end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor param name testname end_comment begin_specifier end_specifier begin_name schema validate test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment n flag of p 4 labelsync display changes without actually doing them param simulationmode display changes without actually doing them end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set simulationmode end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name simulationmode end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name simulationmode end_name end_name begin_operator EQ end_operator begin_name simulationmode end_name end_expr end_expr_stmt end_block 
 begin_comment get the tsacert option since ant 1 7 return a certificate alias or null end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get tsacert end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name tsacert end_name end_expr end_return end_block 
 begin_comment sets starting token to identify keys required param start token starting token to identify keys end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set start token end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name start token end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name start token end_name end_name begin_operator EQ end_operator begin_name start token end_name end_expr end_expr_stmt end_block 
 begin_comment zip a stream to an output stream param in the stream to zip param z out the output stream throws io exception end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name zip file end_name begin_parameter_list begin_param begin_decl begin_type begin_name input stream end_name end_type begin_name in end_name end_decl end_param begin_param begin_decl begin_type begin_name output stream end_name end_type begin_name z out end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name buffer end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name byte end_name begin_index begin_expr begin_operator STAR end_operator end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name count end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_do begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name z out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name count end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name count end_name begin_operator EQ end_operator begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_condition begin_expr begin_name count end_name begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition end_do end_block 
 begin_comment create a dtd location record this stores the location of a dtd the dtd is identified by its public id the location may either be a file location or a resource location return the dtd location object to be configured by ant end_comment begin_type begin_specifier end_specifier begin_name dtd location end_name end_type begin_name create dtd end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name dtd location end_name end_type begin_name dtd location end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name dtd location end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name config end_name begin_operator DOT end_operator begin_name dtd locations end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name dtd location end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name dtd location end_name end_expr end_return end_block 
 begin_comment turn the path list into a list of files and a references argument return null or a string of references end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get reference files parameter end_name begin_parameter_list end_parameter_list begin_block begin_comment bail on no references end_comment begin_if begin_condition begin_expr begin_name references end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_comment iterate through the ref list generate an entry for each end_comment begin_comment or just rely on the fact that the to string operator does this but end_comment begin_comment noting that the separator is on windows on unix end_comment begin_comment bail on no references listed end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name references end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name s end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr begin_name reference option end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name is windows end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name references end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name is windows end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 3 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect specific build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get key end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test top level text end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name expect file contains end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name target end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name contains end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name expect file contains end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name contains end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the date time pattern to be used the values are as defined by the java simple date format class param pattern the pattern to use see java text simple date format end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set pattern end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name pattern end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name pattern end_name end_name begin_operator EQ end_operator begin_name pattern end_name end_expr end_expr_stmt end_block 
 begin_comment sets the java compiler to use param a string the java compiler end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set javac end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name a string end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name javac end_name begin_operator EQ end_operator begin_name a string end_name end_expr end_expr_stmt end_block 
 begin_comment end_comment begin_comment ensure that an external entity resolves as expected using an end_comment begin_comment xml catalog end_comment begin_comment end_comment begin_comment transform an xml file that contains a reference to a second xml file end_comment begin_comment via the document function the second xml file refers to an entity end_comment begin_comment the entity is listed in the xml catalog pointing to a different file end_comment begin_comment stuff result into the property val 4 end_comment begin_comment end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test document with catalog end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name expect property set end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment writes a dom tree to a stream param element the root dom element of the tree param out where to send the output param indent number of param indent with string that should be used to indent the corresponding tag param has children if true indent throws io exception if an error happens while writing to the stream end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name close element end_name begin_parameter_list begin_param begin_decl begin_type begin_name element end_name end_type begin_name element end_name end_decl end_param begin_param begin_decl begin_type begin_name writer end_name end_type begin_name out end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name indent end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name indent with end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name has children end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_comment if we had child elements we need to indent before we close end_comment begin_comment the element otherwise we re on the same line and don t need end_comment begin_comment to indent end_comment begin_if begin_condition begin_expr begin_name has children end_name end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name indent end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name indent with end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if begin_comment write element close end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name begin_name namespace policy end_name begin_operator DOT end_operator begin_name qualify elements end_name end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name uri end_name begin_init begin_expr begin_call begin_name get namespace uri end_name begin_argument_list begin_argument begin_expr begin_name element end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name prefix end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name ns prefix map end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name uri end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name prefix end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name prefix end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name prefix end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name remove ns definitions end_name begin_argument_list begin_argument begin_expr begin_name element end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name element end_name begin_operator DOT end_operator begin_name get tag name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name l sep end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return the constituent parts of this argument return an array of strings end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get parts end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name parts end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name expect name address end_name begin_parameter_list begin_param begin_decl begin_type begin_name email address end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get address end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment implement the touchable interface param mod time new last modification time end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name touch end_name begin_parameter_list begin_param begin_decl begin_type begin_name long end_name end_type begin_name mod time end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name file resource end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name touch end_name begin_argument_list begin_argument begin_expr begin_name mod time end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name get not null file end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set last modified end_name begin_argument_list begin_argument begin_expr begin_name mod time end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment provides a string showing from and to full paths for logging param remotefile the star team file being processed return a string showing from and to full paths end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name describe checkin end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name com end_name begin_operator DOT end_operator begin_name starbase end_name begin_operator DOT end_operator begin_name starteam end_name begin_operator DOT end_operator begin_name file end_name end_name end_type begin_name remotefile end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name sb end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name remotefile end_name begin_operator DOT end_operator begin_name get full name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_call begin_name get full repository path end_name begin_argument_list begin_argument begin_expr begin_name remotefile end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name init end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name op end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name src end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name dest end_name end_decl end_param begin_param begin_decl begin_type begin_name long end_name end_type begin_name max end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name init file size end_name begin_operator EQ end_operator begin_name max end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name total length end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name percent transmitted end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment give the copied files the same last modified time as the original files param preserve a boolean string deprecated since 1 5 x set preserve last modified string has been deprecated and replaced with set preserve last modified boolean to consistently let the introspection mechanism work end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set preserve last modified end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name preserve end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set preserve last modified end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name to boolean end_name end_name begin_argument_list begin_argument begin_expr begin_name preserve end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment create the directory and all parents throws build exception if dir is somehow invalid or creation failed end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name dir end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name is file end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name result end_name begin_init begin_expr begin_call begin_name mkdirs end_name begin_argument_list begin_argument begin_expr begin_name dir end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name result end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment creates a new code filename selector code instance end_comment begin_specifier end_specifier begin_name filename selector end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment lists uncontrolled items from the local tree it is assumed that this method will not be called until all the items in the corresponding folder have been processed and that the internal map will contain only uncontrolled items end_comment begin_type begin_name void end_name end_type begin_name process uncontrolled items end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name is active end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment handle the files so they appear first end_comment begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name end_type begin_name local end_name begin_init begin_expr begin_operator LPAR end_operator begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name item end_name end_type begin_name remote item end_name begin_init begin_expr begin_operator LPAR end_operator begin_name item end_name begin_operator RPAR end_operator begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name local end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment once we find a folder that isn t in the repository end_comment begin_comment we know we can add it end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name local end_name begin_operator DOT end_operator begin_name is file end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name com end_name begin_operator DOT end_operator begin_name starbase end_name begin_operator DOT end_operator begin_name starteam end_name begin_operator DOT end_operator begin_name file end_name end_name end_type begin_name remote file end_name begin_init begin_expr begin_operator LPAR end_operator begin_name begin_name com end_name begin_operator DOT end_operator begin_name starbase end_name begin_operator DOT end_operator begin_name starteam end_name begin_operator DOT end_operator begin_name file end_name end_name begin_operator RPAR end_operator begin_name remote item end_name end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name list end_name begin_argument_list begin_argument begin_expr begin_name remote file end_name end_expr end_argument begin_argument begin_expr begin_name local end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ie end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name ie end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_then end_if end_block end_while begin_comment now do it again for the directories so they appear last end_comment begin_expr_stmt begin_expr begin_name e end_name begin_operator EQ end_operator begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name end_type begin_name local end_name begin_init begin_expr begin_operator LPAR end_operator begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name item end_name end_type begin_name remote item end_name begin_init begin_expr begin_operator LPAR end_operator begin_name item end_name begin_operator RPAR end_operator begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name local end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment once we find a folder that isn t in the repository end_comment begin_comment we know we can add it end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name local end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name folder end_name end_type begin_name folder end_name begin_init begin_expr begin_operator LPAR end_operator begin_name folder end_name begin_operator RPAR end_operator begin_name remote item end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name is recursive end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name folder end_name begin_operator DOT end_operator begin_name get folder hierarchy end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name local end_name begin_operator DOT end_operator begin_name get absolute file end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name unmatched file map end_name end_type begin_name submap end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name unmatched listing map end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name init end_name begin_argument_list begin_argument begin_expr begin_name local end_name end_expr end_argument begin_argument begin_expr begin_name folder end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name submap end_name begin_operator DOT end_operator begin_name process uncontrolled items end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block end_while end_block end_then end_if end_block 
 begin_comment constructor to stop anyone instantiating the class end_comment begin_specifier end_specifier begin_name string utils end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment on vms platform we need to create a special java options file containing the arguments and classpath for the java command the special file is supported by the v switch on the vms jvm param exe executable param command command to execute end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name setup command line for vms end_name begin_parameter_list begin_param begin_decl begin_type begin_name execute end_name end_type begin_name exe end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name command end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name execute java end_name begin_operator DOT end_operator begin_name setup command line for vms end_name end_name begin_argument_list begin_argument begin_expr begin_name exe end_name end_expr end_argument begin_argument begin_expr begin_name command end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name abstract cvs task test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the script text param text a component of the script text to be added end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add text end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name text end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name add text end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment check style member name check on end_comment begin_comment check style visibility modifier on end_comment begin_comment gets whether or not the task has encountered an error return error flag since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get in error end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name in error end_name end_expr end_return end_block 
 begin_comment go back to the hardwired default exclude patterns since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name reset default excludes end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name default excludes end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name defaultexcludes end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name default excludes end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name defaultexcludes end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set message end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name message end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name message end_name end_name begin_operator EQ end_operator begin_name message end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name send directory end_name begin_parameter_list begin_param begin_decl begin_type begin_name directory end_name end_type begin_name current end_name end_decl end_param begin_param begin_decl begin_type begin_name input stream end_name end_type begin_name in end_name end_decl end_param begin_param begin_decl begin_type begin_name output stream end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name file it end_name begin_init begin_expr begin_call begin_name begin_name current end_name begin_operator DOT end_operator begin_name files iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name file it end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name send file to remote end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name file end_name begin_operator RPAR end_operator begin_call begin_name begin_name file it end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name in end_name end_expr end_argument begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name dir it end_name begin_init begin_expr begin_call begin_name begin_name current end_name begin_operator DOT end_operator begin_name directory iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name dir it end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name directory end_name end_type begin_name dir end_name begin_init begin_expr begin_operator LPAR end_operator begin_name directory end_name begin_operator RPAR end_operator begin_call begin_name begin_name dir it end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name send directory to remote end_name begin_argument_list begin_argument begin_expr begin_name dir end_name end_expr end_argument begin_argument begin_expr begin_name in end_name end_expr end_argument begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_comment convert string to index param type the string to convert return the index end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name int end_name end_type begin_name to type end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name type end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name type end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name integer type end_name end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name type end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name date type end_name end_expr end_return end_block end_then end_if end_else end_if begin_return begin_expr begin_name string type end_name end_expr end_return end_block 
 begin_specifier end_specifier begin_name directory scanner test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment implement the user info interface param message ignored return the value of trust all certificates end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name prompt yes no end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name message end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_name trust all certificates end_name end_expr end_return end_block 
 begin_comment create a temporary file in a given directory p the file denoted by the returned abstract pathname did not exist before this method was invoked any subsequent invocation of this method will yield a different file name p p the filename is prefix nnnn nsuffix where nnnn is a random number p p this method is different from file create temp file of jdk 1 2 as it doesn t create the file itself it uses the location pointed to by java io tmpdir when the parent dir attribute is null p param prefix prefix before the random number param suffix file extension include the param parent dir directory to create the temporary file in param delete on exit whether to set the tempfile for deletion on normal vm exit java io tmpdir used if not specified return a file reference to the new temporary file since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name create temp file end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name prefix end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name suffix end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name parent dir end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name delete on exit end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name result end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name parent end_name begin_init begin_expr begin_operator LPAR end_operator begin_name parent dir end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DP end_operator begin_call begin_name begin_name parent dir end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name decimal format end_name end_type begin_name fmt end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name decimal format end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_synchronized begin_expr begin_name rand end_name end_expr begin_block begin_do begin_block begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_name prefix end_name begin_operator PLUS end_operator begin_call begin_name begin_name fmt end_name begin_operator DOT end_operator begin_name format end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name math end_name begin_operator DOT end_operator begin_name abs end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name rand end_name begin_operator DOT end_operator begin_name next int end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_name suffix end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_condition begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition end_do end_block end_synchronized begin_if begin_condition begin_expr begin_name delete on exit end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name delete on exit end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name result end_name end_expr end_return end_block 
 begin_comment set the source file param file the source file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name file end_name end_name begin_operator EQ end_operator begin_name file end_name end_expr end_expr_stmt end_block 
 begin_comment get the java attribute return the java attribute end_comment begin_type begin_specifier end_specifier begin_name java end_name end_type begin_name get java end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name java end_name end_expr end_return end_block 
 begin_comment set an attribute to a given value param name the name of the attribute param value the attribute s value end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set attribute end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name equals ignore case end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name project helper end_name begin_operator DOT end_operator begin_name ant type end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name poly type end_name end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_name attribute names end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name attribute names end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name attribute map end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name hash map end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name to lower case end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name attribute names end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name attribute names end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name attribute map end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name id end_name end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if end_block 
 begin_comment return all variables to their default state for the next invocation since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set defaults end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name resource end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name link end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name link file name end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name failonerror end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_comment default behavior is to fail on an error end_comment begin_expr_stmt begin_expr begin_name overwrite end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_comment default behavior is to not overwrite end_comment begin_expr_stmt begin_expr begin_call begin_name set action end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment default behavior is make a single link end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name file sets end_name begin_operator DOT end_operator begin_name clear end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test we can disassemble end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test ildasm empty end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment defines the mapper to map source to destination files param mapper the mapper to use exception build exception if more than one mapper is defined since ant 1 6 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add mapper end_name begin_parameter_list begin_param begin_decl begin_type begin_name mapper end_name end_type begin_name mapper end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name mapper element end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name mapper element end_name begin_operator EQ end_operator begin_name mapper end_name end_expr end_expr_stmt end_block 
 begin_comment the required destination file param zip file the destination file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set zipfile end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name zip file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name zip file end_name end_name begin_operator EQ end_operator begin_name zip file end_name end_expr end_expr_stmt end_block 
 begin_comment set the read only file attribute param value a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set readonly end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add arg end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument begin_argument begin_expr begin_name attr readonly end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 2 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test nested catalogpath it should be ignored if resolver jar is not present but will be used if it is either way test should work b c we have a nested dtd with the same entity end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test xml catalog path end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the encoding of the text element param encoding the name of the charset used to encode end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set encoding end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name encoding end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name encoding end_name end_name begin_operator EQ end_operator begin_name encoding end_name end_expr end_expr_stmt end_block 
 begin_comment get the warn level switch return the warn level parameter to csc end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get warn level parameter end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator PLUS end_operator begin_name warn level end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test text end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment handle an input request param buffer the buffer into which data is to be read param offset the offset into the buffer at which data is stored param length the amount of data to read return the number of bytes read exception io exception if the data cannot be read end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name int end_name end_type begin_name handle input end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name buffer end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name offset end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name length end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name input stream end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name begin_name managing task end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name default input end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name length end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr begin_call begin_name begin_name input stream end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name length end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_else end_if end_block 
 begin_comment specifies the html help file to use param f the file containing help content end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set helpfile end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name f end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set file end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment find a resource location instance for the given public id param public id the public id of the resource for which local information is required return a resource location instance with information on the local location of the resource or null if no such information is available end_comment begin_type begin_specifier end_specifier begin_name resource location end_name end_type begin_name find matching entry end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name public id end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name get elements end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name elements end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name resource location end_name end_type begin_name element end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name o end_name begin_init begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name o end_name begin_operator UNP end_operator begin_name resource location end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name element end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name resource location end_name begin_operator RPAR end_operator begin_name o end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name element end_name begin_operator DOT end_operator begin_name get public id end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name public id end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name element end_name end_expr end_return end_block end_then end_if end_block end_then end_if end_block end_while begin_return begin_expr end_expr end_return end_block 
 begin_comment get value as java int return value as a java int since 1 1 end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get value end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name value end_name end_expr end_return end_block 
 begin_comment sets the unless condition to test on execution this is the name of a property to test for existence if the property is set the task will not execute the property goes through property substitution once before testing so if property code foo code has value code bar code setting the unless condition to code foo x code will mean that the task will only execute if property code bar x code isn t set param property the property condition to test on execution may be code null code in which case no unless test is performed end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set unless end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name property end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name unless condition end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name property end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator DP end_operator begin_name property end_name end_expr end_expr_stmt end_block 
 begin_comment test for disassembly being needed use existence and granularity correct date stamps return true iff a rebuild is required end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is disassembly needed end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name dest file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name source time end_name begin_init begin_expr begin_call begin_name begin_name source file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name dest time end_name begin_init begin_expr begin_call begin_name begin_name dest file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name source time end_name begin_operator GT end_operator begin_operator LPAR end_operator begin_name dest time end_name begin_operator PLUS end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name get file timestamp granularity end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block end_else end_if end_block 
 begin_comment set the destination directory into which the java source files should be compiled param dest dir the destination directory end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set destdir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name dest dir end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name dest dir end_name end_name begin_operator EQ end_operator begin_name dest dir end_name end_expr end_expr_stmt end_block 
 begin_comment take care that some output is produced in report files if the watchdog kills the test since ant 1 5 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name log timeout end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name formatter element end_name begin_index end_index end_name end_type begin_name fe array end_name end_decl end_param begin_param begin_decl begin_type begin_name j unit test end_name end_type begin_name test end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name test case end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log vm exit end_name begin_argument_list begin_argument begin_expr begin_name fe array end_name end_expr end_argument begin_argument begin_expr begin_name test end_name end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name test case end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns the prefix which will be added at the start of each input line return the prefix which will be added at the start of each input line end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get prefix end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name prefix end_name end_expr end_return end_block 
 begin_comment set the java class to execute param s the name of the main class throws build exception if the jar attribute has been set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classname end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name get command line end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get jar end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name get command line end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set classname end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the algorithm type to use param name an enumerated algorithm type end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set algorithm end_name begin_parameter_list begin_param begin_decl begin_type begin_name algorithm name end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name algo name end_name begin_operator EQ end_operator begin_name name end_name end_expr end_expr_stmt end_block 
 begin_comment get the size of this resource return the long size of this resource end_comment begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name get size end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get size end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name check entry end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name get size end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment gets the verbose flag return the verbose flag end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get verbose end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name verbose end_name end_expr end_return end_block 
 begin_comment testcases for the comparator implementations end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test equal comparator end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name equal comparator end_name end_type begin_name comp end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name equal comparator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name do test end_name begin_argument_list begin_argument begin_expr begin_name comp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment encodes an uri with characters the uri is escaped param path string to encode return the encoded string according to uri norms throws unsupported encoding exception if utf 8 is not available since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name encode uri end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name path end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name unsupported encoding exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name len end_name begin_init begin_expr begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name ch end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name sb end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name len end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name ch end_name begin_operator EQ end_operator begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment if it s not an ascii character break here and use utf 8 encoding end_comment begin_if begin_condition begin_expr begin_name ch end_name begin_operator GE end_operator end_expr end_condition begin_then begin_block begin_break end_break end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name g need escaping end_name begin_index begin_expr begin_name ch end_name end_expr end_index end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name sb end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name sb end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name g after escaping 1 end_name begin_index begin_expr begin_name ch end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name g after escaping 2 end_name begin_index begin_expr begin_name ch end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment record the fact that it s escaped end_comment end_block end_then begin_else begin_if begin_condition begin_expr begin_name sb end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name char end_name begin_operator RPAR end_operator begin_name ch end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if end_block end_for begin_comment we saw some non ascii character end_comment begin_if begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name len end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name sb end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name sb end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment get utf 8 bytes for the remaining sub string end_comment begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name bytes end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name byte end_name end_type begin_name b end_name end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name bytes end_name begin_operator EQ end_operator begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get bytes end_name begin_argument_list begin_argument begin_expr begin_name uri encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name len end_name begin_operator EQ end_operator begin_name begin_name bytes end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_expr_stmt begin_comment for each byte end_comment begin_for begin_init begin_expr begin_name i end_name begin_operator EQ end_operator end_expr end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name len end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name b end_name begin_operator EQ end_operator begin_name begin_name bytes end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_expr_stmt begin_comment for non ascii character make it positive then escape end_comment begin_if begin_condition begin_expr begin_name b end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name ch end_name begin_operator EQ end_operator begin_name b end_name begin_operator PLUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name g hex chs end_name begin_index begin_expr begin_name ch end_name begin_operator UNP end_operator end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name g hex chs end_name begin_index begin_expr begin_name ch end_name begin_operator UNP end_operator end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name begin_name g need escaping end_name begin_index begin_expr begin_name b end_name end_expr end_index end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name g after escaping 1 end_name begin_index begin_expr begin_name b end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name g after escaping 2 end_name begin_index begin_expr begin_name b end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name char end_name begin_operator RPAR end_operator begin_name b end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if end_block end_for end_block end_then end_if begin_return begin_expr begin_name sb end_name begin_operator EQT end_operator begin_operator QM end_operator begin_name path end_name begin_operator DP end_operator begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment set the list of packages to be excluded param packages a comma separated list of packages to be excluded this may not include wildcards end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set exclude package names end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name packages end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string tokenizer end_name end_type begin_name tok end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string tokenizer end_name begin_argument_list begin_argument begin_expr begin_name packages end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name tok end_name begin_operator DOT end_operator begin_name has more tokens end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name p end_name begin_init begin_expr begin_call begin_name begin_name tok end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name package name end_name end_type begin_name pn end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name package name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name pn end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add exclude package end_name begin_argument_list begin_argument begin_expr begin_name pn end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block 
 begin_comment test that classes included in a method system out println my class class are included end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test method param end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name project end_name end_type begin_name p end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file set end_name end_type begin_name result file set end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file set end_name begin_operator RPAR end_operator begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get reference end_name end_name begin_argument_list begin_argument begin_expr begin_name result fileset end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name scanner end_name begin_init begin_expr begin_call begin_name begin_name result file set end_name begin_operator DOT end_operator begin_name get directory scanner end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name scanned files end_name begin_init begin_expr begin_call begin_name begin_name scanner end_name begin_operator DOT end_operator begin_name get included files end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name hashtable end_name end_type begin_name files end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name scanned files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name scanned files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name scanned files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name contains key end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name contains key end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name contains key end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name contains key end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name contains key end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name send mtf values 4 end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name boolean end_name begin_index end_index end_type begin_name in use end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name data end_name begin_operator DOT end_operator begin_name in use end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name boolean end_name begin_index end_index end_type begin_name in use 16 end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name data end_name begin_operator DOT end_operator begin_name sent mtf values 4 in use 16 end_name end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_operator MMINUS end_operator begin_name i end_name begin_operator GE end_operator end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_name begin_name in use 16 end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name i 16 end_name begin_init begin_expr begin_name i end_name begin_operator STAR end_operator end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_operator MMINUS end_operator begin_name j end_name begin_operator GE end_operator end_expr end_condition begin_incr end_incr begin_block begin_if begin_condition begin_expr begin_name begin_name in use end_name begin_index begin_expr begin_name i 16 end_name begin_operator PLUS end_operator begin_name j end_name end_expr end_index end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name in use 16 end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block end_for end_block end_for begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name bs w end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name in use 16 end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator QM end_operator begin_operator DP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name output stream end_name end_type begin_name out shadow end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name out end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name bs live shadow end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name bs live end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name bs buff shadow end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name bs buff end_name end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name begin_name in use 16 end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name i 16 end_name begin_init begin_expr begin_name i end_name begin_operator STAR end_operator end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name j end_name begin_operator LT end_operator end_expr end_condition begin_incr begin_expr begin_name j end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_comment inlined bs w 1 in use i 16 j 1 0 end_comment begin_while begin_condition begin_expr begin_name bs live shadow end_name begin_operator GE end_operator end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out shadow end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name bs buff shadow end_name begin_operator UNP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment write 8 bit end_comment begin_expr_stmt begin_expr begin_name bs buff shadow end_name begin_operator UNP end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name bs live shadow end_name begin_operator UNP end_operator end_expr end_expr_stmt end_block end_while begin_if begin_condition begin_expr begin_name begin_name in use end_name begin_index begin_expr begin_name i 16 end_name begin_operator PLUS end_operator begin_name j end_name end_expr end_index end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name bs buff shadow end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator MINUS end_operator begin_name bs live shadow end_name begin_operator MINUS end_operator begin_operator RPAR end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name bs live shadow end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_for end_block end_then end_if end_block end_for begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name bs buff end_name end_name begin_operator EQ end_operator begin_name bs buff shadow end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name bs live end_name end_name begin_operator EQ end_operator begin_name bs live shadow end_name end_expr end_expr_stmt end_block 
 begin_comment if true append output to existing file param append if true append output to existing file since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set append end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name append end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name set append end_name end_name begin_argument_list begin_argument begin_expr begin_name append end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name incompatible with spawn end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment specifies the task number used to check in the file may use default param v value to assign to task end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set task end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name v end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name task end_name end_name begin_operator EQ end_operator begin_name v end_name end_expr end_expr_stmt end_block 
 begin_comment set targetos to a platform to one of windows unix netware or os 2 current platform settings are used by default param target the target os deprecated since 1 5 x use the method taking a target os argument instead see set targetos path convert target os end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set targetos end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name target end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name target os end_name end_type begin_name to end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name target os end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name to end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set targetos end_name begin_argument_list begin_argument begin_expr begin_name to end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructs a new mail message to send an email use localhost as the mail server with port 25 exception io exception if there s any problem contacting the mail server end_comment begin_specifier end_specifier begin_name mail message end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr begin_name default host end_name end_expr end_argument begin_argument begin_expr begin_name default port end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test add text end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name add text end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name add text end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get exception end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name assertion failed error end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_name ih end_name begin_operator EQ end_operator begin_call begin_name begin_name introspection helper end_name begin_operator DOT end_operator begin_name get helper end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name string end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name add text end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block end_block end_catch end_try end_block 
 begin_comment check the command line options end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check options end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name end_decl end_param end_parameter_list begin_block begin_comment clear case items end_comment begin_if begin_condition begin_expr begin_call begin_name get graphical end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment graphical end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag graphical end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_call begin_name get overwrite end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment overwrite end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag overwrite end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_call begin_name get rename end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment rename end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag rename end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment noverwrite end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag noverwrite end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_else end_if begin_if begin_condition begin_expr begin_call begin_name get current time end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment ctime end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag currenttime end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_call begin_name get preserve time end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment ptime end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag preservetime end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if begin_comment log logname end_comment begin_expr_stmt begin_expr begin_call begin_name get log command end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_comment viewpath end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get view path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment shall we assume jdk 1 2 command line switches return true if jdk 1 2 since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name assume java 12 end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get compiler version end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get compiler version end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name is java version end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name java 1 2 end_name end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get compiler version end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name is java version end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name java 1 2 end_name end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment check repeatedly for the specified conditions until they become true or the timeout expires throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name count conditions end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name get task name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name count conditions end_name begin_argument_list end_argument_list end_call begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get task name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name condition end_name end_type begin_name c end_name begin_init begin_expr begin_operator LPAR end_operator begin_name condition end_name begin_operator RPAR end_operator begin_call begin_name get conditions end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name next element end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name saved max wait millis end_name begin_init begin_expr begin_name max wait millis end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name saved check every millis end_name begin_init begin_expr begin_name check every millis end_name end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name max wait millis end_name begin_operator UNP end_operator begin_name max wait multiplier end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name check every millis end_name begin_operator UNP end_operator begin_name check every multiplier end_name end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name start end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name end end_name begin_init begin_expr begin_name start end_name begin_operator PLUS end_operator begin_name max wait millis end_name end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call begin_operator LT end_operator begin_name end end_name end_expr end_condition begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name eval end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name process success end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name sleep end_name end_name begin_argument_list begin_argument begin_expr begin_name check every millis end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name interrupted exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try end_block end_while begin_expr_stmt begin_expr begin_call begin_name process timeout end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_expr_stmt begin_expr begin_name max wait millis end_name begin_operator EQ end_operator begin_name saved max wait millis end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name check every millis end_name begin_operator EQ end_operator begin_name saved check every millis end_name end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 8 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name test 8 end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no lang end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment flag to recursively apply the action defaults to false param recursive true for recursive operation end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set recursive end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name recursive end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal recursive end_name end_name begin_argument_list begin_argument begin_expr begin_name recursive end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment this flag tells the selector to ignore file times in the comparison param ignore file times if true ignore file times end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set ignore file times end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name ignore file times end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name ignore file times end_name end_name begin_operator EQ end_operator begin_name ignore file times end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 3 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment see expand expand file file utils file file end_comment begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name expand file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file utils end_name end_type begin_name file utils end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name src f end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name dir end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name file input stream end_name end_type begin_name fis end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name fis end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_name src f end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name expand stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name src f end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name fis end_name end_expr end_argument begin_argument begin_expr begin_name dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name src f end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name ioe end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name fis end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment tell the user about the xml parser param out end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name do report parser info end_name begin_parameter_list begin_param begin_decl begin_type begin_name print stream end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name parser name end_name begin_init begin_expr begin_call begin_name get xml parser name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name parser location end_name begin_init begin_expr begin_call begin_name get xml parser location end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name print parser info end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name parser name end_name end_expr end_argument begin_argument begin_expr begin_name parser location end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name print parser info end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get namespace parser name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get namespace parser location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns main handler return main handler end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name ant handler end_name end_type begin_name get main handler end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name main handler end_name end_expr end_return end_block 
 begin_comment return the output property name end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name name end_name end_expr end_return end_block 
 begin_comment print changelog to file specified in task param entry set the entry set to write throws build exception if there is an error writing changelog end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write change log end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name begin_name cvs entry end_name begin_index end_index end_name end_type begin_name entry set end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name file output stream end_name end_type begin_name output end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name output end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file output stream end_name begin_argument_list begin_argument begin_expr begin_name dest file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name print writer end_name end_type begin_name writer end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name print writer end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name output stream writer end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name change log writer end_name end_type begin_name serializer end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name change log writer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name serializer end_name begin_operator DOT end_operator begin_name print change log end_name end_name begin_argument_list begin_argument begin_expr begin_name writer end_name end_expr end_argument begin_argument begin_expr begin_name entry set end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name unsupported encoding exception end_name end_type begin_name uee end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name uee end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ioe end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name ioe end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment handler called to do decent diagnosis on instantiation failure param component name component name param type component type used in error messages return a string containing as much diagnostics info as possible end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name diagnose creation failure end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name component name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name type end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string writer end_name end_type begin_name error text end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string writer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name print writer end_name end_type begin_name out end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name print writer end_name begin_argument_list begin_argument begin_expr begin_name error text end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name type end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name component name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment class of problem end_comment begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name lowlevel end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name jars end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name definitions end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name ant task end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name home end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name launcher end_name begin_operator DOT end_operator begin_name user homedir end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name lib dir end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name home end_name end_expr end_argument begin_argument begin_expr begin_name begin_name launcher end_name begin_operator DOT end_operator begin_name user libdir end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name ant home lib end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name probably ide end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name anthome end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name ant home end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name anthome end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name ant home lib dir end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name anthome end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name ant home lib end_name begin_operator EQ end_operator begin_call begin_name begin_name ant home lib dir end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment running under an ide that doesn t set ant home end_comment begin_expr_stmt begin_expr begin_name probably ide end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name ant home lib end_name begin_operator EQ end_operator begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name begin_operator PLUS end_operator end_expr end_expr_stmt end_block end_else end_if begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name dir listing text end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name tab end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dir listing text end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name tab end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dir listing text end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name ant home lib end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dir listing text end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name probably ide end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name dir listing text end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name tab end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dir listing text end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name dir listing text end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name tab end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dir listing text end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name lib dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dir listing text end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dir listing text end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name tab end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dir listing text end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name dir listing end_name begin_init begin_expr begin_call begin_name begin_name dir listing text end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment look up the name end_comment begin_decl_stmt begin_decl begin_type begin_name ant type definition end_name end_type begin_name def end_name begin_init begin_expr begin_call begin_name get definition end_name begin_argument_list begin_argument begin_expr begin_name component name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name def end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment not a known type end_comment begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name is antlib end_name begin_init begin_expr begin_call begin_name begin_name component name end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name antlib prefix end_name end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name is antlib end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name dir listing end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name definitions end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment we are defined so it is an instantiation problem end_comment begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name classname end_name begin_init begin_expr begin_call begin_name begin_name def end_name begin_operator DOT end_operator begin_name get class name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name ant task end_name begin_operator EQ end_operator begin_call begin_name begin_name classname end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name optional end_name begin_init begin_expr begin_call begin_name begin_name classname end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name optional end_name begin_operator UNP end_operator begin_call begin_name begin_name classname end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment start with instantiating the class end_comment begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name clazz end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name clazz end_name begin_operator EQ end_operator begin_call begin_name begin_name def end_name begin_operator DOT end_operator begin_name inner get type class end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name classname end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name jars end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name optional end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name dir listing end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name dir listing end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name definitions end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_else end_if end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no class def found error end_name end_type begin_name ncdfe end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name jars end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name ncdfe end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name optional end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name dir listing end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_comment here we successfully loaded the class or failed end_comment begin_if begin_condition begin_expr begin_name clazz end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment success proceed with more steps end_comment begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name def end_name begin_operator DOT end_operator begin_name inner create and set end_name end_name begin_argument_list begin_argument begin_expr begin_name clazz end_name end_expr end_argument begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment hey there is nothing wrong with us end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no such method exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name lowlevel end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name classname end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name instantiation exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name lowlevel end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name classname end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal access exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name lowlevel end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name classname end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name invocation target exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name lowlevel end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name begin_init begin_expr begin_call begin_name begin_name ex end_name begin_operator DOT end_operator begin_name get target exception end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name print stack trace end_name end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no class def found error end_name end_type begin_name ncdfe end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name jars end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name classname end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name ncdfe end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name dir listing end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name definitions end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name jars end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name lowlevel end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name ant task end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name type end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name error text end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment get the classpath by combining the one from the surrounding task if any and the one from this tool return the combined classpath end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name get combined classpath end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name combined path end_name begin_init begin_expr begin_name classpath end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name begin_name config end_name begin_operator DOT end_operator begin_name classpath end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name combined path end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name combined path end_name begin_operator EQ end_operator begin_name begin_name config end_name begin_operator DOT end_operator begin_name classpath end_name end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name combined path end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name config end_name begin_operator DOT end_operator begin_name classpath end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_return begin_expr begin_name combined path end_name end_expr end_return end_block 
 begin_comment parse a string as a date using the iso 8601 date format which is code yyyy mm dd code param datestr string to be parsed return a java util date object as parsed by the format exception parse exception if the supplied string cannot be parsed by this pattern since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name date end_name end_type begin_name parse iso 8601 date end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name datestr end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name parse exception end_name end_expr end_argument end_throws begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name simple date format end_name begin_argument_list begin_argument begin_expr begin_name iso 8601 date pattern end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name parse end_name begin_argument_list begin_argument begin_expr begin_name datestr end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment equality test checks all the member variables param other return true if everything is equal end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name equals end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name other end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name other end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name other end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name begin_name forked test configuration end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name forked test configuration end_name end_type begin_name o end_name begin_init begin_expr begin_operator LPAR end_operator begin_name forked test configuration end_name begin_operator RPAR end_operator begin_name other end_name end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_name filter trace end_name begin_operator EQT end_operator begin_name begin_name o end_name begin_operator DOT end_operator begin_name filter trace end_name end_name begin_operator UNP end_operator begin_name halt on error end_name begin_operator EQT end_operator begin_name begin_name o end_name begin_operator DOT end_operator begin_name halt on error end_name end_name begin_operator UNP end_operator begin_name halt on failure end_name begin_operator EQT end_operator begin_name begin_name o end_name begin_operator DOT end_operator begin_name halt on failure end_name end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name error property end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name begin_name o end_name begin_operator DOT end_operator begin_name error property end_name end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name error property end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name error property end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name o end_name begin_operator DOT end_operator begin_name error property end_name end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name failure property end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name begin_name o end_name begin_operator DOT end_operator begin_name failure property end_name end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name failure property end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name failure property end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name o end_name begin_operator DOT end_operator begin_name failure property end_name end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment based on this object s instance variables as well as the ejb to be processed the correct flags and parameters are set for the ejbc command line utility param ejb the ejb for which stubs and skeletons will be compiled return an array of strings which are the command line parameters for for the ejbc utility end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name build argument list end_name begin_parameter_list begin_param begin_decl begin_type begin_name ejb info end_name end_type begin_name ejb end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name list end_name end_type begin_name arguments end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment optional command line parameters end_comment begin_if begin_condition begin_expr begin_name debug output end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name arguments end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment no beantype flag is needed for an entity bean end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name ejb end_name begin_operator DOT end_operator begin_name get beantype end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name stateless session end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name arguments end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name ejb end_name begin_operator DOT end_operator begin_name get beantype end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name stateful session end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name arguments end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if begin_if begin_condition begin_expr begin_call begin_name begin_name ejb end_name begin_operator DOT end_operator begin_name get iiop end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name arguments end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name ejb end_name begin_operator DOT end_operator begin_name get cmp end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name arguments end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name retain source end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name arguments end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name ejb end_name begin_operator DOT end_operator begin_name get hasession end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name arguments end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment required command line parameters end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name arguments end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name arguments end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name classpath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name arguments end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name arguments end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name dest directory end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name arguments end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ejb end_name begin_operator DOT end_operator begin_name get home end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get qualified class name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name arguments end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ejb end_name begin_operator DOT end_operator begin_name get remote end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get qualified class name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name arguments end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ejb end_name begin_operator DOT end_operator begin_name get implementation end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get qualified class name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment convert the list into an array and return it end_comment begin_return begin_expr begin_operator LPAR end_operator begin_name begin_name string end_name begin_index end_index end_name begin_operator RPAR end_operator begin_call begin_name begin_name arguments end_name begin_operator DOT end_operator begin_name to array end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_call begin_name begin_name arguments end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment see java lang object equals param rhs the object to check for equality return true if the version main and sections are the same end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name equals end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name rhs end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name rhs end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name rhs end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name get class end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name rhs end_name begin_operator EQT end_operator begin_name this end_name end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name manifest end_name end_type begin_name rhs manifest end_name begin_init begin_expr begin_operator LPAR end_operator begin_name manifest end_name begin_operator RPAR end_operator begin_name rhs end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name manifest version end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name begin_name rhs manifest end_name begin_operator DOT end_operator begin_name manifest version end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name manifest version end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name rhs manifest end_name begin_operator DOT end_operator begin_name manifest version end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_else end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name main section end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name rhs manifest end_name begin_operator DOT end_operator begin_name main section end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name sections end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name rhs manifest end_name begin_operator DOT end_operator begin_name sections end_name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_name object end_name end_type begin_name create end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name ignore end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name invocation target exception end_name end_expr end_argument begin_argument begin_expr begin_name illegal access exception end_name end_expr end_argument end_throws begin_block begin_return begin_expr begin_call begin_name get method end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name invoke end_name begin_argument_list begin_argument begin_expr begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block end_block end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment name of the class without the package end_comment begin_comment this constructor builds an object which represents the name of a java class param qualified name string representing the fully qualified class name of the java class end_comment begin_specifier end_specifier begin_name classname end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name qualified name end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name qualified name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name qualified name end_name end_name begin_operator EQ end_operator begin_name qualified name end_name end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name index end_name begin_init begin_expr begin_call begin_name begin_name qualified name end_name begin_operator DOT end_operator begin_name last index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name index end_name begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name class name end_name begin_operator EQ end_operator begin_name qualified name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name package name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name package name end_name begin_operator EQ end_operator begin_call begin_name begin_name qualified name end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name class name end_name begin_operator EQ end_operator begin_call begin_name begin_name qualified name end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name index end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test file set end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name p end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file set end_name end_type begin_name f end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file set end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name set dir end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name set includes end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name add fileset end_name end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name l end_name begin_init begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment builds and returns the working directory p the localpath is created if it didn t exist return the absolute path of the working directory end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get local path end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name local path end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_comment make sure local dir exists create it if it doesn t end_comment begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name dir end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr begin_name local path end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name done end_name begin_init begin_expr begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name mkdirs end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name done end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_name local path end_name begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_else end_if end_block 
 begin_comment automatically calls the target called tear down from the build file tested if it exits p this allows to use ant tasks directly in the build file to clean up after each test note that no set up target is automatically called since it s trivial to have a test target depend on it end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name tear down end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test basic signing end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment override of base class abstract function creates an appropriately configured view for labels this a view configured as of this last build param raw the unconfigured code view code return the snapshot code view code appropriately configured end_comment begin_type begin_specifier end_specifier begin_name view end_name end_type begin_name create snapshot view end_name begin_parameter_list begin_param begin_decl begin_type begin_name view end_name end_type begin_name raw end_name end_decl end_param end_parameter_list begin_block begin_comment if this revisionlabel return raw return new view raw view configuration create from time this last build end_comment begin_return begin_expr begin_name raw end_name end_expr end_return end_block 
 begin_comment return the converted pathelements return a code string code value end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get parts end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name parts end_name end_expr end_return end_block 
 begin_comment specifies the output name for the styled result from the tt in tt attribute required if tt in tt is set param out file the output file instance end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set out end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name out file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name out file end_name end_name begin_operator EQ end_operator begin_name out file end_name end_expr end_expr_stmt end_block 
 begin_comment find the list of environment variables for this process return a vector containing the environment variables the vector elements are strings formatted like variable value end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_specifier end_specifier begin_name vector end_name end_type begin_name get proc environment end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name proc environment end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_name proc environment end_name end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name proc environment end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name byte array output stream end_name end_type begin_name out end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name byte array output stream end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name execute end_name end_type begin_name exe end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name execute end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name pump stream handler end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set commandline end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get proc env command end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment make sure we do not recurse forever end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set newenvironment end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name retval end_name begin_init begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name retval end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment just try to use what we got end_comment end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name buffered reader end_name end_type begin_name in end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name buffered reader end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name string reader end_name begin_argument_list begin_argument begin_expr begin_call begin_name to string end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name proc environment end_name begin_operator EQ end_operator begin_call begin_name add vms logicals end_name begin_argument_list begin_argument begin_expr begin_name proc environment end_name end_expr end_argument begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name proc environment end_name end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name var end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name line end_name end_decl begin_operator UNP end_operator begin_decl begin_type end_type begin_name line sep end_name begin_init begin_expr begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_operator LPAR end_operator begin_name line end_name begin_operator EQ end_operator begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_comment chunk part of previous env var unix env vars can end_comment begin_comment contain embedded new lines end_comment begin_if begin_condition begin_expr begin_name var end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name var end_name begin_operator EQ end_operator begin_name line sep end_name begin_operator PLUS end_operator begin_name line end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name var end_name begin_operator UNP end_operator begin_name line sep end_name begin_operator PLUS end_operator begin_name line end_name end_expr end_expr_stmt end_block end_else end_if end_block end_then begin_else begin_block begin_comment new env var append the previous one if we have it end_comment begin_if begin_condition begin_expr begin_name var end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name proc environment end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name var end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name var end_name begin_operator EQ end_operator begin_name line end_name end_expr end_expr_stmt end_block end_else end_if end_block end_while begin_comment since we look ahead before adding there s one last env var end_comment begin_if begin_condition begin_expr begin_name var end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name proc environment end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name var end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name io exception end_name end_name end_type begin_name exc end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name exc end_name begin_operator DOT end_operator begin_name print stack trace end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment just try to see how much we got end_comment end_block end_catch end_try begin_return begin_expr begin_name proc environment end_name end_expr end_return end_block 
 begin_comment print out specification details param specification the specification end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name display specification end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name specification end_name end_type begin_name specification end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name sections end_name begin_init begin_expr begin_call begin_name begin_name specification end_name begin_operator DOT end_operator begin_name get sections end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name sections end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string buffer end_name end_type begin_name sb end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name sections end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name sections end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name sb end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name specification end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test file end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment shall we assume jdk 1 3 command line switches return true if jdk 1 3 since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name assume java 13 end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get compiler version end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get compiler version end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name is java version end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name java 1 3 end_name end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get compiler version end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name is java version end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name java 1 3 end_name end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get compiler version end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name is java version end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name java 1 3 end_name end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment auto find the time difference between local and remote param ftp handle to ftp client return number of millis to add to remote time to make it comparable to local time since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name get time diff end_name begin_parameter_list begin_param begin_decl begin_type begin_name ftp client end_name end_type begin_name ftp end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name return value end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name temp file end_name begin_init begin_expr begin_call begin_name find file name end_name begin_argument_list begin_argument begin_expr begin_name ftp end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_comment create a local temporary file end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name create new file end_name end_name begin_argument_list begin_argument begin_expr begin_name temp file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name local time stamp end_name begin_init begin_expr begin_call begin_name begin_name temp file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name buffered input stream end_name end_type begin_name instream end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name buffered input stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_name temp file end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name store file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name temp file end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name instream end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name instream end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name success end_name begin_init begin_expr begin_call begin_name begin_name ftp reply end_name begin_operator DOT end_operator begin_name is positive completion end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name get reply code end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name success end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name ftp file end_name begin_index end_index end_type begin_name ftp files end_name begin_init begin_expr begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name list files end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name temp file end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name begin_name ftp files end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name remote time stamp end_name begin_init begin_expr begin_name begin_name ftp files end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get timestamp end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get time end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get time end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name return value end_name begin_operator EQ end_operator begin_name local time stamp end_name begin_operator MINUS end_operator begin_name remote time stamp end_name end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name delete file end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name ftp files end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment delegate the deletion of the local temp file to the delete task end_comment begin_comment because of race conditions occuring on windows end_comment begin_decl_stmt begin_decl begin_type begin_name delete end_name end_type begin_name mydelete end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name delete end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name mydelete end_name begin_operator DOT end_operator begin_name bind to owner end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name mydelete end_name begin_operator DOT end_operator begin_name set file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name temp file end_name begin_operator DOT end_operator begin_name get canonical file end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name mydelete end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_return begin_expr begin_name return value end_name end_expr end_return end_block 
 begin_comment interface test listener for j unit gt 3 4 p a test failed param test a test param t the assertion failed by the test end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add failure end_name begin_parameter_list begin_param begin_decl begin_type begin_name test end_name end_type begin_name test end_name end_decl end_param begin_param begin_decl begin_type begin_name assertion failed error end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add failure end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name throwable end_name begin_operator RPAR end_operator begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment send a quot message logged quot project level event to the build listeners for this project param project the project generating the event should not be code null code param message the message to send should not be code null code param throwable the exception that caused this message may be code null code param priority the priority of the message since 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name fire message logged end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name message end_name end_decl end_param begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name throwable end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name priority end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name build event end_name end_type begin_name event end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name build event end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name set exception end_name end_name begin_argument_list begin_argument begin_expr begin_name throwable end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fire message logged event end_name begin_argument_list begin_argument begin_expr begin_name event end_name end_expr end_argument begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_name priority end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test semantic end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name do test end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get this project s executor setting it if necessary return an executor instance end_comment begin_type begin_specifier end_specifier begin_name executor end_name end_type begin_name get executor end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name o end_name begin_init begin_expr begin_call begin_name get reference end_name begin_argument_list begin_argument begin_expr begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name ant executor reference end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name o end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name classname end_name begin_init begin_expr begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name ant executor classname end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name classname end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name classname end_name begin_operator EQ end_operator begin_call begin_name begin_name default executor end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name get name end_name end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name classname end_name end_expr end_argument begin_argument begin_expr begin_name msg debug end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name o end_name begin_operator EQ end_operator begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name core loader end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name new instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name sea en ef ex end_name end_decl end_param end_parameter_list begin_block begin_comment try the current classloader end_comment begin_try begin_block begin_expr_stmt begin_expr begin_name o end_name begin_operator EQ end_operator begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name new instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ex end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name msg err end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ex end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name msg err end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_if begin_condition begin_expr begin_name o end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name set executor end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name executor end_name begin_operator RPAR end_operator begin_name o end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_operator LPAR end_operator begin_name executor end_name begin_operator RPAR end_operator begin_name o end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test double default end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment check is the resource arrays are empty param r the arrays to check return true if all individual arrays are empty since ant 1 5 2 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name is empty end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name resource end_name begin_index end_index begin_index end_index end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name r end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name begin_name r end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_name length end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_for begin_return begin_expr end_expr end_return end_block 
 begin_comment sets the name of the schema to create optional param db schema name of the schema end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set dbschema end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name db schema end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name db schema end_name end_name begin_operator EQ end_operator begin_name db schema end_name end_expr end_expr_stmt end_block 
 begin_comment return the resource name of a class name param class name the name of the class to convert return the corresponding resource name since ant 1 7 0 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name class name to resource end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name class name end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name class name end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 5 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the element tag param element tag the tag name generating this element end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set element tag end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name element tag end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name element tag end_name end_name begin_operator EQ end_operator begin_name element tag end_name end_expr end_expr_stmt end_block 
 begin_comment chain this task as a reader param rdr reader to chain return a reader since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name reader end_name end_type begin_name chain end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name reader end_name end_type begin_name rdr end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name filter end_name begin_operator DOT end_operator begin_name chain end_name end_name begin_argument_list begin_argument begin_expr begin_name rdr end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment the target of the new ant project to execute defaults to the new project s default target param target to add the name of the target to invoke end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set target end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name target to add end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name target to add end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name targets end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name target to add end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name target attribute set end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment check the command line options end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check options end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name get comment end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment c end_comment begin_expr_stmt begin_expr begin_call begin_name get comment command end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_call begin_name get comment file end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment cfile end_comment begin_expr_stmt begin_expr begin_call begin_name get comment file command end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag nocomment end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_else end_if begin_if begin_condition begin_expr begin_call begin_name get no checkout end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment nco end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag nocheckout end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment viewpath end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get view path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 4 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_comment share the setup for testing the depend task end_comment begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment property to set to true if there is a error in a test p this property is applied on all batch test batchtest and j unit test test however it can possibly be overriden by their own properties p param property name the name of the property to set in the event of an error since ant 1 4 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set error property end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name property name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name error property end_name end_name begin_operator EQ end_operator begin_name property name end_name end_expr end_expr_stmt end_block 
 begin_comment get shared flag status return boolean containing status of shared flag end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get shared end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m shared end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test alternate exclude include end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name login suceeded end_name end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name change remote dir end_name begin_argument_list begin_argument begin_expr begin_name remote tmp dir end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name ftp directory scanner end_name end_name end_type begin_name ds end_name begin_init begin_expr begin_call begin_name begin_name my ftp task end_name begin_operator DOT end_operator begin_name new scanner end_name end_name begin_argument_list begin_argument begin_expr begin_name ftp end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set basedir end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set excludes end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set includes end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name compare files end_name begin_argument_list begin_argument begin_expr begin_name ds end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block end_block end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment quote all names param quoteallnames a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set quoteallnames end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name quoteallnames end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name quoteallnames end_name end_name begin_operator EQ end_operator begin_name quoteallnames end_name end_expr end_expr_stmt end_block 
 begin_comment a method that does the work on a given entry in a mergefile the big deal is to set the right parameters in the zip entry on the output stream end_comment begin_type begin_specifier end_specifier begin_name zip entry end_name end_type begin_name process entry end_name begin_parameter_list begin_param begin_decl begin_type begin_name zip file end_name end_type begin_name zip end_name end_decl end_param begin_param begin_decl begin_type begin_name zip entry end_name end_type begin_name input entry end_name end_decl end_param end_parameter_list begin_block begin_comment first some notes on mrj 2 2 2 getting the size compressed size and crc 32 from the zip input stream does not work for compressed deflated files those calls return 1 for uncompressed stored files those calls do work however using zip file get entries works for both compressed and uncompressed files now from some simple testing i did it seems that the value of crc 32 is independent of the compression setting so it should be easy to pass this information on to the output entry end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_call begin_name begin_name input entry end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name input entry end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name input end_name begin_init begin_expr begin_call begin_name begin_name zip end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name zip end_name begin_operator DOT end_operator begin_name get entry end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name class name end_name begin_init begin_expr begin_call begin_name begin_name class name reader end_name begin_operator DOT end_operator begin_name get class name end_name end_name begin_argument_list begin_argument begin_expr begin_name input end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name input end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name class name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name name end_name begin_operator EQ end_operator begin_call begin_name begin_name class name end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_expr_stmt end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_comment do nothing end_comment end_block end_catch end_try end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name zip entry end_name end_type begin_name output entry end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name zip entry end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name output entry end_name begin_operator DOT end_operator begin_name set time end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name input entry end_name begin_operator DOT end_operator begin_name get time end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name output entry end_name begin_operator DOT end_operator begin_name set extra end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name input entry end_name begin_operator DOT end_operator begin_name get extra end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name output entry end_name begin_operator DOT end_operator begin_name set comment end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name input entry end_name begin_operator DOT end_operator begin_name get comment end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name output entry end_name begin_operator DOT end_operator begin_name set time end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name input entry end_name begin_operator DOT end_operator begin_name get time end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name compression end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name output entry end_name begin_operator DOT end_operator begin_name set method end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name zip entry end_name begin_operator DOT end_operator begin_name deflated end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment note don t need to specify size or crc for compressed files end_comment end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name output entry end_name begin_operator DOT end_operator begin_name set method end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name zip entry end_name begin_operator DOT end_operator begin_name stored end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name output entry end_name begin_operator DOT end_operator begin_name set crc end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name input entry end_name begin_operator DOT end_operator begin_name get crc end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name output entry end_name begin_operator DOT end_operator begin_name set size end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name input entry end_name begin_operator DOT end_operator begin_name get size end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_return begin_expr begin_name output entry end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test ignore case end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment send an email end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name message end_name end_type begin_name saved message end_name begin_init begin_expr begin_name message end_name end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name mailer end_name end_type begin_name mailer end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment prepare for the auto select mechanism end_comment begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name auto found end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment try mime format end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name encoding end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name mime end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name encoding end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name auto end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_name auto found end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_name mailer end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name mailer end_name begin_operator RPAR end_operator begin_call begin_name begin_name classpath utils end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name email task end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name get class loader end_name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name mailer end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name auto found end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name begin_init begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get cause end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator QM end_operator begin_name e end_name begin_operator DP end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get cause end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_catch end_try end_block end_then end_if begin_comment smtp auth only allowed with mime mail end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name auto found end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name user end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name password end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name encoding end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name uu end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name encoding end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name plain end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment ssl only allowed with mime mail end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name auto found end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_name ssl end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name encoding end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name uu end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name encoding end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name plain end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment try uu format end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name encoding end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name uu end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name encoding end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name auto end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_name auto found end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_name mailer end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name mailer end_name begin_operator RPAR end_operator begin_call begin_name begin_name classpath utils end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name email task end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name get class loader end_name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name mailer end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name auto found end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name begin_init begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get cause end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator QM end_operator begin_name e end_name begin_operator DP end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get cause end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_catch end_try end_block end_then end_if begin_comment try plain format end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name encoding end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name plain end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name encoding end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name auto end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_name auto found end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name mailer end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name plain mailer end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name auto found end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment a valid mailer must be present by now end_comment begin_if begin_condition begin_expr begin_name mailer end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name encoding end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment a valid message is required end_comment begin_if begin_condition begin_expr begin_name message end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name message end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name message end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment an address to send from is required end_comment begin_if begin_condition begin_expr begin_name from end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name from end_name begin_operator DOT end_operator begin_name get address end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment at least one address to send to cc bcc is required end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name to list end_name begin_operator DOT end_operator begin_name is empty end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name cc list end_name begin_operator DOT end_operator begin_name is empty end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name bcc list end_name begin_operator DOT end_operator begin_name is empty end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment set the mimetype if not done already and required end_comment begin_if begin_condition begin_expr begin_name message mime type end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name is mime type specified end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name set mime type end_name end_name begin_argument_list begin_argument begin_expr begin_name message mime type end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment set the character set if not done already and required end_comment begin_if begin_condition begin_expr begin_name charset end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name get charset end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name set charset end_name end_name begin_argument_list begin_argument begin_expr begin_name charset end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment identify which files should be attached end_comment begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name files end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name attachments end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name iterator end_name end_type begin_name iter end_name begin_init begin_expr begin_call begin_name begin_name attachments end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name file resource end_name end_type begin_name fr end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file resource end_name begin_operator RPAR end_operator begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name fr end_name begin_operator DOT end_operator begin_name get file end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block end_then end_if begin_comment let the user know what s going to happen end_comment begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name subject end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name from end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name reply to list end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name to list end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name cc list end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name bcc list end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment pass the params to the mailer end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name mailer end_name begin_operator DOT end_operator begin_name set host end_name end_name begin_argument_list begin_argument begin_expr begin_name host end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name mailer end_name begin_operator DOT end_operator begin_name set port end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name mailer end_name begin_operator DOT end_operator begin_name set user end_name end_name begin_argument_list begin_argument begin_expr begin_name user end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name mailer end_name begin_operator DOT end_operator begin_name set password end_name end_name begin_argument_list begin_argument begin_expr begin_name password end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name mailer end_name begin_operator DOT end_operator begin_name set ssl end_name end_name begin_argument_list begin_argument begin_expr begin_name ssl end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name mailer end_name begin_operator DOT end_operator begin_name set message end_name end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name mailer end_name begin_operator DOT end_operator begin_name set from end_name end_name begin_argument_list begin_argument begin_expr begin_name from end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name mailer end_name begin_operator DOT end_operator begin_name set reply to list end_name end_name begin_argument_list begin_argument begin_expr begin_name reply to list end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name mailer end_name begin_operator DOT end_operator begin_name set to list end_name end_name begin_argument_list begin_argument begin_expr begin_name to list end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name mailer end_name begin_operator DOT end_operator begin_name set cc list end_name end_name begin_argument_list begin_argument begin_expr begin_name cc list end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name mailer end_name begin_operator DOT end_operator begin_name set bcc list end_name end_name begin_argument_list begin_argument begin_expr begin_name bcc list end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name mailer end_name begin_operator DOT end_operator begin_name set files end_name end_name begin_argument_list begin_argument begin_expr begin_name files end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name mailer end_name begin_operator DOT end_operator begin_name set subject end_name end_name begin_argument_list begin_argument begin_expr begin_name subject end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name mailer end_name begin_operator DOT end_operator begin_name set task end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name mailer end_name begin_operator DOT end_operator begin_name set include file names end_name end_name begin_argument_list begin_argument begin_expr begin_name include file names end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name mailer end_name begin_operator DOT end_operator begin_name set headers end_name end_name begin_argument_list begin_argument begin_expr begin_name headers end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment send the email end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name mailer end_name begin_operator DOT end_operator begin_name send end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment let the user know what happened end_comment begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name count end_name begin_init begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name count end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name count end_name begin_operator EQT end_operator begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name begin_init begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get cause end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator QM end_operator begin_name e end_name begin_operator DP end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get cause end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name fail on error end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_name e end_name end_expr end_throw end_block end_then end_if end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name fail on error end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_name message end_name begin_operator EQ end_operator begin_name saved message end_name end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name real log end_name begin_parameter_list begin_param begin_decl begin_type begin_name log end_name end_type begin_name log end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name message end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name priority end_name end_decl end_param begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name print stream end_name end_type begin_name tmp out end_name begin_init begin_expr begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name print stream end_name end_type begin_name tmp err end_name begin_init begin_expr begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name set out end_name end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name set err end_name end_name begin_argument_list begin_argument begin_expr begin_name err end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_switch begin_condition begin_expr begin_name priority end_name end_expr end_condition begin_block begin_case begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr begin_if begin_condition begin_expr begin_name t end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_break end_break end_case begin_case begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr begin_if begin_condition begin_expr begin_name t end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_break end_break end_case begin_case begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr begin_if begin_condition begin_expr begin_name t end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name info end_name end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name info end_name end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_break end_break end_case begin_case begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_default begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_default end_block end_switch begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name set out end_name end_name begin_argument_list begin_argument begin_expr begin_name tmp out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name set err end_name end_name begin_argument_list begin_argument begin_expr begin_name tmp err end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor for jdk 14 regexp regexp end_comment begin_specifier end_specifier begin_name jdk 14 regexp regexp end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets a textual description of this element for build documentation purposes only param desc description of the element since ant 1 6 1 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set description end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name desc end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name description end_name begin_operator EQ end_operator begin_name desc end_name end_expr end_expr_stmt end_block 
 begin_comment return true if the text is trim end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get trim end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name trim end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test overwrite false end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_call begin_name create relative file end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name largeimage end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name last modified end_name begin_init begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name expect log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name f end_name begin_operator EQ end_operator begin_call begin_name create relative file end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name largeimage end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name overwritten last modified end_name begin_init begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name last modified end_name begin_operator EQT end_operator begin_name overwritten last modified end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns the current type definition hashtable the returned hashtable is live and so should not be modified return a map of from type name to implementing class string to class end_comment begin_type begin_specifier end_specifier begin_name hashtable end_name end_type begin_name get data type definitions end_name begin_parameter_list end_parameter_list begin_block begin_synchronized begin_expr begin_name type class definitions end_name end_expr begin_block begin_synchronized begin_expr begin_name ant type table end_name end_expr begin_block begin_if begin_condition begin_expr begin_name rebuild type class definitions end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name type class definitions end_name begin_operator DOT end_operator begin_name clear end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name ant type table end_name begin_operator DOT end_operator begin_name key set end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name clazz end_name begin_init begin_expr begin_call begin_name begin_name ant type table end_name begin_operator DOT end_operator begin_name get exposed class end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name clazz end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name is assignable from end_name end_name end_name begin_argument_list begin_argument begin_expr begin_name clazz end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name type class definitions end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name ant type table end_name begin_operator DOT end_operator begin_name get type class end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for begin_expr_stmt begin_expr begin_name rebuild type class definitions end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block end_synchronized end_block end_synchronized begin_return begin_expr begin_name type class definitions end_name end_expr end_return end_block 
 begin_comment provides the indicator that the task has been finished return returns true when the task is finished end_comment begin_type begin_name boolean end_name end_type begin_name is finished end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name finished end_name end_expr end_return end_block 
 begin_comment get the next entry in this tar archive this will skip over any remaining data in the current entry if there is one and place the input stream at the header of the next entry and read the header and instantiate a new tar entry from the header bytes and return that entry if there are no more entries in the archive null will be returned to indicate that the end of the archive has been reached return the next tar entry in the archive or null throws io exception on error end_comment begin_type begin_specifier end_specifier begin_name tar entry end_name end_type begin_name get next entry end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name has hit eof end_name end_name end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr entry end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name num to skip end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name entry size end_name end_name begin_operator MINUS end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name entry offset end_name end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name debug end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr entry end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name entry size end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name entry offset end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name num to skip end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name num to skip end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name skip end_name end_name begin_argument_list begin_argument begin_expr begin_name num to skip end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name read buf end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name header buf end_name begin_init begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name buffer end_name begin_operator DOT end_operator begin_name read record end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name header buf end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name debug end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name has hit eof end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name buffer end_name begin_operator DOT end_operator begin_name is eof record end_name end_name begin_argument_list begin_argument begin_expr begin_name header buf end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name debug end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name has hit eof end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_else end_if begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name has hit eof end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr entry end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr entry end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name tar entry end_name begin_argument_list begin_argument begin_expr begin_name header buf end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name debug end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr entry end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr entry end_name begin_operator DOT end_operator begin_name get size end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name entry offset end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name entry size end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr entry end_name begin_operator DOT end_operator begin_name get size end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr entry end_name end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr entry end_name begin_operator DOT end_operator begin_name is gnu long name entry end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment read in the name end_comment begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name long name end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name buf end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name byte end_name begin_index begin_expr end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name length end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_operator LPAR end_operator begin_name length end_name begin_operator EQ end_operator begin_call begin_name read end_name begin_argument_list begin_argument begin_expr begin_name buf end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator GE end_operator end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name long name end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_name buf end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name length end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_call begin_name get next entry end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr entry end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment bugzilla 40334 end_comment begin_comment malformed tar file long entry name not followed by entry end_comment begin_return begin_expr end_expr end_return end_block end_then end_if begin_comment remove trailing null terminator end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name long name end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_operator UNP end_operator begin_call begin_name begin_name long name end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name long name end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name long name end_name begin_operator DOT end_operator begin_name delete char at end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name long name end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr entry end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name long name end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr entry end_name end_name end_expr end_return end_block 
 begin_comment adding something to the excludes end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 2 end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name expected end_name begin_init begin_expr begin_block begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr end_block end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name execute target end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name expected end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name directory scanner end_name begin_operator DOT end_operator begin_name get default excludes end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment fulfill the resource collection contract return iterator of resources since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name iterator end_name end_type begin_name iterator end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_call begin_name resource collection end_name begin_argument_list begin_argument begin_expr begin_call begin_name get ref end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name src end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name archive scanner end_name end_type begin_name as end_name begin_init begin_expr begin_operator LPAR end_operator begin_name archive scanner end_name begin_operator RPAR end_operator begin_call begin_name get directory scanner end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name as end_name begin_operator DOT end_operator begin_name get resource files end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment performs the check for circular references and returns the referenced object param p the ant project instance against which to resolve references return the dereferenced object throws build exception if the reference is invalid circular ref wrong class etc since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name get checked ref end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name get checked ref end_name begin_argument_list begin_argument begin_expr begin_call begin_name get class end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get data type name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment flush the current data block if it has any data in it end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name flush block end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name debug end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name out stream end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name io exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr rec idx end_name end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name write block end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment p checks to make sure all settings are kosher in this case it means that the size attribute has been set to a positive value that the multiplier has a valid setting and that the size limit is valid since the latter is a calculated value this can only fail due to a programming error p p if a problem is detected the set error method is called p end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name verify settings end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name size end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set error end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name multiplier end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set error end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name sizelimit end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set error end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is stub end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name affected class end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name base class end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name suffix end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name base class end_name begin_operator PLUS end_operator begin_name suffix end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name affected class end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment get the flag for removing integer checks return true if flag is turned on end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get remove int checks end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name remove int checks end_name end_expr end_return end_block 
 begin_comment set the stream handler to use param stream handler execute stream handler since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set stream handler end_name begin_parameter_list begin_param begin_decl begin_type begin_name execute stream handler end_name end_type begin_name stream handler end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name stream handler end_name end_name begin_operator EQ end_operator begin_name stream handler end_name end_expr end_expr_stmt end_block 
 begin_comment returns null since sj either has g for debug true or no argument at all return null since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get no debug argument end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment clear the container throws build exception on error end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name clear end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name no children allowed end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name rc end_name begin_operator DOT end_operator begin_name clear end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fail fast end_name begin_operator DOT end_operator begin_name invalidate end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name coll end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set checked end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment since ant 1 6 return a clone of this patternset end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name clone end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name pattern set end_name end_type begin_name ps end_name begin_init begin_expr begin_operator LPAR end_operator begin_name pattern set end_name begin_operator RPAR end_operator begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name ps end_name begin_operator DOT end_operator begin_name include list end_name end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name vector end_name begin_operator RPAR end_operator begin_call begin_name begin_name include list end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name ps end_name begin_operator DOT end_operator begin_name exclude list end_name end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name vector end_name begin_operator RPAR end_operator begin_call begin_name begin_name exclude list end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name ps end_name begin_operator DOT end_operator begin_name includes file list end_name end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name vector end_name begin_operator RPAR end_operator begin_call begin_name begin_name includes file list end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name ps end_name begin_operator DOT end_operator begin_name excludes file list end_name end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name vector end_name begin_operator RPAR end_operator begin_call begin_name begin_name excludes file list end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name ps end_name end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name clone not supported exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name main end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name args end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment here is a comment with an embedded tab end_comment begin_if begin_condition begin_expr begin_name mybool end_name end_expr end_condition begin_then begin_block begin_comment here is a multi line with embedded tab comment end_comment begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name mychar end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment tab end_comment end_block end_then end_if begin_comment end of if mybool end_comment end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name has more elements end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name more end_name end_expr end_return end_block 
 begin_comment set the text to be placed at the bottom of each output file param text the bottom text end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add bottom end_name begin_parameter_list begin_param begin_decl begin_type begin_name html end_name end_type begin_name text end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name bottom end_name begin_operator EQ end_operator begin_name text end_name end_expr end_expr_stmt end_block 
 begin_comment strip the smallest prefix containing i num i leading slashes from filenames p patch s i p i option param num number of lines to strip exception build exception if num is 0 or other errors end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set strip end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name num end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name num end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name num end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the classpath to be used when searching for classes and resources param classpath an ant path object containing the search path end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classpath end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name classpath end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name get class path delegate end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set classpath end_name begin_argument_list begin_argument begin_expr begin_name classpath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the value of the refid attribute param r the reference this datatype should point to throws build exception if another attribute was set since refid and all other attributes are mutually exclusive end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set refid end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name no attribute set end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment what is the package name return package name or null see set package end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get package name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name package name end_name end_expr end_return end_block 
 begin_comment get a long string representation of this resource this typically should be the value of code to string code prefixed by a type description return this resource formatted as a long string since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name to long string end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name to long string end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_call begin_name get data type name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_return end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write jar end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name base name end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name jarfile end_name end_decl end_param begin_param begin_decl begin_type begin_name hashtable end_name end_type begin_name ejb files end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name public id end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_comment create the generic jar first end_comment begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name generic jar file end_name begin_init begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name get vendor output jar file end_name end_name begin_argument_list begin_argument begin_expr begin_name base name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name write jar end_name end_name begin_argument_list begin_argument begin_expr begin_name base name end_name end_expr end_argument begin_argument begin_expr begin_name generic jar file end_name end_expr end_argument begin_argument begin_expr begin_name ejb files end_name end_expr end_argument begin_argument begin_expr begin_name public id end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment gen ic call on generic jar end_comment begin_expr_stmt begin_expr begin_call begin_name add gen ic generated files end_name begin_argument_list begin_argument begin_expr begin_name generic jar file end_name end_expr end_argument begin_argument begin_expr begin_name ejb files end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment create the real jar end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name write jar end_name end_name begin_argument_list begin_argument begin_expr begin_name base name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get vendor output jar file end_name begin_argument_list begin_argument begin_expr begin_name base name end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name ejb files end_name end_expr end_argument begin_argument begin_expr begin_name public id end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name keepgeneric end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name generic jar file end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name generic jar file end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment a unit test for j unit end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test cs cdll end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment executes a target and checks the beginning and the ending of a file the filename depends on the target name target name i test hello world i will search for a file i result concat hello world test i param target the target to invoke param expected start the string which should be at the beginning of the file param expected end the string which should be at the end of the file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name do test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name target end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name expected start end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name expected end end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name result content end_name begin_init begin_expr begin_call begin_name read end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name result content end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr begin_name expected start end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name result content end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr begin_name expected end end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name run end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name shutdown end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 0 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment override the project working directory param local path the path on disk end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set localpath end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name local path end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name local path end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name local path end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment read a byte from the project s demuxed input return the next byte throws io exception on error end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name read end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name buffer end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name byte end_name begin_index begin_expr end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name demux input end_name end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator MINUS end_operator end_expr end_return end_block end_then end_if begin_return begin_expr begin_name begin_name buffer end_name begin_index begin_expr end_expr end_index end_name end_expr end_return end_block 
 begin_comment constructors end_comment begin_comment bean constructor end_comment begin_specifier end_specifier begin_name propertiesfile cache end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment gets a classloader that loads classes from the classpath defined in the path argument p based on the setting of the magic property ant reuse loader this will try to reuse the previously created loader with that id and of course store it there upon creation p param p ant project where the handled components are living in param path path object to be used as classpath for this classloader param loader id identification for this loader param reverse loader if set to true this new loader will take precedence over its parent which is contra the regular classloader behaviour param reuse loader if true reuse the loader if it is found return class loader that uses the path as its classpath end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name class loader end_name end_type begin_name get class loader for path end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param begin_param begin_decl begin_type begin_name path end_name end_type begin_name path end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name loader id end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name reverse loader end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name reuse loader end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name class loader end_name end_type begin_name cl end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment magic property end_comment begin_if begin_condition begin_expr begin_name loader id end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name reuse loader end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name reused loader end_name begin_init begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get reference end_name end_name begin_argument_list begin_argument begin_expr begin_name loader id end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name reused loader end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name reused loader end_name begin_operator UNP end_operator begin_name class loader end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name loader id end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name cl end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name class loader end_name begin_operator RPAR end_operator begin_name reused loader end_name end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name cl end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name cl end_name begin_operator EQ end_operator begin_call begin_name get unique class loader for path end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name path end_name end_expr end_argument begin_argument begin_expr begin_name reverse loader end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name loader id end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name reuse loader end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr begin_name loader id end_name end_expr end_argument begin_argument begin_expr begin_name cl end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_return begin_expr begin_name cl end_name end_expr end_return end_block 
 begin_comment construct a string resource with the supplied value param value the value of this string resource end_comment begin_specifier end_specifier begin_name string resource end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test documentation claims on copy end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name io exception end_name end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name test real test end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name when end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name remote exception end_name end_expr end_argument end_throws begin_block begin_return begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment getter for flag return the flag indicating whether the compilation is using a response file end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is use response file end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name use response file end_name end_expr end_return end_block 
 begin_comment writes the opening tag including all attributes corresponding to a dom element param element the dom element to write param out where to send the output param indent number of param indent with string that should be used to indent the corresponding tag param has children whether this element has children throws io exception if an error happens while writing to the stream since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name open element end_name begin_parameter_list begin_param begin_decl begin_type begin_name element end_name end_type begin_name element end_name end_decl end_param begin_param begin_decl begin_type begin_name writer end_name end_type begin_name out end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name indent end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name indent with end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name has children end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_comment write indent characters end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name indent end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name indent with end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_comment write element end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name begin_name namespace policy end_name begin_operator DOT end_operator begin_name qualify elements end_name end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name uri end_name begin_init begin_expr begin_call begin_name get namespace uri end_name begin_argument_list begin_argument begin_expr begin_name element end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name prefix end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name ns prefix map end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name uri end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name prefix end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name ns prefix map end_name begin_operator DOT end_operator begin_name is empty end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment steal default namespace end_comment begin_expr_stmt begin_expr begin_name prefix end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name prefix end_name begin_operator EQ end_operator begin_name ns end_name begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name next prefix end_name begin_operator PPLUS end_operator begin_operator RPAR end_operator end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name ns prefix map end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name uri end_name end_expr end_argument begin_argument begin_expr begin_name prefix end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add ns definition end_name begin_argument_list begin_argument begin_expr begin_name element end_name end_expr end_argument begin_argument begin_expr begin_name uri end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name prefix end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name prefix end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name element end_name begin_operator DOT end_operator begin_name get tag name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment write attributes end_comment begin_decl_stmt begin_decl begin_type begin_name named node map end_name end_type begin_name attrs end_name begin_init begin_expr begin_call begin_name begin_name element end_name begin_operator DOT end_operator begin_name get attributes end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name attrs end_name begin_operator DOT end_operator begin_name get length end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name attr end_name end_type begin_name attr end_name begin_init begin_expr begin_operator LPAR end_operator begin_name attr end_name begin_operator RPAR end_operator begin_call begin_name begin_name attrs end_name begin_operator DOT end_operator begin_name item end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name begin_name namespace policy end_name begin_operator DOT end_operator begin_name qualify attributes end_name end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name uri end_name begin_init begin_expr begin_call begin_name get namespace uri end_name begin_argument_list begin_argument begin_expr begin_name attr end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name prefix end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name ns prefix map end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name uri end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name prefix end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name prefix end_name begin_operator EQ end_operator begin_name ns end_name begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name next prefix end_name begin_operator PPLUS end_operator begin_operator RPAR end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ns prefix map end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name uri end_name end_expr end_argument begin_argument begin_expr begin_name prefix end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add ns definition end_name begin_argument_list begin_argument begin_expr begin_name element end_name end_expr end_argument begin_argument begin_expr begin_name uri end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name prefix end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attr end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name encode end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attr end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_comment write namespace declarations end_comment begin_decl_stmt begin_decl begin_type begin_name array list end_name end_type begin_name al end_name begin_init begin_expr begin_operator LPAR end_operator begin_name array list end_name begin_operator RPAR end_operator begin_call begin_name begin_name ns uri by element end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name element end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name al end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name iterator end_name end_type begin_name iter end_name begin_init begin_expr begin_call begin_name begin_name al end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name uri end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name prefix end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name ns prefix map end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name uri end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name prefix end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name prefix end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name uri end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block end_then end_if begin_if begin_condition begin_expr begin_name has children end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name remove ns definitions end_name begin_argument_list begin_argument begin_expr begin_name element end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name l sep end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment not used param name not used return null throws build exception never end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name create dynamic element end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment gets the java class name without the package structure return string representing the name for the class end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get class name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name class name end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name main end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name args end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment here is a comment with an embedded tab end_comment begin_if begin_condition begin_expr begin_name mybool end_name end_expr end_condition begin_then begin_block begin_comment here is a multi line with embedded tab comment end_comment begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name mychar end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment tab end_comment end_block end_then end_if begin_comment end of if mybool end_comment end_block 
 begin_comment algorithm configuration end_comment begin_comment specifies the algorithm to be used to compute the checksum defaults to crc other popular algorithms like adler may be used as well param algorithm the digest algorithm to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set algorithm end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name algorithm end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name algorithm end_name end_name begin_operator EQ end_operator begin_name algorithm end_name end_expr end_expr_stmt end_block 
 begin_comment get the value of comment return value of comment end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get comment end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name comment end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name char end_name end_type begin_name get next char inc end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get char end_name begin_argument_list begin_argument begin_expr begin_name next end_name begin_operator PPLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name touch end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource end_name end_type begin_name r end_name end_decl end_param begin_param begin_decl begin_type begin_name long end_name end_type begin_name default timestamp end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name file name mapper end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name r end_name begin_operator UNP end_operator begin_name file resource end_name end_expr end_condition begin_then begin_block begin_comment use this to create file and deal with non writable files end_comment begin_expr_stmt begin_expr begin_call begin_name touch end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name file resource end_name begin_operator RPAR end_operator begin_name r end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get file end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name default timestamp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name touchable end_name begin_operator RPAR end_operator begin_name r end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name touch end_name begin_argument_list begin_argument begin_expr begin_name default timestamp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name mapped end_name begin_init begin_expr begin_call begin_name begin_name file name mapper end_name begin_operator DOT end_operator begin_name map file name end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name mapped end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name begin_name mapped end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name mod time end_name begin_init begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name is exists end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator QM end_operator begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name get last modified end_name end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_name default timestamp end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name mapped end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name touch end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr begin_name begin_name mapped end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name mod time end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if end_block end_else end_if end_block 
 begin_comment init processing logic this is retained through our execution s end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name begin execution end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name redirector end_name begin_operator EQ end_operator begin_call begin_name create redirector end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment implements base class abstract function to perform the checkout operation on the files in each folder of the tree param starteam folder the star team folder to which files will be checked in param target folder local folder from which files will be checked in exception build exception if any error occurs end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name visit end_name begin_parameter_list begin_param begin_decl begin_type begin_name folder end_name end_type begin_name starteam folder end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name end_type begin_name target folder end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name get root local folder end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name starteam folder end_name begin_operator DOT end_operator begin_name set alternate path fragment end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name target folder end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name folder end_name begin_index end_index end_type begin_name folders list end_name begin_init begin_expr begin_call begin_name begin_name starteam folder end_name begin_operator DOT end_operator begin_name get sub folders end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name item end_name begin_index end_index end_type begin_name st files end_name begin_init begin_expr begin_call begin_name begin_name starteam folder end_name begin_operator DOT end_operator begin_name get items end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get type names end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment note it s important to scan the items before we make the end_comment begin_comment unmatched file map because that creates a bunch of new end_comment begin_comment folders and files unattached to repository and we end_comment begin_comment don t want to include those in our traversal end_comment begin_decl_stmt begin_decl begin_type begin_name unmatched file map end_name end_type begin_name ufm end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name checkin map end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name init end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name target folder end_name begin_operator DOT end_operator begin_name get absolute file end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name starteam folder end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init begin_operator UNP end_operator begin_name size end_name begin_init begin_expr begin_name begin_name folders list end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name size end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name folder end_name end_type begin_name st folder end_name begin_init begin_expr begin_name begin_name folders list end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name end_type begin_name subfolder end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name begin_argument_list begin_argument begin_expr begin_name target folder end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name st folder end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ufm end_name begin_operator DOT end_operator begin_name remove controlled item end_name end_name begin_argument_list begin_argument begin_expr begin_name subfolder end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name is recursive end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name visit end_name begin_argument_list begin_argument begin_expr begin_name st folder end_name end_expr end_argument begin_argument begin_expr begin_name subfolder end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init begin_operator UNP end_operator begin_name size end_name begin_init begin_expr begin_name begin_name st files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name size end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name com end_name begin_operator DOT end_operator begin_name starbase end_name begin_operator DOT end_operator begin_name starteam end_name begin_operator DOT end_operator begin_name file end_name end_name end_type begin_name st file end_name begin_init begin_expr begin_operator LPAR end_operator begin_name begin_name com end_name begin_operator DOT end_operator begin_name starbase end_name begin_operator DOT end_operator begin_name starteam end_name begin_operator DOT end_operator begin_name file end_name end_name begin_operator RPAR end_operator begin_name begin_name st files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name process file end_name begin_argument_list begin_argument begin_expr begin_name st file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ufm end_name begin_operator DOT end_operator begin_name remove controlled item end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name begin_argument_list begin_argument begin_expr begin_name target folder end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name st file end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name add uncontrolled end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ufm end_name begin_operator DOT end_operator begin_name process uncontrolled items end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment end_comment begin_comment various copy attributes subelements of copy passed thru to mycopy end_comment begin_comment end_comment begin_comment sets the destination directory param dest dir the destination directory end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set todir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name dest dir end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name my copy end_name begin_operator DOT end_operator begin_name set todir end_name end_name begin_argument_list begin_argument begin_expr begin_name dest dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment indicate whether javadoc should produce old style jdk 1 1 documentation this is not supported by jdk 1 1 and has been phased out in jdk 1 4 param b if true attempt to generate old style documentation end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set old end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name old end_name begin_operator EQ end_operator begin_name b end_name end_expr end_expr_stmt end_block 
 begin_comment returns resource information for a file at destination param name relative path of file at destination return data concerning a file whose relative path to dest dir is name since ant 1 5 2 end_comment begin_type begin_specifier end_specifier begin_name resource end_name end_type begin_name get resource end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name file resource end_name begin_argument_list begin_argument begin_expr begin_name dest dir end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test selection set works end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment if true log errors but do not treat as fatal param v if true then don t report download errors up to ant end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set ignore errors end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name v end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name ignore errors end_name begin_operator EQ end_operator begin_name v end_name end_expr end_expr_stmt end_block 
 begin_comment get nodata flag status return boolean containing status of ndata flag end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get no data end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m ndata end_name end_expr end_return end_block 
 begin_comment a unit test for j unit end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test simple end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute jsp compile end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment creates the native 2 ascii adapter based on the user choice and potentially the vm vendor param choice the user choice if any param log a project component instance used to access ant s logging system return the adapter to use throws build exception if there was a problem end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name native 2 ascii adapter end_name end_type begin_name get adapter end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name choice end_name end_decl end_param begin_param begin_decl begin_type begin_name project component end_name end_type begin_name log end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name is kaffe end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name choice end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_call begin_name begin_name kaffe native 2 ascii end_name begin_operator DOT end_operator begin_name implementation name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name choice end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name kaffe native 2 ascii end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name sun native 2 ascii end_name begin_operator DOT end_operator begin_name implementation name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name choice end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name sun native 2 ascii end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_name choice end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name resolve class name end_name begin_argument_list begin_argument begin_expr begin_name choice end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if end_else end_if end_else end_if begin_comment this default has been good enough until ant 1 6 3 so stick end_comment begin_comment with it end_comment begin_return begin_expr begin_operator UNP end_operator begin_call begin_name sun native 2 ascii end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name invocation target exception end_name end_expr end_argument begin_argument begin_expr begin_name illegal access exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment p set name of class to be used as the formatter p this class must implement code j unit result formatter code param classname the name of the formatter class end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classname end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name classname end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classname end_name end_name begin_operator EQ end_operator begin_name classname end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name xml formatter class name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set extension end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name plain formatter class name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set extension end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name brief formatter class name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set extension end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if end_else end_if end_block 
 begin_comment set the vob name param vob the vob name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set vob end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name vob end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m vob end_name begin_operator EQ end_operator begin_name vob end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no time out end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name begin_init begin_expr begin_call begin_name get commandline end_name begin_argument_list begin_argument begin_expr begin_name time out end_name begin_operator SLASH end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ej end_name begin_operator DOT end_operator begin_name set java command end_name end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ej end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name ej end_name begin_operator DOT end_operator begin_name killed process end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the class name attribute return a code string code value end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get class name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name class name end_name end_expr end_return end_block 
 begin_comment getter return response file state end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is use response file end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name use response file end_name end_expr end_return end_block 
 begin_comment returns any error messages that have been set return the error condition end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get error end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name errmsg end_name end_expr end_return end_block 
 begin_comment empty implementation to satisfy the build listener interface param event the build started event since ant 1 6 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name sub build started end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_comment not significant for the class loader end_comment end_block 
 begin_comment set the name of exe library to create param file the new output file value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set dest file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name output file end_name begin_operator EQ end_operator begin_name file end_name end_expr end_expr_stmt end_block 
