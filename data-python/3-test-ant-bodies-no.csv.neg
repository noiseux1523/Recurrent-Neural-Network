 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test parse error in including end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get location end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get location end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment list out what is going on end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name trace setting info end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name proxy host end_name begin_operator UNP end_operator begin_operator QM end_operator begin_name proxy host end_name begin_operator DP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name proxy port end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment whether to ignore case when checking filenames param casesensitive whether to pay attention to case sensitivity end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set casesensitive end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name casesensitive end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name casesensitive end_name end_name begin_operator EQ end_operator begin_name casesensitive end_name end_expr end_expr_stmt end_block 
 begin_comment returns the list of ejb objects found during the processing of the standard ejb 1 1 descriptor and i as specific ejb descriptor return an array of ej bs which were found during the descriptor parsing end_comment begin_type begin_specifier end_specifier begin_name ejb info end_name begin_index end_index end_type begin_name get ejbs end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name begin_name ejb info end_name begin_index end_index end_name begin_operator RPAR end_operator begin_call begin_name begin_name ejbs end_name begin_operator DOT end_operator begin_name values end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to array end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name ejb info end_name begin_index begin_expr begin_call begin_name begin_name ejbs end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name format time end_name begin_parameter_list begin_param begin_decl begin_type begin_name long end_name end_type begin_name millis end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name seconds end_name begin_init begin_expr begin_name millis end_name begin_operator SLASH end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name minutes end_name begin_init begin_expr begin_name seconds end_name begin_operator SLASH end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name minutes end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name begin_name long end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list begin_argument begin_expr begin_name minutes end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name minutes end_name begin_operator EQT end_operator begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator begin_call begin_name begin_name long end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list begin_argument begin_expr begin_name seconds end_name begin_operator UNP end_operator end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name seconds end_name begin_operator UNP end_operator begin_operator EQT end_operator begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr begin_call begin_name begin_name long end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list begin_argument begin_expr begin_name seconds end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name seconds end_name begin_operator UNP end_operator begin_operator EQT end_operator begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator end_expr end_return end_block end_else end_if end_block 
 begin_specifier end_specifier begin_name ant class loader delegation test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment emulation of extdirs feature in java 1 2 this method adds all files in the given directories but not in sub directories to the classpath so that you don t have to specify them all one by one param extdirs path to append files to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add extdirs end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name extdirs end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name extdirs end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name ext prop end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name ext prop end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name extdirs end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name ext prop end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_return end_return end_block end_else end_if end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name dirs end_name begin_init begin_expr begin_call begin_name begin_name extdirs end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name dirs end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name dir end_name begin_init begin_expr begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name dirs end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name file set end_name end_type begin_name fs end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file set end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name set dir end_name end_name begin_argument_list begin_argument begin_expr begin_name dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name set includes end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add fileset end_name begin_argument_list begin_argument begin_expr begin_name fs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for end_block 
 begin_comment yes we can return true always since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name supports non file resources end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment create a new document builder will issue an tt exception initializer error tt if something is going wrong it is fatal anyway todo factorize this somewhere else it is duplicated code return a new document builder to create a dom end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name document builder end_name end_type begin_name get document builder end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_return begin_expr begin_call begin_name begin_name document builder factory end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name new document builder end_name begin_argument_list end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name exc end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name exception in initializer error end_name begin_argument_list begin_argument begin_expr begin_name exc end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment fulfill the resource collection contract return an iterator of resources since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name iterator end_name end_type begin_name iterator end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name dir set end_name begin_operator RPAR end_operator begin_call begin_name get ref end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr begin_operator UNP end_operator begin_call begin_name file resource iterator end_name begin_argument_list begin_argument begin_expr begin_call begin_name get dir end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get directory scanner end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get included directories end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name test empty element if is reference end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name abstract file set end_name end_type begin_name f end_name begin_init begin_expr begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name set includes end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get data type name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_name f end_name begin_operator EQ end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name create pattern set end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get data type name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_name f end_name begin_operator EQ end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name create include end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get data type name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_name f end_name begin_operator EQ end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name set includes end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get data type name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name set includesfile end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get data type name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name set excludes end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get data type name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name set excludesfile end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get data type name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name set dir end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get data type name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name create include end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get data type name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name create exclude end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get data type name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name create includes file end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get data type name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name create excludes file end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get data type name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name create pattern set end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get data type name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment set the group atribute param group the new group for the file s or directory ies end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set group end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name group end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name create arg end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name group end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name have group end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get property end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name property end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name property end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment chgrp task for setting unix group of a file end_comment begin_specifier end_specifier begin_name chgrp end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set executable end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment kept for backwards compatibility end_comment begin_comment param file the filename to use for the systemid return the systemid deprecated since 1 5 x use org apache tools ant util jaxp utils get system id instead end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get system id end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name jaxp utils end_name begin_operator DOT end_operator begin_name get system id end_name end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment makes this instance in effect a reference to another extension set instance p you must not set another attribute or nest elements inside this element if you make it a reference p param reference the reference to which this instance is associated exception build exception if this instance already has been configured end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set refid end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name reference end_name end_type begin_name reference end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name extensions end_name begin_operator DOT end_operator begin_name is empty end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name extensions filesets end_name begin_operator DOT end_operator begin_name is empty end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment change this to get the objects from the other reference end_comment begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name object end_name begin_init begin_expr begin_call begin_name begin_name reference end_name begin_operator DOT end_operator begin_name get referenced object end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name object end_name begin_operator UNP end_operator begin_name extension set end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name extension set end_name end_type begin_name other end_name begin_init begin_expr begin_operator LPAR end_operator begin_name extension set end_name begin_operator RPAR end_operator begin_name object end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name extensions end_name begin_operator DOT end_operator begin_name add all end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name other end_name begin_operator DOT end_operator begin_name extensions end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name extensions filesets end_name begin_operator DOT end_operator begin_name add all end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name other end_name begin_operator DOT end_operator begin_name extensions filesets end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name message end_name begin_init begin_expr begin_call begin_name begin_name reference end_name begin_operator DOT end_operator begin_name get ref id end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_name reference end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment creates a stream that will eventually write to the file with the given name optionally append to instead of replacing it and optionally always create a file even if zero length param file the file to create param append if true append rather than replace param always create if true create the file even if nothing to write end_comment begin_specifier end_specifier begin_name lazy file output stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name append end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name always create end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name file end_name end_name begin_operator EQ end_operator begin_name file end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name append end_name end_name begin_operator EQ end_operator begin_name append end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name always create end_name end_name begin_operator EQ end_operator begin_name always create end_name end_expr end_expr_stmt end_block 
 begin_comment set the shared flag param shared the status to set the flag to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set shared end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name shared end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m shared end_name begin_operator EQ end_operator begin_name shared end_name end_expr end_expr_stmt end_block 
 begin_comment execute a list of tests in a single forked java vm param tests the list of tests to execute throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list begin_param begin_decl begin_type begin_name list end_name end_type begin_name tests end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name j unit test end_name end_type begin_name test end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment create a temporary file to pass the test cases to run to end_comment begin_comment the runner one test case per line end_comment begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name cases file end_name begin_init begin_expr begin_call begin_name create temp properties file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name print writer end_name end_type begin_name writer end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name writer end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name print writer end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name buffered writer end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file writer end_name begin_argument_list begin_argument begin_expr begin_name cases file end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name iterator end_name end_type begin_name iter end_name begin_init begin_expr begin_call begin_name begin_name tests end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name test end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name j unit test end_name begin_operator RPAR end_operator begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name writer end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name test end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name test end_name begin_operator DOT end_operator begin_name get todir end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name writer end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name writer end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name test end_name begin_operator DOT end_operator begin_name get todir end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_call begin_name begin_name test end_name begin_operator DOT end_operator begin_name get outfile end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name writer end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name test end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name writer end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name test end_name begin_operator DOT end_operator begin_name get outfile end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_while begin_expr_stmt begin_expr begin_call begin_name begin_name writer end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name writer end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name writer end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_comment execute the test and get the return code end_comment begin_decl_stmt begin_decl begin_type begin_name execute watchdog end_name end_type begin_name watchdog end_name begin_init begin_expr begin_call begin_name create watchdog end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name test result holder end_name end_type begin_name result end_name begin_init begin_expr begin_call begin_name execute as forked end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument begin_argument begin_expr begin_name watchdog end_name end_expr end_argument begin_argument begin_expr begin_name cases file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name act on test result end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_name test end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_if begin_condition begin_expr begin_name writer end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name writer end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cases file end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_finally end_try end_block 
 begin_comment does the command line argument processing for modern and adds the files to compile as well return the command line end_comment begin_type begin_specifier end_specifier begin_name commandline end_name end_type begin_name setup modern javac command end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name commandline end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name setup modern javac commandline switches end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log and add files to compile end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name cmd end_name end_expr end_return end_block 
 begin_comment this is a patternset nested element param p a configured patternset nested element end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add configured patternset end_name begin_parameter_list begin_param begin_decl begin_type begin_name pattern set end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name no children allowed end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name nested includes end_name begin_init begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get include patterns end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name nested excludes end_name begin_init begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get exclude patterns end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name nested includes end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name nested includes end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name create include end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set name end_name begin_argument_list begin_argument begin_expr begin_name begin_name nested includes end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if begin_if begin_condition begin_expr begin_name nested excludes end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name nested excludes end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name create exclude end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set name end_name begin_argument_list begin_argument begin_expr begin_name begin_name nested excludes end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if end_block 
 begin_comment return a string describing this object end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name buf end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name pattern end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name negated end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name casesensitive end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment list files to apply the replacement to param set the fileset element end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add fileset end_name begin_parameter_list begin_param begin_decl begin_type begin_name file set end_name end_type begin_name set end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name set end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment you can optionally reverse the selection of this selector thereby emulating an lt exclude gt tag by setting the attribute negate to true this is identical to surrounding the selector with lt not gt lt not gt param negated whether to negate this selection end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set negate end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name negated end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name negated end_name end_name begin_operator EQ end_operator begin_name negated end_name end_expr end_expr_stmt end_block 
 begin_comment handle get message for exceptions param ex the exception to handle return ex get message if ex get message is not null otherwise return ex to string end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get message end_name begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name ex end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator QM end_operator begin_call begin_name begin_name ex end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_call begin_name begin_name ex end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment return code true code if this code dewey decimal code is equal to the other code dewey decimal code param other the other dewey decimal return true if equal to other dewey decimal false otherwise end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is equal end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name dewey decimal end_name end_type begin_name other end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name max end_name begin_init begin_expr begin_call begin_name begin_name math end_name begin_operator DOT end_operator begin_name max end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name other end_name begin_operator DOT end_operator begin_name components end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name components end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name max end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name component 1 end_name begin_init begin_expr begin_operator LPAR end_operator begin_name i end_name begin_operator LT end_operator begin_name begin_name components end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator RPAR end_operator begin_operator QM end_operator begin_name begin_name components end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DP end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name component 2 end_name begin_init begin_expr begin_operator LPAR end_operator begin_name i end_name begin_operator LT end_operator begin_name begin_name other end_name begin_operator DOT end_operator begin_name components end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator RPAR end_operator begin_operator QM end_operator begin_name begin_name other end_name begin_operator DOT end_operator begin_name components end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DP end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name component 2 end_name begin_operator UNP end_operator begin_name component 1 end_name end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_for begin_return begin_expr end_expr end_return begin_comment exact match end_comment end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test filter reader after end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name do test end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name file prepend end_name end_expr end_argument begin_argument begin_expr begin_name file append with end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment flag to disable warning and informational messages optional default false param nowarn option end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set nowarn end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name nowarn end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name nowarn end_name end_name begin_operator EQ end_operator begin_name nowarn end_name end_expr end_expr_stmt end_block 
 begin_comment see java lang object equals param rhs the object to check for equality return true if the attributes are the same end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name equals end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name rhs end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name rhs end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name rhs end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name get class end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name rhs end_name begin_operator EQT end_operator begin_name this end_name end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name section end_name end_type begin_name rhs section end_name begin_init begin_expr begin_operator LPAR end_operator begin_name section end_name begin_operator RPAR end_operator begin_name rhs end_name end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name rhs section end_name begin_operator DOT end_operator begin_name attributes end_name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test nested 2 end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment if true allows the file to be checked in even if it is identical to the original param identical the status to set the flag to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set identical end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name identical end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m identical end_name begin_operator EQ end_operator begin_name identical end_name end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name mock project end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name task end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_class begin_super begin_name task end_name end_super begin_argument_list end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_block end_block end_function end_block end_class end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name set task name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name target end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name target end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name add task end_name end_name begin_argument_list begin_argument begin_expr begin_name task end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name set owning target end_name end_name begin_argument_list begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the beans used for the script return the map of beans end_comment begin_type begin_specifier end_specifier begin_name map end_name end_type begin_name get beans end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name beans end_name end_expr end_return end_block 
 begin_comment a unit test for j unit excercises the propertyfile tasks ability to update properties that are already defined end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test updates existing properties end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name properties end_name end_type begin_name before update end_name begin_init begin_expr begin_call begin_name get test properties end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name fname end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name before update end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name fname key end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name lname end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name before update end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name lname key end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name email end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name before update end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name email key end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name before update end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name phone key end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name before update end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name age key end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name before update end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name date key end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment ask ant to update the properties end_comment begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name properties end_name end_type begin_name after update end_name begin_init begin_expr begin_call begin_name get test properties end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name new fname end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name after update end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name fname key end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name new lname end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name after update end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name lname key end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name new email end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name after update end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name email key end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name new phone end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name after update end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name phone key end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name new age end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name after update end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name age key end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name new date end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name after update end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name date key end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name begin_name classpath utils end_name begin_operator DOT end_operator begin_name delegate end_name end_name end_type begin_name get class path delegate end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name cp delegate end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name cp delegate end_name begin_operator EQ end_operator begin_call begin_name begin_name classpath utils end_name begin_operator DOT end_operator begin_name get delegate end_name end_name begin_argument_list begin_argument begin_expr begin_name project component end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name cp delegate end_name end_expr end_return end_block 
 begin_comment add an lt http gt condition param h an http condition since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add http end_name begin_parameter_list begin_param begin_decl begin_type begin_name http end_name end_type begin_name h end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name conditions end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name h end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the parameter name param name the name of the parameter end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name name end_name end_name begin_operator EQ end_operator begin_name name end_name end_expr end_expr_stmt end_block 
 begin_comment tries to load kaffe native 2 ascii and falls back to the older class name if necessary return null if neither class can get loaded end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name class end_name end_type begin_name get n 2 a class end_name begin_parameter_list end_parameter_list begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name n 2 a classnames end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_try begin_block begin_return begin_expr begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name n 2 a classnames end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name cnfe end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try end_block end_for begin_return begin_expr end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name to end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name to end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name to list end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name to end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name javah test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment shorthand to set the replyto address element param address the address to which replies should be directed since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set reply to end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name address end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name reply to list end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name email address end_name begin_argument_list begin_argument begin_expr begin_name address end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment initialize internal instance of xml catalog throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name init end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name init end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name xml catalog end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment check style parameter number check off bc end_comment begin_comment convenience method to copy a file from a source to a destination specifying if token filtering must be used if filter chains must be used if source files may overwrite newer destination files and the last modified time of code dest file code file should be made equal to the last modified time of code source file code param source file name of file to copy from must not be code null code param dest file name of file to copy to must not be code null code param filters the collection of filters to apply to this copy param filter chains filter chains to apply during the copy param overwrite whether or not the destination file should be overwritten if it already exists param preserve last modified whether or not the last modified time of the resulting file should be set to that of the source file param encoding the encoding used to read and write the files param project the project instance throws io exception if the copying fails since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name copy file end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name source file end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name dest file end_name end_decl end_param begin_param begin_decl begin_type begin_name filter set collection end_name end_type begin_name filters end_name end_decl end_param begin_param begin_decl begin_type begin_name vector end_name end_type begin_name filter chains end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name overwrite end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name preserve last modified end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name encoding end_name end_decl end_param begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name copy file end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name source file end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name dest file end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name filters end_name end_expr end_argument begin_argument begin_expr begin_name filter chains end_name end_expr end_argument begin_argument begin_expr begin_name overwrite end_name end_expr end_argument begin_argument begin_expr begin_name preserve last modified end_name end_expr end_argument begin_argument begin_expr begin_name encoding end_name end_expr end_argument begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment if true send any output generated by tests to ant s logging system as well as to the formatters by default only the formatters receive the output p output will always be passed to the formatters and not by shown by default this option should for example be set for tests that are interactive and prompt the user to do something p param show output if true send output to ant s logging system too since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set show output end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name show output end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name show output end_name end_name begin_operator EQ end_operator begin_name show output end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set primary key end_name begin_parameter_list begin_param begin_decl begin_type begin_name classname end_name end_type begin_name primary key end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name primary key end_name end_name begin_operator EQ end_operator begin_name primary key end_name end_expr end_expr_stmt end_block 
 begin_comment reads the checksum from a file using the specified format since 1 7 end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name read checksum end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name f end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name buffered reader end_name end_type begin_name disk checksum reader end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name disk checksum reader end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name buffered reader end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file reader end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name begin_index end_index end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name format end_name begin_operator DOT end_operator begin_name parse end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name disk checksum reader end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name result end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name begin_name result end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name begin_name result end_name begin_index begin_expr end_expr end_index end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_return begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_name begin_name result end_name begin_index begin_expr end_expr end_index end_name end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name f end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name parse exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name f end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name disk checksum reader end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_type begin_specifier end_specifier begin_name map end_name end_type begin_name get ns elements end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name ns elements end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name ns elements end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name hash map end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name macro def end_name begin_operator DOT end_operator begin_name get elements end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name entry set end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name map end_name begin_operator DOT end_operator begin_name entry end_name end_name end_type begin_name entry end_name begin_init begin_expr begin_operator LPAR end_operator begin_name begin_name map end_name begin_operator DOT end_operator begin_name entry end_name end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ns elements end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get key end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name macro def end_name begin_operator DOT end_operator begin_name template element end_name end_name end_type begin_name te end_name begin_init begin_expr begin_operator LPAR end_operator begin_name begin_name macro def end_name begin_operator DOT end_operator begin_name template element end_name end_name begin_operator RPAR end_operator begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name te end_name begin_operator DOT end_operator begin_name is implicit end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name implicit tag end_name begin_operator EQ end_operator begin_call begin_name begin_name te end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for end_block end_then end_if begin_return begin_expr begin_name ns elements end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 2 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment does the work exception build exception thrown in unrecoverable error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name apply web proxy settings end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get charset end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name charset end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test dest dir and signed jar 2 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name sign jar end_name begin_operator DOT end_operator begin_name error signedjar and paths end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment escape lt gt amp apos quot as their entities and drop characters that are illegal in xml documents param value the string to encode return the encoded string end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name encode end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name sb end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name len end_name begin_init begin_expr begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name len end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name c end_name begin_init begin_expr begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_switch begin_condition begin_expr begin_name c end_name end_expr end_condition begin_block begin_case begin_expr end_expr begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr end_expr begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr end_expr begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr end_expr begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr end_expr begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name next semi end_name begin_init begin_expr begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name next semi end_name begin_operator LT end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name is reference end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument begin_argument begin_expr begin_name next semi end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_break end_break end_case begin_default begin_if begin_condition begin_expr begin_call begin_name is legal character end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_break end_break end_default end_block end_switch end_block end_for begin_return begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment if checking for end of line at end of file add a character to the lastchars buffer end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add last char end_name begin_parameter_list begin_param begin_decl begin_type begin_name char end_name end_type begin_name ch end_name end_decl end_param end_parameter_list begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr begin_name begin_name last chars end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator MINUS end_operator end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator GE end_operator end_expr end_condition begin_incr begin_expr begin_operator MMINUS end_operator begin_name i end_name end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name begin_name last chars end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_name begin_name last chars end_name begin_index begin_expr begin_name i end_name begin_operator PLUS end_operator end_expr end_index end_name end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_name begin_name last chars end_name begin_index begin_expr begin_name begin_name last chars end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator MINUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_name ch end_name end_expr end_expr_stmt end_block 
 begin_comment sets the file to be renamed param src the file to rename end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set src end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name src end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name src end_name end_name begin_operator EQ end_operator begin_name src end_name end_expr end_expr_stmt end_block 
 begin_comment get a property from the project param property return end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get property end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name property end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name property end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment nested lt srcfiles gt element param fs the source files end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add srcfiles end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name file set end_name end_type begin_name fs end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name source file sets end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name fs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test and incomplete end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect property unset end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the list of files in the file system upon which the root classes depend the files will be either the classfiles or jar files upon which the root classes depend return an enumeration of file instances end_comment begin_type begin_specifier end_specifier begin_name enumeration end_name end_type begin_name get file dependencies end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name supports file dependencies end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name determined end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name determine dependencies end_name begin_argument_list begin_argument begin_expr begin_name file dependencies end_name end_expr end_argument begin_argument begin_expr begin_name class dependencies end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name file dependencies end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment sets a flag to allow the user to enable tree walker tracing param enable a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set trace tree walker end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name enable end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name trace tree walker end_name begin_operator EQ end_operator begin_name enable end_name end_expr end_expr_stmt end_block 
 begin_comment since 1 6 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name cleanup end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name close file end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name project end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name remove build listener end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name project end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment set the source file attribute param src the source file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set src end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name src end_name end_decl end_param end_parameter_list begin_block begin_comment there are places in this file and perhaps elsewhere where it is assumed end_comment begin_comment that null is an acceptable parameter end_comment begin_if begin_condition begin_expr begin_name src end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set src resource end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file resource end_name begin_argument_list begin_argument begin_expr begin_name src end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name build started end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name action performed end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name ejb jar end_name end_type begin_name get parent end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name ejb jar end_name begin_operator RPAR end_operator begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name get task end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name date format end_name end_type begin_name get primary format end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name simple date format end_name begin_argument_list begin_argument begin_expr begin_name pattern end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment return the group name for the tar entry end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get group end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name tar resource end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get group end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr begin_name group name end_name end_expr end_return end_block 
 begin_comment sets the input buffer for this filter the filter expects from the component providing the input that data is only added by that component to the end of this string buffer this string buffer will be modified by this filter and expects that another component will only apped to this string buffer param input the input for this filter end_comment begin_type begin_name void end_name end_type begin_name set input buffer end_name begin_parameter_list begin_param begin_decl begin_type begin_name string buffer end_name end_type begin_name input end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name input buffer end_name begin_operator EQ end_operator begin_name input end_name end_expr end_expr_stmt end_block 
 begin_comment entry point when operating as a task exception build exception if the task is not configured correctly end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name property end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name is task end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_try begin_block begin_if begin_condition begin_expr begin_call begin_name eval end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name oldvalue end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr begin_name property end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name oldvalue end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name oldvalue end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment nb this makes use of project set property rather than project set new property end_comment begin_comment due to backwards compatiblity reasons end_comment begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set property end_name begin_argument_list begin_argument begin_expr begin_name property end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block begin_finally begin_block begin_expr_stmt begin_expr begin_name is task end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment empty constructor end_comment begin_specifier end_specifier begin_name file utils end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment set the classpath to be used when running the java class param s an ant path object containing the classpath end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classpath end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name create classpath end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment load the script from an external file optional param file the file containing the script source end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set src end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name set src end_name end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment executes the given classname with the given arguments as if it were a command line application param classname the name of the class to run param args arguments for the class throws build exception in case of io exception in the execution end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name run end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name classname end_name end_decl end_param begin_param begin_decl begin_type begin_name vector end_name end_type begin_name args end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name commandline java end_name end_type begin_name cmdj end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name commandline java end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmdj end_name begin_operator DOT end_operator begin_name set classname end_name end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmdj end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name run end_name begin_argument_list begin_argument begin_expr begin_name cmdj end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor end_comment begin_specifier end_specifier begin_name method ref cp info end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name constant methodref end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set a managing code task code for this code concat file input stream code param task the managing code task code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set managing task end_name begin_parameter_list begin_param begin_decl begin_type begin_name task end_name end_type begin_name task end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set managing component end_name begin_argument_list begin_argument begin_expr begin_name task end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return true if a socket can be created exception build exception if the attributes are not set end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name eval end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name server end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name port end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name server end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name port end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name net end_name begin_operator DOT end_operator begin_name socket end_name end_name end_type begin_name s end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name net end_name begin_operator DOT end_operator begin_name socket end_name end_name begin_argument_list begin_argument begin_expr begin_name server end_name end_expr end_argument begin_argument begin_expr begin_name port end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block end_catch begin_finally begin_block begin_if begin_condition begin_expr begin_name s end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_comment intentionally left blank end_comment end_block end_catch end_try end_block end_then end_if end_block end_finally end_try begin_return begin_expr end_expr end_return end_block 
 begin_comment sets the desired os architecture param arch the os architecture end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set arch end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name arch end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name arch end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name arch end_name begin_operator DOT end_operator begin_name to lower case end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment attempts to rename a file from a source to a destination if overwrite is set to true this method overwrites existing file even if the destination file is newer otherwise the source file is renamed only if the destination file is older than it method then checks if token filtering is used if it is this method returns false assuming it is the responsibility to the copy file method param source file the file to rename param dest file the destination file param filtering if true filtering is in operation file will be copied deleted instead of renamed param overwrite if true force overwrite even if destination file is newer than source file return true if the file was renamed exception io exception if an error occurs exception build exception if an error occurs end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name rename file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name source file end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name dest file end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name filtering end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name overwrite end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name renamed end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_call begin_name get filter sets end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name size end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_call begin_name get filter chains end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name size end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name filtering end_name begin_operator UNP end_operator begin_call begin_name begin_name dest file end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_comment ensure that parent dir of dest file exists end_comment begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name parent end_name begin_init begin_expr begin_call begin_name begin_name dest file end_name begin_operator DOT end_operator begin_name get parent file end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name parent end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name mkdirs end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name dest file end_name begin_operator DOT end_operator begin_name is file end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name dest file end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name source file end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name dest file end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name dest file end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name renamed end_name begin_operator EQ end_operator begin_call begin_name begin_name source file end_name begin_operator DOT end_operator begin_name rename to end_name end_name begin_argument_list begin_argument begin_expr begin_name dest file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name renamed end_name end_expr end_return end_block 
 begin_comment set this entry s file size param size this entry s new file size end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set size end_name begin_parameter_list begin_param begin_decl begin_type begin_name long end_name end_type begin_name size end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name size end_name end_name begin_operator EQ end_operator begin_name size end_name end_expr end_expr_stmt end_block 
 begin_comment get the additional implementation specific command line arguments return array of command line arguments guaranteed to be non null end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get current compiler args end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name chosen end_name begin_init begin_expr begin_call begin_name begin_name facade end_name begin_operator DOT end_operator begin_name get explicit choice end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_comment make sure facade knows about magic properties and fork setting end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name applied compiler end_name begin_init begin_expr begin_call begin_name get compiler end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name facade end_name begin_operator DOT end_operator begin_name set implementation end_name end_name begin_argument_list begin_argument begin_expr begin_name applied compiler end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name facade end_name begin_operator DOT end_operator begin_name get args end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name alt compiler name end_name begin_init begin_expr begin_call begin_name get alt compiler name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name facade end_name begin_operator DOT end_operator begin_name get implementation end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name begin_name result end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name alt compiler name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name facade end_name begin_operator DOT end_operator begin_name set implementation end_name end_name begin_argument_list begin_argument begin_expr begin_name alt compiler name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name begin_name facade end_name begin_operator DOT end_operator begin_name get args end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name result end_name end_expr end_return end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name facade end_name begin_operator DOT end_operator begin_name set implementation end_name end_name begin_argument_list begin_argument begin_expr begin_name chosen end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test file symlink end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name supports symlinks end_name end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name login suceeded end_name end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name change remote dir end_name begin_argument_list begin_argument begin_expr begin_name remote tmp dir end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name ftp directory scanner end_name end_name end_type begin_name ds end_name begin_init begin_expr begin_call begin_name begin_name my ftp task end_name begin_operator DOT end_operator begin_name new scanner end_name end_name begin_argument_list begin_argument begin_expr begin_name ftp end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set basedir end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set includes end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set follow symlinks end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name compare files end_name begin_argument_list begin_argument begin_expr begin_name ds end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr end_block end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set a managing code task code for this code concat file input stream code param pc the managing code task code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set managing component end_name begin_parameter_list begin_param begin_decl begin_type begin_name project component end_name end_type begin_name pc end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name managing pc end_name end_name begin_operator EQ end_operator begin_name pc end_name end_expr end_expr_stmt end_block 
 begin_comment set the path param path a code string code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set path end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name path end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name parts end_name begin_operator EQ end_operator begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name translate path end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the new modification time of file s touched in the format quot mm dd yyyy hh mm am i or i pm quot or quot mm dd yyyy hh mm ss am i or i pm quot optional default now param date time the code string code date in the specified format end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set datetime end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name date time end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name date time end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name date time end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name date time end_name end_name begin_operator EQ end_operator begin_name date time end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name date time configured end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment control class tree generation param b if true do not generate class hierarchy end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set notree end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add arg if end_name begin_argument_list begin_argument begin_expr begin_name b end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment writes the quot end of central dir record quot throws io exception on error since 1 1 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write central directory end end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name write out end_name begin_argument_list begin_argument begin_expr begin_name eocd sig end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment disk numbers end_comment begin_expr_stmt begin_expr begin_call begin_name write out end_name begin_argument_list begin_argument begin_expr begin_name zero end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write out end_name begin_argument_list begin_argument begin_expr begin_name zero end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment number of entries end_comment begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name num end_name begin_init begin_expr begin_call begin_name begin_name zip short end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name entries end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name write out end_name begin_argument_list begin_argument begin_expr begin_name num end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write out end_name begin_argument_list begin_argument begin_expr begin_name num end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment length and location of cd end_comment begin_expr_stmt begin_expr begin_call begin_name write out end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name zip long end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list begin_argument begin_expr begin_name cd length end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write out end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name zip long end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list begin_argument begin_expr begin_name cd offset end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment zip file comment end_comment begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name data end_name begin_init begin_expr begin_call begin_name get bytes end_name begin_argument_list begin_argument begin_expr begin_name comment end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name write out end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name zip short end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name data end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write out end_name begin_argument_list begin_argument begin_expr begin_name data end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment read the constant pool from a class input stream param class stream the data input stream of a class file exception io exception if there is a problem reading the constant pool from the stream end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name read end_name begin_parameter_list begin_param begin_decl begin_type begin_name data input stream end_name end_type begin_name class stream end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name num entries end_name begin_init begin_expr begin_call begin_name begin_name class stream end_name begin_operator DOT end_operator begin_name read unsigned short end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name num entries end_name end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name constant pool entry end_name end_type begin_name next entry end_name begin_init begin_expr begin_call begin_name begin_name constant pool entry end_name begin_operator DOT end_operator begin_name read entry end_name end_name begin_argument_list begin_argument begin_expr begin_name class stream end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name i end_name begin_operator UNP end_operator begin_call begin_name begin_name next entry end_name begin_operator DOT end_operator begin_name get num entries end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add entry end_name begin_argument_list begin_argument begin_expr begin_name next entry end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_comment constructor sets the tag value for this entry to type class end_comment begin_specifier end_specifier begin_name class cp info end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name constant class end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name testsortdefault end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment password file to read passwords from param pass file password file to read passwords from end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set passfile end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name pass file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name pass file end_name end_name begin_operator EQ end_operator begin_name pass file end_name end_expr end_expr_stmt end_block 
 begin_comment clone this data type return a clone of the class file set end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name clone end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name classfile set end_name begin_argument_list begin_argument begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_call begin_name classfile set end_name begin_argument_list begin_argument begin_expr begin_call begin_name get ref end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DP end_operator begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment prepend this prefix to the path for each archive entry prevents both prefix and fullpath from being specified param prefix the prefix to prepend to entries in the archive file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set prefix end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name prefix end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name check archive attributes allowed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name prefix end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name fullpath end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name prefix end_name end_name begin_operator EQ end_operator begin_name prefix end_name end_expr end_expr_stmt end_block 
 begin_comment is this a forked invocation of jdk s javac return true if this is a forked invocation end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is forked javac end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name fork end_name begin_operator UNP end_operator begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name get compiler end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment sets the passphrase param passphrase the passphrase to set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set passphrase end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name passphrase end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name passphrase end_name end_name begin_operator EQ end_operator begin_name passphrase end_name end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name hide missing basedir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file set end_name end_type begin_name fs end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name fs end_name end_name begin_operator EQ end_operator begin_name fs end_name end_expr end_expr_stmt end_block 
 begin_comment transformation throws build exception exception if something goes wrong with the transformation end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name transform end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name check options end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name project end_name end_type begin_name project end_name begin_init begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name temp file end_name end_type begin_name temp file task end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name temp file end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name temp file task end_name begin_operator DOT end_operator begin_name bind to owner end_name end_name begin_argument_list begin_argument begin_expr begin_name task end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name xslt process end_name end_type begin_name xslt task end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name xslt process end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name xslt task end_name begin_operator DOT end_operator begin_name bind to owner end_name end_name begin_argument_list begin_argument begin_expr begin_name task end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name xslt task end_name begin_operator DOT end_operator begin_name set xsl resource end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get stylesheet end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment acrobatic cast end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name xslt task end_name begin_operator DOT end_operator begin_name set in end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name xml result aggregator end_name begin_operator RPAR end_operator begin_name task end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get destination file end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name output file end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name format end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name frames end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name temp file property end_name begin_init begin_expr begin_call begin_name get class end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_call begin_name begin_name string end_name begin_operator DOT end_operator begin_name value of end_name end_name begin_argument_list begin_argument begin_expr begin_name counter end_name begin_operator PPLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name tmp end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get base dir end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name temp file task end_name begin_operator DOT end_operator begin_name set dest dir end_name end_name begin_argument_list begin_argument begin_expr begin_name tmp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name temp file task end_name begin_operator DOT end_operator begin_name set property end_name end_name begin_argument_list begin_argument begin_expr begin_name temp file property end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name temp file task end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name output file end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name temp file property end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name output file end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name to dir end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name xslt task end_name begin_operator DOT end_operator begin_name set out end_name end_name begin_argument_list begin_argument begin_expr begin_name output file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name params end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name xslt process end_name begin_operator DOT end_operator begin_name param end_name end_name end_type begin_name param end_name begin_init begin_expr begin_operator LPAR end_operator begin_name begin_name xslt process end_name begin_operator DOT end_operator begin_name param end_name end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name xslt process end_name begin_operator DOT end_operator begin_name param end_name end_name end_type begin_name new param end_name begin_init begin_expr begin_call begin_name begin_name xslt task end_name begin_operator DOT end_operator begin_name create param end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name new param end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name new param end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name param end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name new param end_name begin_operator DOT end_operator begin_name set expression end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name param end_name begin_operator DOT end_operator begin_name get expression end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_decl_stmt begin_decl begin_type begin_name begin_name xslt process end_name begin_operator DOT end_operator begin_name param end_name end_name end_type begin_name paramx end_name begin_init begin_expr begin_call begin_name begin_name xslt task end_name begin_operator DOT end_operator begin_name create param end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name paramx end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name paramx end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name paramx end_name begin_operator DOT end_operator begin_name set expression end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name to dir end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name t 0 end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name xslt task end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name dt end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator begin_name t 0 end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name dt end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name format end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name frames end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name delete end_name end_type begin_name delete end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name delete end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name delete end_name begin_operator DOT end_operator begin_name bind to owner end_name end_name begin_argument_list begin_argument begin_expr begin_name task end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name delete end_name begin_operator DOT end_operator begin_name set file end_name end_name begin_argument_list begin_argument begin_expr begin_name output file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name delete end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment set the output file optional defaults to the ant log param output the output file to use for logging messages end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set output end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name output end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name output end_name end_name begin_operator EQ end_operator begin_name output end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 2 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test collapse semantic end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name do test end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment check if filter inline works end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name testfilterinline end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name get log end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment configures the wrapped element and all its children the attributes and text for the wrapped element are configured and then each child is configured and added each time the wrapper is configured the attributes and text for it are reset if the element has an code id code attribute a reference is added to the project as well param p the project containing the wrapped element must not be code null code exception build exception if the configuration fails for instance due to invalid attributes or children or text being added to an element which doesn t accept it end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name maybe configure end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name maybe configure end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment create a new stream pumper param is input stream to read data from param os output stream to write data to end_comment begin_specifier end_specifier begin_name stream pumper end_name begin_parameter_list begin_param begin_decl begin_type begin_name input stream end_name end_type begin_name is end_name end_decl end_param begin_param begin_decl begin_type begin_name output stream end_name end_type begin_name os end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr begin_name is end_name end_expr end_argument begin_argument begin_expr begin_name os end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set nonamespace handling up for xerces or other parsers param property name of the property to set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set no namespace schema property end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name property end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name anon schema end_name begin_init begin_expr begin_call begin_name get no namespace schema url end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name anon schema end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set property end_name begin_argument_list begin_argument begin_expr begin_name property end_name end_expr end_argument begin_argument begin_expr begin_name anon schema end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name get dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name channel sftp end_name end_type begin_name channel end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name remote file end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name local file end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument begin_argument begin_expr begin_name sftp exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name pwd end_name begin_init begin_expr begin_name remote file end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name remote file end_name begin_operator DOT end_operator begin_name last index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name remote file end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name pwd end_name begin_operator EQ end_operator begin_call begin_name begin_name remote file end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name remote file end_name begin_operator DOT end_operator begin_name last index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name channel end_name begin_operator DOT end_operator begin_name cd end_name end_name begin_argument_list begin_argument begin_expr begin_name pwd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name local file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name local file end_name begin_operator DOT end_operator begin_name mkdirs end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name util end_name begin_operator DOT end_operator begin_name vector end_name end_name end_type begin_name files end_name begin_init begin_expr begin_call begin_name begin_name channel end_name begin_operator DOT end_operator begin_name ls end_name end_name begin_argument_list begin_argument begin_expr begin_name remote file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name channel sftp end_name begin_operator DOT end_operator begin_name ls entry end_name end_name end_type begin_name le end_name begin_init begin_expr begin_operator LPAR end_operator begin_name begin_name channel sftp end_name begin_operator DOT end_operator begin_name ls entry end_name end_name begin_operator RPAR end_operator begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_call begin_name begin_name le end_name begin_operator DOT end_operator begin_name get filename end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name le end_name begin_operator DOT end_operator begin_name get attrs end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name is dir end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name get dir end_name begin_argument_list begin_argument begin_expr begin_name channel end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name channel end_name begin_operator DOT end_operator begin_name pwd end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name local file end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name le end_name begin_operator DOT end_operator begin_name get filename end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name get file end_name begin_argument_list begin_argument begin_expr begin_name channel end_name end_expr end_argument begin_argument begin_expr begin_name le end_name end_expr end_argument begin_argument begin_expr begin_name local file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name channel end_name begin_operator DOT end_operator begin_name cd end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name fire sub build finished end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name fire sub build finished end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name unzip test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test ends with shorter string end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name main end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name args end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment here is a comment with an embedded tab end_comment begin_if begin_condition begin_expr begin_name mybool end_name end_expr end_condition begin_then begin_block begin_comment here is a multi line with embedded tab comment end_comment begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name mychar end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment tab end_comment end_block end_then end_if begin_comment end of if mybool end_comment end_block 
 begin_comment launches the given command in a new process in the given working directory param project the ant project param cmd the command line to execute as an array of strings param env the environment to set as an array of strings param working dir working directory where the command should run return the created process throws io exception forwarded from the exec method of the command launcher end_comment begin_type begin_specifier end_specifier begin_name process end_name end_type begin_name exec end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name cmd end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name env end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name working dir end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name project end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name working dir end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name exec end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr begin_name cmd end_name end_expr end_argument begin_argument begin_expr begin_name env end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name io exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment locate the auxiliary script end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name ant home end_name begin_init begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name ant home end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name ant home end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name io exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name ant home end_name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name ant run end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get base dir end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name ant home end_name begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator begin_name my script end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment build the command end_comment begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name command dir end_name begin_init begin_expr begin_name working dir end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name working dir end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name project end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name command dir end_name begin_operator EQ end_operator begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get base dir end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name newcmd end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator PLUS end_operator end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name newcmd end_name begin_index begin_expr end_expr end_index end_name begin_operator EQ end_operator begin_name ant run end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name newcmd end_name begin_index begin_expr end_expr end_index end_name begin_operator EQ end_operator begin_call begin_name begin_name command dir end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name newcmd end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name exec end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr begin_name newcmd end_name end_expr end_argument begin_argument begin_expr begin_name env end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment malformed manifest starts with continuation line end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 4 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment construct a new bc file set from the specified file set param fs the file set from which to inherit config end_comment begin_specifier end_specifier begin_name bc file set end_name begin_parameter_list begin_param begin_decl begin_type begin_name file set end_name end_type begin_name fs end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name fs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test filename attribute end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment ensure the directory exists for a given file param target file the file for which the directories are required exception build exception if the directories cannot be created end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name ensure directory for end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name target file end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name directory end_name begin_init begin_expr begin_call begin_name begin_name target file end_name begin_operator DOT end_operator begin_name get parent file end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name directory end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name directory end_name begin_operator DOT end_operator begin_name mkdirs end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name directory end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_then end_if end_block 
 begin_comment return true if this resource is selected param r the resource to check return whether the resource was selected end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is selected end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name is exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment adds a path to extdirs return a path to be configured end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name create extdirs end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name extdirs end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name extdirs end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name extdirs end_name begin_operator DOT end_operator begin_name create path end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment uu encode bytes from the input stream and write them as text characters to the output stream this method will run until it exhausts the input stream param is the input stream param out the output stream throws io exception if there is an error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name encode end_name begin_parameter_list begin_param begin_decl begin_type begin_name input stream end_name end_type begin_name is end_name end_decl end_param begin_param begin_decl begin_type begin_name output stream end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name out end_name end_name begin_operator EQ end_operator begin_name out end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name encode begin end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name buffer end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name byte end_name begin_index begin_expr begin_name max chars per line end_name begin_operator STAR end_operator end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name count end_name end_decl end_decl_stmt begin_while begin_condition begin_expr begin_operator LPAR end_operator begin_name count end_name begin_operator EQ end_operator begin_call begin_name begin_name is end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name pos end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_name count end_name begin_operator GT end_operator end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name num end_name begin_init begin_expr begin_name count end_name begin_operator GT end_operator begin_name max chars per line end_name begin_operator QM end_operator begin_name max chars per line end_name begin_operator DP end_operator begin_name count end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name encode line end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument begin_argument begin_expr begin_name pos end_name end_expr end_argument begin_argument begin_expr begin_name num end_name end_expr end_argument begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name pos end_name begin_operator UNP end_operator begin_name num end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name count end_name begin_operator UNP end_operator begin_name num end_name end_expr end_expr_stmt end_block end_while end_block end_while begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name encode end end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment if true forks into a new jvm default false param value tt true tt if a jvm should be forked otherwise tt false tt end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set fork end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name fork end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block 
 begin_comment add a present selector entry on the selector list param selector the selector to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add present end_name begin_parameter_list begin_param begin_decl begin_type begin_name present selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name fileset end_name begin_operator DOT end_operator begin_name add present end_name end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment create an empty command line end_comment begin_specifier end_specifier begin_name commandline end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment splits up a string where elements are separated by a specific character and return all elements param data the string to split up param ch the separator character return the list of elements end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name vector end_name end_type begin_name split end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name data end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name ch end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name elems end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name pos end_name begin_init begin_expr begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_operator LPAR end_operator begin_name pos end_name begin_operator EQ end_operator begin_call begin_name begin_name data end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name ch end_name end_expr end_argument begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name elem end_name begin_init begin_expr begin_call begin_name begin_name data end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument begin_argument begin_expr begin_name pos end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name elems end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name elem end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name i end_name begin_operator EQ end_operator begin_name pos end_name begin_operator PLUS end_operator end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_call begin_name begin_name elems end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name data end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name elems end_name end_expr end_return end_block 
 begin_comment method that each selector will implement to create their selection behaviour if there is a problem with the setup of a selector it can throw a build exception to indicate the problem param basedir a java io file object for the base directory param filename the name of the file to check param file a file object for this filename return whether the file should be selected or not end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is selected end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name basedir end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name filename end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name init end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set selected end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name file end_name end_name begin_operator EQ end_operator begin_name file end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name basedir end_name end_name begin_operator EQ end_operator begin_name basedir end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name filename end_name end_name begin_operator EQ end_operator begin_name filename end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name runner end_name begin_operator DOT end_operator begin_name add bean end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name basedir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name runner end_name begin_operator DOT end_operator begin_name add bean end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name runner end_name begin_operator DOT end_operator begin_name add bean end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name runner end_name begin_operator DOT end_operator begin_name execute script end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name is selected end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name task finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test recreate with update additional files end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name test recreate end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the default timeout if none has been set already param default timeout an code integer code value ant attribute ignore true end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set default timeout end_name begin_parameter_list begin_param begin_decl begin_type begin_name integer end_name end_type begin_name default timeout end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name timeout end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name timeout end_name begin_operator EQ end_operator begin_name default timeout end_name end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_specifier end_specifier begin_name b zip 2 test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name copyfile test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment default constructor end_comment begin_specifier end_specifier begin_name and end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment returns the set of selectors as an array param p the current project return an array of selectors end_comment begin_type begin_specifier end_specifier begin_name file selector end_name begin_index end_index end_type begin_name get selectors end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name file selector end_name begin_index end_index end_type begin_name result end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name file selector end_name begin_index begin_expr begin_call begin_name begin_name selectors list end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name selectors list end_name begin_operator DOT end_operator begin_name copy into end_name end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name result end_name end_expr end_return end_block 
 begin_comment indicates whether this entry has been resolved in general a constant pool entry can reference another constant pool entry by its index value resolution involves replacing this index value with the constant pool entry at that index return true if this entry has been resolved end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is resolved end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name resolved end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set system error end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name err end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment learn whether delete on exit is set for this tempfile task return boolean delete on exit flag end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is delete on exit end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name delete on exit end_name end_expr end_return end_block 
 begin_comment get nusers list return string containing the list of users excluded from lock end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get nusers end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m nusers end_name end_expr end_return end_block 
 begin_comment convenience method to return the next resource return the next file end_comment begin_type begin_specifier end_specifier begin_name file resource end_name end_type begin_name next resource end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name has next end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name no such element exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_return begin_expr begin_operator UNP end_operator begin_call begin_name file resource end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name pos end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment add a patternset param set a pattern set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add patternset end_name begin_parameter_list begin_param begin_decl begin_type begin_name pattern set end_name end_type begin_name set end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name patternsets end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name set end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the whole testsuite started param suite the test suite end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name start test suite end_name begin_parameter_list begin_param begin_decl begin_type begin_name j unit test end_name end_type begin_name suite end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name output end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return begin_comment quick return no output do nothing end_comment end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name sb end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name suite end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name output end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name output end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment adds a set of extensions that this library optionally requires param extension set a set of extensions that this library optionally requires end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add configured options end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name extension set end_name end_type begin_name extension set end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name optionals end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name extension set end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set up the gcj commandline return the command line end_comment begin_type begin_specifier end_specifier begin_name commandline end_name end_type begin_name setup gcj command end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name commandline end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name classpath end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment gcj doesn t support bootclasspath dir bootclasspath end_comment begin_comment so we ll emulate it for compatibility and convenience end_comment begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name p end_name begin_init begin_expr begin_call begin_name get boot class path end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name classpath end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment gcj doesn t support an extension dir extdir end_comment begin_comment so we ll emulate it for compatibility and convenience end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name classpath end_name begin_operator DOT end_operator begin_name add extdirs end_name end_name begin_argument_list begin_argument begin_expr begin_name extdirs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name classpath end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get compile classpath end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment gcj has no option for source path so we end_comment begin_comment will add it to classpath end_comment begin_if begin_condition begin_expr begin_name compile sourcepath end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name classpath end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name compile sourcepath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name classpath end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name src end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name exec end_name begin_init begin_expr begin_call begin_name get javac end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get executable end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name set executable end_name end_name begin_argument_list begin_argument begin_expr begin_name exec end_name begin_operator EQT end_operator begin_operator QM end_operator begin_operator DP end_operator begin_name exec end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name dest dir end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set file end_name begin_argument_list begin_argument begin_expr begin_name dest dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name dest dir end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name dest dir end_name begin_operator DOT end_operator begin_name mkdirs end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set path end_name begin_argument_list begin_argument begin_expr begin_name classpath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name encoding end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name debug end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name optimize end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment gcj should be set for generate class if no compile to native argument is passed end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name is native build end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name add current compiler args end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name cmd end_name end_expr end_return end_block 
 begin_comment send a quot build finished quot event to the build listeners for this project param exception an exception indicating a reason for a build failure may be code null code indicating a successful build end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name fire build finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name exception end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name build event end_name end_type begin_name event end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name build event end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name set exception end_name end_name begin_argument_list begin_argument begin_expr begin_name exception end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name iterator end_name end_type begin_name iter end_name begin_init begin_expr begin_call begin_name begin_name listeners end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name build listener end_name end_type begin_name listener end_name begin_init begin_expr begin_operator LPAR end_operator begin_name build listener end_name begin_operator RPAR end_operator begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name listener end_name begin_operator DOT end_operator begin_name build finished end_name end_name begin_argument_list begin_argument begin_expr begin_name event end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_comment inform ih to clear the cache end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name introspection helper end_name begin_operator DOT end_operator begin_name clear cache end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment check if core and optional implementation version do match throws build exception if the implementation version of optional tasks does not match the core implementation version end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name validate version end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name optional end_name begin_init begin_expr begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name test class end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name core version end_name begin_init begin_expr begin_call begin_name get implementation version end_name begin_argument_list begin_argument begin_expr begin_name begin_name main end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name optional version end_name begin_init begin_expr begin_call begin_name get implementation version end_name begin_argument_list begin_argument begin_expr begin_name optional end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name core version end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name core version end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name optional version end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name core version end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name optional version end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment begin_expr_stmt begin_expr begin_call begin_name ignore throwable end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment get the string representation of this resource return this resource formatted as a string since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get compression name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name get resource end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment get the version command param cmd command line containing the command line string with or without the version flag and string appended end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name get version command end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name get version end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes this breaks clearcase end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag version end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get version end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment comparison method of the interface return true if the files are equal exception build exception if it all went pear shaped end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name eval end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_comment validate end_comment begin_if begin_condition begin_expr begin_name file 1 end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name file 2 end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment now match the files end_comment begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name matches end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name matches end_name begin_operator EQ end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name content equals end_name end_name begin_argument_list begin_argument begin_expr begin_name file 1 end_name end_expr end_argument begin_argument begin_expr begin_name file 2 end_name end_expr end_argument begin_argument begin_expr begin_name textfile end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name ioe end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name ioe end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_return begin_expr begin_name matches end_name end_expr end_return end_block 
 begin_comment set the name of the executable program param value the name of the executable program end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set executable end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name executable end_name end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmdl end_name begin_operator DOT end_operator begin_name set executable end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return true if value is omit end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is omit mode end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name omit end_name begin_operator DOT end_operator begin_name equals ignore case end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment sets the log file where cleartool records the status of the command param log the path to the log file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set log end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name log end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m log end_name begin_operator EQ end_operator begin_name log end_name end_expr end_expr_stmt end_block 
 begin_name child end_name begin_parameter_list begin_param begin_decl begin_type begin_name element end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name e end_name end_name begin_operator EQ end_operator begin_name e end_name end_expr end_expr_stmt end_block 
 begin_comment stop pumping the streams end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name stop end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name output thread end_name begin_operator DOT end_operator begin_name join end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name interrupted exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name error thread end_name begin_operator DOT end_operator begin_name join end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name interrupted exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try begin_if begin_condition begin_expr begin_name input pump end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name input pump end_name begin_operator DOT end_operator begin_name stop end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name err end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try end_block 
 begin_comment replace style constructions in the given value with the string value of the corresponding data types param value the string to be scanned for property references may be code null code return the given string with embedded property names replaced by values or code null code if the given string is code null code exception build exception if the given value has an unclosed property name e g code xxx code end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name replace properties end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name property helper end_name end_type begin_name ph end_name begin_init begin_expr begin_call begin_name begin_name property helper end_name begin_operator DOT end_operator begin_name get property helper end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name ph end_name begin_operator DOT end_operator begin_name replace properties end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment handles the end of an element any required clean up is performed by the on end element method and then the original handler is restored to the parser param uri the namespace uri for this element param name the name of the element which is ending will not be code null code param q name the qualified name for this element exception sax exception in case of error not thrown in this implementation end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name end element end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name uri end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name q name end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name sax exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name current handler end_name begin_operator DOT end_operator begin_name on end element end_name end_name begin_argument_list begin_argument begin_expr begin_name uri end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name context end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name ant handler end_name end_type begin_name prev end_name begin_init begin_expr begin_operator LPAR end_operator begin_name ant handler end_name begin_operator RPAR end_operator begin_call begin_name begin_name ant handlers end_name begin_operator DOT end_operator begin_name pop end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name current handler end_name begin_operator EQ end_operator begin_name prev end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name current handler end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name current handler end_name begin_operator DOT end_operator begin_name on end child end_name end_name begin_argument_list begin_argument begin_expr begin_name uri end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name q name end_name end_expr end_argument begin_argument begin_expr begin_name context end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment initialize the task end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name init end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment closes file but doesn t throw exception end_comment begin_type begin_name void end_name end_type begin_name close quietly end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name writer end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 5 end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment for the option string for option strict return the parameter string end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get option strict parameter end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name option strict end_name begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check parameters end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name has filesets end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name get name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name get file end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_call begin_name get namespace end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test delay update task finished end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name do delay update test end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return all tt j unit test tt instances obtain by applying the fileset rules return an enumeration of all elements of this batchtest that are a tt j unit test tt instance end_comment begin_type begin_specifier end_specifier begin_name enumeration end_name end_type begin_name elements end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name j unit test end_name begin_index end_index end_type begin_name tests end_name begin_init begin_expr begin_call begin_name create all j unit test end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name enumerations end_name begin_operator DOT end_operator begin_name from array end_name end_name begin_argument_list begin_argument begin_expr begin_name tests end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment creates a single file fileset param file the single code file code included in this code abstract file set code end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name set dir end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get parent file end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name create include end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name depend test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment whether output should be appended to or overwrite an existing file defaults to false since ant 1 5 param append if true append to an existing file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set append end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name append end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name append end_name end_name begin_operator EQ end_operator begin_name append end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name destroy temp files end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name temp file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name test props file path end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name temp file end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name temp file end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name temp file end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name build props file path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name temp file end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name temp file end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name temp file end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name value does not get overwritten props file path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name temp file end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name temp file end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test ignore element case end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment adds the jars or directories containing ant this task and j unit to the classpath this should make the forked jvm work without having to specify them directly since ant 1 4 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name init end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name ant runtime classes end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name split junit end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name add classpath entry end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add classpath entry end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add classpath entry end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add classpath entry end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set reverse attribute param b if true reverse the normal classloader lookup end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set reverse end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name parent first end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_name b end_name end_expr end_expr_stmt end_block 
 begin_comment controls whether the stylesheet is reloaded for every transform p setting this to true may get around a bug in certain xalan j versions default is false p param b a code boolean code value since ant 1 5 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set reload stylesheet end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name reuse loaded stylesheet end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_name b end_name end_expr end_expr_stmt end_block 
 begin_comment test if a particular class is available to be used param class name a code string code value exception build exception if an error occurs end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test availability end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name class name end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name class name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment copies all user properties that have not been set on the command line or a gui tool from this instance to the project instance given as the argument p to copy all user properties you will also have to call link copy user properties copy user properties p param other the project to copy the properties to must not be null since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name copy inherited properties end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name other end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name inherited properties end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name arg end_name begin_init begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name other end_name begin_operator DOT end_operator begin_name get user property end_name end_name begin_argument_list begin_argument begin_expr begin_name arg end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name value end_name begin_init begin_expr begin_call begin_name begin_name inherited properties end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name arg end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name other end_name begin_operator DOT end_operator begin_name set inherited property end_name end_name begin_argument_list begin_argument begin_expr begin_name arg end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a resource collection param c the code resource collection code to add since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name add end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource collection end_name end_type begin_name c end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name c end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name resources end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name resources end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator UNP end_operator begin_call begin_name resources end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_name resources end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name resources end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the code verbose code flag param a boolean code true code if the flag must be set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set verbose end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name a boolean end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name verbose end_name begin_operator EQ end_operator begin_name a boolean end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name cc end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name cc end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cc list end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name cc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the timeout for the reachability test in seconds param timeout the timeout in seconds end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set timeout end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name timeout end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name timeout end_name end_name begin_operator EQ end_operator begin_name timeout end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the name of the spec file to use required param sf the spec file name to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set spec file end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name sf end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name sf end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name sf end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name spec file end_name end_name begin_operator EQ end_operator begin_name sf end_name end_expr end_expr_stmt end_block 
 begin_comment returns the value of the use repository timestamp member return the value of the use repository timestamp member end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get use repository time stamp end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name use repository time stamp end_name end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set error end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name err end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name error end_name begin_operator EQ end_operator begin_name err end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name error end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name error flag end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment default constructor setup checkin command end_comment begin_specifier end_specifier begin_name ccm checkin end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set ccm action end_name begin_argument_list begin_argument begin_expr begin_name command checkin end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set comment end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator UNP end_operator begin_call begin_name date end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the property attribute param p the property name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set property end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name property end_name begin_operator EQ end_operator begin_name p end_name end_expr end_expr_stmt end_block 
 begin_comment get the keep generated attribute return the attribute end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get keepgenerated end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name keepgenerated end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name granularity end_name end_type begin_name get default end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name granularity end_name end_type begin_name g end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name granularity end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name g end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name g end_name end_expr end_return end_block 
 begin_comment property name whose value should be set to the output of the process param output property the name of the property to be set with the task s output end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set output property end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name output property end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name output property end_name end_name begin_operator EQ end_operator begin_name output property end_name end_expr end_expr_stmt end_block 
 begin_comment constructor end_comment begin_specifier end_specifier begin_name jj tree end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmdl end_name begin_operator DOT end_operator begin_name set vm end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name get jre executable end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test filter contains regex end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name has regex end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_return end_return end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name contents end_name begin_init begin_expr begin_call begin_name get file string end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert string contains end_name begin_argument_list begin_argument begin_expr begin_name contents end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert string not contains end_name begin_argument_list begin_argument begin_expr begin_name contents end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert string contains end_name begin_argument_list begin_argument begin_expr begin_name contents end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set whether to ignore line endings when comparing files param textfile whether to ignore line endings end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set textfile end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name textfile end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name textfile end_name end_name begin_operator EQ end_operator begin_name textfile end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no empty schema location end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name schema validate end_name begin_operator DOT end_operator begin_name schema location end_name begin_operator DOT end_operator begin_name error no location end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name p end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name project end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name set basedir end_name end_name begin_argument_list begin_argument begin_expr begin_name project basedir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name ih end_name begin_operator EQ end_operator begin_call begin_name begin_name introspection helper end_name begin_operator DOT end_operator begin_name get helper end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get class end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment overridden from zip class to deal with application xml param file the file to add to the archive param z out the stream to write to param v path the name this entry shall have in the archive param mode the unix permissions to set throws io exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name zip file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param begin_param begin_decl begin_type begin_name zip output stream end_name end_type begin_name z out end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name v path end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name mode end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_comment if the file being added is meta inf application xml we end_comment begin_comment warn if it s not the one specified in the appxml end_comment begin_comment attribute or if it s being added twice meaning the same end_comment begin_comment file is specified by the appxml attribute and in a end_comment begin_comment fileset element end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name v path end_name begin_operator DOT end_operator begin_name equals ignore case end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name deployment descriptor end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name file name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name deployment descriptor end_name end_expr end_argument begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_name descriptor added end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name archive type end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name archive type end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name zip file end_name end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument begin_argument begin_expr begin_name z out end_name end_expr end_argument begin_argument begin_expr begin_name v path end_name end_expr end_argument begin_argument begin_expr begin_name mode end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name descriptor added end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_else end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name zip file end_name end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument begin_argument begin_expr begin_name z out end_name end_expr end_argument begin_argument begin_expr begin_name v path end_name end_expr end_argument begin_argument begin_expr begin_name mode end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment verify that we select the appropriate mangler end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test jasper name mangler selection end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name jsp compiler adapter end_name end_type begin_name adapter end_name begin_init begin_expr begin_call begin_name begin_name jsp compiler adapter factory end_name begin_operator DOT end_operator begin_name get compiler end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name jsp mangler end_name end_type begin_name mangler end_name begin_init begin_expr begin_call begin_name begin_name adapter end_name begin_operator DOT end_operator begin_name create mangler end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_name mangler end_name begin_operator UNP end_operator begin_name jsp name mangler end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name adapter end_name begin_operator EQ end_operator begin_call begin_name begin_name jsp compiler adapter factory end_name begin_operator DOT end_operator begin_name get compiler end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name mangler end_name begin_operator EQ end_operator begin_call begin_name begin_name adapter end_name begin_operator DOT end_operator begin_name create mangler end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_name mangler end_name begin_operator UNP end_operator begin_name jasper 41 mangler end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment keystore type optional param storetype the keystore type end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set storetype end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name storetype end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name storetype end_name end_name begin_operator EQ end_operator begin_name storetype end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test element creators end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name get element type end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block end_block end_catch end_try begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name get element type end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block end_block end_catch end_try begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name get element type end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block end_block end_catch end_try begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name get element type end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block end_block end_catch end_try begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name get element type end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name string end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name get element type end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name create element end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name get element type end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block end_block end_catch end_try begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name get element type end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block end_block end_catch end_try begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name get element type end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block end_block end_catch end_try begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name get element type end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block end_block end_catch end_try begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name get element type end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block end_block end_catch end_try begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name get element type end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name string buffer end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name get element type end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name create element end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name create element end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get exception end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name null pointer exception end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name create element end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get exception end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name null pointer exception end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment set the get local copy attribute param get local copy the value to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set internal get local copy end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get local copy end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name get local copy end_name end_name begin_operator EQ end_operator begin_name get local copy end_name end_expr end_expr_stmt end_block 
 begin_comment makes this instance in effect a reference to another ant filter reader instance p you must not set another attribute or nest elements inside this element if you make it a reference p param r the reference to which this instance is associated exception build exception if this instance already has been configured end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set refid end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name parameters end_name begin_operator DOT end_operator begin_name is empty end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name class name end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name classpath end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment change this to get the objects from the other reference end_comment begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name o end_name begin_init begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name get referenced object end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name o end_name begin_operator UNP end_operator begin_name ant filter reader end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name ant filter reader end_name end_type begin_name afr end_name begin_init begin_expr begin_operator LPAR end_operator begin_name ant filter reader end_name begin_operator RPAR end_operator begin_name o end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name set class name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name afr end_name begin_operator DOT end_operator begin_name get class name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set classpath end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name afr end_name begin_operator DOT end_operator begin_name get classpath end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name parameter end_name begin_index end_index end_type begin_name p end_name begin_init begin_expr begin_call begin_name begin_name afr end_name begin_operator DOT end_operator begin_name get params end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name p end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name p end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name add param end_name begin_argument_list begin_argument begin_expr begin_name begin_name p end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name get ref id end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment override of base class abstract function creates an appropriately configured view for checkoutlists either the current view or a view from this label param raw the unconfigured code view code return the snapshot code view code appropriately configured end_comment begin_type begin_specifier end_specifier begin_name view end_name end_type begin_name create snapshot view end_name begin_parameter_list begin_param begin_decl begin_type begin_name view end_name end_type begin_name raw end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name label id end_name begin_init begin_expr begin_call begin_name get label id end_name begin_argument_list begin_argument begin_expr begin_name raw end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment if a label has been supplied use it to configure the view end_comment begin_comment otherwise use current view end_comment begin_if begin_condition begin_expr begin_name label id end_name begin_operator GE end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name view end_name begin_argument_list begin_argument begin_expr begin_name raw end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name view configuration end_name begin_operator DOT end_operator begin_name create from label end_name end_name begin_argument_list begin_argument begin_expr begin_name label id end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_comment if a date has been supplied use a view configured to the date end_comment begin_decl_stmt begin_decl begin_type begin_name view end_name end_type begin_name view end_name begin_init begin_expr begin_call begin_name get view configured by date end_name begin_argument_list begin_argument begin_expr begin_name raw end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name view end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_name view end_name end_expr end_return begin_comment otherwise use this view configured as the tip end_comment end_block end_then begin_else begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name view end_name begin_argument_list begin_argument begin_expr begin_name raw end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name view configuration end_name begin_operator DOT end_operator begin_name create tip end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 1 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name extra field utils test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name message logged end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment this method indicates whether this archive is writing to a seekable stream i e to a random access file p for seekable streams you don t need to calculate the crc or uncompressed size for link stored entries before invoking link put next entry return true if seekable since 1 17 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is seekable end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name raf end_name begin_operator UNP end_operator end_expr end_return end_block 
 begin_comment check style visibility modifier on end_comment begin_comment constructor for the filter object param token the token which will be replaced when filtering param value the value which will replace the token when filtering end_comment begin_specifier end_specifier begin_name filter end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name token end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set token end_name begin_argument_list begin_argument begin_expr begin_name token end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the name of the database to create optional param db name name of the database end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set dbname end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name db name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name db name end_name end_name begin_operator EQ end_operator begin_name db name end_name end_expr end_expr_stmt end_block 
 begin_comment the key is in the dictionary but cannot be retrieved end_comment begin_comment this is usually due references that refer to tasks end_comment begin_comment that have not been taskdefed in the current run end_comment begin_comment ignore end_comment begin_comment add a single object into the script context param key the name in the context this object is to stored under param bean the object to be stored in the script context end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add bean end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name key end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name bean end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name is valid end_name begin_init begin_expr begin_call begin_name begin_name key end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_operator UNP end_operator begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name is java identifier start end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name key end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name is valid end_name begin_operator UNP end_operator begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name key end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name is valid end_name begin_operator EQ end_operator begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name is java identifier part end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name key end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_if begin_condition begin_expr begin_name is valid end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name beans end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument begin_argument begin_expr begin_name bean end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment get the value of source return value of source end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get source end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name source end_name begin_operator UNP end_operator begin_operator QM end_operator begin_name source end_name begin_operator DP end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name build javac source end_name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set four end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s 1 end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name s 2 end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment set the parameter value note that only string values are supported no resolution of file paths is performed param value the parameter value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set value end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name value end_name end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block 
 begin_comment generate a string readable version of this entry return string representation of this constant pool entry end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator PLUS end_operator begin_name class name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name index end_name begin_operator PLUS end_operator end_expr end_return end_block 
 begin_comment sets the named attribute in the given element which is part of the given project param p the project containing the element this is used when files need to be resolved must not be code null code param element the element to set the attribute in must not be code null code param attribute name the name of the attribute to set must not be code null code param value the value to set the attribute to this may be interpreted or converted to the necessary type if the setter method doesn t just take a string must not be code null code exception build exception if the introspected class doesn t support the given attribute or if the setting method fails end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set attribute end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name element end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name attribute name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name attribute setter end_name end_type begin_name as end_name begin_init begin_expr begin_operator LPAR end_operator begin_name attribute setter end_name begin_operator RPAR end_operator begin_call begin_name begin_name attribute setters end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attribute name end_name begin_operator DOT end_operator begin_name to lower case end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name as end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name element end_name begin_operator UNP end_operator begin_name dynamic attribute ns end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name dynamic attribute ns end_name end_type begin_name dc end_name begin_init begin_expr begin_operator LPAR end_operator begin_name dynamic attribute ns end_name begin_operator RPAR end_operator begin_name element end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name uri plus prefix end_name begin_init begin_expr begin_call begin_name begin_name project helper end_name begin_operator DOT end_operator begin_name extract uri from component name end_name end_name begin_argument_list begin_argument begin_expr begin_name attribute name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name uri end_name begin_init begin_expr begin_call begin_name begin_name project helper end_name begin_operator DOT end_operator begin_name extract uri from component name end_name end_name begin_argument_list begin_argument begin_expr begin_name uri plus prefix end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name local name end_name begin_init begin_expr begin_call begin_name begin_name project helper end_name begin_operator DOT end_operator begin_name extract name from component name end_name end_name begin_argument_list begin_argument begin_expr begin_name attribute name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name q name end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name uri end_name end_expr end_argument end_argument_list end_call begin_operator QM end_operator begin_name local name end_name begin_operator DP end_operator begin_operator LPAR end_operator begin_name uri end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name local name end_name begin_operator RPAR end_operator begin_operator RPAR end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dc end_name begin_operator DOT end_operator begin_name set dynamic attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name uri end_name end_expr end_argument begin_argument begin_expr begin_name local name end_name end_expr end_argument begin_argument begin_expr begin_name q name end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_name element end_name begin_operator UNP end_operator begin_name dynamic attribute end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name dynamic attribute end_name end_type begin_name dc end_name begin_init begin_expr begin_operator LPAR end_operator begin_name dynamic attribute end_name begin_operator RPAR end_operator begin_name element end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dc end_name begin_operator DOT end_operator begin_name set dynamic attribute end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attribute name end_name begin_operator DOT end_operator begin_name to lower case end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name attribute name end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_return end_return begin_comment ignore attribute from unknown uri s end_comment end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_call begin_name get element name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name element end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name attribute name end_name begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name unsupported attribute exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name attribute name end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_else end_if end_block end_then end_if begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name as end_name begin_operator DOT end_operator begin_name set end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name element end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal access exception end_name end_type begin_name ie end_name end_decl end_param end_parameter_list begin_block begin_comment impossible as get methods should only return public methods end_comment begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name ie end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name invocation target exception end_name end_type begin_name ite end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name begin_init begin_expr begin_call begin_name begin_name ite end_name begin_operator DOT end_operator begin_name get target exception end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name t end_name begin_operator UNP end_operator begin_name build exception end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator LPAR end_operator begin_name build exception end_name begin_operator RPAR end_operator begin_name t end_name end_expr end_throw end_block end_then end_if begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment sets the value of create folders param arg create folders value to assign to this create folders end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set create folders end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name arg create folders end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name create folders end_name end_name begin_operator EQ end_operator begin_name arg create folders end_name end_expr end_expr_stmt end_block 
 begin_comment set whether or not symbolic links should be followed param follow symlinks whether or not symbolic links should be followed end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set follow symlinks end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name follow symlinks end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name check attributes allowed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name follow symlinks end_name end_name begin_operator EQ end_operator begin_name follow symlinks end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name ds end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment the script text param text a component of the script text to be added end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add text end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name text end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name add text end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor for my copy end_comment begin_specifier end_specifier begin_name my copy end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment convenience method to copy a file from a source to a destination specifying if token filtering must be used param source file the file to copy from must not be code null code param dest file the file to copy to must not be code null code param filters the collection of filters to apply to this copy throws io exception if the copying fails end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name copy file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name source file end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name dest file end_name end_decl end_param begin_param begin_decl begin_type begin_name filter set collection end_name end_type begin_name filters end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name copy file end_name begin_argument_list begin_argument begin_expr begin_name source file end_name end_expr end_argument begin_argument begin_expr begin_name dest file end_name end_expr end_argument begin_argument begin_expr begin_name filters end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the new priority in the range 1 10 param new priority the new priority value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set new priority end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name new priority end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name begin_name new priority end_name begin_argument_list begin_argument begin_name begin_name thread end_name begin_operator DOT end_operator begin_name min priority end_name end_name begin_operator UNP end_operator begin_name new priority end_name end_argument end_argument_list end_name begin_name begin_name thread end_name begin_operator DOT end_operator begin_name max priority end_name end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name new priority end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name integer end_name begin_argument_list begin_argument begin_expr begin_name new priority end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment overrides the base version param r the reference to set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set refid end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name name end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name exists end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name lastmodified end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name directory end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name size end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets the user string uusername return an empty string if user is not set end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get user end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name user end_name begin_operator UNP end_operator begin_operator QM end_operator begin_name flag user end_name begin_operator PLUS end_operator begin_name user end_name begin_operator DP end_operator end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test do not inherit basedir end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name dir 1 end_name begin_init begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name dir 2 end_name begin_init begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name basedir end_name begin_init begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name test base dirs end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr begin_call begin_name begin_name dir 1 end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr begin_operator UNP end_operator begin_expr begin_call begin_name begin_name dir 2 end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment initialize the checksum interface end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name init checksum end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name checksum end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals ignore case end_name begin_argument_list begin_argument begin_expr begin_name algorithm end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name checksum end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name crc 32 end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals ignore case end_name begin_argument_list begin_argument begin_expr begin_name algorithm end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name checksum end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name adler 32 end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name no such algorithm exception end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the code secpropag code flag param a boolean code true code if the flag must be set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set secpropag end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name a boolean end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name secpropag end_name begin_operator EQ end_operator begin_name a boolean end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test paragraph character end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name test paragraph character end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name assertion failed error end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block end_catch end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment add a trim filter param filter a code token filter trim code value since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add trim end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name token filter end_name begin_operator DOT end_operator begin_name trim end_name end_name end_type begin_name filter end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name filter readers end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name filter end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets the auto response string this can be y i y or n i n return the default value i if autoresponse is not set end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get autoresponse end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name auto response end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_name flag autoresponse def end_name end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name auto response end_name begin_operator DOT end_operator begin_name equals ignore case end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name flag autoresponse yes end_name end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name auto response end_name begin_operator DOT end_operator begin_name equals ignore case end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name flag autoresponse no end_name end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr begin_name flag autoresponse def end_name end_expr end_return end_block end_else end_if end_else end_if end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name map end_name end_type begin_name get expected attributes end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name map end_name end_type begin_name attr map end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name attr map end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name string end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name attr map end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name integer end_name begin_operator DOT end_operator begin_name type end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name attr map end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name integer end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name attr map end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name attr map end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name type end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name attr map end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name attr map end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name class end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name attr map end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name string buffer end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name attr map end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name character end_name begin_operator DOT end_operator begin_name type end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name attr map end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name character end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name attr map end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name byte end_name begin_operator DOT end_operator begin_name type end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name attr map end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name short end_name begin_operator DOT end_operator begin_name type end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name attr map end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name double end_name begin_operator DOT end_operator begin_name type end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment j unit 3 7 adds a get name method to test case so we now have a name attribute in introspection helper test if we run under j unit 3 7 but not in earlier versions simply add it here and remove it after the tests end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name attr map end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name string end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name attr map end_name end_expr end_return end_block 
 begin_comment returns the ant version information if available once the information has been loaded once it s cached and returned from the cache on future calls return the ant version information as a string always non code null code exception build exception if the version information is unavailable end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get ant version end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name ant version end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name properties end_name end_type begin_name props end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name properties end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name in end_name begin_init begin_expr begin_call begin_name begin_name main end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name get resource as stream end_name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name load end_name end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name msg end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name ant version end_name begin_operator EQ end_operator begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name ioe end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name null pointer exception end_name end_type begin_name npe end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_then end_if begin_return begin_expr begin_name ant version end_name end_expr end_return end_block 
 begin_comment set the value of the refid attribute p subclasses may need to check whether any other attributes have been set as well or child elements have been created and thus override this method if they do the must call code super set refid code p param ref the reference to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set refid end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name reference end_name end_type begin_name ref end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name ref end_name end_name begin_operator EQ end_operator begin_name ref end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name checked end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment tests whether or not a string matches against a pattern the pattern may contain two special characters br means zero or more characters br means one and only one character param pattern the pattern to match against must not be code null code param str the string which must be matched against the pattern must not be code null code param is case sensitive whether or not matching should be performed case sensitively return code true code if the string matches against the pattern or code false code otherwise end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name match end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name pattern end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name str end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name is case sensitive end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name char end_name begin_index end_index end_type begin_name pat arr end_name begin_init begin_expr begin_call begin_name begin_name pattern end_name begin_operator DOT end_operator begin_name to char array end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name char end_name begin_index end_index end_type begin_name str arr end_name begin_init begin_expr begin_call begin_name begin_name str end_name begin_operator DOT end_operator begin_name to char array end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name pat idx start end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name pat idx end end_name begin_init begin_expr begin_name begin_name pat arr end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name str idx start end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name str idx end end_name begin_init begin_expr begin_name begin_name str arr end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name ch end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name contains star end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name pat arr end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name begin_name pat arr end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name contains star end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_break end_break end_block end_then end_if end_block end_for begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name contains star end_name end_expr end_condition begin_then begin_block begin_comment no s so we make a shortcut end_comment begin_if begin_condition begin_expr begin_name pat idx end end_name begin_operator UNP end_operator begin_name str idx end end_name end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return begin_comment pattern and string do not have the same size end_comment end_block end_then end_if begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LE end_operator begin_name pat idx end end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name ch end_name begin_operator EQ end_operator begin_name begin_name pat arr end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name ch end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name is case sensitive end_name begin_operator UNP end_operator begin_name ch end_name begin_operator UNP end_operator begin_name begin_name str arr end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return begin_comment character mismatch end_comment end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name is case sensitive end_name begin_operator UNP end_operator begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name to upper case end_name end_name begin_argument_list begin_argument begin_expr begin_name ch end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name to upper case end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name str arr end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return begin_comment character mismatch end_comment end_block end_then end_if end_block end_then end_if end_block end_for begin_return begin_expr end_expr end_return begin_comment string matches against pattern end_comment end_block end_then end_if begin_if begin_condition begin_expr begin_name pat idx end end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return begin_comment pattern contains only which matches anything end_comment end_block end_then end_if begin_comment process characters before first star end_comment begin_while begin_condition begin_expr begin_operator LPAR end_operator begin_name ch end_name begin_operator EQ end_operator begin_name begin_name pat arr end_name begin_index begin_expr begin_name pat idx start end_name end_expr end_index end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_name str idx start end_name begin_operator LE end_operator begin_name str idx end end_name end_expr end_condition begin_block begin_if begin_condition begin_expr begin_name ch end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name is case sensitive end_name begin_operator UNP end_operator begin_name ch end_name begin_operator UNP end_operator begin_name begin_name str arr end_name begin_index begin_expr begin_name str idx start end_name end_expr end_index end_name end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return begin_comment character mismatch end_comment end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name is case sensitive end_name begin_operator UNP end_operator begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name to upper case end_name end_name begin_argument_list begin_argument begin_expr begin_name ch end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name to upper case end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name str arr end_name begin_index begin_expr begin_name str idx start end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return begin_comment character mismatch end_comment end_block end_then end_if end_block end_then end_if begin_expr_stmt begin_expr begin_name pat idx start end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name str idx start end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_while begin_if begin_condition begin_expr begin_name str idx start end_name begin_operator GT end_operator begin_name str idx end end_name end_expr end_condition begin_then begin_block begin_comment all characters in the string are used check if only s are end_comment begin_comment left in the pattern if so we succeeded otherwise failure end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr begin_name pat idx start end_name end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LE end_operator begin_name pat idx end end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name begin_name pat arr end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_for begin_return begin_expr end_expr end_return end_block end_then end_if begin_comment process characters after last star end_comment begin_while begin_condition begin_expr begin_operator LPAR end_operator begin_name ch end_name begin_operator EQ end_operator begin_name begin_name pat arr end_name begin_index begin_expr begin_name pat idx end end_name end_expr end_index end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_name str idx start end_name begin_operator LE end_operator begin_name str idx end end_name end_expr end_condition begin_block begin_if begin_condition begin_expr begin_name ch end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name is case sensitive end_name begin_operator UNP end_operator begin_name ch end_name begin_operator UNP end_operator begin_name begin_name str arr end_name begin_index begin_expr begin_name str idx end end_name end_expr end_index end_name end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return begin_comment character mismatch end_comment end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name is case sensitive end_name begin_operator UNP end_operator begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name to upper case end_name end_name begin_argument_list begin_argument begin_expr begin_name ch end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name to upper case end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name str arr end_name begin_index begin_expr begin_name str idx end end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return begin_comment character mismatch end_comment end_block end_then end_if end_block end_then end_if begin_expr_stmt begin_expr begin_name pat idx end end_name begin_operator MMINUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name str idx end end_name begin_operator MMINUS end_operator end_expr end_expr_stmt end_block end_while begin_if begin_condition begin_expr begin_name str idx start end_name begin_operator GT end_operator begin_name str idx end end_name end_expr end_condition begin_then begin_block begin_comment all characters in the string are used check if only s are end_comment begin_comment left in the pattern if so we succeeded otherwise failure end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr begin_name pat idx start end_name end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LE end_operator begin_name pat idx end end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name begin_name pat arr end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_for begin_return begin_expr end_expr end_return end_block end_then end_if begin_comment process pattern between stars pad idx start and pat idx end point end_comment begin_comment always to a end_comment begin_while begin_condition begin_expr begin_name pat idx start end_name begin_operator UNP end_operator begin_name pat idx end end_name begin_operator UNP end_operator begin_name str idx start end_name begin_operator LE end_operator begin_name str idx end end_name end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name pat idx tmp end_name begin_init begin_expr begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr begin_name pat idx start end_name begin_operator PLUS end_operator end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LE end_operator begin_name pat idx end end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name begin_name pat arr end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name pat idx tmp end_name begin_operator EQ end_operator begin_name i end_name end_expr end_expr_stmt begin_break end_break end_block end_then end_if end_block end_for begin_if begin_condition begin_expr begin_name pat idx tmp end_name begin_operator EQT end_operator begin_name pat idx start end_name begin_operator PLUS end_operator end_expr end_condition begin_then begin_block begin_comment two stars next to each other skip the first one end_comment begin_expr_stmt begin_expr begin_name pat idx start end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_continue end_continue end_block end_then end_if begin_comment find the pattern between pad idx start pad idx tmp in str between end_comment begin_comment str idx start str idx end end_comment begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name pat length end_name begin_init begin_expr begin_operator LPAR end_operator begin_name pat idx tmp end_name begin_operator MINUS end_operator begin_name pat idx start end_name begin_operator MINUS end_operator begin_operator RPAR end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name str length end_name begin_init begin_expr begin_operator LPAR end_operator begin_name str idx end end_name begin_operator MINUS end_operator begin_name str idx start end_name begin_operator PLUS end_operator begin_operator RPAR end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name found idx end_name begin_init begin_expr begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_label begin_name str loop end_name end_label begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LE end_operator begin_name str length end_name begin_operator MINUS end_operator begin_name pat length end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name j end_name begin_operator LT end_operator begin_name pat length end_name end_expr end_condition begin_incr begin_expr begin_name j end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name ch end_name begin_operator EQ end_operator begin_name begin_name pat arr end_name begin_index begin_expr begin_name pat idx start end_name begin_operator PLUS end_operator begin_name j end_name begin_operator PLUS end_operator end_expr end_index end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name ch end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name is case sensitive end_name begin_operator UNP end_operator begin_name ch end_name begin_operator UNP end_operator begin_name begin_name str arr end_name begin_index begin_expr begin_name str idx start end_name begin_operator PLUS end_operator begin_name i end_name begin_operator PLUS end_operator begin_name j end_name end_expr end_index end_name end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name is case sensitive end_name begin_operator UNP end_operator begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name to upper case end_name end_name begin_argument_list begin_argument begin_expr begin_name ch end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name to upper case end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name str arr end_name begin_index begin_expr begin_name str idx start end_name begin_operator PLUS end_operator begin_name i end_name begin_operator PLUS end_operator begin_name j end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if end_block end_then end_if end_block end_for begin_expr_stmt begin_expr begin_name found idx end_name begin_operator EQ end_operator begin_name str idx start end_name begin_operator PLUS end_operator begin_name i end_name end_expr end_expr_stmt begin_break end_break end_block end_for begin_if begin_condition begin_expr begin_name found idx end_name begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name pat idx start end_name begin_operator EQ end_operator begin_name pat idx tmp end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name str idx start end_name begin_operator EQ end_operator begin_name found idx end_name begin_operator PLUS end_operator begin_name pat length end_name end_expr end_expr_stmt end_block end_while begin_comment all characters in the string are used check if only s are left end_comment begin_comment in the pattern if so we succeeded otherwise failure end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr begin_name pat idx start end_name end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LE end_operator begin_name pat idx end end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name begin_name pat arr end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_for begin_return begin_expr end_expr end_return end_block 
 begin_comment send a quot message logged quot task level event to the build listeners for this project param task the task generating the event must not be code null code param message the message to send should not be code null code param throwable the exception that caused this message may be code null code param priority the priority of the message since 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name fire message logged end_name begin_parameter_list begin_param begin_decl begin_type begin_name task end_name end_type begin_name task end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name message end_name end_decl end_param begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name throwable end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name priority end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name build event end_name end_type begin_name event end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name build event end_name begin_argument_list begin_argument begin_expr begin_name task end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name set exception end_name end_name begin_argument_list begin_argument begin_expr begin_name throwable end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fire message logged event end_name begin_argument_list begin_argument begin_expr begin_name event end_name end_expr end_argument begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_name priority end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the name of the property to set required param p the name of the property since ant 1 4 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set property end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name property end_name begin_operator EQ end_operator begin_name p end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name delete propertiesfile end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name is configured end_name end_expr end_condition begin_then begin_expr_stmt begin_expr begin_call begin_name set up end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_then end_if begin_expr_stmt begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name propfile end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name delete end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sends all files specified by the configured filesets to the remote server param ftp the ftp client instance used to perform ftp actions throws io exception if there is a problem reading a file throws build exception if there is a problem in the configuration end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name transfer files end_name begin_parameter_list begin_param begin_decl begin_type begin_name ftp client end_name end_type begin_name ftp end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_name transferred end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name skipped end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_block begin_comment get files from filesets end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file set end_name end_type begin_name fs end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file set end_name begin_operator RPAR end_operator begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name fs end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name transfer files end_name begin_argument_list begin_argument begin_expr begin_name ftp end_name end_expr end_argument begin_argument begin_expr begin_name fs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name transferred end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name action target strs end_name begin_index begin_expr begin_name action end_name end_expr end_index end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name completed action strs end_name begin_index begin_expr begin_name action end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name skipped end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name skipped end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name action target strs end_name begin_index begin_expr begin_name action end_name end_expr end_index end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name completed action strs end_name begin_index begin_expr begin_name action end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment add a resource selector param s the resource selector to add end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name add end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource selector end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name s end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fail fast end_name begin_operator DOT end_operator begin_name invalidate end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment delete a symlink without deleting the associated resource p this is a utility method that removes a unix symlink without removing the resource that the symlink points to if it is accidentally invoked on a real file the real file will not be harmed but an exception will be thrown when the deletion is attempted this method works by getting the canonical path of the link using the canonical path to rename the resource breaking the link and then deleting the link the resource is then returned to its original name inside a finally block to ensure that the resource is unharmed even in the event of an exception param linkfil a code file code object of the symlink to delete throws file not found exception when the path results in a code file code that doesn t exist throws io exception if calls to code file rename code code file delete code or code file get canonical path code fail end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name delete symlink end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name linkfil end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument begin_argument begin_expr begin_name file not found exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name linkfil end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name file not found exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name linkfil end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment find the resource of the existing link end_comment begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name canfil end_name begin_init begin_expr begin_call begin_name begin_name linkfil end_name begin_operator DOT end_operator begin_name get canonical file end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment rename the resource thus breaking the link end_comment begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name temp end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name create temp file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name canfil end_name begin_operator DOT end_operator begin_name get parent file end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name rename end_name end_name begin_argument_list begin_argument begin_expr begin_name canfil end_name end_expr end_argument begin_argument begin_expr begin_name temp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name io exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name linkfil end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_comment delete the now broken link end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name linkfil end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name io exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name linkfil end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block begin_finally begin_block begin_comment return the resource to its original name end_comment begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name rename end_name end_name begin_argument_list begin_argument begin_expr begin_name temp end_name end_expr end_argument begin_argument begin_expr begin_name canfil end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name io exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name temp end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name canfil end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_finally end_try end_block 
 begin_comment computes the loader id based on the configuration of the component return a loader identifier end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get class load id end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name loader id end_name end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath id end_name end_name begin_operator UNP end_operator begin_operator QM end_operator begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name refid classpath loader prefix end_name end_name begin_operator PLUS end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath id end_name end_name begin_operator DP end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name loader id end_name end_name end_expr end_return end_block 
 begin_comment find the handler and instantiate it if it does not exist yet return handler for output and error streams end_comment begin_type begin_specifier end_specifier begin_name execute stream handler end_name end_type begin_name get execute stream handler end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name execute stream handler end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set execute stream handler end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name pump stream handler end_name begin_argument_list begin_argument begin_expr begin_call begin_name get output stream end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get error stream end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name execute stream handler end_name end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test not selector end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the name of the class defining the method return the name of the class defining this method end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get method class name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name method class name end_name end_expr end_return end_block 
 begin_comment get the commentfile command param cmd containing the command line string with or without the commentfile flag and file appended end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name get comment file command end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name get comment file end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes this breaks clearcase end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag commentfile end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get comment file end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment name of the main class for weblogic optional param c the name of the class end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set weblogic main class end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name c end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name weblogic main class end_name begin_operator EQ end_operator begin_name c end_name end_expr end_expr_stmt end_block 
 begin_comment test that inner class dependencies trigger deletion of the outer class end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test inner end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get result files end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name size end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment append line separator to files that do not end with a line separator default false param fix last line if true make sure each input file has new line on the concatenated stream since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set fix last line end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name fix last line end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name fix last line end_name end_name begin_operator EQ end_operator begin_name fix last line end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test redirector 17 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment turns on or off tracing and directs the resultant trace output valid values are trace trace 1 trace 2 and notrace trace and trace 2 param trace the value to set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set trace end_name begin_parameter_list begin_param begin_decl begin_type begin_name trace attr end_name end_type begin_name trace end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name trace end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name trace end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment closes the file throws io exception when the file cannot be closed end_comment begin_type begin_name void end_name end_type begin_name close end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets the version return returns a string end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get version end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name version end_name end_expr end_return end_block 
 begin_comment get the parameter name return the parameter name exception build exception if the name is not set end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get name end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_return begin_expr begin_name name end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test verify checksumdir end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment create a new regular expression instance return the matcher throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name regexp matcher end_name end_type begin_name new regexp matcher end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_return begin_expr begin_call begin_name new regexp matcher end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment indicate if this element supports a nested element of the given name param parent uri the uri of the parent param element name the name of the nested element being checked return true if the given nested element is supported end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name supports nested element end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name parent uri end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name element name end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name parent uri end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name project helper end_name begin_operator DOT end_operator begin_name ant core uri end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name parent uri end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name uri end_name begin_init begin_expr begin_call begin_name begin_name project helper end_name begin_operator DOT end_operator begin_name extract uri from component name end_name end_name begin_argument_list begin_argument begin_expr begin_name element name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name uri end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name project helper end_name begin_operator DOT end_operator begin_name ant core uri end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name uri end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_call begin_name begin_name project helper end_name begin_operator DOT end_operator begin_name extract name from component name end_name end_name begin_argument_list begin_argument begin_expr begin_name element name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name nested creators end_name begin_operator DOT end_operator begin_name contains key end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name to lower case end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name uri end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name parent uri end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name uri end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_call begin_name is dynamic end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name add type methods end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_return end_block 
 begin_comment the source safe password param password the new password value end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set password end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name password end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name sos password end_name begin_operator EQ end_operator begin_name password end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test redirector 8 end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get file string end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name trim end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name trim end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert null end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get file string end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert property equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name move to front code and send end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name bs w end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name orig ptr end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name generate mtf values end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name send mtf values end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment convenience method to copy a file from a source to a destination specifying if token filtering must be used and if source files may overwrite newer destination files param source file name of file to copy from must not be code null code param dest file name of file to copy to must not be code null code param filters the collection of filters to apply to this copy param overwrite whether or not the destination file should be overwritten if it already exists throws io exception if the copying fails end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name copy file end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name source file end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name dest file end_name end_decl end_param begin_param begin_decl begin_type begin_name filter set collection end_name end_type begin_name filters end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name overwrite end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name copy file end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name source file end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name dest file end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name filters end_name end_expr end_argument begin_argument begin_expr begin_name overwrite end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment creates a new cvs tag entry param filename the filename to add param revision the revision end_comment begin_specifier end_specifier begin_name cvs tag entry end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name filename end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name revision end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr begin_name filename end_name end_expr end_argument begin_argument begin_expr begin_name revision end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment implements base class abstract function to define tests for any preconditons required by the task exception build exception thrown if both root local folder and view root local folder are defined end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test preconditions end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test dictionary equals end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name collection utils end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name collection utils end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name collection utils end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name properties end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name hashtable end_name end_type begin_name h 1 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name properties end_name end_type begin_name p 2 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name properties end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name h 1 end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p 2 end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name collection utils end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name h 1 end_name end_expr end_argument begin_argument begin_expr begin_name p 2 end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name collection utils end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name p 2 end_name end_expr end_argument begin_argument begin_expr begin_name h 1 end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name h 1 end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name collection utils end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name h 1 end_name end_expr end_argument begin_argument begin_expr begin_name p 2 end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name collection utils end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name p 2 end_name end_expr end_argument begin_argument begin_expr begin_name h 1 end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p 2 end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name collection utils end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name h 1 end_name end_expr end_argument begin_argument begin_expr begin_name p 2 end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name collection utils end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name p 2 end_name end_expr end_argument begin_argument begin_expr begin_name h 1 end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p 2 end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name collection utils end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name h 1 end_name end_expr end_argument begin_argument begin_expr begin_name p 2 end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name collection utils end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name p 2 end_name end_expr end_argument begin_argument begin_expr begin_name h 1 end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name h 1 end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name collection utils end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name h 1 end_name end_expr end_argument begin_argument begin_expr begin_name p 2 end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name collection utils end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name p 2 end_name end_expr end_argument begin_argument begin_expr begin_name h 1 end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name h 1 end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p 2 end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name collection utils end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name h 1 end_name end_expr end_argument begin_argument begin_expr begin_name p 2 end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name collection utils end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name p 2 end_name end_expr end_argument begin_argument begin_expr begin_name h 1 end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p 2 end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name h 1 end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name collection utils end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name h 1 end_name end_expr end_argument begin_argument begin_expr begin_name p 2 end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name collection utils end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name p 2 end_name end_expr end_argument begin_argument begin_expr begin_name h 1 end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name h 1 end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p 2 end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name collection utils end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name h 1 end_name end_expr end_argument begin_argument begin_expr begin_name p 2 end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name collection utils end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name p 2 end_name end_expr end_argument begin_argument begin_expr begin_name h 1 end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the name of the method return the name of the method end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get method name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name method name end_name end_expr end_return end_block 
 begin_comment process input into the ant task param buffer the buffer into which data is to be read param offset the offset into the buffer at which data is stored param length the amount of data to read return the number of bytes read exception io exception if the data cannot be read see task handle input byte int int since ant 1 6 2 end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name handle input end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name buffer end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name offset end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name length end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name ant end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name begin_name ant end_name begin_operator DOT end_operator begin_name handle input end_name end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name length end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name handle input end_name end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name length end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_else end_if end_block 
 begin_comment constructor for dir set with dir set to shallowly clone param dirset the dirset to clone end_comment begin_specifier end_specifier begin_name dir set end_name begin_parameter_list begin_param begin_decl begin_type begin_name dir set end_name end_type begin_name dirset end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name dirset end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment clear the curretn set of collected dependencies end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name clear dependencies end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name dependencies end_name begin_operator DOT end_operator begin_name clear end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name echo xml test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name testsize end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor for dummy instances see base filter reader base filter reader end_comment begin_specifier end_specifier begin_name base param filter reader end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return the names of the files which matched at least one of the include patterns and none of the exclude patterns the names are relative to the base directory return the names of the files which matched at least one of the include patterns and none of the exclude patterns end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get included files end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name files included end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name illegal state exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name files end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_call begin_name begin_name files included end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name files included end_name begin_operator DOT end_operator begin_name copy into end_name end_name begin_argument_list begin_argument begin_expr begin_name files end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name arrays end_name begin_operator DOT end_operator begin_name sort end_name end_name begin_argument_list begin_argument begin_expr begin_name files end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name files end_name end_expr end_return end_block 
 begin_comment param is the input stream exception java io io exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set process error stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name input stream end_name end_type begin_name is end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name buffered reader end_name end_type begin_name reader end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name buffered reader end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name input stream reader end_name begin_argument_list begin_argument begin_expr begin_name is end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name s end_name begin_init begin_expr begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name s end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name s end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment end of if end_comment end_block 
 begin_comment clear the list of files to be compiled and copied end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name reset file lists end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name compile list end_name begin_operator DOT end_operator begin_name remove all elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name parse standard output end_name begin_parameter_list begin_param begin_decl begin_type begin_name buffered reader end_name end_type begin_name reader end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name line end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name lower end_name end_decl end_decl_stmt begin_comment we assume that every output jikes does stands for an error warning end_comment begin_comment xxx end_comment begin_comment is this correct end_comment begin_comment todo end_comment begin_comment a warning line that shows code which contains a variable end_comment begin_comment error will cause some trouble the parser should definitely end_comment begin_comment be much better end_comment begin_while begin_condition begin_expr begin_operator LPAR end_operator begin_name line end_name begin_operator EQ end_operator begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name lower end_name begin_operator EQ end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name to lower case end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name lower end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set error end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name lower end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set error end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment if we don t know the type of the line end_comment begin_comment and we are in emacs mode it will be end_comment begin_comment an error because in this mode jikes won t end_comment begin_comment always print error but sometimes other end_comment begin_comment keywords like syntax we should look for end_comment begin_comment all those keywords end_comment begin_if begin_condition begin_expr begin_name emacs mode end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set error end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if end_else end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block 
 begin_comment scans the parameters list for the lines parameter and uses it to set the number of lines to be returned in the filtered stream also scan for skip parameter end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name initialize end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_comment get parameters end_comment begin_decl_stmt begin_decl begin_type begin_name parameter end_name begin_index end_index end_type begin_name params end_name begin_init begin_expr begin_call begin_name get parameters end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name params end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name params end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name params end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set prepend end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name begin_name params end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_continue end_continue end_block end_then end_if begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name params end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set append end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name begin_name params end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_continue end_continue end_block end_then end_if end_block end_for end_block end_then end_if begin_if begin_condition begin_expr begin_name prepend end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name prepend end_name begin_operator DOT end_operator begin_name is absolute end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name prepend end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name prepend end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name prepend reader end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name buffered reader end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file reader end_name begin_argument_list begin_argument begin_expr begin_name prepend end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name append end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name append end_name begin_operator DOT end_operator begin_name is absolute end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name append end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name append end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name append reader end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name buffered reader end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file reader end_name begin_argument_list begin_argument begin_expr begin_name append end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr begin_name taskdefs dir end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment make this mapper instance a reference to another mapper p you must not set any other attribute if you make it a reference p param r the reference to another mapper throws build exception if other attributes are set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set refid end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name type end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name from end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name to end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment if true the task will fail if an error occurs writing the properties file otherwise errors are just logged param failonerror tt true tt if io exceptions are reported as build exceptions or tt false tt if io exceptions are ignored end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set fail on error end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name failonerror end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name failonerror end_name end_name begin_operator EQ end_operator begin_name failonerror end_name end_expr end_expr_stmt end_block 
 begin_comment return the names of the directories which matched at least one of the include patterns and at least one of the exclude patterns the names are relative to the base directory this involves performing a slow scan if one has not already been completed return the names of the directories which matched at least one of the include patterns and at least one of the exclude patterns see slow scan end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get excluded directories end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name slow scan end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name directories end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_call begin_name begin_name dirs excluded end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dirs excluded end_name begin_operator DOT end_operator begin_name copy into end_name end_name begin_argument_list begin_argument begin_expr begin_name directories end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name directories end_name end_expr end_return end_block 
 begin_comment adds an extension that this library requires param extension adapter an extension that this library requires end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add extension end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name extension adapter end_name end_type begin_name extension adapter end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name extensions end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name extension adapter end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 6 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment is this entry a directory return true if this entry is a directory since 1 1 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is directory end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name dir flag end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name is link end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment indicates whether there are any selectors here return whether any selectors are in this container end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name has selectors end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name fileset end_name begin_operator DOT end_operator begin_name has selectors end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment the whole testsuite started param suite the test suite throws build exception if unable to write the output end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name start test suite end_name begin_parameter_list begin_param begin_decl begin_type begin_name j unit test end_name end_type begin_name suite end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name out end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return begin_comment quick return no output do nothing end_comment end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name sb end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name suite end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get bytes end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name ex end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment constructor for star team checkin end_comment begin_specifier end_specifier begin_name star team checkin end_name begin_parameter_list end_parameter_list begin_block begin_comment we want this to have a false default unlike for checkin end_comment begin_expr_stmt begin_expr begin_call begin_name set recursive end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the exists attribute param exists if true this resource exists end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set exists end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name exists end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name check attributes allowed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_operator EQ end_operator begin_name exists end_name begin_operator QM end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name true end_name end_name begin_operator DP end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name false end_name end_name end_expr end_expr_stmt end_block 
 begin_comment show a graphical progress bar in a window during the process off by default param progress bar a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set progress bar end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name progress bar end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name progress bar end_name end_name begin_operator EQ end_operator begin_name progress bar end_name end_expr end_expr_stmt end_block 
 begin_comment specifies the subsystem param v value to assign to sub system end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set sub system end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name v end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name sub system end_name end_name begin_operator EQ end_operator begin_name v end_name end_expr end_expr_stmt end_block 
 begin_comment replace occurrences of str 1 in string buffer str with str 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name string replace end_name begin_parameter_list begin_param begin_decl begin_type begin_name string buffer end_name end_type begin_name str end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name str 1 end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name str 2 end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name found end_name begin_init begin_expr begin_call begin_name begin_name str end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr begin_name str 1 end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_name found end_name begin_operator GE end_operator end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name str end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr begin_name found end_name end_expr end_argument begin_argument begin_expr begin_name found end_name begin_operator PLUS end_operator begin_call begin_name begin_name str 1 end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name str 2 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name found end_name begin_operator EQ end_operator begin_call begin_name begin_name str end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr begin_name str 1 end_name end_expr end_argument begin_argument begin_expr begin_name found end_name begin_operator PLUS end_operator begin_call begin_name begin_name str 2 end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block 
 begin_comment this is a singleton can t create instances end_comment begin_specifier end_specifier begin_name compiler adapter factory end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment get the value of forced return value of forced end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is forced end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name forced end_name end_name end_expr end_return end_block 
 begin_comment default constructor end_comment begin_specifier end_specifier begin_name file resource end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment sax parser call back method invoked whenever characters are located within an element current attribute modified by start element and end element tells us whether we are in an interesting element one of the up to four classes of an ejb if so then converts the classname from the format org apache tools ant parser to the convention for storing such a class org apache tools ant parser class this is then resolved into a file object under the srcdir which is stored in a hashtable param ch a character array containing all the characters in the element and maybe others that should be ignored param start an integer marking the position in the char array to start reading from param length an integer representing an offset into the char array where the current data terminates throws sax exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name characters end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name char end_name begin_index end_index end_name end_type begin_name ch end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name start end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name length end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name sax exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_name current text end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_name ch end_name end_expr end_argument begin_argument begin_expr begin_name start end_name end_expr end_argument begin_argument begin_expr begin_name length end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment base directory to look in for files to cab param base dir base directory for files to cab end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set basedir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name base dir end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name base dir end_name end_name begin_operator EQ end_operator begin_name base dir end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test simple end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment whether the generated java file should be replaced when compiling valid true values are on or true anything else sets the flag to false the default value is false param replace a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set replace end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name replace end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_operator EQ end_operator begin_name replace end_name end_expr end_expr_stmt end_block 
 begin_comment gives the count of the number of selectors in this container return the number of selectors in this container as an code int code end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name int end_name end_type begin_name selector count end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_call begin_name get ref end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name selector count end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_call begin_name begin_name selectors end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment set the file encoding to use on the sql files read in param encoding the encoding to use on the files end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set encoding end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name encoding end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name encoding end_name end_name begin_operator EQ end_operator begin_name encoding end_name end_expr end_expr_stmt end_block 
 begin_comment name the class to look for param classname the name of the class to look for ant attribute group oneof end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set class end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name classname end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classname end_name end_name begin_operator EQ end_operator begin_name classname end_name end_expr end_expr_stmt end_block 
 begin_comment set a classname of a class which must be available to set the given property param classname the name of the class required end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classname end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name classname end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classname end_name end_name begin_operator EQ end_operator begin_name classname end_name end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment add a nested file name mapper param file name mapper the mapper to add since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add end_name begin_parameter_list begin_param begin_decl begin_type begin_name file name mapper end_name end_type begin_name file name mapper end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name create mapper end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name add end_name begin_argument_list begin_argument begin_expr begin_name file name mapper end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment walks through all recorded entries and adds the data available from the local file header p also records the offsets for the data to read from the entries p end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name resolve local file header data end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name get entries end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name zip entry end_name end_type begin_name ze end_name begin_init begin_expr begin_operator LPAR end_operator begin_name zip entry end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name offset entry end_name end_type begin_name offset entry end_name begin_init begin_expr begin_operator LPAR end_operator begin_name offset entry end_name begin_operator RPAR end_operator begin_call begin_name begin_name entries end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name ze end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name offset end_name begin_init begin_expr begin_name begin_name offset entry end_name begin_operator DOT end_operator begin_name header offset end_name end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name archive end_name begin_operator DOT end_operator begin_name seek end_name end_name begin_argument_list begin_argument begin_expr begin_name offset end_name begin_operator PLUS end_operator begin_name lfh offset for filename length end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name b end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name byte end_name begin_index begin_expr end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name archive end_name begin_operator DOT end_operator begin_name read fully end_name end_name begin_argument_list begin_argument begin_expr begin_name b end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name file name len end_name begin_init begin_expr begin_call begin_name begin_name zip short end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list begin_argument begin_expr begin_name b end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name archive end_name begin_operator DOT end_operator begin_name read fully end_name end_name begin_argument_list begin_argument begin_expr begin_name b end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name extra field len end_name begin_init begin_expr begin_call begin_name begin_name zip short end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list begin_argument begin_expr begin_name b end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name archive end_name begin_operator DOT end_operator begin_name skip bytes end_name end_name begin_argument_list begin_argument begin_expr begin_name file name len end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name local extra data end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name byte end_name begin_index begin_expr begin_name extra field len end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name archive end_name begin_operator DOT end_operator begin_name read fully end_name end_name begin_argument_list begin_argument begin_expr begin_name local extra data end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ze end_name begin_operator DOT end_operator begin_name set extra end_name end_name begin_argument_list begin_argument begin_expr begin_name local extra data end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment data offsets put ze new long offset lfh offset for filename length 2 2 file name len extra field len end_comment begin_expr_stmt begin_expr begin_name begin_name offset entry end_name begin_operator DOT end_operator begin_name data offset end_name end_name begin_operator EQ end_operator begin_name offset end_name begin_operator PLUS end_operator begin_name lfh offset for filename length end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name file name len end_name begin_operator PLUS end_operator begin_name extra field len end_name end_expr end_expr_stmt end_block end_while end_block 
 begin_comment get the name of the manager prefix return bsf end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get manager name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment constructor for jakarta regexp regexp end_comment begin_specifier end_specifier begin_name jakarta regexp regexp end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment param line the string to modify return the modified string end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name filter end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name line end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name initialize end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name regexp end_name begin_operator DOT end_operator begin_name matches end_name end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument begin_argument begin_expr begin_name options end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name line end_name end_expr end_return end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name regexp end_name begin_operator DOT end_operator begin_name substitute end_name end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name substitution end_name begin_operator DOT end_operator begin_name get expression end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name options end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment compare two timestamps for being up to date using the specified granularity param source time timestamp of source file param dest time timestamp of dest file param granularity os filesys granularity return true if the dest file is considered up to date end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is up to date end_name begin_parameter_list begin_param begin_decl begin_type begin_name long end_name end_type begin_name source time end_name end_decl end_param begin_param begin_decl begin_type begin_name long end_name end_type begin_name dest time end_name end_decl end_param begin_param begin_decl begin_type begin_name long end_name end_type begin_name granularity end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name dest time end_name begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_return begin_expr begin_name dest time end_name begin_operator GE end_operator begin_name source time end_name begin_operator PLUS end_operator begin_name granularity end_name end_expr end_return end_block 
 begin_comment assert this orig ptr 1 this orig ptr end_comment begin_comment method main q sort 3 file blocksort c b zip 2 1 0 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name main q sort 3 end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name data end_name end_type begin_name data shadow end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name lo st end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name hi st end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name d st end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name begin_index end_index end_type begin_name stack ll end_name begin_init begin_expr begin_name begin_name data shadow end_name begin_operator DOT end_operator begin_name stack ll end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name begin_index end_index end_type begin_name stack hh end_name begin_init begin_expr begin_name begin_name data shadow end_name begin_operator DOT end_operator begin_name stack hh end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name begin_index end_index end_type begin_name stack dd end_name begin_init begin_expr begin_name begin_name data shadow end_name begin_operator DOT end_operator begin_name stack dd end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name begin_index end_index end_type begin_name fmap end_name begin_init begin_expr begin_name begin_name data shadow end_name begin_operator DOT end_operator begin_name fmap end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name byte end_name begin_index end_index end_type begin_name block end_name begin_init begin_expr begin_name begin_name data shadow end_name begin_operator DOT end_operator begin_name block end_name end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name stack ll end_name begin_index begin_expr end_expr end_index end_name begin_operator EQ end_operator begin_name lo st end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name stack hh end_name begin_index begin_expr end_expr end_index end_name begin_operator EQ end_operator begin_name hi st end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name stack dd end_name begin_index begin_expr end_expr end_index end_name begin_operator EQ end_operator begin_name d st end_name end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name sp end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_operator MMINUS end_operator begin_name sp end_name begin_operator GE end_operator end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name lo end_name begin_init begin_expr begin_name begin_name stack ll end_name begin_index begin_expr begin_name sp end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name hi end_name begin_init begin_expr begin_name begin_name stack hh end_name begin_index begin_expr begin_name sp end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name d end_name begin_init begin_expr begin_name begin_name stack dd end_name begin_index begin_expr begin_name sp end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name hi end_name begin_operator MINUS end_operator begin_name lo end_name begin_operator LT end_operator begin_name small thresh end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name d end_name begin_operator GT end_operator begin_name depth thresh end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name main simple sort end_name begin_argument_list begin_argument begin_expr begin_name data shadow end_name end_expr end_argument begin_argument begin_expr begin_name lo end_name end_expr end_argument begin_argument begin_expr begin_name hi end_name end_expr end_argument begin_argument begin_expr begin_name d end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name d 1 end_name begin_init begin_expr begin_name d end_name begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name med end_name begin_init begin_expr begin_call begin_name med 3 end_name begin_argument_list begin_argument begin_expr begin_name begin_name block end_name begin_index begin_expr begin_name begin_name fmap end_name begin_index begin_expr begin_name lo end_name end_expr end_index end_name begin_operator PLUS end_operator begin_name d 1 end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name block end_name begin_index begin_expr begin_name begin_name fmap end_name begin_index begin_expr begin_name hi end_name end_expr end_index end_name begin_operator PLUS end_operator begin_name d 1 end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name block end_name begin_index begin_expr begin_name begin_name fmap end_name begin_index begin_expr begin_operator LPAR end_operator begin_name lo end_name begin_operator PLUS end_operator begin_name hi end_name begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_index end_name begin_operator PLUS end_operator begin_name d 1 end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name un lo end_name begin_init begin_expr begin_name lo end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name un hi end_name begin_init begin_expr begin_name hi end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name lt lo end_name begin_init begin_expr begin_name lo end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name gt hi end_name begin_init begin_expr begin_name hi end_name end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr end_expr end_condition begin_block begin_while begin_condition begin_expr begin_name un lo end_name begin_operator LE end_operator begin_name un hi end_name end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name n end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name int end_name begin_operator RPAR end_operator begin_name begin_name block end_name begin_index begin_expr begin_name begin_name fmap end_name begin_index begin_expr begin_name un lo end_name end_expr end_index end_name begin_operator PLUS end_operator begin_name d 1 end_name end_expr end_index end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator MINUS end_operator begin_name med end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name n end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name temp end_name begin_init begin_expr begin_name begin_name fmap end_name begin_index begin_expr begin_name un lo end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name fmap end_name begin_index begin_expr begin_name un lo end_name begin_operator PPLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_name begin_name fmap end_name begin_index begin_expr begin_name lt lo end_name end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name fmap end_name begin_index begin_expr begin_name lt lo end_name begin_operator PPLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_name temp end_name end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name n end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name un lo end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_break end_break end_block end_else end_if end_else end_if end_block end_while begin_while begin_condition begin_expr begin_name un lo end_name begin_operator LE end_operator begin_name un hi end_name end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name n end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name int end_name begin_operator RPAR end_operator begin_name begin_name block end_name begin_index begin_expr begin_name begin_name fmap end_name begin_index begin_expr begin_name un hi end_name end_expr end_index end_name begin_operator PLUS end_operator begin_name d 1 end_name end_expr end_index end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator MINUS end_operator begin_name med end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name n end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name temp end_name begin_init begin_expr begin_name begin_name fmap end_name begin_index begin_expr begin_name un hi end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name fmap end_name begin_index begin_expr begin_name un hi end_name begin_operator MMINUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_name begin_name fmap end_name begin_index begin_expr begin_name gt hi end_name end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name fmap end_name begin_index begin_expr begin_name gt hi end_name begin_operator MMINUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_name temp end_name end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name n end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name un hi end_name begin_operator MMINUS end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_break end_break end_block end_else end_if end_else end_if end_block end_while begin_if begin_condition begin_expr begin_name un lo end_name begin_operator LE end_operator begin_name un hi end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name temp end_name begin_init begin_expr begin_name begin_name fmap end_name begin_index begin_expr begin_name un lo end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name fmap end_name begin_index begin_expr begin_name un lo end_name begin_operator PPLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_name begin_name fmap end_name begin_index begin_expr begin_name un hi end_name end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name fmap end_name begin_index begin_expr begin_name un hi end_name begin_operator MMINUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_name temp end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_break end_break end_block end_else end_if end_block end_while begin_if begin_condition begin_expr begin_name gt hi end_name begin_operator LT end_operator begin_name lt lo end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name stack ll end_name begin_index begin_expr begin_name sp end_name end_expr end_index end_name begin_operator EQ end_operator begin_name lo end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name stack hh end_name begin_index begin_expr begin_name sp end_name end_expr end_index end_name begin_operator EQ end_operator begin_name hi end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name stack dd end_name begin_index begin_expr begin_name sp end_name end_expr end_index end_name begin_operator EQ end_operator begin_name d 1 end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name sp end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name n end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name lt lo end_name begin_operator MINUS end_operator begin_name lo end_name begin_operator RPAR end_operator begin_operator LT end_operator begin_operator LPAR end_operator begin_name un lo end_name begin_operator MINUS end_operator begin_name lt lo end_name begin_operator RPAR end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator LPAR end_operator begin_name lt lo end_name begin_operator MINUS end_operator begin_name lo end_name begin_operator RPAR end_operator begin_operator DP end_operator begin_operator LPAR end_operator begin_name un lo end_name begin_operator MINUS end_operator begin_name lt lo end_name begin_operator RPAR end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name vswap end_name begin_argument_list begin_argument begin_expr begin_name fmap end_name end_expr end_argument begin_argument begin_expr begin_name lo end_name end_expr end_argument begin_argument begin_expr begin_name un lo end_name begin_operator MINUS end_operator begin_name n end_name end_expr end_argument begin_argument begin_expr begin_name n end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name m end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name hi end_name begin_operator MINUS end_operator begin_name gt hi end_name begin_operator RPAR end_operator begin_operator LT end_operator begin_operator LPAR end_operator begin_name gt hi end_name begin_operator MINUS end_operator begin_name un hi end_name begin_operator RPAR end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator LPAR end_operator begin_name hi end_name begin_operator MINUS end_operator begin_name gt hi end_name begin_operator RPAR end_operator begin_operator DP end_operator begin_operator LPAR end_operator begin_name gt hi end_name begin_operator MINUS end_operator begin_name un hi end_name begin_operator RPAR end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name vswap end_name begin_argument_list begin_argument begin_expr begin_name fmap end_name end_expr end_argument begin_argument begin_expr begin_name un lo end_name end_expr end_argument begin_argument begin_expr begin_name hi end_name begin_operator MINUS end_operator begin_name m end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name m end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name n end_name begin_operator EQ end_operator begin_name lo end_name begin_operator PLUS end_operator begin_name un lo end_name begin_operator MINUS end_operator begin_name lt lo end_name begin_operator MINUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name m end_name begin_operator EQ end_operator begin_name hi end_name begin_operator MINUS end_operator begin_operator LPAR end_operator begin_name gt hi end_name begin_operator MINUS end_operator begin_name un hi end_name begin_operator RPAR end_operator begin_operator PLUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name stack ll end_name begin_index begin_expr begin_name sp end_name end_expr end_index end_name begin_operator EQ end_operator begin_name lo end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name stack hh end_name begin_index begin_expr begin_name sp end_name end_expr end_index end_name begin_operator EQ end_operator begin_name n end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name stack dd end_name begin_index begin_expr begin_name sp end_name end_expr end_index end_name begin_operator EQ end_operator begin_name d end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name sp end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name stack ll end_name begin_index begin_expr begin_name sp end_name end_expr end_index end_name begin_operator EQ end_operator begin_name n end_name begin_operator PLUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name stack hh end_name begin_index begin_expr begin_name sp end_name end_expr end_index end_name begin_operator EQ end_operator begin_name m end_name begin_operator MINUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name stack dd end_name begin_index begin_expr begin_name sp end_name end_expr end_index end_name begin_operator EQ end_operator begin_name d 1 end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name sp end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name stack ll end_name begin_index begin_expr begin_name sp end_name end_expr end_index end_name begin_operator EQ end_operator begin_name m end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name stack hh end_name begin_index begin_expr begin_name sp end_name end_expr end_index end_name begin_operator EQ end_operator begin_name hi end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name stack dd end_name begin_index begin_expr begin_name sp end_name end_expr end_index end_name begin_operator EQ end_operator begin_name d end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name sp end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_else end_if end_block end_else end_if end_block end_for end_block 
 begin_comment keyword list to be appended to the g command line switch this will be ignored by all implementations except modern and classic ver 1 2 legal values are none or a comma separated list of the following keywords lines vars and source if debuglevel is not specified by default none will be appended to g if debug is not turned on this attribute will be ignored param v value to assign to debug level end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set debug level end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name v end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name debug level end_name end_name begin_operator EQ end_operator begin_name v end_name end_expr end_expr_stmt end_block 
 begin_comment handle an input request by this task param buffer the buffer into which data is to be read param offset the offset into the buffer at which data is stored param length the amount of data to read return the number of bytes read exception io exception if the data cannot be read since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name handle input end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name buffer end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name offset end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name length end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_return begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name default input end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name length end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment sets the from part of the transformation rule param from a string end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set from end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name from end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment execute the read task param telnet the task to use throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list begin_param begin_decl begin_type begin_name ant telnet client end_name end_type begin_name telnet end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name telnet end_name begin_operator DOT end_operator begin_name wait for string end_name end_name begin_argument_list begin_argument begin_expr begin_name task string end_name end_expr end_argument begin_argument begin_expr begin_name timeout end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment bugzilla report 39708 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test with style from dir and xsl import end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name report file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment tests one the file object end_comment begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name report file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name report file end_name begin_operator DOT end_operator begin_name can read end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name report file end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment conversion to url via file utils like in xml result aggregator not as suggested in the bug report end_comment begin_decl_stmt begin_decl begin_type begin_name url end_name end_type begin_name report url end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name url end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name get file utils end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to uri end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name report file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name report stream end_name begin_init begin_expr begin_call begin_name begin_name report url end_name begin_operator DOT end_operator begin_name open stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name report stream end_name begin_operator DOT end_operator begin_name available end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment setter method used to store the home directory of the user s i as installation the directory specified should typically be code install location iplanet ias 6 ias code param iashome the home directory for the user s i as installation end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set iashome end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name iashome end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name iashome end_name end_name begin_operator EQ end_operator begin_name iashome end_name end_expr end_expr_stmt end_block 
 begin_comment add a new target param target target to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add target end_name begin_parameter_list begin_param begin_decl begin_type begin_name target end_name end_type begin_name target end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name target vector end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name current target end_name begin_operator EQ end_operator begin_name target end_name end_expr end_expr_stmt end_block 
 begin_comment test sos get file flags commandline generation end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test get file flags end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name s test cmd line end_name begin_init begin_expr begin_block begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr begin_name src file end_name end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr begin_name sos server path end_name end_expr begin_expr end_expr begin_expr begin_name sos username end_name end_expr begin_expr end_expr begin_expr begin_name sos password end_name end_expr begin_expr end_expr begin_expr begin_name vss server path end_name end_expr begin_expr end_expr begin_expr begin_name ds vss project path end_name end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get base dir end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator begin_name local path end_name end_expr end_block end_expr end_init end_decl end_decl_stmt begin_comment set up a sos get task end_comment begin_decl_stmt begin_decl begin_type begin_name sos get end_name end_type begin_name sos get end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name sos get end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sos get end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sos get end_name begin_operator DOT end_operator begin_name set vss server path end_name end_name begin_argument_list begin_argument begin_expr begin_name vss server path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sos get end_name begin_operator DOT end_operator begin_name set sos server path end_name end_name begin_argument_list begin_argument begin_expr begin_name sos server path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sos get end_name begin_operator DOT end_operator begin_name set project path end_name end_name begin_argument_list begin_argument begin_expr begin_name vss project path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sos get end_name begin_operator DOT end_operator begin_name set file end_name end_name begin_argument_list begin_argument begin_expr begin_name src file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sos get end_name begin_operator DOT end_operator begin_name set username end_name end_name begin_argument_list begin_argument begin_expr begin_name sos username end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sos get end_name begin_operator DOT end_operator begin_name set password end_name end_name begin_argument_list begin_argument begin_expr begin_name sos password end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sos get end_name begin_operator DOT end_operator begin_name set version end_name end_name begin_argument_list begin_argument begin_expr begin_name version end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sos get end_name begin_operator DOT end_operator begin_name set local path end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr begin_name local path end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sos get end_name begin_operator DOT end_operator begin_name set no cache end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sos get end_name begin_operator DOT end_operator begin_name set no compress end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sos get end_name begin_operator DOT end_operator begin_name set verbose end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sos get end_name begin_operator DOT end_operator begin_name set recursive end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name commandline end_name begin_operator EQ end_operator begin_call begin_name begin_name sos get end_name begin_operator DOT end_operator begin_name build cmd line end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name check command lines end_name begin_argument_list begin_argument begin_expr begin_name s test cmd line end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name get commandline end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the value of task return value of task end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get task end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name task end_name end_expr end_return end_block 
 begin_comment see build listener task finished end_comment begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name task finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name initialized end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name task end_name end_type begin_name task end_name begin_init begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get task end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name logger end_name end_type begin_name log end_name begin_init begin_expr begin_call begin_name begin_name logger end_name begin_operator DOT end_operator begin_name get logger end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get exception end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name info end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name get task name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name get task name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get exception end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name attribute end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment classpath to be used when searching for classes and resources return an empty path instance to be configured by ant end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name create classpath end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name create classpath end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment set a property where to store the cvs server version param server version property property for cvs server version end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set server version property end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name server version property end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name server version property end_name end_name begin_operator EQ end_operator begin_name server version property end_name end_expr end_expr_stmt end_block 
 begin_comment get the classpath for the command return the classpath or null end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name get classpath end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name classpath end_name end_expr end_return end_block 
 begin_comment the destination file or directory optional param dest destination file or directory end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set dest end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name dest end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name dest end_name end_name begin_operator EQ end_operator begin_name dest end_name end_expr end_expr_stmt end_block 
 begin_comment check style visibility modifier on end_comment begin_comment an existing changelist number for the deletion optional but strongly recommended param change the number of a change list end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set change end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name change end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name change end_name end_name begin_operator EQ end_operator begin_name change end_name end_expr end_expr_stmt end_block 
 begin_comment get the changelist number return the changelist number set for this task end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get change end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name change end_name end_expr end_return end_block 
 begin_comment adds the content of pcdata sections to an element param project the project containing the target must not be code null code param target the target object to be configured must not be code null code param text text to add to the target may be code null code in which case this method call is a no op exception build exception if the target object doesn t accept text end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name add text end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name target end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name text end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name text end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name target end_name begin_operator UNP end_operator begin_name type adapter end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name target end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name type adapter end_name begin_operator RPAR end_operator begin_name target end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get proxy end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name introspection helper end_name begin_operator DOT end_operator begin_name get helper end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name add text end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr begin_name target end_name end_expr end_argument begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the url of the no namespace schema return the schema url end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get no namespace schema url end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name anonymous schema end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr begin_call begin_name begin_name anonymous schema end_name begin_operator DOT end_operator begin_name get schema location url end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_else end_if end_block 
 begin_comment add a taglet param taglet info information about the taglet end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add taglet end_name begin_parameter_list begin_param begin_decl begin_type begin_name extension info end_name end_type begin_name taglet info end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name tags end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name taglet info end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the commentfile command param cmd containing the command line string with or without the commentfile flag and file appended end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name get comment file command end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name get comment file end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes this breaks clearcase end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag commentfile end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get comment file end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment return the file containing definitions end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get file end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name file end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test contains regex 2 end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name has regex end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_return end_return end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name contents end_name begin_init begin_expr begin_call begin_name get file string end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert string contains end_name begin_argument_list begin_argument begin_expr begin_name contents end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get a string representation of the regexp pattern return the pattern end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get pattern end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name pattern end_name end_expr end_return end_block 
 begin_comment if true jvm should be forked for each test p it avoids interference between testcases and possibly avoids hanging the build this property is applied on all batch test batchtest and j unit test test however it can possibly be overridden by their own properties p param value tt true tt if a jvm should be forked otherwise tt false tt see set timeout since ant 1 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set fork end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name fork end_name end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block 
 begin_comment test dependency traversal closure end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test closure end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name hashtable end_name end_type begin_name files end_name begin_init begin_expr begin_call begin_name get result files end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator LE end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name contains key end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the internal file attributes param value an code int code value since 1 1 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set internal attributes end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name internal attributes end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block 
 begin_comment adds a nested code lt filelist gt code element param fl a code file list code to be added to the path throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add filelist end_name begin_parameter_list begin_param begin_decl begin_type begin_name file list end_name end_type begin_name fl end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name fl end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name fl end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name add end_name begin_argument_list begin_argument begin_expr begin_name fl end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name complete end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name stored combined crc end_name end_name begin_operator EQ end_operator begin_call begin_name bs get int end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name current state end_name end_name begin_operator EQ end_operator begin_name eof end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name data end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name stored combined crc end_name end_name begin_operator UNP end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name computed combined crc end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name report crc error end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name read end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name c end_name begin_init begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_switch begin_condition begin_expr begin_name c end_name end_expr end_condition begin_block begin_case begin_expr end_expr end_case begin_case begin_expr end_expr begin_expr_stmt begin_expr begin_name column number end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr end_expr begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name width end_name begin_init begin_expr begin_name tab length end_name begin_operator MINUS end_operator begin_name column number end_name begin_operator UNP end_operator begin_name tab length end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name edits blocked end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_for begin_init end_init begin_condition begin_expr begin_name width end_name begin_operator GT end_operator end_expr end_condition begin_incr begin_expr begin_name width end_name begin_operator MMINUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name push end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_name c end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name column number end_name begin_operator UNP end_operator begin_name width end_name end_expr end_expr_stmt begin_break end_break end_case begin_default begin_expr_stmt begin_expr begin_name column number end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_default end_block end_switch begin_return begin_expr begin_name c end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test semantic local end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name do test end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get values end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name values end_name end_expr end_return end_block 
 begin_comment get the title of the specification return the title of speciication end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get specification title end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name specification title end_name end_expr end_return end_block 
 begin_comment get comment file return string containing the path to the comment file end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get comment file end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m cfile end_name end_expr end_return end_block 
 begin_comment set the comparison mode param c a comparison object end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set when end_name begin_parameter_list begin_param begin_decl begin_type begin_name comparison end_name end_type begin_name c end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name when end_name begin_operator EQ end_operator begin_name c end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name abstract file set end_name end_type begin_name get instance end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name dir set end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment run the command in parallel mode making sure that at most max parallel sourcefiles get passed on the command line param exe the executable to use param file names the vector of filenames param base dirs the vector of base directories corresponding to file names throws io exception on i o errors throws build exception on other errors since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name run parallel end_name begin_parameter_list begin_param begin_decl begin_type begin_name execute end_name end_type begin_name exe end_name end_decl end_param begin_param begin_decl begin_type begin_name vector end_name end_type begin_name file names end_name end_decl end_param begin_param begin_decl begin_type begin_name vector end_name end_type begin_name base dirs end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name s end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_call begin_name begin_name file names end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name file names end_name begin_operator DOT end_operator begin_name copy into end_name end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name begin_index end_index end_type begin_name b end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name file end_name begin_index begin_expr begin_call begin_name begin_name base dirs end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name base dirs end_name begin_operator DOT end_operator begin_name copy into end_name end_name begin_argument_list begin_argument begin_expr begin_name b end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name max parallel end_name begin_operator LE end_operator begin_operator UNP end_operator begin_name begin_name s end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator EQT end_operator end_expr begin_comment this is skip empty false end_comment end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name command end_name begin_init begin_expr begin_call begin_name get commandline end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument begin_argument begin_expr begin_name b end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name describe command end_name end_name begin_argument_list begin_argument begin_expr begin_name command end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set commandline end_name end_name begin_argument_list begin_argument begin_expr begin_name command end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name run execute end_name begin_argument_list begin_argument begin_expr begin_name exe end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name still to do end_name begin_init begin_expr begin_call begin_name begin_name file names end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name current offset end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_name still to do end_name begin_operator GT end_operator end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name current amount end_name begin_init begin_expr begin_call begin_name begin_name math end_name begin_operator DOT end_operator begin_name min end_name end_name begin_argument_list begin_argument begin_expr begin_name still to do end_name end_expr end_argument begin_argument begin_expr begin_name max parallel end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name cs end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_name current amount end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument begin_argument begin_expr begin_name current offset end_name end_expr end_argument begin_argument begin_expr begin_name cs end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name current amount end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name begin_index end_index end_type begin_name cb end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name file end_name begin_index begin_expr begin_name current amount end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_name b end_name end_expr end_argument begin_argument begin_expr begin_name current offset end_name end_expr end_argument begin_argument begin_expr begin_name cb end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name current amount end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name command end_name begin_init begin_expr begin_call begin_name get commandline end_name begin_argument_list begin_argument begin_expr begin_name cs end_name end_expr end_argument begin_argument begin_expr begin_name cb end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name describe command end_name end_name begin_argument_list begin_argument begin_expr begin_name command end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set commandline end_name end_name begin_argument_list begin_argument begin_expr begin_name command end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name redirector element end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name setup redirector end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name redirector element end_name begin_operator DOT end_operator begin_name configure end_name end_name begin_argument_list begin_argument begin_expr begin_name redirector end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name redirector element end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name current offset end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_comment need to reset the stream handler to restart end_comment begin_comment reading of pipes end_comment begin_comment go ahead and do it always w nested redirectors end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set stream handler end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name create handler end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name run execute end_name begin_argument_list begin_argument begin_expr begin_name exe end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name still to do end_name begin_operator UNP end_operator begin_name current amount end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name current offset end_name begin_operator UNP end_operator begin_name current amount end_name end_expr end_expr_stmt end_block end_while end_block end_else end_if end_block 
 begin_comment get ordinary flag status return boolean containing status of ordinary flag end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get ordinary end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m ordinary end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test dest dir and signed jar end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name sign jar end_name begin_operator DOT end_operator begin_name error signedjar and paths end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment empty end_comment begin_specifier end_specifier begin_name summary j unit result formatter end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment sets the base directory for this instance param dir the directory s code file code instance throws build exception on error end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name dir end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name dir end_name end_name begin_operator EQ end_operator begin_name dir end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name directory scanner end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment sets the optional suffix string for the temp file param suffix suffix including any e g xml end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set suffix end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name suffix end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name suffix end_name end_name begin_operator EQ end_operator begin_name suffix end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test list annotation types end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get filtered file end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name test number end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name filtered file end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name line end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name filtered file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name test number end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name buffered reader end_name end_type begin_name in end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name in end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name buffered reader end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file reader end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name file not found exception end_name end_type begin_name fnfe end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name test number end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_try begin_block begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name test number end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name ioe end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name line end_name end_expr end_return end_block 
 begin_comment do the work throws build exception if required attributes are not supplied property and attribute are required attributes end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name property end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name file end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name value end_name begin_init begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name suffix end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr begin_name suffix end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment if the suffix does not starts with a and the end_comment begin_comment char preceding the suffix is a we assume the user end_comment begin_comment wants to remove the as well see docs end_comment begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name pos end_name begin_init begin_expr begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator begin_call begin_name begin_name suffix end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name pos end_name begin_operator GT end_operator begin_operator UNP end_operator begin_call begin_name begin_name suffix end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name pos end_name begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name pos end_name begin_operator MMINUS end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name value end_name begin_operator EQ end_operator begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name pos end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set new property end_name begin_argument_list begin_argument begin_expr begin_name property end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment search for file directory either relative to project s basedir or in the path given as filepath p filepath can be a list of directory and or file names gen d via fileset p p look for p ul li full pathname specified path in list li li full pathname specified parent dir of path in list li li simple name specified path in list li li simple name specified path in list name li li simple name specified parent dir name li li simple name specified parent of parent dir name li ul end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name check file end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name filepath end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name check file end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name paths end_name begin_init begin_expr begin_call begin_name begin_name filepath end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name paths end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name paths end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name path end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name begin_name paths end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment full pathname specified path in list end_comment begin_comment simple name specified path in list end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name filename end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name paths end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name type end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name path end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name type end_name begin_operator DOT end_operator begin_name is dir end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name path end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name type end_name begin_operator DOT end_operator begin_name is file end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name is file end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name path end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block end_then end_if end_else end_if end_else end_if begin_comment not the requested type end_comment begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name parent end_name begin_init begin_expr begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name get parent file end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment full pathname specified parent dir of path in list end_comment begin_if begin_condition begin_expr begin_name parent end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name filename end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name type end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name type end_name begin_operator DOT end_operator begin_name is dir end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block end_then end_if end_else end_if begin_comment not the requested type end_comment begin_return begin_expr end_expr end_return end_block end_then end_if begin_comment simple name specified path in list name end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name check file end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name path end_name end_expr end_argument begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name filename end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name path end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_then end_if begin_comment simple name specified parent dir name end_comment begin_while begin_condition begin_expr begin_name search parents end_name begin_operator UNP end_operator begin_name parent end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_if begin_condition begin_expr begin_call begin_name check file end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name filename end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name parent end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name parent end_name begin_operator EQ end_operator begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name get parent file end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block end_for end_block end_else end_if begin_return begin_expr end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test empty element if is reference end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name mapper end_name end_type begin_name m end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name mapper end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name set from end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_name m end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name mapper end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name set from end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_name m end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name mapper end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name set to end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name mapper end_name begin_operator DOT end_operator begin_name mapper type end_name end_name end_type begin_name mt end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name mapper end_name begin_operator DOT end_operator begin_name mapper type end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name mt end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name set type end_name end_name begin_argument_list begin_argument begin_expr begin_name mt end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment validate the parameters specified for task throws build exception if fails validation checks end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name validate end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator EQT end_operator begin_name input dir end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name input dir end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator EQT end_operator begin_name dest file end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name message end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name input dir end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name message end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name input dir end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name users file end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name users file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name message end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name users file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment execute the task this delgates to the diagnositics class throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name diagnostics end_name begin_operator DOT end_operator begin_name main end_name end_name begin_argument_list begin_argument begin_expr begin_name args end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the value of the refid attribute p subclasses may need to check whether any other attributes have been set as well or child elements have been created and thus override this method if they do the must call code super set refid code p param ref the reference to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set refid end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name ref end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name assertion list end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_operator UNP end_operator begin_name enable system assertions end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_name ref end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name main end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name args end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_operator UNP end_operator begin_call begin_name process destroyer test end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name test process destroyer end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name sleep end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name interrupted exception end_name end_type begin_name ie end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ie end_name begin_operator DOT end_operator begin_name print stack trace end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment construct a zip resource representing the specified entry in the specified zipfile param z the zipfile as file param enc the encoding used for filenames param e the zip entry end_comment begin_specifier end_specifier begin_name zip resource end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name z end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name enc end_name end_decl end_param begin_param begin_decl begin_type begin_name zip entry end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name z end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set encoding end_name begin_argument_list begin_argument begin_expr begin_name enc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set entry end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test the contract of the equals method end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test equals end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name zip long end_name end_type begin_name zl end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name zip long end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name zip long end_name end_type begin_name zl 2 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name zip long end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name zip long end_name end_type begin_name zl 3 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name zip long end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name zl end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name zl end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name zl end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name zl 2 end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name zl end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name zl 3 end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name zl 2 end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name zl end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name zl end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name zl end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name integer end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set whether error messages come out in compact or verbose format valid true values are on or true anything else sets the flag to false the default value is false param compact a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set compact end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name compact end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name compact end_name end_name begin_operator EQ end_operator begin_name compact end_name end_expr end_expr_stmt end_block 
 begin_comment find the source file for a given class param classname the classname in slash format end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name find source file end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name classname end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name source filename end_name begin_init begin_expr begin_name classname end_name begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name inner index end_name begin_init begin_expr begin_call begin_name begin_name classname end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name inner index end_name begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name source filename end_name begin_operator EQ end_operator begin_call begin_name begin_name classname end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name inner index end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_expr_stmt end_block end_then end_if begin_comment search the various source path entries end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name src path list end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name source file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name begin_name src path list end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name source filename end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name source file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name source file end_name end_expr end_return end_block end_then end_if end_block end_for begin_return begin_expr end_expr end_return end_block 
 begin_comment create the stream handler to use with our execute instance return instance of execute stream handler throws build exception under unknown circumstances end_comment begin_type begin_specifier end_specifier begin_name execute stream handler end_name end_type begin_name create handler end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_return begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name create handler end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment sets the visitor exception grammar option param visitor exception the option to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set visitor exception end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name visitor exception end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name optional attrs end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name visitor exception end_name end_expr end_argument begin_argument begin_expr begin_name visitor exception end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment launches the given command in a new process in the given working directory param project the ant project param cmd the command line to execute as an array of strings param env the environment to set as an array of strings param working dir working directory where the command should run return the created process throws io exception forwarded from the exec method of the command launcher end_comment begin_type begin_specifier end_specifier begin_name process end_name end_type begin_name exec end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name cmd end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name env end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name working dir end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name project end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name working dir end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name exec end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr begin_name cmd end_name end_expr end_argument begin_argument begin_expr begin_name env end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name io exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment locate the auxiliary script end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name ant home end_name begin_init begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name ant home end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name ant home end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name io exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name ant home end_name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name ant run end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get base dir end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name ant home end_name begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator begin_name my script end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment build the command end_comment begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name command dir end_name begin_init begin_expr begin_name working dir end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name working dir end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name project end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name command dir end_name begin_operator EQ end_operator begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get base dir end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name newcmd end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator PLUS end_operator end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name newcmd end_name begin_index begin_expr end_expr end_index end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name newcmd end_name begin_index begin_expr end_expr end_index end_name begin_operator EQ end_operator begin_name ant run end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name newcmd end_name begin_index begin_expr end_expr end_index end_name begin_operator EQ end_operator begin_call begin_name begin_name command dir end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name newcmd end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name exec end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr begin_name newcmd end_name end_expr end_argument begin_argument begin_expr begin_name env end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment return a string that describes the arguments suitable for verbose output before a call to code runtime exec string code param line the commandline whose arguments to describe return a string that describes the arguments since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name describe arguments end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name line end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name describe arguments end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name get arguments end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment returns properties from a specified properties file param file name the file to load properties from end_comment begin_type begin_specifier end_specifier begin_name properties end_name end_type begin_name get properties from file end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name file name end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name file input stream end_name end_type begin_name in end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name properties end_name end_type begin_name props end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name properties end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name in end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_name file name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name load end_name end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ioe end_name begin_operator DOT end_operator begin_name print stack trace end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try begin_return begin_expr begin_name props end_name end_expr end_return end_block 
 begin_comment returns code true code if the specified code process code was successfully added to the list of processes to destroy upon vm exit param process the process to add return code true code if the specified code process code was successfully added end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name add end_name begin_parameter_list begin_param begin_decl begin_type begin_name process end_name end_type begin_name process end_name end_decl end_param end_parameter_list begin_block begin_synchronized begin_expr begin_name processes end_name end_expr begin_block begin_comment if this list is empty register the shutdown hook end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name processes end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name add shutdown hook end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name processes end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name process end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name processes end_name begin_operator DOT end_operator begin_name contains end_name end_name begin_argument_list begin_argument begin_expr begin_name process end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_synchronized end_block 
 begin_comment check style visibility modifier on end_comment begin_comment distinguished name list return distinguished name container throws build exception if specified more than once or dname attribute is used end_comment begin_type begin_specifier end_specifier begin_name distinguished name end_name end_type begin_name create dname end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name expanded dname end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name dname end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name expanded dname end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name distinguished name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name expanded dname end_name end_expr end_return end_block 
 begin_specifier end_specifier begin_name symlink test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets whether classes need to be imported explicitly using an code import code statement by default the net rexx compiler will import certain packages automatically valid true values are on or true anything else sets the flag to false the default value is false param strictimport a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set strictimport end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name strictimport end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name strictimport end_name end_name begin_operator EQ end_operator begin_name strictimport end_name end_expr end_expr_stmt end_block 
 begin_comment set the code file code containing the includes patterns param incl code file code instance throws build exception if there is a problem end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set includesfile end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name incl end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name check attributes allowed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name default patterns end_name begin_operator DOT end_operator begin_name set includesfile end_name end_name begin_argument_list begin_argument begin_expr begin_name incl end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name ds end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment return the current date in a format suitable for a smtp date header return the current date in smtp suitable format since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get date end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name date utils end_name begin_operator DOT end_operator begin_name get date for header end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment executes the task p builds a command line to execute cleartool and then calls exec s run method to execute the command line throws build exception if the command fails and failonerr is set to true end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name commandline end_name end_type begin_name command line end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name commandline end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name project end_name end_type begin_name a proj end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name result end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment default the viewpath to basedir if it is not specified end_comment begin_if begin_condition begin_expr begin_call begin_name get view path end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set view path end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name a proj end_name begin_operator DOT end_operator begin_name get base dir end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment build the command line from what we got the format is end_comment begin_comment cleartool lock options end_comment begin_comment as specified in the cleartool exe help end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name set executable end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get clear tool command end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name command lock end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment check the command line options end_comment begin_expr_stmt begin_expr begin_call begin_name check options end_name begin_argument_list begin_argument begin_expr begin_name command line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment for debugging end_comment begin_comment system out println command line to string end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name get fail on err end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get op type end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name run end_name begin_argument_list begin_argument begin_expr begin_name command line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name execute end_name begin_operator DOT end_operator begin_name is failure end_name end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name get fail on err end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment print a readable version of the constant pool entry return the string representation of this constant pool entry end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator PLUS end_operator begin_name value end_name end_expr end_return end_block 
 begin_comment construct a new property output stream for the specified project property name and trim mode param p the associated ant project param s the string property name param b the boolean trim mode end_comment begin_specifier end_specifier begin_name property output stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name project end_name begin_operator EQ end_operator begin_name p end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name property end_name begin_operator EQ end_operator begin_name s end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name trim end_name begin_operator EQ end_operator begin_name b end_name end_expr end_expr_stmt end_block 
 begin_comment set the classpath to be used when running the java class param p an ant path object containing the classpath end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classpath end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name classpath end_name begin_operator EQ end_operator begin_name p end_name end_expr end_expr_stmt end_block 
 begin_comment create a placeholder indicating where on the command line the name of the target file should be inserted return code commandline marker code end_comment begin_type begin_specifier end_specifier begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name marker end_name end_name end_type begin_name create targetfile end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name target file pos end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name get task type end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name target file pos end_name begin_operator EQ end_operator begin_call begin_name begin_name cmdl end_name begin_operator DOT end_operator begin_name create marker end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name src is first end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name src file pos end_name begin_operator UNP end_operator begin_operator RPAR end_operator end_expr end_expr_stmt begin_return begin_expr begin_name target file pos end_name end_expr end_return end_block 
 begin_comment the j unit setup method end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr begin_name taskdefs dir end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name collection utils test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment a bit simplistic but xsltc data are conveniently private non final end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get xsltc version end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name proc version class name end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name class not found exception end_name end_expr end_argument end_throws begin_block begin_comment there s a convenient xsltc class version but data are end_comment begin_comment private so use package information end_comment begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name proc version end_name begin_init begin_expr begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name proc version class name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name package end_name end_type begin_name pkg end_name begin_init begin_expr begin_call begin_name begin_name proc version end_name begin_operator DOT end_operator begin_name get package end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name pkg end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name pkg end_name begin_operator DOT end_operator begin_name get implementation title end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name pkg end_name begin_operator DOT end_operator begin_name get implementation version end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment sets the if condition to test on execution this is the name of a property to test for existence if the property is not set the task will not execute the property goes through property substitution once before testing so if property code foo code has value code bar code setting the if condition to code foo x code will mean that the task will only execute if property code bar x code is set param property the property condition to test on execution may be code null code in which case no if test is performed end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set if end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name property end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name if condition end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name property end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator DP end_operator begin_name property end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name next end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name property resource end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment configures and adds the given commandline param c commandline to insert param insert at start if true c is inserted at the beginning of the vector of command lines end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add configured commandline end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name c end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name insert at start end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name c end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name configure commandline end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name insert at start end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name vec commandlines end_name begin_operator DOT end_operator begin_name insert element at end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name vec commandlines end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment returns what system exit would return in the standalone version return 2 if errors occurred 1 if tests failed else 0 end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get ret code end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name ret code end_name end_expr end_return end_block 
 begin_comment display the extensions and specifications contained within specified file param file the file throws build exception if fail to read file end_comment begin_type begin_name void end_name end_type begin_name display library end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name manifest end_name end_type begin_name manifest end_name begin_init begin_expr begin_call begin_name begin_name extension util end_name begin_operator DOT end_operator begin_name get manifest end_name end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name display library end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument begin_argument begin_expr begin_name manifest end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment invoked by link org apache tools ant introspection helper introspection helper param value the code string code value of the attribute throws build exception if the value is not valid for the attribute end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set value end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name idx end_name begin_init begin_expr begin_call begin_name index of value end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name idx end_name begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name value end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name index end_name end_name begin_operator EQ end_operator begin_name idx end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name value end_name end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block 
 begin_comment file for which the regular expression should be replaced required unless a nested fileset is supplied param file the file for which the reg exp should be replaced end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name file end_name end_name begin_operator EQ end_operator begin_name file end_name end_expr end_expr_stmt end_block 
 begin_comment get comment file return string containing the path to the comment file end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get comment file end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m cfile end_name end_expr end_return end_block 
 begin_comment determine the dependencies of the configured root classes param files a vector to be populated with the files which contain the dependency classes param classes a vector to be populated with the names of the dependency classes end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name determine dependencies end_name begin_parameter_list begin_param begin_decl begin_type begin_name vector end_name end_type begin_name files end_name end_decl end_param begin_param begin_decl begin_type begin_name vector end_name end_type begin_name classes end_name end_decl end_param end_parameter_list begin_block begin_comment we get the root classes and build up a set of end_comment begin_comment classes upon which they depend end_comment begin_decl_stmt begin_decl begin_type begin_name hashtable end_name end_type begin_name dependencies end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name hashtable end_name end_type begin_name containers end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name hashtable end_name end_type begin_name to analyze end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name get root classes end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name classname end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name to analyze end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument begin_argument begin_expr begin_name classname end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name count end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name max count end_name begin_init begin_expr begin_call begin_name is closure required end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_name max loops end_name begin_operator DP end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name hashtable end_name end_type begin_name analyzed deps end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name to analyze end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_name count end_name begin_operator PPLUS end_operator begin_operator LT end_operator begin_name max count end_name end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name analyzed deps end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name to analyze end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name classname end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dependencies end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument begin_argument begin_expr begin_name classname end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name container end_name begin_init begin_expr begin_call begin_name get class container end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name container end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name containers end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name container end_name end_expr end_argument begin_argument begin_expr begin_name container end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name zip file end_name end_type begin_name zip file end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name in stream end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name container end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name in stream end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name container end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name zip file end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name zip file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name container end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name entry name end_name begin_init begin_expr begin_call begin_name begin_name classname end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name zip entry end_name end_type begin_name entry end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name zip entry end_name begin_argument_list begin_argument begin_expr begin_name entry name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name in stream end_name begin_operator EQ end_operator begin_call begin_name begin_name zip file end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list begin_argument begin_expr begin_name entry end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_decl_stmt begin_decl begin_type begin_name class file end_name end_type begin_name class file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name class file end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name class file end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list begin_argument begin_expr begin_name in stream end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name dependency list end_name begin_init begin_expr begin_call begin_name begin_name class file end_name begin_operator DOT end_operator begin_name get class refs end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name dep enum end_name begin_init begin_expr begin_call begin_name begin_name dependency list end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name dep enum end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name dependency end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name dep enum end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name analyzed deps end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name dependency end_name end_expr end_argument begin_argument begin_expr begin_name dependency end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block begin_finally begin_block begin_if begin_condition begin_expr begin_name in stream end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name in stream end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name zip file end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name zip file end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name to analyze end_name begin_operator DOT end_operator begin_name clear end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment now recover all the dependencies collected and add to the list end_comment begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name deps enum end_name begin_init begin_expr begin_call begin_name begin_name analyzed deps end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name deps enum end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name class name end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name deps enum end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name dependencies end_name begin_operator DOT end_operator begin_name contains key end_name end_name begin_argument_list begin_argument begin_expr begin_name class name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name to analyze end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name class name end_name end_expr end_argument begin_argument begin_expr begin_name class name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_while end_block end_while begin_comment pick up the last round of dependencies that were determined end_comment begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name deps enum end_name begin_init begin_expr begin_call begin_name begin_name analyzed deps end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name deps enum end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name class name end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name deps enum end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dependencies end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name class name end_name end_expr end_argument begin_argument begin_expr begin_name class name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name remove all elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name containers end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name file end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name classes end_name begin_operator DOT end_operator begin_name remove all elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name dependencies end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name classes end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_comment add a reference to a path file set dir set or file list defined elsewhere param r the reference to a path fileset dirset or filelist end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set refid end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name path end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name no children allowed end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name refid end_name begin_operator EQ end_operator begin_name r end_name end_expr end_expr_stmt end_block 
 begin_comment files to generate checksums for param set a fileset of files to generate checksums for end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add fileset end_name begin_parameter_list begin_param begin_decl begin_type begin_name file set end_name end_type begin_name set end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add end_name begin_argument_list begin_argument begin_expr begin_name set end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get whether multiple mapping is enabled return true if multiple mapping is enabled false otherwise end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is enable multiple mapping end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name enable multiple mappings end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name build started end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment create instance from the four bytes starting at offset param bytes the bytes to store as a zip long param offset the offset to start since 1 1 end_comment begin_specifier end_specifier begin_name zip long end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name bytes end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name offset end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name value end_name begin_operator EQ end_operator begin_call begin_name begin_name zip long end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list begin_argument begin_expr begin_name bytes end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment if true checkin the element after creation param ci the status to set the flag to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set checkin end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name ci end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m checkin end_name begin_operator EQ end_operator begin_name ci end_name end_expr end_expr_stmt end_block 
 begin_comment create the input error and output streams based on the configuration options end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name create streams end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name out end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name begin_name out end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name log head end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name append end_name begin_operator RPAR end_operator begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name output stream end_name begin_operator EQ end_operator begin_call begin_name fold files end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr begin_name log head end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name output property end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name baos end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name baos end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name property output stream end_name begin_argument_list begin_argument begin_expr begin_name output property end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name managing task end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name output property end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment shield it from being closed by a filtering stream pumper end_comment begin_decl_stmt begin_decl begin_type begin_name output stream end_name end_type begin_name keep alive output end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name keep alive output stream end_name begin_argument_list begin_argument begin_expr begin_name baos end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name output stream end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name output stream end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_name keep alive output end_name begin_operator DP end_operator begin_operator UNP end_operator begin_call begin_name tee output stream end_name begin_argument_list begin_argument begin_expr begin_name output stream end_name end_expr end_argument begin_argument begin_expr begin_name keep alive output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name baos end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_name error end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name begin_name error end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name log head end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name append end_name begin_operator RPAR end_operator begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name error stream end_name begin_operator EQ end_operator begin_call begin_name fold files end_name begin_argument_list begin_argument begin_expr begin_name error end_name end_expr end_argument begin_argument begin_expr begin_name log head end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_name log error end_name begin_operator UNP end_operator begin_name output stream end_name begin_operator EQT end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name funnel timeout end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name output stream funneler end_name end_type begin_name funneler end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name output stream funneler end_name begin_argument_list begin_argument begin_expr begin_name output stream end_name end_expr end_argument begin_argument begin_expr begin_name funnel timeout end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name output stream end_name begin_operator EQ end_operator begin_call begin_name begin_name funneler end_name begin_operator DOT end_operator begin_name get funnel instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name error stream end_name begin_operator EQ end_operator begin_call begin_name begin_name funneler end_name begin_operator DOT end_operator begin_name get funnel instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name eye oh ex end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name eye oh ex end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_then end_if end_else end_if begin_if begin_condition begin_expr begin_name error property end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name error baos end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name error baos end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name property output stream end_name begin_argument_list begin_argument begin_expr begin_name error property end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name managing task end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name error property end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment shield it from being closed by a filtering stream pumper end_comment begin_decl_stmt begin_decl begin_type begin_name output stream end_name end_type begin_name keep alive error end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name keep alive output stream end_name begin_argument_list begin_argument begin_expr begin_name error baos end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name error stream end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name error end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name begin_name error end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_name keep alive error end_name begin_operator DP end_operator begin_operator UNP end_operator begin_call begin_name tee output stream end_name begin_argument_list begin_argument begin_expr begin_name error stream end_name end_expr end_argument begin_argument begin_expr begin_name keep alive error end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name error baos end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_name always log end_name begin_operator UNP end_operator begin_name output stream end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name output stream end_name end_type begin_name output log end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name log output stream end_name begin_argument_list begin_argument begin_expr begin_name managing task end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name output stream end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name output stream end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_name output log end_name begin_operator DP end_operator begin_operator UNP end_operator begin_call begin_name tee output stream end_name begin_argument_list begin_argument begin_expr begin_name output log end_name end_expr end_argument begin_argument begin_expr begin_name output stream end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name always log end_name begin_operator UNP end_operator begin_name error stream end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name output stream end_name end_type begin_name error log end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name log output stream end_name begin_argument_list begin_argument begin_expr begin_name managing task end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name error stream end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name error stream end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_name error log end_name begin_operator DP end_operator begin_operator UNP end_operator begin_call begin_name tee output stream end_name begin_argument_list begin_argument begin_expr begin_name error log end_name end_expr end_argument begin_argument begin_expr begin_name error stream end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name output filter chains end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name output filter chains end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name output encoding end_name begin_operator DOT end_operator begin_name equals ignore case end_name end_name begin_argument_list begin_argument begin_expr begin_name input encoding end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name lead pipe input stream end_name end_type begin_name snk end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name lead pipe input stream end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name snk end_name begin_operator DOT end_operator begin_name set managing component end_name end_name begin_argument_list begin_argument begin_expr begin_name managing task end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name out pump in end_name begin_init begin_expr begin_name snk end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name reader end_name end_type begin_name reader end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name input stream reader end_name begin_argument_list begin_argument begin_expr begin_name out pump in end_name end_expr end_argument begin_argument begin_expr begin_name input encoding end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name output filter chains end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name output filter chains end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name chain reader helper end_name end_type begin_name helper end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name chain reader helper end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name managing task end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name set primary reader end_name end_name begin_argument_list begin_argument begin_expr begin_name reader end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name set filter chains end_name end_name begin_argument_list begin_argument begin_expr begin_name output filter chains end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name reader end_name begin_operator EQ end_operator begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name get assembled reader end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name out pump in end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name reader input stream end_name begin_argument_list begin_argument begin_expr begin_name reader end_name end_expr end_argument begin_argument begin_expr begin_name output encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name thread end_name end_type begin_name t end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name thread end_name begin_argument_list begin_argument begin_expr begin_name thread group end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name stream pumper end_name begin_argument_list begin_argument begin_expr begin_name out pump in end_name end_expr end_argument begin_argument begin_expr begin_name output stream end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name set priority end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name thread end_name begin_operator DOT end_operator begin_name max priority end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name output stream end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name piped output stream end_name begin_argument_list begin_argument begin_expr begin_name snk end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name start end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name eye oh ex end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name eye oh ex end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name error filter chains end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name error filter chains end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name error encoding end_name begin_operator DOT end_operator begin_name equals ignore case end_name end_name begin_argument_list begin_argument begin_expr begin_name input encoding end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name lead pipe input stream end_name end_type begin_name snk end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name lead pipe input stream end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name snk end_name begin_operator DOT end_operator begin_name set managing component end_name end_name begin_argument_list begin_argument begin_expr begin_name managing task end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name err pump in end_name begin_init begin_expr begin_name snk end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name reader end_name end_type begin_name reader end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name input stream reader end_name begin_argument_list begin_argument begin_expr begin_name err pump in end_name end_expr end_argument begin_argument begin_expr begin_name input encoding end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name error filter chains end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name error filter chains end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name chain reader helper end_name end_type begin_name helper end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name chain reader helper end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name managing task end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name set primary reader end_name end_name begin_argument_list begin_argument begin_expr begin_name reader end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name set filter chains end_name end_name begin_argument_list begin_argument begin_expr begin_name error filter chains end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name reader end_name begin_operator EQ end_operator begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name get assembled reader end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name err pump in end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name reader input stream end_name begin_argument_list begin_argument begin_expr begin_name reader end_name end_expr end_argument begin_argument begin_expr begin_name error encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name thread end_name end_type begin_name t end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name thread end_name begin_argument_list begin_argument begin_expr begin_name thread group end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name stream pumper end_name begin_argument_list begin_argument begin_expr begin_name err pump in end_name end_expr end_argument begin_argument begin_expr begin_name error stream end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name set priority end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name thread end_name begin_operator DOT end_operator begin_name max priority end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name error stream end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name piped output stream end_name begin_argument_list begin_argument begin_expr begin_name snk end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name start end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name eye oh ex end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name eye oh ex end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_then end_if begin_comment if input files are specified input string and input stream are ignored end_comment begin_comment classes that work with redirector attributes can enforce end_comment begin_comment whatever warnings are needed end_comment begin_if begin_condition begin_expr begin_name input end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name begin_name input end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name managing task end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name begin_name input end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name input stream end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name concat file input stream end_name begin_argument_list begin_argument begin_expr begin_name input end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name eye oh ex end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name eye oh ex end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name concat file input stream end_name begin_operator RPAR end_operator begin_name input stream end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name set managing component end_name begin_argument_list begin_argument begin_expr begin_name managing task end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name input string end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name buf end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name log input string end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name input string end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name managing task end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name input stream end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name byte array input stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name input string end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if begin_if begin_condition begin_expr begin_name input stream end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name input filter chains end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name input filter chains end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name chain reader helper end_name end_type begin_name helper end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name chain reader helper end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name managing task end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name set primary reader end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name input stream reader end_name begin_argument_list begin_argument begin_expr begin_name input stream end_name end_expr end_argument begin_argument begin_expr begin_name input encoding end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name eye oh ex end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name eye oh ex end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name set filter chains end_name end_name begin_argument_list begin_argument begin_expr begin_name input filter chains end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name input stream end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name reader input stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name get assembled reader end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name input encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write properties end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name line end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name is configured end_name end_expr end_condition begin_then begin_expr_stmt begin_expr begin_call begin_name set up end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_then end_if begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name dir end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name dir end_name end_expr end_argument begin_argument begin_expr begin_name propfile end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file writer end_name end_name end_type begin_name out end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file writer end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name print stack trace end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment not used for jar files param we not used ant attribute ignore true end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set whenempty end_name begin_parameter_list begin_param begin_decl begin_type begin_name when empty end_name end_type begin_name we end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name scp test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name testname end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name testname end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_name condition handler end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment make sure tokenfilter exists end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test tokenfilter end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor for tra x liaison throws exception never end_comment begin_specifier end_specifier begin_name tra x liaison end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name regexp matcher end_name end_type begin_name get reg end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name reg end_name end_expr end_return end_block 
 begin_comment add nested text param s the text to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add text end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name xml fragment end_name begin_operator DOT end_operator begin_name this end_name begin_operator DOT end_operator begin_name add text end_name end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment log transfer stats to the log listener param time started the time started param time ended the finishing time param total length the total length end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name log stats end_name begin_parameter_list begin_param begin_decl begin_type begin_name long end_name end_type begin_name time started end_name end_decl end_param begin_param begin_decl begin_type begin_name long end_name end_type begin_name time ended end_name end_decl end_param begin_param begin_decl begin_type begin_name long end_name end_type begin_name total length end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name double end_name end_type begin_name duration end_name begin_init begin_expr begin_operator LPAR end_operator begin_name time ended end_name begin_operator MINUS end_operator begin_name time started end_name begin_operator RPAR end_operator begin_operator SLASH end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name number format end_name end_type begin_name format end_name begin_init begin_expr begin_call begin_name begin_name number format end_name begin_operator DOT end_operator begin_name get number instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name format end_name begin_operator DOT end_operator begin_name set maximum fraction digits end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name format end_name begin_operator DOT end_operator begin_name set minimum fraction digits end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name listener end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name format end_name begin_operator DOT end_operator begin_name format end_name end_name begin_argument_list begin_argument begin_expr begin_name duration end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name format end_name begin_operator DOT end_operator begin_name format end_name end_name begin_argument_list begin_argument begin_expr begin_name total length end_name begin_operator SLASH end_operator begin_name duration end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test normalize end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_comment start with simple absolute file names end_comment begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name normalize end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name normalize end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name normalize end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block end_catch end_try begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name normalize end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block end_catch end_try end_block end_else end_if begin_if begin_condition begin_expr begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment throw in drive letters end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name drive spec end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name normalize end_name end_name begin_argument_list begin_argument begin_expr begin_name drive spec end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_name drive spec end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name drive spec end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name normalize end_name end_name begin_argument_list begin_argument begin_expr begin_name drive spec end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name drive spec end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name normalize end_name end_name begin_argument_list begin_argument begin_expr begin_name drive spec end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name drive spec lower end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name drive spec lower end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name normalize end_name end_name begin_argument_list begin_argument begin_expr begin_name drive spec lower end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name drive spec lower end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name normalize end_name end_name begin_argument_list begin_argument begin_expr begin_name drive spec lower end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment promised to eliminate consecutive slashes after drive letter end_comment begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name drive spec end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name normalize end_name end_name begin_argument_list begin_argument begin_expr begin_name drive spec end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name drive spec end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name normalize end_name end_name begin_argument_list begin_argument begin_expr begin_name drive spec end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment throw in net ware volume names end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name drive spec end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name drive spec end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name normalize end_name end_name begin_argument_list begin_argument begin_expr begin_name drive spec end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name drive spec end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name normalize end_name end_name begin_argument_list begin_argument begin_expr begin_name drive spec end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name drive spec end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name normalize end_name end_name begin_argument_list begin_argument begin_expr begin_name drive spec end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name drive spec lower end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name drive spec end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name normalize end_name end_name begin_argument_list begin_argument begin_expr begin_name drive spec lower end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name drive spec end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name normalize end_name end_name begin_argument_list begin_argument begin_expr begin_name drive spec lower end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name drive spec end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name normalize end_name end_name begin_argument_list begin_argument begin_expr begin_name drive spec lower end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name drive spec end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name normalize end_name end_name begin_argument_list begin_argument begin_expr begin_name drive spec lower end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment promised to eliminate consecutive slashes after drive letter end_comment begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name drive spec end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name normalize end_name end_name begin_argument_list begin_argument begin_expr begin_name drive spec end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name drive spec end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name normalize end_name end_name begin_argument_list begin_argument begin_expr begin_name drive spec end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name drive spec end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name drive spec end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name normalize end_name end_name begin_argument_list begin_argument begin_expr begin_name drive spec end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment passed test end_comment end_block end_catch end_try end_block end_else end_if end_else end_if begin_comment now test some relative file name magic end_comment begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name localize end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name normalize end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name localize end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name localize end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name normalize end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name localize end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name localize end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name normalize end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name localize end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name localize end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name normalize end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name localize end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name localize end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name normalize end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name localize end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name localize end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name normalize end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name localize end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name localize end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name normalize end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name localize end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name localize end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name normalize end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name localize end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name normalize end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment expected exception caught end_comment end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name localize end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name normalize end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name localize end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment whether the file modification times will be rounded up to the next even number of seconds p zip archives store file modification times with a granularity of two seconds so the times will either be rounded up or down if you round down the archive will always seem out of date when you rerun the task so the default is to round up rounding up may lead to a different type of problems like js ps inside a web archive that seem to be slightly more recent than precompiled pages rendering precompilation useless p param r a code boolean code value since ant 1 6 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set round up end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name round up end_name begin_operator EQ end_operator begin_name r end_name end_expr end_expr_stmt end_block 
 begin_comment sets the ccm project on which the operation is applied param v value to assign to project end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set ccm project end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name v end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name ccm project end_name end_name begin_operator EQ end_operator begin_name v end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is filesystem only end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment handle the end of a element param uri the namespace uri of the element param tag the tag of the element param qname the qualified name of the element param context the current context exception sax parse exception if an error occurs end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name on end child end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name uri end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name tag end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name qname end_name end_decl end_param begin_param begin_decl begin_type begin_name ant xml context end_name end_type begin_name context end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name sax parse exception end_name end_expr end_argument end_throws begin_block end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test double attribute end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets a string containing filename and difference from previous version return a string representation of this cvs tag entry end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name buffer end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name revision end_name begin_operator EQT end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name prev revision end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name prev revision end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_name revision end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name prev revision end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name revision end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name revision end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name prev revision end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name prev revision end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name revision end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if end_else end_if begin_return begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment whether we want to compress the files or only store them return true if the files are to be compressed since ant 1 5 2 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is compress end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name do compress end_name end_expr end_return end_block 
 begin_comment handles the start of an element within this one this will always use a nested element handler param name the name of the element being started will not be code null code param attrs attributes of the element being started will not be code null code exception sax parse exception if an error occurs when initialising the child handler end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name start element end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name attribute list end_name end_type begin_name attrs end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name sax parse exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_operator UNP end_operator begin_call begin_name nested element handler end_name begin_argument_list begin_argument begin_expr begin_name helper impl end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_name element end_name end_expr end_argument begin_argument begin_expr begin_name wrapper end_name end_expr end_argument begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name init end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name attrs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment do the work exception build exception thrown in unrecoverable error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name get task type end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name source end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_name resources specified end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name dest end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name dest end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name dest end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name source end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name source end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name expand file end_name begin_argument_list begin_argument begin_expr begin_name file utils end_name end_expr end_argument begin_argument begin_expr begin_name source end_name end_expr end_argument begin_argument begin_expr begin_name dest end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name iterator end_name end_type begin_name iter end_name begin_init begin_expr begin_call begin_name begin_name resources end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name resource end_name end_type begin_name r end_name begin_init begin_expr begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name is exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_if begin_condition begin_expr begin_name r end_name begin_operator UNP end_operator begin_name file resource end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name expand file end_name begin_argument_list begin_argument begin_expr begin_name file utils end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name file resource end_name begin_operator RPAR end_operator begin_name r end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get file end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name dest end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name expand resource end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument begin_argument begin_expr begin_name dest end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_while end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test orboth end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect property set end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name has patterns end_name begin_parameter_list begin_param begin_decl begin_type begin_name pattern set end_name end_type begin_name ps end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name ps end_name begin_operator DOT end_operator begin_name get include patterns end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_name length end_name begin_operator GT end_operator begin_operator UNP end_operator begin_call begin_name begin_name ps end_name begin_operator DOT end_operator begin_name get exclude patterns end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_name length end_name begin_operator GT end_operator end_expr end_return end_block 
 begin_comment add the i as specific ejb descriptor to the list of files which will be written to the jar file param ejb files hashtable of ejb class and other files to be added to the completed jar file param dd prefix not used end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add vendor files end_name begin_parameter_list begin_param begin_decl begin_type begin_name hashtable end_name end_type begin_name ejb files end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name dd prefix end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ejb files end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name meta dir end_name begin_operator PLUS end_operator begin_name ias dd end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get config end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_name descriptor dir end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get ias descriptor name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test verify no args end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name abstract jar signer task end_name begin_operator DOT end_operator begin_name error no source end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment replace the current context classloader with the script context classloader return the current context classloader end_comment begin_type begin_specifier end_specifier begin_name class loader end_name end_type begin_name replace context loader end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name class loader end_name end_type begin_name orig context class loader end_name begin_init begin_expr begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name current thread end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get context class loader end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name get script class loader end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set script class loader end_name begin_argument_list begin_argument begin_expr begin_call begin_name get class end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get class loader end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name current thread end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set context class loader end_name begin_argument_list begin_argument begin_expr begin_call begin_name get script class loader end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name orig context class loader end_name end_expr end_return end_block 
 begin_comment sets the parameters used by this filter and sets the filter to an uninitialized status param parameters the parameters to be used by this filter should not be code null code end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set parameters end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name begin_name parameter end_name begin_index end_index end_name end_type begin_name parameters end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name parameters end_name end_name begin_operator EQ end_operator begin_name parameters end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set initialized end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 8 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the size of this resource return the size as a long 0 if the resource does not exist end_comment begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name get size end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get size end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_call begin_name get not null file end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test url keystore http end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name is offline end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment gets the code target folder code attribute return the target path on the local machine to check out to see set target folder string target folder end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get target folder end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name target folder end_name end_expr end_return end_block 
 begin_comment constructor for dummy instances see base filter reader base filter reader end_comment begin_specifier end_specifier begin_name tabs to spaces end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment extenders should emit to the log an entry describing the parameters that will be used by this operation param starteamroot folder root folder in star team for the operation param targetroot folder root local folder for the operation whether specified by the user or not end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name log operation description end_name begin_parameter_list begin_param begin_decl begin_type begin_name folder end_name end_type begin_name starteamroot folder end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name end_type begin_name targetroot folder end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name is recursive end_name end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name starteamroot folder end_name begin_operator DOT end_operator begin_name get folder hierarchy end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator LPAR end_operator begin_operator EQT end_operator begin_call begin_name get root local folder end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator begin_call begin_name begin_name targetroot folder end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log label end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log as of date end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log includes end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log excludes end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name lock status end_name end_name begin_operator EQT end_operator begin_name begin_name item end_name begin_operator DOT end_operator begin_name lock type end_name begin_operator DOT end_operator begin_name exclusive end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name lock status end_name end_name begin_operator EQT end_operator begin_name begin_name item end_name begin_operator DOT end_operator begin_name lock type end_name begin_operator DOT end_operator begin_name unlocked end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name use repository time stamp end_name end_name begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator LPAR end_operator begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name is forced end_name end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name delete uncontrolled end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name convert eol end_name end_name begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name create dirs end_name end_name begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment creates a classloader for the given project using the classpath given param project the project to which this classloader is to belong must not be code null code param classpath the classpath to use to load the classes this is combined with the system classpath in a manner determined by the value of build sysclasspath may be code null code in which case no path elements are set up to start with end_comment begin_specifier end_specifier begin_name ant class loader end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param begin_param begin_decl begin_type begin_name path end_name end_type begin_name classpath end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set parent end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set project end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set class path end_name begin_argument_list begin_argument begin_expr begin_name classpath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment construct a dewey decimal from an array of integer components param components an array of integer components end_comment begin_specifier end_specifier begin_name dewey decimal end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name begin_name int end_name begin_index end_index end_name end_type begin_name components end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name components end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_name begin_name int end_name begin_index begin_expr begin_name begin_name components end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_index end_name end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name components end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name components end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_name begin_name components end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_expr_stmt end_block end_for end_block 
 begin_comment overrides the version of data type to recurse on all data type child elements that may have been added param stk the stack of data types to use recursively param p the project to use to dereference the references throws build exception on error end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name die on circular reference end_name begin_parameter_list begin_param begin_decl begin_type begin_name stack end_name end_type begin_name stk end_name end_decl end_param begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name is checked end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name die on circular reference end_name end_name begin_argument_list begin_argument begin_expr begin_name stk end_name end_expr end_argument begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name rc end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name o end_name begin_init begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name o end_name begin_operator UNP end_operator begin_name data type end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name stk end_name begin_operator DOT end_operator begin_name push end_name end_name begin_argument_list begin_argument begin_expr begin_name o end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name invoke circular reference check end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name data type end_name begin_operator RPAR end_operator begin_name o end_name end_expr end_argument begin_argument begin_expr begin_name stk end_name end_expr end_argument begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name stk end_name begin_operator DOT end_operator begin_name pop end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for begin_expr_stmt begin_expr begin_call begin_name set checked end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment additional argument string passed to the weblogic instance optional param args the argument string end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set args end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name args end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name additional args end_name begin_operator EQ end_operator begin_name args end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test real test end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment doesn t work depending on the compression engine used end_comment begin_comment compressed bytes may differ false errors would be end_comment begin_comment reported end_comment begin_comment assert true file content mismatch end_comment begin_comment file utils content equals project resolve file expected asf logo huge tar bz 2 end_comment begin_comment project resolve file asf logo huge tar bz 2 end_comment begin_comment we have to compare the decompressed content instead end_comment begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name original file end_name begin_init begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name actual file end_name begin_init begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name original in end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name buffered input stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_name original file end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name original in end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name original in end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name actual in end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name buffered input stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_name actual file end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name actual in end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name actual in end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name original in end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name cb zip 2 input stream end_name begin_argument_list begin_argument begin_expr begin_name original in end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name actual in end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name cb zip 2 input stream end_name begin_argument_list begin_argument begin_expr begin_name actual in end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_while begin_condition begin_expr end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name expected end_name begin_init begin_expr begin_call begin_name begin_name original in end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name actual end_name begin_init begin_expr begin_call begin_name begin_name actual in end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name expected end_name begin_operator GE end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name expected end_name begin_operator UNP end_operator begin_name actual end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_name actual end_name begin_operator GE end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_break end_break end_block end_else end_if end_block end_while begin_expr_stmt begin_expr begin_call begin_name begin_name original in end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name actual in end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment shorthand method to set type of the text message text plain by default but text html or text xml is quite feasible param type the new message mime type value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set message mime type end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name type end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name message mime type end_name end_name begin_operator EQ end_operator begin_name type end_name end_expr end_expr_stmt end_block 
 begin_comment get the webinc attribute return the webinc attribute end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get webinc end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name webinc end_name end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 1 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment build the command line p check in file required parameters server name password database project file br check in file optional parameters workdir log verbose nocache nocompression soshome br check in project required parameters server name password database project br check in project optional parameters workdir recursive log verbose nocache nocompression soshome br return commandline the generated command to be executed end_comment begin_type begin_specifier end_specifier begin_name commandline end_name end_type begin_name build cmd line end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name command line end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name commandline end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment if we find a file attribute then act on a file otherwise act on a project end_comment begin_if begin_condition begin_expr begin_call begin_name get filename end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment add command check in file to the commandline end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name begin_name sos cmd end_name begin_operator DOT end_operator begin_name flag command end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name begin_name sos cmd end_name begin_operator DOT end_operator begin_name command checkin file end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment add file xxxxx to the commandline end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name begin_name sos cmd end_name begin_operator DOT end_operator begin_name flag file end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get filename end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment add command check in project to the commandline end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name begin_name sos cmd end_name begin_operator DOT end_operator begin_name flag command end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name begin_name sos cmd end_name begin_operator DOT end_operator begin_name command checkin project end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment look for a recursive option end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get recursive end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name get required attributes end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name get optional attributes end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment look for a comment end_comment begin_if begin_condition begin_expr begin_call begin_name get comment end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name begin_name sos cmd end_name begin_operator DOT end_operator begin_name flag comment end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get comment end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name command line end_name end_expr end_return end_block 
 begin_comment if true fail on compilation errors param b the new fail on error value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set fail on error end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name fail on error end_name begin_operator EQ end_operator begin_name b end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test presetdef with nested element twice end_name begin_parameter_list end_parameter_list begin_block begin_comment 38056 end_comment begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return a string that describes the command and arguments suitable for verbose output before a call to code runtime exec string code p this method assumes that the first entry in the array is the executable to run p param args the command line to describe as an array of strings return a string that describes the command and arguments since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name describe command end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name args end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name args end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name begin_name args end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name buf end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name args end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name begin_name args end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name describe arguments end_name begin_argument_list begin_argument begin_expr begin_name args end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name disclaimer end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_return begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment set the input to use for the task param input the file from which input is read end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set input end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name input end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name input string end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name using input end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name input mapper end_name begin_operator EQ end_operator begin_call begin_name create merge mapper end_name begin_argument_list begin_argument begin_expr begin_name input end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment construct a new code touch code task end_comment begin_specifier end_specifier begin_name touch end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment get the file where the checked out files should be placed return directory where the checked out files should be placed end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get dest end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name dest end_name end_name end_expr end_return end_block 
 begin_comment returns the nested exception if any return the nested exception or code null code if no exception is associated with this one end_comment begin_type begin_specifier end_specifier begin_name throwable end_name end_type begin_name get cause end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get exception end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment convenience method to copy a file from a source to a destination specifying if token filtering should be used if source files may overwrite newer destination files and if the last modified time of the resulting file should be set to that of the source file param source file file to copy from must not be code null code param dest file file to copy to must not be code null code param filtering whether or not token filtering should be used during the copy param overwrite whether or not the destination file should be overwritten if it already exists param preserve last modified whether or not the last modified time of the resulting file should be set to that of the source file exception io exception if the file cannot be copied deprecated since 1 4 x end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name copy file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name source file end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name dest file end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name filtering end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name overwrite end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name preserve last modified end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name copy file end_name end_name begin_argument_list begin_argument begin_expr begin_name source file end_name end_expr end_argument begin_argument begin_expr begin_name dest file end_name end_expr end_argument begin_argument begin_expr begin_name filtering end_name begin_operator QM end_operator begin_name global filters end_name begin_operator DP end_operator end_expr end_argument begin_argument begin_expr begin_name overwrite end_name end_expr end_argument begin_argument begin_expr begin_name preserve last modified end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment end execute end_comment begin_comment build up our ilasm command return end_comment begin_type begin_specifier end_specifier begin_name net command end_name end_type begin_name build ilasm command end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name net command end_name end_type begin_name command end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name net command end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_name exe title end_name end_expr end_argument begin_argument begin_expr begin_name exe name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name set fail on error end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get fail on error end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment fill in args end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get debug parameter end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get target type parameter end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get listing parameter end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get output file parameter end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get resource file parameter end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get verbose parameter end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get keyfile parameter end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get extra options parameter end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment space for more argumentativeness command add argument command add argument end_comment begin_return begin_expr begin_name command end_name end_expr end_return end_block 
 begin_comment constructor using a archive fileset arguement param fileset the archivefileset to use end_comment begin_specifier end_specifier begin_name archive file set end_name begin_parameter_list begin_param begin_decl begin_type begin_name archive file set end_name end_type begin_name fileset end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name fileset end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name src end_name begin_operator EQ end_operator begin_name begin_name fileset end_name begin_operator DOT end_operator begin_name src end_name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name prefix end_name begin_operator EQ end_operator begin_name begin_name fileset end_name begin_operator DOT end_operator begin_name prefix end_name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name fullpath end_name begin_operator EQ end_operator begin_name begin_name fileset end_name begin_operator DOT end_operator begin_name fullpath end_name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name has dir end_name begin_operator EQ end_operator begin_name begin_name fileset end_name begin_operator DOT end_operator begin_name has dir end_name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name file mode end_name begin_operator EQ end_operator begin_name begin_name fileset end_name begin_operator DOT end_operator begin_name file mode end_name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name dir mode end_name begin_operator EQ end_operator begin_name begin_name fileset end_name begin_operator DOT end_operator begin_name dir mode end_name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name file mode has been set end_name begin_operator EQ end_operator begin_name begin_name fileset end_name begin_operator DOT end_operator begin_name file mode has been set end_name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name dir mode has been set end_name begin_operator EQ end_operator begin_name begin_name fileset end_name begin_operator DOT end_operator begin_name dir mode has been set end_name end_name end_expr end_expr_stmt end_block 
 begin_comment configure the project if the property junit run fatal tests is set we run the fatal tests end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment final string propname tests classpath value end_comment begin_comment string test classpath system get property propname end_comment begin_comment system out println test cp test classpath end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name propname end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name run fatal end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name run fatal end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_expr_stmt begin_expr begin_name run fatal tests end_name begin_operator EQ end_operator end_expr end_expr_stmt end_then end_if end_block 
 begin_comment print out a line of s equal to specified size param size the number of dashes to printout end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name print line end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name size end_name end_decl end_param end_parameter_list begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name size end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment whether or not the build should halt if compilation fails defaults to code true code param fail a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set failonerror end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name fail end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name fail on error end_name begin_operator EQ end_operator begin_name fail end_name end_expr end_expr_stmt end_block 
 begin_comment default constructor end_comment begin_specifier end_specifier begin_name filter set end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 2 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment send the email throws build exception if the email can t be sent end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name send end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name properties end_name end_type begin_name props end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name properties end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name host end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name string end_name begin_operator DOT end_operator begin_name value of end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment aside the jdk is clearly unaware of the scottish end_comment begin_comment session which involves excessive quantities of end_comment begin_comment alcohol end_comment begin_decl_stmt begin_decl begin_type begin_name session end_name end_type begin_name sesh end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name authenticator end_name end_type begin_name auth end_name end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name ssl end_name end_expr end_condition begin_then begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name provider end_name end_type begin_name p end_name begin_init begin_expr begin_operator LPAR end_operator begin_name provider end_name begin_operator RPAR end_operator begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name new instance end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name security end_name begin_operator DOT end_operator begin_name add provider end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_comment smtp provider end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name ssl factory end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name user end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name password end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name sesh end_name begin_operator EQ end_operator begin_call begin_name begin_name session end_name begin_operator DOT end_operator begin_name get default instance end_name end_name begin_argument_list begin_argument begin_expr begin_name props end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name auth end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name simple authenticator end_name begin_argument_list begin_argument begin_expr begin_name user end_name end_expr end_argument begin_argument begin_expr begin_name password end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name sesh end_name begin_operator EQ end_operator begin_call begin_name begin_name session end_name begin_operator DOT end_operator begin_name get instance end_name end_name begin_argument_list begin_argument begin_expr begin_name props end_name end_expr end_argument begin_argument begin_expr begin_name auth end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_comment create the message end_comment begin_decl_stmt begin_decl begin_type begin_name mime message end_name end_type begin_name msg end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name mime message end_name begin_argument_list begin_argument begin_expr begin_name sesh end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name mime multipart end_name end_type begin_name attachments end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name mime multipart end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment set the sender end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name from end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name set from end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name internet address end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name from end_name begin_operator DOT end_operator begin_name get address end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name set from end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name internet address end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name from end_name begin_operator DOT end_operator begin_name get address end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name from end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_comment set the reply to addresses end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name set reply to end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name internet addresses end_name begin_argument_list begin_argument begin_expr begin_name reply to list end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name set recipients end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name message end_name begin_operator DOT end_operator begin_name recipient type end_name begin_operator DOT end_operator begin_name to end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name internet addresses end_name begin_argument_list begin_argument begin_expr begin_name to list end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name set recipients end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name message end_name begin_operator DOT end_operator begin_name recipient type end_name begin_operator DOT end_operator begin_name cc end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name internet addresses end_name begin_argument_list begin_argument begin_expr begin_name cc list end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name set recipients end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name message end_name begin_operator DOT end_operator begin_name recipient type end_name begin_operator DOT end_operator begin_name bcc end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name internet addresses end_name begin_argument_list begin_argument begin_expr begin_name bcc list end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment choosing character set of the mail message end_comment begin_comment first looking it from mime type end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name charset end_name begin_init begin_expr begin_call begin_name parse char set from mime type end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name charset end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment assign reassign message charset from mime type end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name set charset end_name end_name begin_argument_list begin_argument begin_expr begin_name charset end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment next looking if charset having explicit definition end_comment begin_expr_stmt begin_expr begin_name charset end_name begin_operator EQ end_operator begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name get charset end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name charset end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment using default end_comment begin_expr_stmt begin_expr begin_name charset end_name begin_operator EQ end_operator begin_name default charset end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name set charset end_name end_name begin_argument_list begin_argument begin_expr begin_name charset end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if begin_comment using javax activation data source paradigm end_comment begin_decl_stmt begin_decl begin_type begin_name string data source end_name end_type begin_name sds end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string data source end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sds end_name begin_operator DOT end_operator begin_name set content type end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sds end_name begin_operator DOT end_operator begin_name set charset end_name end_name begin_argument_list begin_argument begin_expr begin_name charset end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name subject end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name set subject end_name end_name begin_argument_list begin_argument begin_expr begin_name subject end_name end_expr end_argument begin_argument begin_expr begin_name charset end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name add header end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get date end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name iter end_name begin_init begin_expr begin_call begin_name begin_name headers end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name header end_name end_type begin_name h end_name begin_init begin_expr begin_operator LPAR end_operator begin_name header end_name begin_operator RPAR end_operator begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name add header end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name h end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name h end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_decl_stmt begin_decl begin_type begin_name print stream end_name end_type begin_name out end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name print stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name sds end_name begin_operator DOT end_operator begin_name get output stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name mime body part end_name end_type begin_name textbody end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name mime body part end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name textbody end_name begin_operator DOT end_operator begin_name set data handler end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name data handler end_name begin_argument_list begin_argument begin_expr begin_name sds end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name attachments end_name begin_operator DOT end_operator begin_name add body part end_name end_name begin_argument_list begin_argument begin_expr begin_name textbody end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name mime body part end_name end_type begin_name body end_name end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name body end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name mime body part end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name can read end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file data source end_name end_type begin_name file data end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file data source end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name data handler end_name end_type begin_name file data handler end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name data handler end_name begin_argument_list begin_argument begin_expr begin_name file data end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name body end_name begin_operator DOT end_operator begin_name set data handler end_name end_name begin_argument_list begin_argument begin_expr begin_name file data handler end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name body end_name begin_operator DOT end_operator begin_name set file name end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name attachments end_name begin_operator DOT end_operator begin_name add body part end_name end_name begin_argument_list begin_argument begin_expr begin_name body end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_call begin_name begin_name msg end_name begin_operator DOT end_operator begin_name set content end_name end_name begin_argument_list begin_argument begin_expr begin_name attachments end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name transport end_name begin_operator DOT end_operator begin_name send end_name end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name messaging exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment gets the rdbms return returns a string end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get rdbms end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name rdbms end_name end_expr end_return end_block 
 begin_comment creates the input handler and adds it to the project param project the project instance exception build exception if a specified input handler implementation could not be loaded end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add input handler end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name input handler end_name end_type begin_name handler end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name input handler classname end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name handler end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name default input handler end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name handler end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name input handler end_name begin_operator RPAR end_operator begin_call begin_name begin_name classpath utils end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list begin_argument begin_expr begin_name input handler classname end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name main end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name get class loader end_name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name input handler end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name project end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name set project reference end_name end_name begin_argument_list begin_argument begin_expr begin_name handler end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name set input handler end_name end_name begin_argument_list begin_argument begin_expr begin_name handler end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the number of runs return the number of runs end_comment begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name run count end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name runs end_name end_expr end_return end_block 
 begin_comment tests vss history required attributes end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test history exceptions end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name expect specific build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add value end_name begin_parameter_list begin_param begin_decl begin_type begin_name my value end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_comment evaluate integer code true code vs code false code counts param t the number of code true code values param f the number of code false code values return true if the arguments fell within the parameters of this quantifier end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name evaluate end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name t end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name f end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name index end_name begin_init begin_expr begin_call begin_name get index end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name index end_name begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_return begin_expr begin_name begin_name preds end_name begin_index begin_expr begin_name index end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name eval end_name begin_argument_list begin_argument begin_expr begin_name t end_name end_expr end_argument begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment sets the commandline of the subprocess to launch param commandline the commandline of the subprocess to launch end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set commandline end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name commandline end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name cmdl end_name begin_operator EQ end_operator begin_name commandline end_name end_expr end_expr_stmt end_block 
 begin_comment return code true code if the first version number is greater than or equal to the second otherwise return code false code param first first version number dotted decimal param second second version number dotted decimal end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is compatible end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name dewey decimal end_name end_type begin_name first end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name dewey decimal end_name end_type begin_name second end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name first end_name begin_operator DOT end_operator begin_name is greater than or equal end_name end_name begin_argument_list begin_argument begin_expr begin_name second end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment return the filters return a code vector code value containing the filters end_comment begin_type begin_specifier end_specifier begin_name vector end_name end_type begin_name get filter readers end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name filter readers end_name end_expr end_return end_block 
 begin_comment sets the loader ref param r the reference to the loader end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set loader ref end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name loader id end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name get ref id end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment implement basic resource equality param other the object to check against return true if the specified object is equal to this resource since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name equals end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name other end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name other end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name other end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name get class end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name compare to end_name begin_argument_list begin_argument begin_expr begin_name other end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test set value end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect property set end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set state end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name state end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name one liner end_name begin_operator DOT end_operator begin_name this end_name begin_operator DOT end_operator begin_name set state end_name end_name begin_argument_list begin_argument begin_expr begin_name state end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test cannot double eof end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add the modified selector param selector the selector to add since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add modified end_name begin_parameter_list begin_param begin_decl begin_type begin_name modified selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name append selector end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the list of valid strings return the list of values skip merge and mergewithoutmain end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get values end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_return end_block 
 begin_comment a specialised trim that trims whitespace from the start and end of strings end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name trim end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name t end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name trim angle brackets end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name start end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name end end_name begin_init begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name trim end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_do begin_block begin_expr_stmt begin_expr begin_name trim end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name end end_name begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name end end_name begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_operator UNP end_operator begin_name trim angle brackets end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name end end_name begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name end end_name begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name end end_name begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call begin_operator LE end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name trim end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name end end_name begin_operator MMINUS end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name start end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name start end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_operator UNP end_operator begin_name trim angle brackets end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name start end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name start end_name end_expr end_argument end_argument_list end_call begin_operator LE end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name trim end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name start end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_then end_if end_block begin_condition begin_expr begin_name trim end_name end_expr end_condition end_do begin_return begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name start end_name end_expr end_argument begin_argument begin_expr begin_name end end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment whether the user has specified the mode explicitly return true if it has been set end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name has dir mode been set end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name archive file set end_name begin_operator RPAR end_operator begin_call begin_name get ref end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name has dir mode been set end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr begin_name dir mode has been set end_name end_expr end_return end_block 
 begin_comment tears down the fixture for example close a network connection this method is called after a test is executed end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the outputfile to write the generated java cc grammar file to if not set the file is written with the same name as the jj tree grammar file with a suffix jj param output file the output file name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set outputfile end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name output file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name output file end_name end_name begin_operator EQ end_operator begin_name output file end_name end_expr end_expr_stmt end_block 
 begin_comment get the classpath to the weblogic classpaths return a path to be configured end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name create wl classpath end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name weblogic classpath end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name weblogic classpath end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name weblogic classpath end_name begin_operator DOT end_operator begin_name create path end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 3 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect name address end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name email address end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name validate attributes end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name target file end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name target file end_name begin_operator DOT end_operator begin_name is file end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name target file end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment if no output directory is specified used the target s directory end_comment begin_if begin_condition begin_expr begin_name output directory end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set outputdirectory end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name target file end_name begin_operator DOT end_operator begin_name get parent end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name output directory end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name output directory end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment constructs a new mail message to send an email use the given host and port as the mail server param host the mail server to use param port the port to connect to exception io exception if there s any problem contacting the mail server end_comment begin_specifier end_specifier begin_name mail message end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name host end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name port end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name port end_name end_name begin_operator EQ end_operator begin_name port end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name host end_name end_name begin_operator EQ end_operator begin_name host end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name replyto end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name to end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name cc end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name headers keys end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name headers values end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name connect end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name send helo end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test real test with resource end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name io exception end_name end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name test real test end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a scale image operation to the chain param instr the scale operation to add to the chain see org apache tools ant types optional image scale end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add scale end_name begin_parameter_list begin_param begin_decl begin_type begin_name scale end_name end_type begin_name instr end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name instructions end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name instr end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get a string representation of the regexp pattern return the pattern end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get pattern end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name pattern end_name end_name end_expr end_return end_block 
 begin_comment if true do a verbose reconfigure operation default false param v value to assign to verbose end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set verbose end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name v end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name verbose end_name end_name begin_operator EQ end_operator begin_name v end_name end_expr end_expr_stmt end_block 
 begin_comment set global p 4 options used on all of the perforce tasks param p 4 opts global options to use a specific p 4 config file for instance end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set globalopts end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name p 4 opts end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name p 4 opts end_name end_name begin_operator EQ end_operator begin_name p 4 opts end_name end_expr end_expr_stmt end_block 
 begin_comment set the service type param type the service type a classname of an interface or a class normally abstract end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set type end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name type end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name type end_name end_name begin_operator EQ end_operator begin_name type end_name end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name simple authenticator end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name user end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name password end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name user end_name end_name begin_operator EQ end_operator begin_name user end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name password end_name end_name begin_operator EQ end_operator begin_name password end_name end_expr end_expr_stmt end_block 
 begin_comment there are 2 ways to hook into property handling you can replace the main property helper the replacement is required to support the same semantics of course you can chain a property helper capable of storing some properties again you are required to respect the immutability semantics at least for non dynamic properties param next the next property helper in the chain end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set next end_name begin_parameter_list begin_param begin_decl begin_type begin_name property helper end_name end_type begin_name next end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name next end_name end_name begin_operator EQ end_operator begin_name next end_name end_expr end_expr_stmt end_block 
 begin_comment create a classfile set from another classfile set param s the other classfileset end_comment begin_specifier end_specifier begin_name classfile set end_name begin_parameter_list begin_param begin_decl begin_type begin_name classfile set end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name root classes end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name vector end_name begin_operator RPAR end_operator begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name root classes end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the use repository timestmp member param use repository time stamp true means checked out files will get the repository timestamp false means the checked out files will be timestamped at the time of checkout end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set use repository time stamp end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name use repository time stamp end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name use repository time stamp end_name end_name begin_operator EQ end_operator begin_name use repository time stamp end_name end_expr end_expr_stmt end_block 
 begin_comment indicate if the analyzer is required to follow indirect class relationships return true if indirect relationships should be followed end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is closure required end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name closure end_name end_expr end_return end_block 
 begin_comment sort the contained elements return a collection of resources end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name collection end_name end_type begin_name get collection end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name resource collection end_name end_type begin_name rc end_name begin_init begin_expr begin_call begin_name get resource collection end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name rc end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_name begin_name collections end_name begin_operator DOT end_operator begin_name empty set end_name end_name end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name tokenizer end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name tokenizer end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name line tokenizer end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name concat resource input stream end_name end_type begin_name cat end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name concat resource input stream end_name begin_argument_list begin_argument begin_expr begin_name rc end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cat end_name begin_operator DOT end_operator begin_name set managing component end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name input stream reader end_name end_type begin_name rdr end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name encoding end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name rdr end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name input stream reader end_name begin_argument_list begin_argument begin_expr begin_name cat end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_try begin_block begin_expr_stmt begin_expr begin_name rdr end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name input stream reader end_name begin_argument_list begin_argument begin_expr begin_name cat end_name end_expr end_argument begin_argument begin_expr begin_name encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name unsupported encoding exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_else end_if begin_decl_stmt begin_decl begin_type begin_name array list end_name end_type begin_name result end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_for begin_init begin_decl begin_type begin_name string end_name end_type begin_name s end_name begin_init begin_expr begin_call begin_name begin_name tokenizer end_name begin_operator DOT end_operator begin_name get token end_name end_name begin_argument_list begin_argument begin_expr begin_name rdr end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_name s end_name begin_operator UNP end_operator end_expr end_condition begin_incr begin_expr begin_name s end_name begin_operator EQ end_operator begin_call begin_name begin_name tokenizer end_name begin_operator DOT end_operator begin_name get token end_name end_name begin_argument_list begin_argument begin_expr begin_name rdr end_name end_expr end_argument end_argument_list end_call end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name string resource end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_return begin_expr begin_name result end_name end_expr end_return end_block 
 begin_comment add a sound when the build succeeds return a build alert to be configured end_comment begin_type begin_specifier end_specifier begin_name build alert end_name end_type begin_name create success end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name success end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name build alert end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name success end_name end_expr end_return end_block 
 begin_comment set a property return true if the feature could be set end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name eval property end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name xml reader end_name end_type begin_name reader end_name begin_init begin_expr begin_call begin_name get reader end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name set property end_name end_name begin_argument_list begin_argument begin_expr begin_name property end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name sax not recognized exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name property end_name begin_operator PLUS end_operator begin_name not recognized end_name begin_operator PLUS end_operator begin_name property end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name sax not supported exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name property end_name begin_operator PLUS end_operator begin_name not supported end_name begin_operator PLUS end_operator begin_name property end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block end_catch end_try begin_return begin_expr end_expr end_return end_block 
 begin_comment enable or disable system assertions default is not set neither enablesystemassersions or disablesytemassertions are used on the command line param enable system assertions if true enable system assertions end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set enable system assertions end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name enable system assertions end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name check attributes allowed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name enable system assertions end_name end_name begin_operator EQ end_operator begin_name enable system assertions end_name end_expr end_expr_stmt end_block 
 begin_comment do nothing end_comment begin_comment the command line entry point for jlink param args an array of arguments end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name main end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name args end_name end_decl end_param end_parameter_list begin_block begin_comment jlink output input 1 input n end_comment begin_if begin_condition begin_expr begin_name begin_name args end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name exit end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name jlink end_name end_type begin_name linker end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name jlink end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name linker end_name begin_operator DOT end_operator begin_name set outfile end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name args end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment to maintain compatibility with the command line version end_comment begin_comment we will only add files to be merged end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name args end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name linker end_name begin_operator DOT end_operator begin_name add merge file end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name args end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name linker end_name begin_operator DOT end_operator begin_name link end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ex end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name init block end_name begin_parameter_list end_parameter_list begin_block begin_comment block no end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name crc end_name begin_operator DOT end_operator begin_name initialise crc end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name last end_name end_name begin_operator EQ end_operator begin_operator MINUS end_operator end_expr end_expr_stmt begin_comment ch 0 end_comment begin_decl_stmt begin_decl begin_type begin_name boolean end_name begin_index end_index end_type begin_name in use end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name data end_name begin_operator DOT end_operator begin_name in use end_name end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_operator MMINUS end_operator begin_name i end_name begin_operator GE end_operator end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_name begin_name in use end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_for begin_comment 20 is just a paranoia constant end_comment begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name allowable block size end_name end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name block size 100 k end_name end_name begin_operator STAR end_operator begin_name begin_name b zip 2 constants end_name begin_operator DOT end_operator begin_name base block size end_name end_name begin_operator RPAR end_operator begin_operator MINUS end_operator end_expr end_expr_stmt end_block 
 begin_comment else end_comment begin_comment system out println message end_comment begin_comment end_comment begin_comment sets the current thread s context loader to this classloader storing the current loader value for later resetting end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set thread context loader end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name is context loader saved end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name loader utils end_name begin_operator DOT end_operator begin_name is context loader available end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name saved context loader end_name begin_operator EQ end_operator begin_call begin_name begin_name loader utils end_name begin_operator DOT end_operator begin_name get context class loader end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name class loader end_name end_type begin_name loader end_name begin_init begin_expr begin_name this end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name project end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name loader end_name begin_operator EQ end_operator begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get class loader end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name loader utils end_name begin_operator DOT end_operator begin_name set context class loader end_name end_name begin_argument_list begin_argument begin_expr begin_name loader end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name is context loader saved end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment return true if value is truncate end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is truncate mode end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name truncate end_name begin_operator DOT end_operator begin_name equals ignore case end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add failure end_name begin_parameter_list begin_param begin_decl begin_type begin_name test end_name end_type begin_name test end_name end_decl end_param begin_param begin_decl begin_type begin_name assertion failed error end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name test listener end_name begin_operator DOT end_operator begin_name add failure end_name end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument begin_argument begin_expr begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment name of the loader if none the default loader will be modified param name the name of this loader end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name name end_name end_name begin_operator EQ end_operator begin_name name end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 2 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the project param project the owner of this component end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set project end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name set project component end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add an or selector entry on the selector list param selector the selector to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add or end_name begin_parameter_list begin_param begin_decl begin_type begin_name or selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name fileset end_name begin_operator DOT end_operator begin_name add or end_name end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the delimiter type normal or row default normal p the delimiter type takes two values normal and row normal means that any occurrence of the delimiter terminate the sql command whereas with row only a line containing just the delimiter is recognized as the end of the command p param delimiter type the type of delimiter normal or row end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set delimiter type end_name begin_parameter_list begin_param begin_decl begin_type begin_name delimiter type end_name end_type begin_name delimiter type end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name delimiter type end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name delimiter type end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the property you wish to assign the temporary file to param property the property to set ant attribute group required end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set property end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name property end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name property end_name end_name begin_operator EQ end_operator begin_name property end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name log file end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name log file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set property end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name log file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return an instance of the mangler this compiler uses end_comment begin_type begin_specifier end_specifier begin_name jsp mangler end_name end_type begin_name create mangler end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name mangler end_name end_expr end_return end_block 
 begin_comment set the name of this resource param name relative path of the resource expects quot quot to be used as the directory separator end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name check attributes allowed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name name end_name end_name begin_operator EQ end_operator begin_name name end_name end_expr end_expr_stmt end_block 
 begin_comment if true automatically includes the common assemblies in dotnet and tells the compiler to link in mscore dll set the automatic reference inclusion flag on or off this flag controls the nostdlib option in csc param f on off flag end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set include default references end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name f end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name include default references end_name begin_operator EQ end_operator begin_name f end_name end_expr end_expr_stmt end_block 
 begin_comment sets the level to which this recorder entry should log to param level the level to set see verbosity level choices end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set loglevel end_name begin_parameter_list begin_param begin_decl begin_type begin_name verbosity level choices end_name end_type begin_name level end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name loglevel end_name begin_operator EQ end_operator begin_call begin_name begin_name level end_name begin_operator DOT end_operator begin_name get level end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment builds and returns the command string to execute ccm return string containing path to the executable end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get ccm command end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name to return end_name begin_init begin_expr begin_name ccm dir end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name to return end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name to return end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name to return end_name begin_operator UNP end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name to return end_name begin_operator UNP end_operator begin_name ccm exe end_name end_expr end_expr_stmt begin_return begin_expr begin_name to return end_name end_expr end_return end_block 
 begin_comment cleans recorder registry param event ignored since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name build finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name cleanup end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test vss create required attributes end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test create exceptions end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name expect specific build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment equality depending in the index param other the object to test equality against return true if the object has the same index as this end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name equals end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name other end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_name other end_name begin_operator UNP end_operator begin_name cr lf end_name begin_operator UNP end_operator begin_call begin_name get index end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name cr lf end_name begin_operator RPAR end_operator begin_name other end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get index end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment returns the names of the files which matched at least one of the include patterns and none of the exclude patterns the names are relative to the base directory return the names of the files which matched at least one of the include patterns and none of the exclude patterns end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get included files end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name src end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name get included files end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name scanme end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name set end_name end_type begin_name s end_name begin_init begin_expr begin_call begin_name begin_name match file entries end_name begin_operator DOT end_operator begin_name key set end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_operator LPAR end_operator begin_name begin_name string end_name begin_index end_index end_name begin_operator RPAR end_operator begin_operator LPAR end_operator begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name to array end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment a unit test for j unit end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test schema must be set end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name wsdl to dotnet end_name begin_operator DOT end_operator begin_name schema end_name begin_operator DOT end_operator begin_name error none declared end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a contains selector entry on the selector list param selector the selector to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add contains end_name begin_parameter_list begin_param begin_decl begin_type begin_name contains selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name append selector end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name method end_name end_type begin_name get execute method end_name begin_parameter_list begin_param begin_decl begin_type begin_name class end_name end_type begin_name proxy class end_name end_decl end_param end_parameter_list begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name method end_name end_type begin_name exec method end_name begin_init begin_expr begin_call begin_name begin_name proxy class end_name begin_operator DOT end_operator begin_name get method end_name end_name begin_argument_list begin_argument begin_expr begin_name exec method name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name void end_name begin_operator DOT end_operator begin_name type end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name exec method end_name begin_operator DOT end_operator begin_name get return type end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name message end_name begin_init begin_expr begin_operator PLUS end_operator begin_name exec method name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name exec method end_name begin_operator DOT end_operator begin_name get return type end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name proxy class end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name exec method end_name end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no such method exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name message end_name begin_init begin_expr begin_operator PLUS end_operator begin_name exec method name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name proxy class end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment set the directory into which the support classes rmi stubs etc are to be written param dir name the name of the directory into which code is generated end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set dest end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name dir name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name generated files directory end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name dir name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test echo to log end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name contains selector test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the height param height the height of the arc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set height end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name height end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name height end_name end_name begin_operator EQ end_operator begin_name height end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name project end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name project end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name init end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name rmic end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name rmic end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name rmic end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name delete cachefile end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name basedir end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name buildfile end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get parent file end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name cache file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cache file end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment report a listing of system properties existing in the current vm param out the stream to print the properties to end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name do report system properties end_name begin_parameter_list begin_param begin_decl begin_type begin_name print stream end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name properties end_name end_type begin_name sysprops end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name sysprops end_name begin_operator EQ end_operator begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get properties end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name security exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name ignore throwable end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name keys end_name begin_init begin_expr begin_call begin_name begin_name sysprops end_name begin_operator DOT end_operator begin_name property names end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name keys end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name key end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name keys end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name value end_name begin_init begin_expr begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_comment sets the branch param br the name of the branch to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set branch end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name br end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name branch end_name end_name begin_operator EQ end_operator begin_name br end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test global end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name buf end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name off end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name len end_name end_decl end_param end_parameter_list begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name len end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name write end_name begin_argument_list begin_argument begin_expr begin_name begin_name buf end_name begin_index begin_expr begin_name off end_name begin_operator PLUS end_operator begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_comment validates the passed in attributes p the rules are ol li if action is deploy or update the application and source attributes must be supplied li if action is delete or undeploy the application attribute must be supplied exception build exception description of exception end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name validate attributes end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_comment super validate attributes don t want to call this method end_comment begin_decl_stmt begin_decl begin_type begin_name java end_name end_type begin_name java end_name begin_init begin_expr begin_call begin_name get java end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name action end_name begin_init begin_expr begin_call begin_name get task end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get action end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name action end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name is action valid end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name action end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name get class name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set class name end_name begin_argument_list begin_argument begin_expr begin_name jonas deploy class name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name jonasroot end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name jonasroot end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name create jvmarg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name jonasroot end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name create jvmarg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name jonasroot end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name orb end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name create jvmarg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name create jvmarg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name create jvmarg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name create jvmarg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name create jvmarg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name create jvmarg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name create jvmarg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name david host end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name create jvmarg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name david host end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name david port end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name create jvmarg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name david port end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name get server end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name create arg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set line end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get server end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name action end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name action deploy end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name action end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name action update end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name action end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name create arg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set line end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get task end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get source end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name action end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name action delete end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name action end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name action undeploy end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name create arg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set line end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get task end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get source end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name action end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name action list end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name create arg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if end_else end_if end_block 
 begin_comment set the stream to which all output system out as well as system err will be written param out the print stream where output should be sent deprecated since 1 4 x manage output at the task level end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set output end_name begin_parameter_list begin_param begin_decl begin_type begin_name print stream end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_specifier end_specifier begin_name typedef test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test resource plain end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor for scp from message param verbose if true do verbose logging param session the ssh session to use since ant 1 7 end_comment begin_specifier end_specifier begin_name scp from message end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name verbose end_name end_decl end_param begin_param begin_decl begin_type begin_name session end_name end_type begin_name session end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name verbose end_name end_expr end_argument begin_argument begin_expr begin_name session end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment this method does the work of creating the new view and checking it into starteam throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name revisionlabel end_name end_name begin_operator UNP end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name buildlabel end_name end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name view end_name end_type begin_name snapshot end_name begin_init begin_expr begin_call begin_name open view end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment create the new label and update the repository end_comment begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name revisionlabel end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_operator UNP end_operator begin_call begin_name label end_name begin_argument_list begin_argument begin_expr begin_name snapshot end_name end_expr end_argument begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name label name end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name description end_name end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name update end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name label name end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name last build end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_operator UNP end_operator begin_call begin_name label end_name begin_argument_list begin_argument begin_expr begin_name snapshot end_name end_expr end_argument begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name label name end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name description end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name last build end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name buildlabel end_name end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name update end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name buildlabel end_name end_name begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name label name end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name last build end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_operator UNP end_operator begin_call begin_name label end_name begin_argument_list begin_argument begin_expr begin_name snapshot end_name end_expr end_argument begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name label name end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name description end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name buildlabel end_name end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name update end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name buildlabel end_name end_name begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name label name end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name disconnect from server end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment the classpath to use param src the classpath end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classpath end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name src end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name classpath end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name classpath end_name begin_operator EQ end_operator begin_name src end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name classpath end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name src end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment create the jarsigner executable task return a task set up with the executable of jarsigner failonerror true and bound to our redirector end_comment begin_type begin_specifier end_specifier begin_name exec task end_name end_type begin_name create jar signer end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name exec task end_name end_type begin_name cmd end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name exec task end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name set executable end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name get jdk executable end_name end_name begin_argument_list begin_argument begin_expr begin_name jarsigner command end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name set task type end_name end_name begin_argument_list begin_argument begin_expr begin_name jarsigner command end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name set failonerror end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name add configured redirector end_name end_name begin_argument_list begin_argument begin_expr begin_name redirector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name cmd end_name end_expr end_return end_block 
 begin_comment find out whether this resource exists return true if the property is set false otherwise end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is exists end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get value end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name run end_name begin_parameter_list end_parameter_list begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_operator UNP end_operator begin_name run end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name current thread end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name sleep end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name interrupted exception end_name end_type begin_name ie end_name end_decl end_param end_parameter_list begin_block end_block end_catch end_try end_block end_for begin_synchronized begin_expr begin_name this end_name end_expr begin_block begin_expr_stmt begin_expr begin_name done end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name notify all end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_synchronized end_block 
 begin_comment test a mail message with no cc or bcc lines end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test to only end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name server thread end_name end_type begin_name test mail server end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name server thread end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name thread end_name end_type begin_name server end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name thread end_name begin_argument_list begin_argument begin_expr begin_name test mail server end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name server end_name begin_operator DOT end_operator begin_name start end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name client thread end_name end_type begin_name test mail client end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name client thread end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test mail client end_name begin_operator DOT end_operator begin_name from end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test mail client end_name begin_operator DOT end_operator begin_name to end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test mail client end_name begin_operator DOT end_operator begin_name set subject end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test mail client end_name begin_operator DOT end_operator begin_name set message end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name thread end_name end_type begin_name client end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name thread end_name begin_argument_list begin_argument begin_expr begin_name test mail client end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name client end_name begin_operator DOT end_operator begin_name start end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name server end_name begin_operator DOT end_operator begin_name join end_name end_name begin_argument_list begin_argument begin_expr begin_operator STAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment 60 s end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name client end_name begin_operator DOT end_operator begin_name join end_name end_name begin_argument_list begin_argument begin_expr begin_operator STAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment a further 30 s end_comment end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name interrupted exception end_name end_type begin_name ie end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name ie end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name test mail server end_name begin_operator DOT end_operator begin_name get result end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name expected result end_name begin_init begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name local end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name local end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name local end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name expected result end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name expected result end_name end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment order of headers cannot be guaranteed end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name test mail client end_name begin_operator DOT end_operator begin_name is failed end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name test mail client end_name begin_operator DOT end_operator begin_name get fail message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment return the column number since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get column number end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name column number end_name end_expr end_return end_block 
 begin_comment set emacs mode param emacs mode if true use emacs mode end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set emacs mode end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name emacs mode end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name emacs mode end_name end_name begin_operator EQ end_operator begin_name emacs mode end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment query the incrementalflag return true if incremental compilation is turned on end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get incremental end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name incremental end_name end_expr end_return end_block 
 begin_comment add a set of patterns return a patternset to be configured end_comment begin_type begin_specifier end_specifier begin_name pattern set end_name end_type begin_name create pattern set end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name default set defined end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name default set end_name begin_operator DOT end_operator begin_name create pattern set end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment constructor for the jspc test object param name description of parameter end_comment begin_specifier end_specifier begin_name jspc test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the record size being used by this stream s tar buffer return the tar buffer record size end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get record size end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name buffer end_name begin_operator DOT end_operator begin_name get record size end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment set the full flag param full the status to set the flag to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set full end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name full end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m full end_name begin_operator EQ end_operator begin_name full end_name end_expr end_expr_stmt end_block 
 begin_comment sets main handler param handler new main handler end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set main handler end_name begin_parameter_list begin_param begin_decl begin_type begin_name ant handler end_name end_type begin_name handler end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name main handler end_name begin_operator EQ end_operator begin_name handler end_name end_expr end_expr_stmt end_block 
 begin_comment convert the generic options to the regex compiler specific options param options the generic options return the specific options end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get compiler options end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name options end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name c options end_name begin_init begin_expr begin_name begin_name perl 5 compiler end_name begin_operator DOT end_operator begin_name default mask end_name end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name regexp util end_name begin_operator DOT end_operator begin_name has flag end_name end_name begin_argument_list begin_argument begin_expr begin_name options end_name end_expr end_argument begin_argument begin_expr begin_name match case insensitive end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name c options end_name begin_operator UNP end_operator begin_name begin_name perl 5 compiler end_name begin_operator DOT end_operator begin_name case insensitive mask end_name end_name end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name regexp util end_name begin_operator DOT end_operator begin_name has flag end_name end_name begin_argument_list begin_argument begin_expr begin_name options end_name end_expr end_argument begin_argument begin_expr begin_name match multiline end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name c options end_name begin_operator UNP end_operator begin_name begin_name perl 5 compiler end_name begin_operator DOT end_operator begin_name multiline mask end_name end_name end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name regexp util end_name begin_operator DOT end_operator begin_name has flag end_name end_name begin_argument_list begin_argument begin_expr begin_name options end_name end_expr end_argument begin_argument begin_expr begin_name match singleline end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name c options end_name begin_operator UNP end_operator begin_name begin_name perl 5 compiler end_name begin_operator DOT end_operator begin_name singleline mask end_name end_name end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name c options end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 4 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment construct an empty manifest end_comment begin_specifier end_specifier begin_name manifest end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name manifest version end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment construct a new code abstract file set code shallowly cloned from the specified code abstract file set code param fileset the code abstract file set code to use as a template end_comment begin_specifier end_specifier begin_name abstract file set end_name begin_parameter_list begin_param begin_decl begin_type begin_name abstract file set end_name end_type begin_name fileset end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name dir end_name end_name begin_operator EQ end_operator begin_name begin_name fileset end_name begin_operator DOT end_operator begin_name dir end_name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name default patterns end_name end_name begin_operator EQ end_operator begin_name begin_name fileset end_name begin_operator DOT end_operator begin_name default patterns end_name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name additional patterns end_name end_name begin_operator EQ end_operator begin_name begin_name fileset end_name begin_operator DOT end_operator begin_name additional patterns end_name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name selectors end_name end_name begin_operator EQ end_operator begin_name begin_name fileset end_name begin_operator DOT end_operator begin_name selectors end_name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name use default excludes end_name end_name begin_operator EQ end_operator begin_name begin_name fileset end_name begin_operator DOT end_operator begin_name use default excludes end_name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name case sensitive end_name end_name begin_operator EQ end_operator begin_name begin_name fileset end_name begin_operator DOT end_operator begin_name case sensitive end_name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name follow symlinks end_name end_name begin_operator EQ end_operator begin_name begin_name fileset end_name begin_operator DOT end_operator begin_name follow symlinks end_name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set project end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name fileset end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test antlib file end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns the set of selectors as an array param p the current project return an array of selectors in this container end_comment begin_type begin_specifier end_specifier begin_name file selector end_name begin_index end_index end_type begin_name get selectors end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name get ref end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get selectors end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name get selectors end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment the value for the property to set if condition evaluates to false if this attribute is not specified the property will not be set param e the alternate value of the property since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set else end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name alternative end_name begin_operator EQ end_operator begin_name e end_name end_expr end_expr_stmt end_block 
 begin_comment format this resource as a string return string representatation of this resource end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_call begin_name get archive end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment sets up to run the named project param filename name of project file to run end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name configure project end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name filename end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr begin_name filename end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the implementation vendor id of extension param implementation vendor id the implementation vendor id of extension end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set implementation vendor id end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name implementation vendor id end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name verify not a reference end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name implementation vendor id end_name end_name begin_operator EQ end_operator begin_name implementation vendor id end_name end_expr end_expr_stmt end_block 
 begin_comment ignore this if the object does not have end_comment begin_comment a set project method or the method end_comment begin_comment is private protected end_comment begin_comment resolve the file relative to the project s basedir and return it as a file resource param name the name of the file to resolve return the file resource since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name resource end_name end_type begin_name get resource end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name file resource end_name begin_argument_list begin_argument begin_expr begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set buildfile end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name buildfile end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name buildfile end_name end_name begin_operator EQ end_operator begin_name buildfile end_name end_expr end_expr_stmt end_block 
 begin_comment constructor param name testname end_comment begin_specifier end_specifier begin_name xml validate catalog test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the name of the package return the package end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get package end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name package name end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name fire end test suite end_name begin_parameter_list end_parameter_list begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name formatters end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name j unit result formatter end_name begin_operator RPAR end_operator begin_call begin_name begin_name formatters end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name end test suite end_name begin_argument_list begin_argument begin_expr begin_name junit test end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test real test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name target end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name io exception end_name end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name content equals end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment find out if a symbolic link is encountered in the relative path of this file from root path return code true code if a symbolic link is encountered in the relative path throws io exception if one of the change directory or directory listing operations fails throws build exception if a path component in the relative path cannot be found end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is traverse symlinks end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name relative path calculated end_name end_expr end_condition begin_then begin_block begin_comment get relative path also finds about symlinks end_comment begin_expr_stmt begin_expr begin_call begin_name get relative path end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name traverses symlinks end_name end_expr end_return end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name supports language end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name engine end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name check language end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name class loader end_name end_type begin_name orig loader end_name begin_init begin_expr begin_call begin_name replace context loader end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_return begin_expr begin_call begin_name create engine end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name restore context loader end_name begin_argument_list begin_argument begin_expr begin_name orig loader end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment factory method from base class this is overriden in child classes to return a specific selector class end_comment begin_type begin_specifier end_specifier begin_name base selector end_name end_type begin_name get instance end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name date selector end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_specifier end_specifier begin_name get test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the property that indicates whether or not the star team default folder is to be used when calculation paths for items on the target false or if target folder is an absolute mapping to the root folder named by foldername param target folder absolute tt true tt if the absolute mapping is to be used tt false tt the default if the default folder is to be factored in see get target folder absolute end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set target folder absolute end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name target folder absolute end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name target folder absolute end_name end_name begin_operator EQ end_operator begin_name target folder absolute end_name end_expr end_expr_stmt end_block 
 begin_comment default constructor end_comment begin_specifier end_specifier begin_name property resource end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment the name of the application being deployed required param application a string representing the application portion of the weblogic deploy command line end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set application end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name application end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name application end_name end_name begin_operator EQ end_operator begin_name application end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add log message to search end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name message end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name search map end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name integer end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a containsregex filter param filter a code token filter contains regex code value since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add contains regex end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name token filter end_name begin_operator DOT end_operator begin_name contains regex end_name end_name end_type begin_name filter end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name filter readers end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name filter end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the code verbose code attribute to the given value param verbose whether to display all files as it checks them out by default it is false so the program only displays the total number of files unless you override this default see get verbose end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set verbose end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name verbose end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name verbose end_name end_name begin_operator EQ end_operator begin_name verbose end_name end_expr end_expr_stmt end_block 
 begin_comment path to search for file resources return a new path instance which ant will configure with a file search path end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name create filepath end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name filepath end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name filepath end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name filepath end_name begin_operator DOT end_operator begin_name create path end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment overrides the super version param r the reference to set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set refid end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name encoding end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name project end_name end_type begin_name get project end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name o end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name o end_name begin_operator UNP end_operator begin_name project component end_name end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name project component end_name begin_operator RPAR end_operator begin_name o end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name method end_name end_type begin_name m end_name begin_init begin_expr begin_call begin_name begin_name o end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get method end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name begin_name class end_name begin_index end_index end_name begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name class end_name end_name begin_operator EQT end_operator begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name get return type end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name project end_name begin_operator RPAR end_operator begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_name o end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name begin_name object end_name begin_index end_index end_name begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment too bad end_comment end_block end_catch end_try begin_return begin_expr end_expr end_return end_block 
 begin_comment creates a new instance of this class param pc the project component for whom to log param level loglevel used to log data written to this stream since ant 1 6 3 end_comment begin_specifier end_specifier begin_name log output stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name project component end_name end_type begin_name pc end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name level end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name pc end_name end_name begin_operator EQ end_operator begin_name pc end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name level end_name end_name begin_operator EQ end_operator begin_name level end_name end_expr end_expr_stmt end_block 
 begin_comment create a report about non available tasks that are defined in the mapping but could not be found via lookup it might generally happen because ant requires multiple libraries to compile and one of them was missing when compiling ant param out the stream to print the tasks report to tt null tt for a missing stream ie mapping end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name do report tasks availability end_name begin_parameter_list begin_param begin_decl begin_type begin_name print stream end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name is end_name begin_init begin_expr begin_call begin_name begin_name main end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name get resource as stream end_name end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name taskdef properties resource end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name is end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name properties end_name end_type begin_name props end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name properties end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name load end_name end_name begin_argument_list begin_argument begin_expr begin_name is end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name keys end_name begin_init begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name keys end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name key end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name keys end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name classname end_name begin_init begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name remove end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no class def found error end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name pkg end_name begin_init begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name pkg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name linkage error end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_for begin_if begin_condition begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_else end_if end_block 
 begin_comment set the type of label based on the supplied value if true this label will be a revision label if false a build label param buildlabel if true this will be a revision label if false a build label end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set build label end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name buildlabel end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name buildlabel end_name end_name begin_operator EQ end_operator begin_name buildlabel end_name end_expr end_expr_stmt end_block 
 begin_comment returns the add text method when the introspected class supports nested text return the method on this introspected class that adds nested text cannot be code null code throws build exception if the introspected class does not support the nested text since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name method end_name end_type begin_name get add text method end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name supports characters end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name bean end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_return begin_expr begin_name add text end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test is dynamic end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator EQT end_operator begin_call begin_name begin_name ih end_name begin_operator DOT end_operator begin_name is dynamic end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment setter for the delay update param delay update true if we should delay for performance end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set delay update end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name delay update end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name delay update end_name end_name begin_operator EQ end_operator begin_name delay update end_name end_expr end_expr_stmt end_block 
 begin_comment fulfill the resource collection contract return whether this is a filesystem only resource collection end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is filesystem only end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name get ref end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name is filesystem only end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment a unit test for j unit end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test cs cintrinsic fileset end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets the version string returns the first specified of version v 1 0 date vd 01 01 01 label vlbuild 1 return an empty string if a version date and label are not set end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get version date label end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name version date label end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name version end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name version date label end_name begin_operator EQ end_operator begin_name flag version end_name begin_operator PLUS end_operator begin_name version end_name end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name date end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name version date label end_name begin_operator EQ end_operator begin_name flag version date end_name begin_operator PLUS end_operator begin_name date end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment use get short label so labels longer then 30 char are truncated end_comment begin_comment and the user is warned end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name short label end_name begin_init begin_expr begin_call begin_name get short label end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name short label end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name short label end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name version date label end_name begin_operator EQ end_operator begin_name flag version label end_name begin_operator PLUS end_operator begin_name short label end_name end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if end_else end_if begin_return begin_expr begin_name version date label end_name end_expr end_return end_block 
 begin_comment scan the array of files and add the jsp files that need to be compiled to the files to do field param files the files to scan end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name scan dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name files end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name now end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name date end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get time end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name jsp file end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name parents end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name pack end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name src file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name source directory end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment xxx end_comment begin_comment all this to convert source to destination directory according end_comment begin_comment to weblogic standards can be written better this is too hacky end_comment begin_expr_stmt begin_expr begin_name jsp file end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name parents end_name begin_operator EQ end_operator begin_call begin_name begin_name jsp file end_name begin_operator DOT end_operator begin_name get parent end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name parents end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name parents end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name parents end_name begin_operator EQ end_operator begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name replace string end_name end_name begin_argument_list begin_argument begin_expr begin_name parents end_name end_expr end_argument begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name pack end_name begin_operator EQ end_operator begin_name path to package end_name begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name parents end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name pack end_name begin_operator EQ end_operator begin_name path to package end_name end_expr end_expr_stmt end_block end_else end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name file path end_name begin_init begin_expr begin_name pack end_name begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name starting index end_name begin_init begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name last index of end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator MINUS end_operator begin_operator QM end_operator begin_name begin_name files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name last index of end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_operator DP end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name ending index end_name begin_init begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name ending index end_name begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_continue end_continue end_block end_then end_if begin_expr_stmt begin_expr begin_name file path end_name begin_operator UNP end_operator begin_name begin_name files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name substring end_name begin_argument_list begin_argument begin_expr begin_name starting index end_name end_expr end_argument begin_argument begin_expr begin_name ending index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name file path end_name begin_operator UNP end_operator end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name class file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name destination directory end_name end_name end_expr end_argument begin_argument begin_expr begin_name file path end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name src file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_name now end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name src file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_call begin_name begin_name class file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name files to do end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for end_block 
 begin_comment gets the patterns from the include filter rather that duplicate the details of ant star team check out s filtering here refer to these links return a string of filter patterns separated by spaces see set includes string includes see set excludes string excludes see get excludes end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get includes end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name includes end_name end_expr end_return end_block 
 begin_comment adds a set of files to copy param set a fileset end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add fileset end_name begin_parameter_list begin_param begin_decl begin_type begin_name file set end_name end_type begin_name set end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add end_name begin_argument_list begin_argument begin_expr begin_name set end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test handle dir sep end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment called at the start of processing an antlib param uri the uri that is associated with this antlib end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name enter ant lib end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name uri end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name ant lib current uri end_name begin_operator EQ end_operator begin_name uri end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ant lib stack end_name begin_operator DOT end_operator begin_name push end_name end_name begin_argument_list begin_argument begin_expr begin_name uri end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test missing filters file end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name disconnect end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_comment do nothing end_comment end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test xml schema validation end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test xml schema bad end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_catch end_try end_block 
 begin_comment test content equals end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test content equals end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name content equals end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name content equals end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name content equals end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name content equals end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name content equals end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets the list of files to be compiled return the list of files as an array end_comment begin_type begin_specifier end_specifier begin_name file end_name begin_index end_index end_type begin_name get file list end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name compile list end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name do start test 1 end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name text end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name set pattern end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name matches end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name matches end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument begin_argument begin_expr begin_name begin_name regexp matcher end_name begin_operator DOT end_operator begin_name match singleline end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name matches end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument begin_argument begin_expr begin_name begin_name regexp matcher end_name begin_operator DOT end_operator begin_name match multiline end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment a nested filenamemapper param file name mapper the mapper to add since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add end_name begin_parameter_list begin_param begin_decl begin_type begin_name file name mapper end_name end_type begin_name file name mapper end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name create mapper end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name add end_name begin_argument_list begin_argument begin_expr begin_name file name mapper end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment makes this instance in effect a reference to another instance p you must not set another attribute or nest elements inside this element if you make it a reference p param r the code reference code to use throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set refid end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name user name set end_name begin_operator UNP end_operator begin_name user id set end_name begin_operator UNP end_operator begin_name group name set end_name begin_operator UNP end_operator begin_name group id set end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the name of the test class param value the name to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name name end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test set location end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name p end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name set location end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name l end_name begin_init begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name is unix style end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name is net ware end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name substring end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if end_block 
 begin_comment constructor for scp to message param session the scp session to use param a local file the local file param a remote path the remote path end_comment begin_specifier end_specifier begin_name scp to message by sftp end_name begin_parameter_list begin_param begin_decl begin_type begin_name session end_name end_type begin_name session end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name a local file end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name a remote path end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name session end_name end_expr end_argument begin_argument begin_expr begin_name a local file end_name end_expr end_argument begin_argument begin_expr begin_name a remote path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a mapped name param mapping the value to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add mapped name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name mapping end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name mapping end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment enable or disable default the original bytes as comments param bytes a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set bytes end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name bytes end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name bytes end_name end_name begin_operator EQ end_operator begin_name bytes end_name end_expr end_expr_stmt end_block 
 begin_comment sets the force la check grammar option param force la check a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set forcelacheck end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name force la check end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name optional attrs end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name force la check end_name end_expr end_argument begin_argument begin_expr begin_name force la check end_name begin_operator QM end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name true end_name end_name begin_operator DP end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name false end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name main end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name args end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment here is a comment with an embedded tab end_comment begin_if begin_condition begin_expr begin_name mybool end_name end_expr end_condition begin_then begin_block begin_comment here is a multi line with embedded tab comment end_comment begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name mychar end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment tab end_comment end_block end_then end_if begin_comment end of if mybool end_comment end_block 
 begin_comment sets whether this element is optional param optional if true this element may be left out default is false end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set optional end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name optional end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name optional end_name end_name begin_operator EQ end_operator begin_name optional end_name end_expr end_expr_stmt end_block 
 begin_comment simple hack to handle the pvcs command line tools botch when handling unc notation throws io exception if there is an error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name massage pcli end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name in end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name buffered reader end_name end_type begin_name in reader end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name buffered writer end_name end_type begin_name out writer end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name in reader end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name buffered reader end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file reader end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name out writer end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name buffered writer end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file writer end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name s end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_operator LPAR end_operator begin_name s end_name begin_operator EQ end_operator begin_call begin_name begin_name in reader end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name s normal end_name begin_init begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out writer end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name s normal end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out writer end_name begin_operator DOT end_operator begin_name new line end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block begin_finally begin_block begin_if begin_condition begin_expr begin_name in reader end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name in reader end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name out writer end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out writer end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try end_block 
 begin_comment get the name of the current compiler return the name of the compiler since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get compiler end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name facade end_name begin_operator DOT end_operator begin_name set magic value end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name facade end_name begin_operator DOT end_operator begin_name get implementation end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test date time iso end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name time zone end_name end_type begin_name time zone end_name begin_init begin_expr begin_call begin_name begin_name time zone end_name begin_operator DOT end_operator begin_name get time zone end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name calendar end_name end_type begin_name cal end_name begin_init begin_expr begin_call begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name get instance end_name end_name begin_argument_list begin_argument begin_expr begin_name time zone end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cal end_name begin_operator DOT end_operator begin_name set end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name text end_name begin_init begin_expr begin_call begin_name begin_name date utils end_name begin_operator DOT end_operator begin_name format end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name cal end_name begin_operator DOT end_operator begin_name get time end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name date utils end_name begin_operator DOT end_operator begin_name iso 8601 datetime pattern end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment check the command line options end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check options end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name end_decl end_param end_parameter_list begin_block begin_comment clear case items end_comment begin_if begin_condition begin_expr begin_call begin_name get reserved end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment reserved end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag reserved end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment unreserved end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag unreserved end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_call begin_name get out end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment out end_comment begin_expr_stmt begin_expr begin_call begin_name get out command end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_call begin_name get no data end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment ndata end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag nodata end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if begin_if begin_condition begin_expr begin_call begin_name get branch end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment branch end_comment begin_expr_stmt begin_expr begin_call begin_name get branch command end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_call begin_name get version end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment version end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag version end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if begin_if begin_condition begin_expr begin_call begin_name get no warn end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment nwarn end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag nowarn end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name get comment end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment c end_comment begin_expr_stmt begin_expr begin_call begin_name get comment command end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_call begin_name get comment file end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment cfile end_comment begin_expr_stmt begin_expr begin_call begin_name get comment file command end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag nocomment end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_else end_if begin_comment viewpath end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get view path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment print out info about the notco option end_comment begin_comment system out println notco get notco yes no end_comment end_block 
 begin_comment add a fileset whose files will be added to perforce param set the file set that one wants to add to perforce source control end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add fileset end_name begin_parameter_list begin_param begin_decl begin_type begin_name file set end_name end_type begin_name set end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name set end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_name mac command launcher end_name begin_parameter_list begin_param begin_decl begin_type begin_name command launcher end_name end_type begin_name launcher end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name launcher end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get an output stream for the resource return an output stream to which content can be written throws io exception if unable to provide the content of this resource as a stream throws unsupported operation exception if output streams are not supported for this resource type end_comment begin_type begin_specifier end_specifier begin_name output stream end_name end_type begin_name get output stream end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get output stream end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_call begin_name get not null file end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name is file end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name p end_name begin_init begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get parent file end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name p end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name mkdirs end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if begin_return begin_expr begin_operator UNP end_operator begin_call begin_name file output stream end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name setup no rand part b end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su ch 2 end_name end_name begin_operator UNP end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name su ch prev end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su count end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name setup no rand part a end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator PPLUS end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name su count end_name end_name begin_operator GE end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su z end_name end_name begin_operator EQ end_operator begin_call begin_name char end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name data end_name begin_operator DOT end_operator begin_name ll 8 end_name begin_index begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su t pos end_name end_name end_expr end_index end_name begin_operator UNP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su t pos end_name end_name begin_operator EQ end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name data end_name begin_operator DOT end_operator begin_name tt end_name begin_index begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su t pos end_name end_name end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name su j 2 end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name setup no rand part c end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name setup no rand part a end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if end_block 
 begin_comment tests the system type key attribute end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test configuration none end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name begin_index end_index end_type begin_name expected counts end_name begin_init begin_expr begin_block begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr end_block end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name perform config test end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name expected counts end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment a nested filenamemapper param file name mapper the mapper to add since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add end_name begin_parameter_list begin_param begin_decl begin_type begin_name file name mapper end_name end_type begin_name file name mapper end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name create mapper end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name add end_name begin_argument_list begin_argument begin_expr begin_name file name mapper end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add the collection of resource collections to the container param c the collection whose elements to add throws build exception on error end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name add all end_name begin_parameter_list begin_param begin_decl begin_type begin_name collection end_name end_type begin_name c end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name no children allowed end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_try begin_block begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name add end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name resource collection end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class cast exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment returns the local folder specified by the user corresponding to the starteam folder for this operation or null if not specified return the local folder that mirrors this root starteam folder end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get root local folder end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name root local folder end_name end_name end_expr end_return end_block 
 begin_comment return the name attribute end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name name end_name end_expr end_return end_block 
 begin_specifier end_specifier begin_name deltree test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the name lastmodified flag and exists flag param name relative path of the resource expects quot quot to be used as the directory separator param exists if true this resource exists param lastmodified the last modification time of this resource end_comment begin_specifier end_specifier begin_name resource end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name exists end_name end_decl end_param begin_param begin_decl begin_type begin_name long end_name end_type begin_name lastmodified end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name exists end_name end_expr end_argument begin_argument begin_expr begin_name lastmodified end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set up properties on the redirector that we needed to store locally end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name setup redirector end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name set input end_name end_name begin_argument_list begin_argument begin_expr begin_name input end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name set input string end_name end_name begin_argument_list begin_argument begin_expr begin_name input string end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name set output end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name set error end_name end_name begin_argument_list begin_argument begin_expr begin_name error end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name redirector element end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name redirector element end_name begin_operator DOT end_operator begin_name configure end_name end_name begin_argument_list begin_argument begin_expr begin_name redirector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name spawn end_name begin_operator UNP end_operator begin_name input end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name input string end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment 24918 send standard input to the process by default end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name set input stream end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name keep alive input stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get default input stream end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment the command used to invoke a forked java virtual machine default is tt java tt ignored if no jvm is forked param value the new vm to use instead of tt java tt see set fork boolean end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set jvm end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name jvm end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block 
 begin_comment writes the buffer as far as possible return false to be inline with the replacefilter yes defining an interface crossed my mind but would publish the internal behavior throws io exception when the output cannot be written end_comment begin_type begin_name boolean end_name end_type begin_name process end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name writer end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name input buffer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name input buffer end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name input buffer end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block 
 begin_comment exec the sql statement param sql the sql statement to execute param out the place to put output throws sql exception on sql problems end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name exec sql end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name sql end_name end_decl end_param begin_param begin_decl begin_type begin_name print stream end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name sql exception end_name end_expr end_argument end_throws begin_block begin_comment check and ignore empty statements end_comment begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name sql end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name result set end_name end_type begin_name result set end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name total sql end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name sql end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name ret end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name update count end_name begin_init begin_expr end_expr end_init begin_operator UNP end_operator begin_name update count total end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name ret end_name begin_operator EQ end_operator begin_call begin_name begin_name statement end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list begin_argument begin_expr begin_name sql end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name update count end_name begin_operator EQ end_operator begin_call begin_name begin_name statement end_name begin_operator DOT end_operator begin_name get update count end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name result set end_name begin_operator EQ end_operator begin_call begin_name begin_name statement end_name begin_operator DOT end_operator begin_name get result set end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_do begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name ret end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name update count end_name begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name update count total end_name begin_operator UNP end_operator begin_name update count end_name end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_name print end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name print results end_name begin_argument_list begin_argument begin_expr begin_name result set end_name end_expr end_argument begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if begin_expr_stmt begin_expr begin_name ret end_name begin_operator EQ end_operator begin_call begin_name begin_name statement end_name begin_operator DOT end_operator begin_name get more results end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name ret end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name update count end_name begin_operator EQ end_operator begin_call begin_name begin_name statement end_name begin_operator DOT end_operator begin_name get update count end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name result set end_name begin_operator EQ end_operator begin_call begin_name begin_name statement end_name begin_operator DOT end_operator begin_name get result set end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block begin_condition begin_expr begin_name ret end_name end_expr end_condition end_do begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name update count total end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name print end_name begin_operator UNP end_operator begin_name showtrailers end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name update count total end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name sql warning end_name end_type begin_name warning end_name begin_init begin_expr begin_call begin_name begin_name conn end_name begin_operator DOT end_operator begin_name get warnings end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_name warning end_name begin_operator UNP end_operator end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name warning end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name warning end_name begin_operator EQ end_operator begin_call begin_name begin_name warning end_name begin_operator DOT end_operator begin_name get next warning end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_call begin_name begin_name conn end_name begin_operator DOT end_operator begin_name clear warnings end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name good sql end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name sql exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name sql end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name on error end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_name e end_name end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_finally begin_block begin_if begin_condition begin_expr begin_name result set end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name result set end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try end_block 
 begin_type begin_name void end_name end_type begin_name add node recursively end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name org end_name begin_operator DOT end_operator begin_name w 3 c end_name begin_operator DOT end_operator begin_name dom end_name begin_operator DOT end_operator begin_name node end_name end_name end_type begin_name node end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name prefix end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add node recursively end_name begin_argument_list begin_argument begin_expr begin_name node end_name end_expr end_argument begin_argument begin_expr begin_name prefix end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the node default void grammar option param node default void a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set nodedefaultvoid end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name node default void end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name optional attrs end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name node default void end_name end_expr end_argument begin_argument begin_expr begin_name node default void end_name begin_operator QM end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name true end_name end_name begin_operator DP end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name false end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the component string for the deployment targets optional it is in the form code lt component gt lt target 1 gt lt target 2 gt code where component is the archive name minus the jar ear war extension targets are the servers where the components will be deployed param component a string representing the value of the component argument of the weblogic deploy command line argument end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set component end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name component end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name component end_name end_name begin_operator EQ end_operator begin_name component end_name end_expr end_expr_stmt end_block 
 begin_comment name the resource param file the file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name file end_name end_name begin_operator EQ end_operator begin_name file end_name end_expr end_expr_stmt end_block 
 begin_comment convenience method to copy a file from a source to a destination specifying if token filtering must be used if filter chains must be used if source files may overwrite newer destination files and the last modified time of code dest file code file should be made equal to the last modified time of code source file code param source file the file to copy from must not be code null code param dest file the file to copy to must not be code null code param filters the collection of filters to apply to this copy param filter chains filter chains to apply during the copy param overwrite whether or not the destination file should be overwritten if it already exists param preserve last modified whether or not the last modified time of the resulting file should be set to that of the source file param input encoding the encoding used to read the files param output encoding the encoding used to write the files param project the project instance throws io exception if the copying fails since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name copy file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name source file end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name dest file end_name end_decl end_param begin_param begin_decl begin_type begin_name filter set collection end_name end_type begin_name filters end_name end_decl end_param begin_param begin_decl begin_type begin_name vector end_name end_type begin_name filter chains end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name overwrite end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name preserve last modified end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name input encoding end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name output encoding end_name end_decl end_param begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name resource utils end_name begin_operator DOT end_operator begin_name copy resource end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file resource end_name begin_argument_list begin_argument begin_expr begin_name source file end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file resource end_name begin_argument_list begin_argument begin_expr begin_name dest file end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name filters end_name end_expr end_argument begin_argument begin_expr begin_name filter chains end_name end_expr end_argument begin_argument begin_expr begin_name overwrite end_name end_expr end_argument begin_argument begin_expr begin_name preserve last modified end_name end_expr end_argument begin_argument begin_expr begin_name input encoding end_name end_expr end_argument begin_argument begin_expr begin_name output encoding end_name end_expr end_argument begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set of properties to pass to the new project param ps the code property set code to pass since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add propertyset end_name begin_parameter_list begin_param begin_decl begin_type begin_name property set end_name end_type begin_name ps end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name callee end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name init end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name callee end_name begin_operator DOT end_operator begin_name add propertyset end_name end_name begin_argument_list begin_argument begin_expr begin_name ps end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment close the tar buffer if this is an output buffer also flush the current block before closing throws io exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name close end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name debug end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name out stream end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name flush block end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name out stream end_name end_name begin_operator UNP end_operator begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name end_name begin_operator UNP end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name out stream end_name end_name begin_operator UNP end_operator begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name out stream end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name out stream end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name in stream end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name in stream end_name end_name begin_operator UNP end_operator begin_name begin_name system end_name begin_operator DOT end_operator begin_name in end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name in stream end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name in stream end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_else end_if end_block 
 begin_comment get the index of a given utf 8 constant pool entry param value the string value of the utf 8 entry return the index at which the given string occurs in the constant pool or 1 if the value does not occur end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get utf 8 entry end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name index end_name begin_init begin_expr begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name integer end_name end_type begin_name index integer end_name begin_init begin_expr begin_operator LPAR end_operator begin_name integer end_name begin_operator RPAR end_operator begin_call begin_name begin_name utf 8 indexes end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name index integer end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name index end_name begin_operator EQ end_operator begin_call begin_name begin_name index integer end_name begin_operator DOT end_operator begin_name int value end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name index end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test nested text end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name xml fragment end_name end_type begin_name x end_name begin_init begin_expr begin_operator LPAR end_operator begin_name xml fragment end_name begin_operator RPAR end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr begin_name x end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name node end_name end_type begin_name n end_name begin_init begin_expr begin_call begin_name begin_name x end_name begin_operator DOT end_operator begin_name get fragment end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name n end_name begin_operator DOT end_operator begin_name has attributes end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name node list end_name end_type begin_name nl end_name begin_init begin_expr begin_call begin_name begin_name n end_name begin_operator DOT end_operator begin_name get child nodes end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name nl end_name begin_operator DOT end_operator begin_name get length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name node end_name begin_operator DOT end_operator begin_name text node end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name nl end_name begin_operator DOT end_operator begin_name item end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get node type end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name nl end_name begin_operator DOT end_operator begin_name item end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get node value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor for ant attribute introspection param p the project against which to resolve code s code param s the absolute or project relative filename as a string see org apache tools ant introspection helper end_comment begin_specifier end_specifier begin_name file resource end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set project end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment whether lots of warnings and error messages should be generated param verbose the value to set verbose lt level gt or noverbose end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set verbose end_name begin_parameter_list begin_param begin_decl begin_type begin_name verbose attr end_name end_type begin_name verbose end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name verbose end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name verbose end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment ignore we are interested only in the side end_comment begin_comment effect that of getting the static initializers end_comment begin_comment invoked as we do not want to call a valid end_comment begin_comment constructor to get this side effect an end_comment begin_comment attempt is made to call a hopefully end_comment begin_comment invalid constructor come on nobody end_comment begin_comment would have a constructor that takes in end_comment begin_comment 256 string arguments end_comment begin_comment in fact they can t according to jvm spec end_comment begin_comment section 4 10 the number of method parameters is limited end_comment begin_comment to 255 by the definition of a method descriptor end_comment begin_comment constructors count as methods here end_comment begin_comment adds a package root to the list of packages which must be loaded on the parent loader all subpackages are also included param package root the root of all packages to be included should not be code null code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add system package root end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name package root end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system packages end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name package root end_name begin_operator PLUS end_operator begin_operator LPAR end_operator begin_call begin_name begin_name package root end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment logs a line to the log system of ant param line the line to log param level the logging level to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process line end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name line end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name level end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name pc end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument begin_argument begin_expr begin_name level end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment nested resource collections as sources return the source resources to configure since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name union end_name end_type begin_name create src resources end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name source resources end_name end_expr end_return end_block 
 begin_comment returns a reason for failure based on the exception thrown if the exception is not io exception output the class name output the message if the exception is malformed input add a little note end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get due to end_name begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name base io exception end_name begin_init begin_expr begin_call begin_name begin_name ex end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_name begin_name io exception end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name message end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name base io exception end_name begin_operator UNP end_operator begin_call begin_name begin_name ex end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ex end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name ex end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name base io exception end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ex end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name ex end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name line separator end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name line separator end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name input encoding end_name begin_operator EQT end_operator begin_operator QM end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name get default encoding end_name end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_name input encoding end_name begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name line separator end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment test the code that validates the selector end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test validate end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name depend selector end_name end_type begin_name s end_name begin_init begin_expr begin_operator LPAR end_operator begin_name depend selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name create mapper end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name create mapper end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be 1 end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be 1 end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name depend selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name is selected end_name end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name filenames end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be 2 end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be 2 end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment sets the compiler implementation to use optional defaults to the value of the code build rmic code property or failing that default compiler for the current vm param compiler the compiler implemention to use since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set compiler end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name compiler end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name compiler end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name facade end_name begin_operator DOT end_operator begin_name set implementation end_name end_name begin_argument_list begin_argument begin_expr begin_name compiler end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment if filled the params are added to the java 2 iiop command ex no warn missing define param params additional params for java 2 iiop end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set java 2 iiop params end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name params end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name java 2 iioparams end_name end_name begin_operator EQ end_operator begin_name params end_name end_expr end_expr_stmt end_block 
 begin_comment create a custom format with the current prefix return a ready to fill in format end_comment begin_type begin_specifier end_specifier begin_name custom format end_name end_type begin_name create format end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name custom format end_name end_type begin_name cts end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name custom format end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name custom formats end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name cts end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name cts end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test target no default end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert null end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name javac end_name begin_operator DOT end_operator begin_name get target end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set a property where to store the cvs client version param client version property property for cvs client version end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set client version property end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name client version property end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name client version property end_name end_name begin_operator EQ end_operator begin_name client version property end_name end_expr end_expr_stmt end_block 
 begin_comment handles an error line by logging it with the warn priority param output the error output to log should not be code null code since ant 1 5 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name handle error flush end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name output end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name handle error output end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment param cmd command to configure param property property to set throws build exception if the property is not correctly defined end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name declare sys property end_name begin_parameter_list begin_param begin_decl begin_type begin_name exec task end_name end_type begin_name cmd end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name environment end_name begin_operator DOT end_operator begin_name variable end_name end_name end_type begin_name property end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name add value end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name property end_name begin_operator DOT end_operator begin_name get content end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the file to which standard error is to be redirected param error the file to which error is to be written end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set error end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name error end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name error end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name illegal argument exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name using error end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name error mapper end_name begin_operator EQ end_operator begin_call begin_name create merge mapper end_name begin_argument_list begin_argument begin_expr begin_name error end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get file string end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name target end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name filename end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name get file string end_name begin_argument_list begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_specifier end_specifier begin_name ftp test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment find out whether we have been negated return boolean negation flag end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is negated end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name negate end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get value end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name stdin end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name set in end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_name e end_name begin_operator UNP end_operator begin_name runtime exception end_name begin_operator QM end_operator begin_operator LPAR end_operator begin_name runtime exception end_name begin_operator RPAR end_operator begin_name e end_name begin_operator DP end_operator begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment verify that all parameters are included connect and possibly login iterate through the list of reads and writes throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_comment a server name is required to continue end_comment begin_if begin_condition begin_expr begin_name server end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment a userid and password must appear together if they appear they are not required end_comment begin_if begin_condition begin_expr begin_name userid end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name password end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name password end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name userid end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment create the telnet client object end_comment begin_decl_stmt begin_decl begin_type begin_name ant telnet client end_name end_type begin_name telnet end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name telnet end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name ant telnet client end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name telnet end_name begin_operator DOT end_operator begin_name connect end_name end_name begin_argument_list begin_argument begin_expr begin_name server end_name end_expr end_argument begin_argument begin_expr begin_name port end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name server end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_comment login if userid and password were specified end_comment begin_if begin_condition begin_expr begin_name userid end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name password end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name login end_name begin_argument_list begin_argument begin_expr begin_name telnet end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment process each sub command end_comment begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name tasks to run end_name begin_init begin_expr begin_call begin_name begin_name telnet tasks end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_name tasks to run end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name tasks to run end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name telnet sub task end_name end_type begin_name task end_name begin_init begin_expr begin_operator LPAR end_operator begin_name telnet sub task end_name begin_operator RPAR end_operator begin_call begin_name begin_name tasks to run end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name task end_name begin_operator UNP end_operator begin_name telnet read end_name begin_operator UNP end_operator begin_name default timeout end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name telnet read end_name begin_operator RPAR end_operator begin_name task end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name set default timeout end_name begin_argument_list begin_argument begin_expr begin_name default timeout end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list begin_argument begin_expr begin_name telnet end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block begin_finally begin_block begin_if begin_condition begin_expr begin_name telnet end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name telnet end_name begin_operator DOT end_operator begin_name is connected end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name telnet end_name begin_operator DOT end_operator begin_name disconnect end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name server end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_then end_if end_block end_finally end_try end_block 
 begin_comment set the extension to use for the report file param ext the extension to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set extension end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name ext end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name extension end_name end_name begin_operator EQ end_operator begin_name ext end_name end_expr end_expr_stmt end_block 
 begin_comment helper method to build properties end_comment begin_type begin_specifier end_specifier begin_name properties end_name end_type begin_name get properties end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name driver end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name user end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name pwd end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name url end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name properties end_name end_type begin_name props end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name properties end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name driver end_name end_expr end_argument begin_argument begin_expr begin_name driver end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name user end_name end_expr end_argument begin_argument begin_expr begin_name user end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name password end_name end_expr end_argument begin_argument begin_expr begin_name pwd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name url end_name end_expr end_argument begin_argument begin_expr begin_name url end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name props end_name end_expr end_return end_block 
 begin_comment compare this archive resource to another resource param another the other resource against which to compare return a negative integer zero or a positive integer as this resource is less than equal to or greater than the specified resource end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name compare to end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name another end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name another end_name end_expr end_argument end_argument_list end_call begin_operator QM end_operator begin_operator DP end_operator begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name compare to end_name end_name begin_argument_list begin_argument begin_expr begin_name another end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_specifier end_specifier begin_name base selector test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment convenience method to copy a file from a source to a destination specifying if token filtering must be used and if source files may overwrite newer destination files param source file the file to copy from must not be code null code param dest file the file to copy to must not be code null code param filters the collection of filters to apply to this copy param overwrite whether or not the destination file should be overwritten if it already exists throws io exception if the copying fails end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name copy file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name source file end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name dest file end_name end_decl end_param begin_param begin_decl begin_type begin_name filter set collection end_name end_type begin_name filters end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name overwrite end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name copy file end_name begin_argument_list begin_argument begin_expr begin_name source file end_name end_expr end_argument begin_argument begin_expr begin_name dest file end_name end_expr end_argument begin_argument begin_expr begin_name filters end_name end_expr end_argument begin_argument begin_expr begin_name overwrite end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the name of the star team view to be acted on required if tt url tt is not set param viewname the name of the star team view to be acted on see set url string end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set viewname end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name viewname end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name viewname end_name end_name begin_operator EQ end_operator begin_name viewname end_name end_expr end_expr_stmt end_block 
 begin_comment factory method from base class this should be overriden in child classes to return a specific selector class like here end_comment begin_type begin_specifier end_specifier begin_name base selector end_name end_type begin_name get instance end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name modified selector end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment pass output sent to system out to specified output file param output string of output on its way to its handlers since ant 1 5 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name handle flush end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name output end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name get output stream end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name handle flush end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name handle flush end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test run success with fail on error end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name project end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name project end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name set basedir end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test serial end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name full log end_name begin_init begin_expr begin_call begin_name get full log end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name substring end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name substring end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name full log end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name full log end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name substring end_name end_expr end_argument end_argument_list end_call begin_operator GE end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name xml catalog end_name end_type begin_name get ref end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name this end_name end_expr end_return end_block end_then end_if begin_return begin_expr begin_operator LPAR end_operator begin_name xml catalog end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list begin_argument begin_expr begin_name begin_name xml catalog end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment prompts and requests input param request the request to handle throws build exception if not possible to read from console or if input is invalid end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name handle input end_name begin_parameter_list begin_param begin_decl begin_type begin_name input request end_name end_type begin_name request end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name prompt end_name begin_init begin_expr begin_call begin_name get prompt end_name begin_argument_list begin_argument begin_expr begin_name request end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name in end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name in end_name begin_operator EQ end_operator begin_call begin_name get input stream end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name prompt end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name byte array output stream end_name end_type begin_name baos end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name byte array output stream end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name stream pumper end_name end_type begin_name p end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name stream pumper end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument begin_argument begin_expr begin_name baos end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name thread end_name end_type begin_name t end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name thread end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name start end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name join end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name interrupted exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name join end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name interrupted exception end_name end_type begin_name e 2 end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name set input end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name baos end_name begin_operator DOT end_operator begin_name to byte array end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name is input valid end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get exception end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get exception end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name fire target finished end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name fire target finished end_name end_name begin_argument_list begin_argument begin_expr begin_name target end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the directory containing the java cc distribution param javacc home the directory end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set javacchome end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name javacc home end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name javacc home end_name end_name begin_operator EQ end_operator begin_name javacc home end_name end_expr end_expr_stmt end_block 
 begin_comment gets all names of the path as an array of code string code s param path to get names from return code string code s never code null code since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get path stack end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name path end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name normalized path end_name begin_init begin_expr begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment since java 1 4 end_comment begin_comment return normalized path split end_comment begin_comment workaround for java 1 2 1 3 end_comment begin_decl_stmt begin_decl begin_type begin_name object end_name begin_index end_index end_type begin_name tokens end_name begin_init begin_expr begin_call begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name split end_name end_name begin_argument_list begin_argument begin_expr begin_name normalized path end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to array end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name rv end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_name begin_name tokens end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_name tokens end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name rv end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name tokens end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name rv end_name end_expr end_return end_block 
 begin_comment set the local to use in documentation generation param locale the locale to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set locale end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name locale end_name end_decl end_param end_parameter_list begin_block begin_comment create argument true is necessary to make sure locale end_comment begin_comment is the first argument required in 1 3 end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name locale end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test filter 2 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the value of the old cmp scheme this is an antonym for new cmp ant attribute ignore true param old cmp a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set old cmp end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name old cmp end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name new cmp end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_name old cmp end_name end_expr end_expr_stmt end_block 
 begin_name create nested creator end_name begin_parameter_list begin_param begin_decl begin_type begin_name method end_name end_type begin_name m end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name m end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment end_comment begin_comment end_comment begin_comment set get methods end_comment begin_comment end_comment begin_comment end_comment begin_comment returns the action field return a string representing the action attribute end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get action end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name action end_name end_expr end_return end_block 
 begin_comment s s on each line of input param strip if true do the trim end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set trim leading end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name strip end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name trim leading end_name end_name begin_operator EQ end_operator begin_name strip end_name end_expr end_expr_stmt end_block 
 begin_comment reads from the code reader code returning the same value return the value of the next character in the code reader code exception io exception if the original code reader code fails to be read end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name int end_name end_type begin_name read end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name in end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name io exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name byte end_name end_type begin_name result end_name end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name slack end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name begin end_name begin_operator LT end_operator begin_name begin_name slack end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_name begin_name slack end_name begin_index begin_expr begin_name begin end_name end_expr end_index end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator PPLUS end_operator begin_name begin end_name begin_operator EQT end_operator begin_name begin_name slack end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name slack end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name buf end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name byte end_name begin_index begin_expr end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name read end_name begin_argument_list begin_argument begin_expr begin_name buf end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator LE end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator MINUS end_operator end_expr end_return end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_name begin_name buf end_name begin_index begin_expr end_expr end_index end_name end_expr end_expr_stmt end_block end_else end_if end_block end_else end_if begin_return begin_expr begin_name result end_name begin_operator UNP end_operator end_expr end_return end_block 
 begin_comment the jar library to display information for param file the jar library to display information for end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set file end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name library file end_name end_name begin_operator EQ end_operator begin_name file end_name end_expr end_expr_stmt end_block 
 begin_comment the minimum depth below the basedir before a file is selected param min minimum directory levels below basedir to go end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set min end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name min end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name min end_name end_name begin_operator EQ end_operator begin_name min end_name end_expr end_expr_stmt end_block 
 begin_comment pr 21996 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test glob mapper end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert file missing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert file exists end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment creates a nested code lt buildpathelement gt code and add it to the implicit build path return the newly created nested build path element end_comment begin_type begin_specifier end_specifier begin_name begin_name path end_name begin_operator DOT end_operator begin_name path element end_name end_name end_type begin_name create buildpath element end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get buildpath end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name create path element end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is failed end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name fail end_name end_expr end_return end_block 
 begin_comment adds a reference to a source path defined elsewhere param r a reference to a source path end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set sourcepath ref end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name create sourcepath end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set refid end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test or end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect property set end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment report proxy information param out stream to print to since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name do report proxy end_name begin_parameter_list begin_param begin_decl begin_type begin_name print stream end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name print property end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr begin_name begin_name proxy setup end_name begin_operator DOT end_operator begin_name http proxy host end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name print property end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr begin_name begin_name proxy setup end_name begin_operator DOT end_operator begin_name http proxy port end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name print property end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr begin_name begin_name proxy setup end_name begin_operator DOT end_operator begin_name http proxy username end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name print property end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr begin_name begin_name proxy setup end_name begin_operator DOT end_operator begin_name http proxy password end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name print property end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr begin_name begin_name proxy setup end_name begin_operator DOT end_operator begin_name http non proxy hosts end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name print property end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr begin_name begin_name proxy setup end_name begin_operator DOT end_operator begin_name https proxy host end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name print property end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr begin_name begin_name proxy setup end_name begin_operator DOT end_operator begin_name https proxy port end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name print property end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr begin_name begin_name proxy setup end_name begin_operator DOT end_operator begin_name https non proxy hosts end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name print property end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr begin_name begin_name proxy setup end_name begin_operator DOT end_operator begin_name ftp proxy host end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name print property end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr begin_name begin_name proxy setup end_name begin_operator DOT end_operator begin_name ftp proxy port end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name print property end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr begin_name begin_name proxy setup end_name begin_operator DOT end_operator begin_name ftp non proxy hosts end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name print property end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr begin_name begin_name proxy setup end_name begin_operator DOT end_operator begin_name socks proxy host end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name print property end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr begin_name begin_name proxy setup end_name begin_operator DOT end_operator begin_name socks proxy port end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name print property end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr begin_name begin_name proxy setup end_name begin_operator DOT end_operator begin_name socks proxy username end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name print property end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr begin_name begin_name proxy setup end_name begin_operator DOT end_operator begin_name socks proxy password end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name get java version number end_name end_name begin_argument_list end_argument_list end_call begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name print property end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr begin_name begin_name proxy setup end_name begin_operator DOT end_operator begin_name use system proxies end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name proxy diag classname end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name proxy diag class end_name begin_init begin_expr begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name proxy diag classname end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name instance end_name begin_init begin_expr begin_call begin_name begin_name proxy diag class end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name instance end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment not included do nothing end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal access exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment not included do nothing end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name instantiation exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment not included do nothing end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no class def found error end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment not included to nothing end_comment end_block end_catch end_try end_block 
 begin_comment sets the desired os family type param f the os family type desired br possible values br ul li dos li li mac li li netware li li os 2 li li tandem li li unix li li windows li li win 9 x li li z os li li os 400 li ul end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set family end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name f end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name family end_name begin_operator EQ end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name to lower case end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test utf 8 encoding end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name hb assign codes end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name begin_name int end_name begin_index end_index end_name end_type begin_name code end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name length end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name min len end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name max len end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name alpha size end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name vec end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name n end_name begin_init begin_expr begin_name min len end_name end_expr end_init end_decl end_init begin_condition begin_expr begin_name n end_name begin_operator LE end_operator begin_name max len end_name end_expr end_condition begin_incr begin_expr begin_name n end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name alpha size end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name begin_name length end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator EQT end_operator begin_name n end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name code end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_name vec end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name vec end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_then end_if end_block end_for begin_expr_stmt begin_expr begin_name vec end_name begin_operator UNP end_operator end_expr end_expr_stmt end_block end_for end_block 
 begin_comment sets the code username code attribute to the given value param username your username for the specified star team server see get username end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set username end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name username end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name username end_name end_name begin_operator EQ end_operator begin_name username end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name restrict end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name s end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name base dir end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name mapper end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name force end_name begin_operator RPAR end_operator begin_operator QM end_operator begin_name s end_name begin_operator DP end_operator begin_operator UNP end_operator begin_call begin_name source file scanner end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name restrict end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument begin_argument begin_expr begin_name base dir end_name end_expr end_argument begin_argument begin_expr begin_name dest dir end_name end_expr end_argument begin_argument begin_expr begin_name mapper end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment if excludes have been specified emit the list to the log end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name log excludes end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name default excludesetting end_name begin_operator UNP end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name excludes end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name excludes end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment set the resource collection reference param r the reference end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set refid end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name o end_name begin_init begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name get referenced object end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_name o end_name begin_operator UNP end_operator begin_name resource collection end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name get ref id end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name add end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name resource collection end_name begin_operator RPAR end_operator begin_name o end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get replace flag status return boolean containing status of replace flag end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get replace end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m replace end_name end_expr end_return end_block 
 begin_comment constructor for fork true or when the user hasn t specified a classpath param test the test to run param halt on error whether to stop the run if an error is found param filtertrace whether to filter junit stack frames out of exceptions param halt on failure whether to stop the run if failure is found param show output whether to send output to system out err as well as formatters end_comment begin_specifier end_specifier begin_name j unit test runner end_name begin_parameter_list begin_param begin_decl begin_type begin_name j unit test end_name end_type begin_name test end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name halt on error end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name filtertrace end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name halt on failure end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name show output end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument begin_argument begin_expr begin_name halt on error end_name end_expr end_argument begin_argument begin_expr begin_name filtertrace end_name end_expr end_argument begin_argument begin_expr begin_name halt on failure end_name end_expr end_argument begin_argument begin_expr begin_name show output end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment handles output sent to system out by this task or its real task param output the output to log should not be code null code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name handle output end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name output end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name real thing end_name begin_operator UNP end_operator begin_name task end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name task end_name begin_operator RPAR end_operator begin_name real thing end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name handle output end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name handle output end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment execute the task throws build exception if code failonerror code is true and an error happens end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name file processed end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name file end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name file end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name can read end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name is file end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name do validate end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name file processed end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name error msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_name file end_name begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name fail on error end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name error msg end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name error msg end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_else end_if end_block end_then end_if begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file set end_name end_type begin_name fs end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file set end_name begin_operator RPAR end_operator begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds end_name begin_init begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name get directory scanner end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name files end_name begin_init begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get included files end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name j end_name begin_operator LT end_operator begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name j end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name src file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name get dir end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name do validate end_name begin_argument_list begin_argument begin_expr begin_name src file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name file processed end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_for end_block end_for begin_expr_stmt begin_expr begin_call begin_name on successful validation end_name begin_argument_list begin_argument begin_expr begin_name file processed end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the password for smtp auth param password the authentication password since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set password end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name password end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name password end_name end_name begin_operator EQ end_operator begin_name password end_name end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name zip short test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test multiple transform end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name xsl end_name begin_init begin_expr begin_call begin_name get file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name liaison end_name begin_operator DOT end_operator begin_name set stylesheet end_name end_name begin_argument_list begin_argument begin_expr begin_name xsl end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name liaison end_name begin_operator DOT end_operator begin_name add param end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name in end_name begin_init begin_expr begin_call begin_name get file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment test for 10 consecutives transform end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name out end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name i end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name liaison end_name begin_operator DOT end_operator begin_name transform end_name end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name i end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block end_for end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test trim string end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the value attribute return the value end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get value end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name value end_name end_expr end_return end_block 
 begin_comment carry out the rmic compilation return true if the compilation succeeded throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name get rmic end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name begin_init begin_expr begin_call begin_name setup rmic command end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name ant class loader end_name end_type begin_name loader end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_comment create an instance of the rmic end_comment begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name c end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name get rmic end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get classpath end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name c end_name begin_operator EQ end_operator begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name wlrmic classname end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name loader end_name begin_operator EQ end_operator begin_call begin_name get rmic end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name create class loader end_name begin_argument_list begin_argument begin_expr begin_call begin_name get rmic end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get classpath end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name c end_name begin_operator EQ end_operator begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name wlrmic classname end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name loader end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_decl_stmt begin_decl begin_type begin_name method end_name end_type begin_name do rmic end_name begin_init begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name get method end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name class end_name begin_index end_index end_name begin_block begin_expr begin_name begin_name string end_name begin_index end_index end_name begin_operator DOT end_operator end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name do rmic end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name get arguments end_name end_name begin_argument_list end_argument_list end_call end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name error no wlrmic on classpath end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get rmic end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name ex end_name begin_operator UNP end_operator begin_name build exception end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator LPAR end_operator begin_name build exception end_name begin_operator RPAR end_operator begin_name ex end_name end_expr end_throw end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name error wlrmic failed end_name end_expr end_argument begin_argument begin_expr begin_name ex end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get rmic end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_block end_catch begin_finally begin_block begin_if begin_condition begin_expr begin_name loader end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name loader end_name begin_operator DOT end_operator begin_name cleanup end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try end_block 
 begin_comment stop the pumper as soon as possible note that it may continue to block on the input stream but it will really stop the thread as soon as it gets eof or any byte and it will be marked as finished since ant 1 6 3 end_comment begin_comment package end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name stop end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name finish end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name notify all end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the attribute s value required param value the attribute s value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set value end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name current index end_name begin_operator GE end_operator begin_call begin_name begin_name values end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name values end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name current index end_name begin_operator EQ end_operator begin_call begin_name begin_name values end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name values end_name begin_operator DOT end_operator begin_name set element at end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument begin_argument begin_expr begin_name current index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment adds a path to the bootclasspath return reference to the bootclasspath in the embedded java command line since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name create bootclasspath end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get commandline end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name create bootclasspath end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name create path end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment tells the net rexx compiler that method calls always need parentheses even if no arguments are needed e g code a string var get bytes code vs code a string var get bytes code valid true values are on or true anything else sets the flag to false the default value is false param strictargs a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set strictargs end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name strictargs end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name strictargs end_name end_name begin_operator EQ end_operator begin_name strictargs end_name end_expr end_expr_stmt end_block 
 begin_comment tests to make sure that the selector is selecting files correctly end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test selection behaviour end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name depend selector end_name end_type begin_name s end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name results end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name subdir end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name mapper end_name end_type begin_name m end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name mapper end_name begin_operator DOT end_operator begin_name mapper type end_name end_name end_type begin_name identity end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name mapper end_name begin_operator DOT end_operator begin_name mapper type end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name identity end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name mapper end_name begin_operator DOT end_operator begin_name mapper type end_name end_name end_type begin_name glob end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name mapper end_name begin_operator DOT end_operator begin_name mapper type end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name glob end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name mapper end_name begin_operator DOT end_operator begin_name mapper type end_name end_name end_type begin_name merge end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name mapper end_name begin_operator DOT end_operator begin_name mapper type end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name merge end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name make bed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name depend selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set targetdir end_name end_name begin_argument_list begin_argument begin_expr begin_name beddir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name results end_name begin_operator EQ end_operator begin_call begin_name selection string end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name results end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name depend selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set targetdir end_name end_name begin_argument_list begin_argument begin_expr begin_name beddir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name m end_name begin_operator EQ end_operator begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name create mapper end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name set type end_name end_name begin_argument_list begin_argument begin_expr begin_name identity end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name results end_name begin_operator EQ end_operator begin_call begin_name selection string end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name results end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name depend selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set targetdir end_name end_name begin_argument_list begin_argument begin_expr begin_name beddir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name m end_name begin_operator EQ end_operator begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name create mapper end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name set type end_name end_name begin_argument_list begin_argument begin_expr begin_name merge end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name set to end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name results end_name begin_operator EQ end_operator begin_call begin_name selection string end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name depend selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set targetdir end_name end_name begin_argument_list begin_argument begin_expr begin_name beddir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name m end_name begin_operator EQ end_operator begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name create mapper end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name set type end_name end_name begin_argument_list begin_argument begin_expr begin_name merge end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name set to end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name results end_name begin_operator EQ end_operator begin_call begin_name selection string end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name results end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment test for path relative to project base directory end_comment begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name depend selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name subdir end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set targetdir end_name end_name begin_argument_list begin_argument begin_expr begin_name subdir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name m end_name begin_operator EQ end_operator begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name create mapper end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name set type end_name end_name begin_argument_list begin_argument begin_expr begin_name glob end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name set from end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name set to end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name results end_name begin_operator EQ end_operator begin_call begin_name selection string end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name results end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name depend selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name subdir end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name beddir end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set targetdir end_name end_name begin_argument_list begin_argument begin_expr begin_name subdir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name m end_name begin_operator EQ end_operator begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name create mapper end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name set type end_name end_name begin_argument_list begin_argument begin_expr begin_name glob end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name set from end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name set to end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name results end_name begin_operator EQ end_operator begin_call begin_name selection string end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name results end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name make mirror end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name depend selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name testdir end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set targetdir end_name end_name begin_argument_list begin_argument begin_expr begin_name testdir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name results end_name begin_operator EQ end_operator begin_call begin_name selection string end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name results end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name depend selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name testdir end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set targetdir end_name end_name begin_argument_list begin_argument begin_expr begin_name testdir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name m end_name begin_operator EQ end_operator begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name create mapper end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name set type end_name end_name begin_argument_list begin_argument begin_expr begin_name glob end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name set from end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name set to end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name results end_name begin_operator EQ end_operator begin_call begin_name mirror selection string end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name results end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name results end_name begin_operator EQ end_operator begin_call begin_name selection string end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name results end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name cleanup mirror end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name cleanup bed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment command line interface for the ejbc helper task param args command line arguments throws exception if there is a problem end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name main end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name args end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name ejbc helper end_name end_type begin_name helper end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name ejbc helper end_name begin_argument_list begin_argument begin_expr begin_name args end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name process end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets the author of the cvs entry return the author end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get author end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name author end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test redirect 4 end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name expected out end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name expected err end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name expected out end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get file string end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert property equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name expected out end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name expected err end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get file string end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert property equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name expected err end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name xml formatter with cdata on system out end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment find the directory or a give resource has been loaded from param c the classloader to be consulted for the source param resource the resource whose location is required return the file with the resource source or null if we cannot determine the location since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name file end_name end_type begin_name get resource source end_name begin_parameter_list begin_param begin_decl begin_type begin_name class loader end_name end_type begin_name c end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name resource end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name c end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name c end_name begin_operator EQ end_operator begin_call begin_name begin_name loader utils end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name get class loader end_name end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name normalize source end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name locator end_name begin_operator DOT end_operator begin_name get resource source end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument begin_argument begin_expr begin_name resource end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment write a byte param b the byte to write throws io exception if there is a problem end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name write end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name ensure opened end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fos end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name b end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test reference rename end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name p end_name begin_init begin_expr begin_name begin_name path end_name begin_operator DOT end_operator begin_name system classpath end_name end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name test reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name boolean end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name test reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name boolean end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name test reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name boolean end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment decompress on the fly using link cb zip 2 input stream param in the stream to wrap return the wrapped stream throws io exception if there is a problem end_comment begin_type begin_specifier end_specifier begin_name input stream end_name end_type begin_name wrap stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name input stream end_name end_type begin_name in end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name magic end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name begin_name magic end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name io exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_for begin_return begin_expr begin_operator UNP end_operator begin_call begin_name cb zip 2 input stream end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment get the argument or null for no argument needed return the debug parameter value end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get debug parameter end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name debug end_name begin_operator QM end_operator begin_operator DP end_operator end_expr end_return end_block 
 begin_comment creates a new filtered reader param in a reader object providing the underlying stream must not be code null code end_comment begin_specifier end_specifier begin_name line contains reg exp end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name reader end_name end_type begin_name in end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the image encoding type a href http java sun com products java media jai for developers jai 1 0 1 guide unc encode doc html 56610 see this table in the jai programming guide a param encoding the string image encoding end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set encoding end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name encoding end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name str encoding end_name begin_operator EQ end_operator begin_name encoding end_name end_expr end_expr_stmt end_block 
 begin_comment sets the keyfile for the user param keyfile the new keyfile value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set keyfile end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name keyfile end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name user info end_name begin_operator DOT end_operator begin_name set keyfile end_name end_name begin_argument_list begin_argument begin_expr begin_name keyfile end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_name boolean end_name end_type begin_name is response ok end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name response end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name int end_name begin_index end_index end_name end_type begin_name ok end_name end_decl end_param end_parameter_list begin_block begin_comment check that the response is one of the valid codes end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name ok end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name response end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name ok end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_for begin_return begin_expr end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name task started end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment learn whether the refid attribute of this element been set return true if refid is valid end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is reference end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name refid end_name begin_operator UNP end_operator end_expr end_return end_block 
 begin_comment error end_comment begin_comment check style visibility modifier on end_comment begin_comment connects the handler to the input stream into perforce used indirectly by tasks requiring to send specific standard input such as p 4 label p 4 change param os the stream bringing input to the p 4 executable throws io exception under unknown circumstances end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set process input stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name output stream end_name end_type begin_name os end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name os end_name end_name begin_operator EQ end_operator begin_name os end_name end_expr end_expr_stmt end_block 
 begin_comment translate a sax exception into a build exception since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name build exception end_name end_type begin_name convert to build exception end_name begin_parameter_list begin_param begin_decl begin_type begin_name sax exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name exception end_name end_type begin_name nested end_name begin_init begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get exception end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name nested end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name nested end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_else end_if end_block 
 begin_comment create a new code output stream funneler code for the specified code output stream code with the specified timeout value param out code output stream code param timeout millis code long code see set timeout long end_comment begin_specifier end_specifier begin_name output stream funneler end_name begin_parameter_list begin_param begin_decl begin_type begin_name output stream end_name end_type begin_name out end_name end_decl end_param begin_param begin_decl begin_type begin_name long end_name end_type begin_name timeout millis end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name out end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name illegal argument exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name out end_name end_name begin_operator EQ end_operator begin_name out end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name closed end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_comment as far as we know end_comment begin_expr_stmt begin_expr begin_call begin_name set timeout end_name begin_argument_list begin_argument begin_expr begin_name timeout millis end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment equality method param obj an code object code value return a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name equals end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name obj end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name obj end_name begin_operator EQT end_operator begin_name this end_name end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name obj end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name obj end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name get class end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name template element end_name end_type begin_name t end_name begin_init begin_expr begin_operator LPAR end_operator begin_name template element end_name begin_operator RPAR end_operator begin_name obj end_name end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_operator LPAR end_operator begin_name name end_name begin_operator EQT end_operator begin_operator QM end_operator begin_name begin_name t end_name begin_operator DOT end_operator begin_name name end_name end_name begin_operator EQT end_operator begin_operator DP end_operator begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name t end_name begin_operator DOT end_operator begin_name name end_name end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_name optional end_name begin_operator EQT end_operator begin_name begin_name t end_name begin_operator DOT end_operator begin_name optional end_name end_name begin_operator UNP end_operator begin_name implicit end_name begin_operator EQT end_operator begin_name begin_name t end_name begin_operator DOT end_operator begin_name implicit end_name end_name end_expr end_return end_block 
 begin_specifier end_specifier begin_name parser supports test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment assert that a property equals true param property property name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name assert property set end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name property end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert property equals end_name begin_argument_list begin_argument begin_expr begin_name property end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the http ftp proxy host set this to for the http proxy option to be disabled param hostname the new proxy hostname end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set proxy host end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name hostname end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name proxy host end_name begin_operator EQ end_operator begin_name hostname end_name end_expr end_expr_stmt end_block 
 begin_comment returns the next resource in the enumeration return the next resource in the enumeration end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name next element end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name url end_name end_type begin_name ret end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name next resource end_name end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name find next resource end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name ret end_name end_expr end_return end_block 
 begin_comment returns the part of the given string that matches the in the quot from quot pattern replacing dots with file separators param name source filename return replaced variable part end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name extract variable part end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name var end_name begin_init begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name prefix length end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator begin_name postfix length end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name var end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test ignore case end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name test attributes end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name zip file set end_name end_type begin_name f end_name begin_init begin_expr begin_operator LPAR end_operator begin_name zip file set end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment check that dir and src are incompatible end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name set src end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name set dir end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get data type name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_name f end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name zip file set end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment check that dir and src are incompatible end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name set dir end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name set src end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get data type name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_comment check that fullpath and prefix are incompatible end_comment begin_expr_stmt begin_expr begin_name f end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name zip file set end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name set src end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name set prefix end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name set fullpath end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get data type name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_name f end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name zip file set end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name set src end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name set fullpath end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name set prefix end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get data type name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_comment check that reference zipfilesets cannot have specific attributes end_comment begin_expr_stmt begin_expr begin_name f end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name zip file set end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name set src end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get data type name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_comment check that a reference zipfileset gets the same attributes as the original end_comment begin_expr_stmt begin_expr begin_name f end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name zip file set end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name set src end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name set prefix end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name set file mode end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name set dir mode end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name add reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name zip file set end_name end_type begin_name zid end_name begin_init begin_expr begin_operator LPAR end_operator begin_name zip file set end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name zid end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name zid end_name begin_operator DOT end_operator begin_name get src end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get src end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get prefix end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name zid end_name begin_operator DOT end_operator begin_name get prefix end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get file mode end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_call begin_name begin_name zid end_name begin_operator DOT end_operator begin_name get file mode end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get dir mode end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_call begin_name begin_name zid end_name begin_operator DOT end_operator begin_name get dir mode end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test type end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect property set end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment maybe creates a nested extdirs element return path object to be configured with the extension directories end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name create extdirs end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name ext dirs end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name ext dirs end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name ext dirs end_name begin_operator DOT end_operator begin_name create path end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment gets the recorder that s associated with the passed in name if the recorder doesn t exist then a new one is created param name the name of the recoder param proj the current project return a recorder throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name recorder entry end_name end_type begin_name get recorder end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name project end_name end_type begin_name proj end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name o end_name begin_init begin_expr begin_call begin_name begin_name recorder entries end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name recorder entry end_name end_type begin_name entry end_name end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name o end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment create a recorder entry end_comment begin_expr_stmt begin_expr begin_name entry end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name recorder entry end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name append end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name open file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name open file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name append end_name begin_operator DOT end_operator begin_name boolean value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name proj end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name recorder entries end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name entry end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name entry end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name recorder entry end_name begin_operator RPAR end_operator begin_name o end_name end_expr end_expr_stmt end_block end_else end_if begin_return begin_expr begin_name entry end_name end_expr end_return end_block 
 begin_comment constructor for group argument end_comment begin_specifier end_specifier begin_name group argument end_name begin_parameter_list end_parameter_list begin_block begin_comment empty end_comment end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process tasks end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name implicit tag end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name unknown elements end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name unknown element end_name end_type begin_name ue end_name begin_init begin_expr begin_operator LPAR end_operator begin_name unknown element end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_call begin_name begin_name project helper end_name begin_operator DOT end_operator begin_name extract name from component name end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ue end_name begin_operator DOT end_operator begin_name get tag end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to lower case end_name begin_argument_list begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name get ns elements end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name present elements end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name present elements end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name ue end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment fulfill the resource collection contract return an iterator of resources since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name iterator end_name end_type begin_name iterator end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_operator UNP end_operator begin_class begin_super begin_name iterator end_name end_super begin_argument_list end_argument_list begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name done end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_function begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name has next end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_name done end_name end_expr end_return end_block end_function begin_function begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name next end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name done end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name no such element exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name done end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_return begin_expr begin_name begin_name resource end_name begin_operator DOT end_operator begin_name this end_name end_name end_expr end_return end_block end_function begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name remove end_name begin_parameter_list end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name unsupported operation exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_function end_block end_class end_expr end_return end_block 
 begin_comment fulfill the resource collection contract return an iterator of resources since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name iterator end_name end_type begin_name iterator end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name file set end_name begin_operator RPAR end_operator begin_call begin_name get ref end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file resource iterator end_name end_type begin_name result end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file resource iterator end_name begin_argument_list begin_argument begin_expr begin_call begin_name get dir end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name add files end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get directory scanner end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get included files end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name add files end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get directory scanner end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get included directories end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name result end_name end_expr end_return end_block 
 begin_comment add a package to be excluded from the javadoc run param pn the name of the package wildcards are not permitted end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add exclude package end_name begin_parameter_list begin_param begin_decl begin_type begin_name package name end_name end_type begin_name pn end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name exclude package names end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name pn end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the attribute type value return string containing type value end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get type value end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m type value end_name end_expr end_return end_block 
 begin_comment whether lots of warnings and error messages should be generated param verbose the value to set verbose lt level gt or noverbose end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set verbose end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name verbose end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name verbose attr end_name end_type begin_name v end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name verbose attr end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr begin_name verbose end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set verbose end_name begin_argument_list begin_argument begin_expr begin_name v end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment system out println task started event get task get task name end_comment begin_comment fired when a task has finished this event will still be throw if an error occurred during the build see build event get exception end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name task finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_comment system out println task finished event get task get task name end_comment end_block 
 begin_comment no op end_comment begin_comment the enumerated attributes for the three interface implementations end_comment begin_comment name classname mapping is done in the configure method end_comment begin_comment get the cache type to use return the enumerated cache type end_comment begin_type begin_specifier end_specifier begin_name cache end_name end_type begin_name get cache end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name cache end_name end_expr end_return end_block 
 begin_comment fail if the command exits with a non zero return code param fail if true fail the command on non zero return code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set failonerror end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name fail end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name fail on error end_name begin_operator EQ end_operator begin_name fail end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name incompatible with spawn end_name begin_operator UNP end_operator begin_name fail end_name end_expr end_expr_stmt end_block 
 begin_comment test whether or not a name matches against at least one exclude pattern param name the name to match must not be code null code return code true code when the name matches against at least one exclude pattern or code false code otherwise end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is excluded end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name ensure non pattern sets ready end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name is case sensitive end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_call begin_name begin_name exclude non patterns end_name begin_operator DOT end_operator begin_name contains end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call begin_operator DP end_operator begin_call begin_name begin_name exclude non patterns end_name begin_operator DOT end_operator begin_name contains end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name to upper case end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name exclude patterns end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_call begin_name match path end_name begin_argument_list begin_argument begin_expr begin_name begin_name exclude patterns end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name is case sensitive end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_for begin_return begin_expr end_expr end_return end_block 
 begin_specifier end_specifier begin_name fail test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name notest property invalid end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructs a path tokenizer for the specified path param path the path to tokenize must not be code null code end_comment begin_specifier end_specifier begin_name path tokenizer end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name path end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name on net ware end_name end_expr end_condition begin_then begin_block begin_comment for net ware use the boolean true mode so we can use delimiter end_comment begin_comment information to make a better decision later end_comment begin_expr_stmt begin_expr begin_name tokenizer end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name string tokenizer end_name begin_argument_list begin_argument begin_expr begin_name path end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment on windows and unix we can ignore delimiters and still have end_comment begin_comment enough information to tokenize correctly end_comment begin_expr_stmt begin_expr begin_name tokenizer end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name string tokenizer end_name begin_argument_list begin_argument begin_expr begin_name path end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_name dos style filesystem end_name begin_operator EQ end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name path separator char end_name end_name begin_operator EQT end_operator end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name build finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment add the resource collection param c the resource collection to add end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name add end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource collection end_name end_type begin_name c end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name no children allowed end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name c end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment value to set to add or subtract param value the value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set value end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name value end_name end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block 
 begin_comment look at the response for a failed mkdir action decide whether it matters or not if it does we throw an exception param ftp current ftp connection throws build exception if this is an error to signal end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name handle mk dir failure end_name begin_parameter_list begin_param begin_decl begin_type begin_name ftp client end_name end_type begin_name ftp end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name rc end_name begin_init begin_expr begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name get reply code end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_name ignore noncritical errors end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_name rc end_name begin_operator EQT end_operator begin_name begin_name ftp reply end_name begin_operator DOT end_operator begin_name code 550 end_name end_name begin_operator UNP end_operator begin_name rc end_name begin_operator EQT end_operator begin_name begin_name ftp reply end_name begin_operator DOT end_operator begin_name code 553 end_name end_name begin_operator UNP end_operator begin_name rc end_name begin_operator EQT end_operator begin_name code 521 end_name begin_operator RPAR end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name get reply string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name create five end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment get the comparison mode return a time comparison object end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name time comparison end_name end_type begin_name get when end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name when end_name end_expr end_return end_block 
 begin_comment no op implementation param event ignored end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name task finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment the name of the file or the pattern for the name that should be used for selection param pattern the file pattern that any filename must match against in order to be selected end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name pattern end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name pattern end_name begin_operator EQ end_operator begin_call begin_name begin_name pattern end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name pattern end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name pattern end_name begin_operator UNP end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name pattern end_name end_name begin_operator EQ end_operator begin_name pattern end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no target os end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test isfalse not end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect property set end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the uri for this definition param uri the namespace uri if this is not set use the default ant namespace end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set uri end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name uri end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name uri end_name end_name begin_operator EQ end_operator begin_name uri end_name end_expr end_expr_stmt end_block 
 begin_comment set the fail on error attribute default is false param fail a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set failonerror end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name fail end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name fail on error end_name begin_operator EQ end_operator begin_name fail end_name end_expr end_expr_stmt end_block 
 begin_comment runs the given target on the provided build file param file the build file to execute param directory the directory of the current iteration throws build exception is the file cannot be found read is a directory or the target called failed but only if code fail on error code is code true code otherwise a warning log message is simply output end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name directory end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name can read end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_name file end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name fail on error end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name ant end_name begin_operator EQ end_operator begin_call begin_name create ant task end_name begin_argument_list begin_argument begin_expr begin_name directory end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name antfilename end_name begin_init begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ant end_name begin_operator DOT end_operator begin_name set antfile end_name end_name begin_argument_list begin_argument begin_expr begin_name antfilename end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name targets end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name target element end_name end_type begin_name target element end_name begin_init begin_expr begin_operator LPAR end_operator begin_name target element end_name begin_operator RPAR end_operator begin_call begin_name begin_name targets end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ant end_name begin_operator DOT end_operator begin_name add configured target end_name end_name begin_argument_list begin_argument begin_expr begin_name target element end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ant end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name fail on error end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_name e end_name end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name sub target end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name antfilename end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name fail on error end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name sub target end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name antfilename end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_name ant end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment construct the command line for serial execution param src file the filename to add to the commandline param base dir filename is relative to this dir return the command line in the form of a string end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get commandline end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name src file end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name base dir end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name get commandline end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr begin_name src file end_name end_expr end_block end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name file end_name begin_index end_index end_name begin_block begin_expr begin_name base dir end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment examines each of the ejb stubs and skeletons in the destination directory and returns the modification timestamp for the oldest class if one of the stubs or skeletons cannot be found code 1 code is returned param dest the directory in which the ejb stubs and skeletons are stored return the modification timestamp for the oldest ejb stub or skeleton if one of the classes cannot be found code 1 code is returned throws build exception if the canonical path of the destination directory cannot be found end_comment begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name dest classes modified end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name dest dir end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name classnames end_name begin_init begin_expr begin_call begin_name classes to generate end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment list of all stubs skels end_comment begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name dest classes modified end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name date end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get time end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment earliest mod time end_comment begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name all classes found end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment has each been found end_comment begin_comment loop through each stub skeleton class that must be generated and determine if all exist which file has the most recent timestamp end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name classnames end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name path to class end_name begin_init begin_expr begin_name begin_name classnames end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name class file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name dest dir end_name end_expr end_argument begin_argument begin_expr begin_name path to class end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment add each stub skeleton class to the list of ejb files note that each class is added even if it doesn t exist now end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name ejb files end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name path to class end_name end_expr end_argument begin_argument begin_expr begin_name class file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name all classes found end_name begin_operator EQ end_operator begin_name all classes found end_name begin_operator UNP end_operator begin_call begin_name begin_name class file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name all classes found end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name file mod end_name begin_init begin_expr begin_call begin_name begin_name class file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment keep track of the oldest modification timestamp end_comment begin_expr_stmt begin_expr begin_name dest classes modified end_name begin_operator EQ end_operator begin_call begin_name begin_name math end_name begin_operator DOT end_operator begin_name min end_name end_name begin_argument_list begin_argument begin_expr begin_name dest classes modified end_name end_expr end_argument begin_argument begin_expr begin_name file mod end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for begin_return begin_expr begin_operator LPAR end_operator begin_name all classes found end_name begin_operator RPAR end_operator begin_operator QM end_operator begin_name dest classes modified end_name begin_operator DP end_operator begin_operator MINUS end_operator end_expr end_return end_block 
 begin_comment convert the nested sequential to an unknown element return the nested sequential as an unknown element end_comment begin_type begin_specifier end_specifier begin_name unknown element end_name end_type begin_name get nested task end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name unknown element end_name end_type begin_name ret end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name unknown element end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ret end_name begin_operator DOT end_operator begin_name set task name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ret end_name begin_operator DOT end_operator begin_name set namespace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ret end_name begin_operator DOT end_operator begin_name set q name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_operator UNP end_operator begin_call begin_name runtime configurable end_name begin_argument_list begin_argument begin_expr begin_name ret end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name nested sequential end_name begin_operator DOT end_operator begin_name get nested end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name size end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name unknown element end_name end_type begin_name e end_name begin_init begin_expr begin_operator LPAR end_operator begin_name unknown element end_name begin_operator RPAR end_operator begin_call begin_name begin_name nested sequential end_name begin_operator DOT end_operator begin_name get nested end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ret end_name begin_operator DOT end_operator begin_name add child end_name end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ret end_name begin_operator DOT end_operator begin_name get wrapper end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name add child end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get wrapper end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_name ret end_name end_expr end_return end_block 
 begin_comment return the compile list end_comment begin_type begin_specifier end_specifier begin_name vector end_name end_type begin_name get compile list end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name compile list end_name end_expr end_return end_block 
 begin_comment sets the mailport parameter of this build task param value mail port name deprecated since 1 5 x use link set mailport int instead end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set mailport end_name begin_parameter_list begin_param begin_decl begin_type begin_name integer end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set mailport end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name int value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment check that a suite generates no errors end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test suite end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name test runner end_name end_type begin_name runner end_name begin_init begin_expr begin_call begin_name create runner end_name begin_argument_list begin_argument begin_expr begin_name begin_name suite test case end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name runner end_name begin_operator DOT end_operator begin_name run end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name runner end_name begin_operator DOT end_operator begin_name get formatter end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get error end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name j unit test runner end_name begin_operator DOT end_operator begin_name success end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name runner end_name begin_operator DOT end_operator begin_name get ret code end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the name of the jar to be run return the pathname of the jar file to run via jar option or tt null tt if there is no jar to run see get classname end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get jar end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name execute jar end_name end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name begin_name java command end_name begin_operator DOT end_operator begin_name get executable end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr end_expr end_return end_block 
 begin_comment compare two resources param foo the first resource param bar the second resource return a negative integer zero or a positive integer as the first argument is greater than equal to or less than the second end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name resource compare end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource end_name end_type begin_name foo end_name end_decl end_param begin_param begin_decl begin_type begin_name resource end_name end_type begin_name bar end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator MINUS end_operator begin_operator STAR end_operator begin_operator LPAR end_operator begin_name nested end_name begin_operator EQT end_operator begin_operator QM end_operator begin_call begin_name begin_name foo end_name begin_operator DOT end_operator begin_name compare to end_name end_name begin_argument_list begin_argument begin_expr begin_name bar end_name end_expr end_argument end_argument_list end_call begin_operator DP end_operator begin_call begin_name begin_name nested end_name begin_operator DOT end_operator begin_name compare end_name end_name begin_argument_list begin_argument begin_expr begin_name foo end_name end_expr end_argument begin_argument begin_expr begin_name bar end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment writes the command into a temporary dcl script and returns the corresponding file object it is the job of the caller to delete the file on exit param cmd the command return the file containing the command throws io exception if there is an error writing to the file end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name file end_name end_type begin_name create vms java option file end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name cmd end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name script end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name create temp file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name print writer end_name end_type begin_name out end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name out end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name print writer end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name buffered writer end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file writer end_name begin_argument_list begin_argument begin_expr begin_name script end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name cmd end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try begin_return begin_expr begin_name script end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test filter chain end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name tmp end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name check end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name tmp end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name content equals end_name end_name begin_argument_list begin_argument begin_expr begin_name tmp end_name end_expr end_argument begin_argument begin_expr begin_name check end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment determines if the os on which ant is executing matches the type of that set in set family return true if the os matches throws build exception if there is an error see os set family string end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name eval end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_return begin_expr begin_call begin_name is os end_name begin_argument_list begin_argument begin_expr begin_name family end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name arch end_name end_expr end_argument begin_argument begin_expr begin_name version end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment sets the cmp version param version cmp version must be either code 1 0 code or code 2 0 code br default is code 1 0 code br initially only the j boss implementation does something specific for cmp 2 0 br since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set cmpversion end_name begin_parameter_list begin_param begin_decl begin_type begin_name cmp version end_name end_type begin_name version end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name cmp version end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name version end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test filter 9 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment should the build process fail if javadoc fails as indicated by a non zero return code p default is false p param b a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set failonerror end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name fail on error end_name begin_operator EQ end_operator begin_name b end_name end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name proxy auth end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name user end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name pass end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name auth end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name password authentication end_name begin_argument_list begin_argument begin_expr begin_name user end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name pass end_name begin_operator DOT end_operator begin_name to char array end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment retrieves the external file attributes return the external file attributes since 1 1 end_comment begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name get external attributes end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name external attributes end_name end_expr end_return end_block 
 begin_comment constructor for tar input stream param os the output stream to use param block size the block size to use end_comment begin_specifier end_specifier begin_name tar output stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name output stream end_name end_type begin_name os end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name block size end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr begin_name os end_name end_expr end_argument begin_argument begin_expr begin_name block size end_name end_expr end_argument begin_argument begin_expr begin_name begin_name tar buffer end_name begin_operator DOT end_operator begin_name default rcdsize end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment see enumerated attribute get values end_comment begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get values end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr begin_name file end_name end_expr begin_operator UNP end_operator begin_expr begin_name dir end_name end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 5 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name expected end_name begin_init begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name checkprop end_name begin_init begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name checkprop end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name expected end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment sets the output stream to which this logger is to send error messages param err the error stream for the logger must not be code null code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set error print stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name print stream end_name end_type begin_name err end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name err end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name print stream end_name begin_argument_list begin_argument begin_expr begin_name err end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test xerces is present end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name sax exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name xml reader end_name end_type begin_name xerces end_name end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name xerces end_name begin_operator EQ end_operator begin_call begin_name begin_name xml reader factory end_name begin_operator DOT end_operator begin_name create xml reader end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr begin_name xerces end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test nested patternset end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name pattern set end_name end_type begin_name p end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name pattern set end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name set includes end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name pattern set end_name end_type begin_name nested end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name pattern set end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name nested end_name begin_operator DOT end_operator begin_name set excludes end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name add configured patternset end_name end_name begin_argument_list begin_argument begin_expr begin_name nested end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name excludes end_name begin_init begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get exclude patterns end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name includes end_name begin_init begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get include patterns end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name includes end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name excludes end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the vendor specific name of the jar that will be output the modification date of this jar will be checked against the dependent bean classes end_comment begin_type begin_name file end_name end_type begin_name get vendor output jar file end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name base name end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name get dest dir end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name get parent end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get destdir end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name get dest dir end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get parent end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get destdir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name base name end_name begin_operator PLUS end_operator begin_name jar suffix end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get dest dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name base name end_name begin_operator PLUS end_operator begin_name jar suffix end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set five end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment get an input stream for the resource return an input stream containing this resource s content throws io exception if unable to provide the content of this resource as a stream throws unsupported operation exception if input streams are not supported for this resource type end_comment begin_type begin_specifier end_specifier begin_name input stream end_name end_type begin_name get input stream end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name in end_name begin_init begin_expr begin_call begin_name get resource end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get input stream end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name in end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name in end_name begin_operator EQ end_operator begin_call begin_name wrap stream end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name in end_name end_expr end_return end_block 
 begin_comment value of the source command line switch will be ignored by all implementations except modern and jikes if you use this attribute together with jikes you must make sure that your version of jikes supports the source switch legal values are 1 3 1 4 1 5 and 5 by default no source argument will be used at all param v value to assign to source end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set source end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name v end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name source end_name end_name begin_operator EQ end_operator begin_name v end_name end_expr end_expr_stmt end_block 
 begin_comment get the argument or null for no argument needed return the win 32 res parameter to csc end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get win 32 res parameter end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name win 32 res end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name win 32 res end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr end_expr end_return end_block end_else end_if end_block 
 begin_comment set the classpath used for net rexx compilation param classpath the classpath to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classpath end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name classpath end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name end_name begin_operator EQ end_operator begin_name classpath end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get error output end_name begin_parameter_list begin_param begin_decl begin_type begin_name process end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name buffered reader end_name end_type begin_name err end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name buffered reader end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name input stream reader end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get error stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name buf end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name line end_name end_decl end_decl_stmt begin_while begin_condition begin_expr begin_operator LPAR end_operator begin_name line end_name begin_operator EQ end_operator begin_call begin_name begin_name err end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_return begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment returns the task instance after it has been created and if it is a task return a task instance or code null code if the real object is not a task end_comment begin_type begin_specifier end_specifier begin_name task end_name end_type begin_name get task end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name real thing end_name begin_operator UNP end_operator begin_name task end_name end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name task end_name begin_operator RPAR end_operator begin_name real thing end_name end_expr end_return end_block end_then end_if begin_return begin_expr end_expr end_return end_block 
 begin_comment set the y location param y the value to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set yloc end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name y end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name yloc end_name begin_operator EQ end_operator begin_name y end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name do single transfer end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument begin_argument begin_expr begin_name j sch exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name cmd end_name begin_init begin_expr begin_operator PLUS end_operator begin_name remote path end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name channel end_name end_type begin_name channel end_name begin_init begin_expr begin_call begin_name open exec channel end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name output stream end_name end_type begin_name out end_name begin_init begin_expr begin_call begin_name begin_name channel end_name begin_operator DOT end_operator begin_name get output stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name in end_name begin_init begin_expr begin_call begin_name begin_name channel end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name channel end_name begin_operator DOT end_operator begin_name connect end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name wait for ack end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name send file to remote end_name begin_argument_list begin_argument begin_expr begin_name local file end_name end_expr end_argument begin_argument begin_expr begin_name in end_name end_expr end_argument begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_if begin_condition begin_expr begin_name channel end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name channel end_name begin_operator DOT end_operator begin_name disconnect end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try end_block 
 begin_comment set a prefix for the properties if the prefix does not end with a one is automatically added param prefix the prefix to use since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set prefix end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name prefix end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name prefix end_name end_name begin_operator EQ end_operator begin_name prefix end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name prefix end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name prefix end_name end_name begin_operator UNP end_operator end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment gets the failonerror flag return the flag end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get failonerror end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name fail on error end_name end_expr end_return end_block 
 begin_comment performs the image rotation when being handled as a transform operation param image the image to perform the transformation on return the transformed image end_comment begin_type begin_specifier end_specifier begin_name planar image end_name end_type begin_name execute transform operation end_name begin_parameter_list begin_param begin_decl begin_type begin_name planar image end_name end_type begin_name image end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name buffered image end_name end_type begin_name bi end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name graphics 2 d end_name end_type begin_name graphics end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name instructions end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name image operation end_name end_type begin_name instr end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name image operation end_name begin_operator RPAR end_operator begin_call begin_name begin_name instructions end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name instr end_name begin_operator UNP end_operator begin_name draw operation end_name end_expr end_condition begin_then begin_block begin_comment if this transform operation has draw operation children end_comment begin_comment then rotate the first child and return end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name planar image end_name end_type begin_name op end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name draw operation end_name begin_operator RPAR end_operator begin_name instr end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name execute draw operation end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name image end_name begin_operator EQ end_operator begin_call begin_name perform rotate end_name begin_argument_list begin_argument begin_expr begin_name op end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name image end_name end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_name instr end_name begin_operator UNP end_operator begin_name transform operation end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name bi end_name begin_operator EQ end_operator begin_call begin_name begin_name image end_name begin_operator DOT end_operator begin_name get as buffered image end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name graphics end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name graphics 2 d end_name begin_operator RPAR end_operator begin_call begin_name begin_name bi end_name begin_operator DOT end_operator begin_name get graphics end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name image end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name transform operation end_name begin_operator RPAR end_operator begin_name instr end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name execute transform operation end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name planar image end_name begin_operator DOT end_operator begin_name wrap rendered image end_name end_name begin_argument_list begin_argument begin_expr begin_name bi end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name bi end_name begin_operator EQ end_operator begin_call begin_name begin_name image end_name begin_operator DOT end_operator begin_name get as buffered image end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name image end_name begin_operator EQ end_operator begin_call begin_name perform rotate end_name begin_argument_list begin_argument begin_expr begin_name image end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name image end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name image end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test fix file exclusive end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name fix crlf end_name begin_operator DOT end_operator begin_name error file and srcdir end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name fix crlf end_name begin_operator DOT end_operator begin_name error file and srcdir end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment overrides the base resource collection container version to recurse on nested resource comparators param stk the stack of data types to use recursively param p the project to use to dereference the references throws build exception on error end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name die on circular reference end_name begin_parameter_list begin_param begin_decl begin_type begin_name stack end_name end_type begin_name stk end_name end_decl end_param begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name is checked end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name die on circular reference end_name end_name begin_argument_list begin_argument begin_expr begin_name stk end_name end_expr end_argument begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name data type end_name begin_operator DOT end_operator begin_name invoke circular reference check end_name end_name begin_argument_list begin_argument begin_expr begin_name comp end_name end_expr end_argument begin_argument begin_expr begin_name stk end_name end_expr end_argument begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set checked end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment attribute includedelims whether to include the line ending with the line or to return it in the posttoken default false param include delims if true include r and n in the line end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set include delims end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name include delims end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name include delims end_name end_name begin_operator EQ end_operator begin_name include delims end_name end_expr end_expr_stmt end_block 
 begin_comment choose the implementation for this particular task param impl the name of the implemenation since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set implementation end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name impl end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name impl end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name facade end_name begin_operator DOT end_operator begin_name set implementation end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name native 2 ascii adapter factory end_name begin_operator DOT end_operator begin_name get default end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name facade end_name begin_operator DOT end_operator begin_name set implementation end_name end_name begin_argument_list begin_argument begin_expr begin_name impl end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment notify the code redirector code that it is now okay to set any output and or error properties end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set properties end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name baos end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name baos end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name eye oh ex end_name end_decl end_param end_parameter_list begin_block begin_comment ignore exception end_comment end_block end_catch end_try end_block end_then end_if begin_if begin_condition begin_expr begin_name error baos end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name error baos end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name eye oh ex end_name end_decl end_param end_parameter_list begin_block begin_comment ignore exception end_comment end_block end_catch end_try end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test nested c end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment convenience method to copy content from one resource to another no filtering is performed param source the resource to copy from must not be code null code param dest the resource to copy to must not be code null code param project the project instance throws io exception if the copying fails since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name copy resource end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource end_name end_type begin_name source end_name end_decl end_param begin_param begin_decl begin_type begin_name resource end_name end_type begin_name dest end_name end_decl end_param begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name copy resource end_name begin_argument_list begin_argument begin_expr begin_name source end_name end_expr end_argument begin_argument begin_expr begin_name dest end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the source dir to find the files to be renamed param src dir the source directory end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set src dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name src dir end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name src dir end_name end_name begin_operator EQ end_operator begin_name src dir end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get major version end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment set the name under which this script will be activated in a build file param name the name of the script end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name name end_name end_name begin_operator EQ end_operator begin_name name end_name end_expr end_expr_stmt end_block 
 begin_comment dangerous method to obtain the classpath for the test this is severely tighted to the build xml properties end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get test class path end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name classpath end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name classpath end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name classpath end_name begin_operator EQ end_operator begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name classpath end_name end_expr end_return end_block 
 begin_comment location of bootstrap class files param src the bootstrap classpath end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set bootclasspath end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name src end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name bootclasspath end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name bootclasspath end_name begin_operator EQ end_operator begin_name src end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name bootclasspath end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name src end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment xml does not do c like interpretation of strings i e n r t etc this method processes n r t f also subs s n r t f a trailing will be ignored param input raw string with possible embedded s return converted string since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name resolve back slash end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name input end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name b end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name back slash seen end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name input end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name c end_name begin_init begin_expr begin_call begin_name begin_name input end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name back slash seen end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name c end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name back slash seen end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name b end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then begin_else begin_block begin_switch begin_condition begin_expr begin_name c end_name end_expr end_condition begin_block begin_case begin_expr end_expr begin_expr_stmt begin_expr begin_call begin_name begin_name b end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name char end_name begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr end_expr begin_expr_stmt begin_expr begin_call begin_name begin_name b end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name char end_name begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr end_expr begin_expr_stmt begin_expr begin_call begin_name begin_name b end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name char end_name begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr end_expr begin_expr_stmt begin_expr begin_call begin_name begin_name b end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name char end_name begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr end_expr begin_expr_stmt begin_expr begin_call begin_name begin_name b end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name char end_name begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr end_expr begin_expr_stmt begin_expr begin_call begin_name begin_name b end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_default begin_expr_stmt begin_expr begin_call begin_name begin_name b end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_default end_block end_switch begin_expr_stmt begin_expr begin_name back slash seen end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_else end_if end_block end_for begin_return begin_expr begin_call begin_name begin_name b end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment only fail if a property of the given name exists in the current project param c property name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set if end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name c end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name if condition end_name begin_operator EQ end_operator begin_name c end_name end_expr end_expr_stmt end_block 
 begin_comment return the names of the directories which matched at least one of the include patterns and none of the exclude patterns the names are relative to the base directory return the names of the directories which matched at least one of the include patterns and none of the exclude patterns end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get included directories end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name dirs included end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name illegal state exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name directories end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_call begin_name begin_name dirs included end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dirs included end_name begin_operator DOT end_operator begin_name copy into end_name end_name begin_argument_list begin_argument begin_expr begin_name directories end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name arrays end_name begin_operator DOT end_operator begin_name sort end_name end_name begin_argument_list begin_argument begin_expr begin_name directories end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name directories end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test redirect 1 end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name expected out end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name expected out end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get file string end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the closure flag if this flag is true the analyzer will traverse all class relationships until it has collected the entire set of direct and indirect dependencies param closure true if dependencies should be traversed to determine indirect dependencies end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set closure end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name closure end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name closure end_name end_name begin_operator EQ end_operator begin_name closure end_name end_expr end_expr_stmt end_block 
 begin_comment if true command will throw an exception on failure param failonerr the status to set the flag to since ant 1 6 1 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set fail on err end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name failonerr end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m failonerr end_name begin_operator EQ end_operator begin_name failonerr end_name end_expr end_expr_stmt end_block 
 begin_comment constructs a new tt cb zip 2 output stream tt with specified blocksize p b attention b the caller is resonsible to write the two b zip 2 magic bytes tt bz tt to the specified stream prior to calling this constructor p param out the destination stream param block size the block size as 100 k units throws io exception if an i o error occurs in the specified stream throws illegal argument exception if code block size 1 block size 9 code throws null pointer exception if code out null code see min blocksize see max blocksize end_comment begin_specifier end_specifier begin_name cb zip 2 output stream end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name output stream end_name end_type begin_name out end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name block size end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name block size end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name illegal argument exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name block size end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name block size end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name illegal argument exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name block size end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name block size 100 k end_name end_name begin_operator EQ end_operator begin_name block size end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name out end_name end_name begin_operator EQ end_operator begin_name out end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name init end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment default constructor end_comment begin_specifier end_specifier begin_name archive resource end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment add text to send to the server a sub task lt write gt tag was found create the object save it in our list and return it return a write sub task end_comment begin_type begin_specifier end_specifier begin_name r exec sub task end_name end_type begin_name create write end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name r exec sub task end_name end_type begin_name task end_name begin_init begin_expr begin_operator LPAR end_operator begin_name r exec sub task end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_call begin_name r exec write end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name rexec tasks end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name task end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name task end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test case sensitive end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name contains end_name end_type begin_name con end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name contains end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name con end_name begin_operator DOT end_operator begin_name set string end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name con end_name begin_operator DOT end_operator begin_name set substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name con end_name begin_operator DOT end_operator begin_name eval end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name con end_name begin_operator DOT end_operator begin_name set casesensitive end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name con end_name begin_operator DOT end_operator begin_name eval end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment fired when a target is started param event ignored see build event get target end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name target started end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test double end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set a single commandline argument param value a single commandline argument end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set value end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name parts end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr begin_name value end_name end_expr end_block end_expr end_expr_stmt end_block 
 begin_comment get the character encoding for output files return the character encoding for output files code null code if not set since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get output encoding end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name output encoding end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 5 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name checkprop end_name begin_init begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name checkprop end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment ensure exec follows the immutability rule end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 6 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment creates a path as container for attachments supports any filesystem resource collections that way return the path to be configured since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name create attachments end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name attachments end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name attachments end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name attachments end_name begin_operator DOT end_operator begin_name create path end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment setup rmic argument for rmic return the command line end_comment begin_type begin_specifier end_specifier begin_name commandline end_name end_type begin_name setup rmic command end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name setup rmic command end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment return the count of included files return code int code since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name int end_name end_type begin_name get included files count end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name files included end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name illegal state exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name files included end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment create new parameters to pass to custom selector param p the new parameter object end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add param end_name begin_parameter_list begin_param begin_decl begin_type begin_name parameter end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name param vec end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name input end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name output end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name file name mapper end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name file name mapper end_name begin_operator DOT end_operator begin_name map file name end_name end_name begin_argument_list begin_argument begin_expr begin_name input end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name flattened end_name end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name result end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name flattened end_name begin_operator EQ end_operator begin_name null mapper result end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name b end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name result end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name i end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name b end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name b end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name result end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_name flattened end_name begin_operator EQ end_operator begin_call begin_name begin_name b end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name flattened end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name fail message end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name flattened end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_type begin_name void end_name end_type begin_name test target first end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment write the dependencies to cache file param dependency map the map of dependencies to be written out exception io exception if the dependency file cannot be written out end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write cached dependencies end_name begin_parameter_list begin_param begin_decl begin_type begin_name hashtable end_name end_type begin_name dependency map end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name cache end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name print writer end_name end_type begin_name pw end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cache end_name begin_operator DOT end_operator begin_name mkdirs end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name dep file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name cache end_name end_expr end_argument begin_argument begin_expr begin_name cache file name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name pw end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name print writer end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file writer end_name begin_argument_list begin_argument begin_expr begin_name dep file end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name dependency map end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name class name end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name pw end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name classname prepend end_name begin_operator PLUS end_operator begin_name class name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name dependency list end_name begin_init begin_expr begin_operator LPAR end_operator begin_name vector end_name begin_operator RPAR end_operator begin_call begin_name begin_name dependency map end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name class name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name size end_name begin_init begin_expr begin_call begin_name begin_name dependency list end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name x end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name x end_name begin_operator LT end_operator begin_name size end_name end_expr end_condition begin_incr begin_expr begin_name x end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name pw end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name dependency list end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name x end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_while end_block begin_finally begin_block begin_if begin_condition begin_expr begin_name pw end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name pw end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try end_block end_then end_if end_block 
 begin_comment test the mapped file list end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test mapped filelist end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set whether empty filesets will be skipped if true and no source files have been found or are newer than their corresponding target files the command will not be run param skip whether to skip empty filesets end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set skip empty filesets end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name skip end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name skip empty end_name begin_operator EQ end_operator begin_name skip end_name end_expr end_expr_stmt end_block 
 begin_comment test the detection and warning of non public classes end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test non public end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name log end_name begin_init begin_expr begin_call begin_name get log end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment find out whether the url exists and close the connection opened to the url if close connection is true note that this method does ensure that if the resource exists if it returns true and if the current object is not a reference is reference returns false and if it was called with close connection to false then the connection to the url stored in the conn private field will be opened and require to be closed by the caller param close connection true if the connection should be closed after the call false if it should stay open return true if this resource exists end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name is exists end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name close connection end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name get url end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name connect end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block end_catch begin_finally begin_block begin_if begin_condition begin_expr begin_name close connection end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name close end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try end_block 
 begin_comment returns the id for this element return the id end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get id end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name id end_name end_expr end_return end_block 
 begin_comment file to incorporate as application xml param descr the descriptor file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set appxml end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name descr end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name deployment descriptor end_name begin_operator EQ end_operator begin_name descr end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name deployment descriptor end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name deployment descriptor end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment create a zip file set for this file and pass it up end_comment begin_decl_stmt begin_decl begin_type begin_name zip file set end_name end_type begin_name fs end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name zip file set end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name set file end_name end_name begin_argument_list begin_argument begin_expr begin_name deployment descriptor end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name set fullpath end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name add fileset end_name end_name begin_argument_list begin_argument begin_expr begin_name fs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name sql exec test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the timed element associated with a task where the task is not found directly search for unknown elements which may be hiding the real task end_comment begin_type begin_specifier end_specifier begin_name timed element end_name end_type begin_name get task element end_name begin_parameter_list begin_param begin_decl begin_type begin_name task end_name end_type begin_name task end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name timed element end_name end_type begin_name element end_name begin_init begin_expr begin_operator LPAR end_operator begin_name timed element end_name begin_operator RPAR end_operator begin_call begin_name begin_name tasks end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name task end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name element end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_name element end_name end_expr end_return end_block end_then end_if begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name tasks end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name task end_name end_type begin_name key end_name begin_init begin_expr begin_operator LPAR end_operator begin_name task end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name key end_name begin_operator UNP end_operator begin_name unknown element end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name unknown element end_name begin_operator RPAR end_operator begin_name key end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get task end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_name task end_name end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name timed element end_name begin_operator RPAR end_operator begin_call begin_name begin_name tasks end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if end_block end_then end_if end_block end_for begin_return begin_expr end_expr end_return end_block 
 begin_comment check the configuration of this execute on instance end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check configuration end_name begin_parameter_list end_parameter_list begin_block begin_comment todo using task name here is brittle as a user could override it end_comment begin_comment this should probably be modified to use the classname instead end_comment begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name get task name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name check configuration end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator UNP end_operator begin_name resources end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name target file pos end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name mapper element end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name dest dir end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name mapper element end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name mapper element end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name mapper end_name begin_operator EQ end_operator begin_call begin_name begin_name mapper element end_name begin_operator DOT end_operator begin_name get implementation end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment not reached end_comment begin_comment get the value of a field in an object param obj the object to look at param field name the name of the field in the object return the value of the field throws build exception if there is an error end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name object end_name end_type begin_name get field end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name obj end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name field name end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name field end_name end_type begin_name field end_name begin_init begin_expr begin_call begin_name begin_name obj end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get declared field end_name begin_argument_list begin_argument begin_expr begin_name field name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name field end_name begin_operator DOT end_operator begin_name set accessible end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name field end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name obj end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name throw build exception end_name begin_argument_list begin_argument begin_expr begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return begin_comment not reached end_comment end_block end_catch end_try end_block 
 begin_comment bind the runner to a project component the project and self are the only beans set param component to become code self code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name bind to component minimum end_name begin_parameter_list begin_param begin_decl begin_type begin_name project component end_name end_type begin_name component end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name project end_name begin_operator EQ end_operator begin_call begin_name begin_name component end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add bean end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add bean end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name component end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment inform the observers that a timeout has occurred this happens in the watchdog thread end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name fire timeout occured end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name observers end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name timeout observer end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name timeout occured end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test correct task name bad el end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the tcp port to connect to default is 23 param p an code int code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set port end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name port end_name end_name begin_operator EQ end_operator begin_name p end_name end_expr end_expr_stmt end_block 
 begin_comment set the mode for this entry param mode the mode for this entry end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set mode end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name mode end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name mode end_name end_name begin_operator EQ end_operator begin_name mode end_name end_expr end_expr_stmt end_block 
 begin_comment access the stack of wrappers return the stack of wrappers end_comment begin_type begin_specifier end_specifier begin_name vector end_name end_type begin_name get wrapper stack end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name w stack end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name send end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name retmsg end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name retmsg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name retmsg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment do the work throws build exception if no change list specified end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name change end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name exec p 4 command end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name change end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name p 4 handler adapter end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_call begin_name p 4 submit adapter end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment here we d parse the output from change o into submit i end_comment begin_comment in order to support default change end_comment begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name list end_name end_type begin_name get nested end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name rc end_name begin_operator EQT end_operator begin_operator QM end_operator begin_name begin_name collections end_name begin_operator DOT end_operator begin_name empty list end_name end_name begin_operator DP end_operator begin_name rc end_name end_expr end_return end_block 
 begin_comment check the file given by get file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name doit end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name commandline end_name end_type begin_name command line end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name commandline end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment build the command line from what we got the format is end_comment begin_comment ccm co t files end_comment begin_comment as specified in the ccm exe help end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name set executable end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get ccm command end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get ccm action end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name check options end_name begin_argument_list begin_argument begin_expr begin_name command line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name result end_name begin_init begin_expr begin_call begin_name run end_name begin_argument_list begin_argument begin_expr begin_name command line end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name execute end_name begin_operator DOT end_operator begin_name is failure end_name end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment a timeout value that overrides any task wide timeout param i an code integer code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set timeout end_name begin_parameter_list begin_param begin_decl begin_type begin_name integer end_name end_type begin_name i end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name timeout end_name end_name begin_operator EQ end_operator begin_name i end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test value does not get overwritten end_name begin_parameter_list end_parameter_list begin_block begin_comment this test shows that the bug report 21505 is fixed end_comment begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment delegate to local file data return the central directory length since 1 1 end_comment begin_type begin_specifier end_specifier begin_name zip short end_name end_type begin_name get central directory length end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get local file data length end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment tag or branch return tag or branch since ant 1 6 1 end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get tag end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name tag end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test run 2 end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a classname to the list of dependency classes param classname the class to be added to the list of dependencies end_comment begin_type begin_name void end_name end_type begin_name add class end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name classname end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name dependencies end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument begin_argument begin_expr begin_name classname end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment if true forks the javac compiler param f true false on off yes no end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set fork end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name f end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name fork end_name begin_operator EQ end_operator begin_name f end_name end_expr end_expr_stmt end_block 
 begin_comment convert the string buffer to a string potentially stripping out any trailing separator param urls url buffer param count number of url entries return trimmed string or empty string end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name strip trailing separator end_name begin_parameter_list begin_param begin_decl begin_type begin_name string buffer end_name end_type begin_name urls end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name count end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name count end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name urls end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name urls end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator begin_call begin_name begin_name separator end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name urls end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_name urls end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr end_expr end_return end_block end_else end_if end_block 
 begin_comment the teardown method for j unit end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return an arbitrary string end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name another string end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name text end_name end_expr end_return end_block 
 begin_comment read a constant pool entry from a class stream param cp stream the data input stream which contains the constant pool entry to be read exception io exception if there is a problem reading the entry from the stream end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name read end_name begin_parameter_list begin_param begin_decl begin_type begin_name data input stream end_name end_type begin_name cp stream end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_name class index end_name begin_operator EQ end_operator begin_call begin_name begin_name cp stream end_name begin_operator DOT end_operator begin_name read unsigned short end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name name and type index end_name begin_operator EQ end_operator begin_call begin_name begin_name cp stream end_name begin_operator DOT end_operator begin_name read unsigned short end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment rotate an image param image the image to rotate return the rotated image end_comment begin_type begin_specifier end_specifier begin_name planar image end_name end_type begin_name perform rotate end_name begin_parameter_list begin_param begin_decl begin_type begin_name planar image end_name end_type begin_name image end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name float end_name end_type begin_name t angle end_name begin_init begin_expr begin_call begin_name float end_name begin_argument_list begin_argument begin_expr begin_name angle end_name begin_operator STAR end_operator begin_operator LPAR end_operator begin_name begin_name math end_name begin_operator DOT end_operator begin_name pi end_name end_name begin_operator SLASH end_operator begin_name half circle end_name begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name parameter block end_name end_type begin_name pb end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name parameter block end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name pb end_name begin_operator DOT end_operator begin_name add source end_name end_name begin_argument_list begin_argument begin_expr begin_name image end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name pb end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name pb end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name pb end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name t angle end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name pb end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name interpolation nearest end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name jai end_name begin_operator DOT end_operator begin_name create end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name pb end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment get the runtime configurable instance for this unknown element containing the configuration information return the configuration info end_comment begin_type begin_specifier end_specifier begin_name runtime configurable end_name end_type begin_name get wrapper end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name get wrapper end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment override object to string return information about this comparator end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment getting properties end_comment begin_comment returns the value of a property if it is set you can override this method in order to plug your own storage param ns the namespace for the property currently not used param name the name of the property may be code null code in which case the return value is also code null code return the property value or code null code for no match or if a code null code name is provided end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name object end_name end_type begin_name get property end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name ns end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name o end_name begin_init begin_expr begin_call begin_name get property hook end_name begin_argument_list begin_argument begin_expr begin_name ns end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name o end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_name o end_name end_expr end_return end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name properties end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment the directory to run the patch command in defaults to the project s base directory param directory the directory to run the patch command in since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name directory end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name directory end_name end_name begin_operator EQ end_operator begin_name directory end_name end_expr end_expr_stmt end_block 
 begin_comment set the password for the proxy used only if the proxy user is set param proxy password password to go with the username since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set proxy password end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name proxy password end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name proxy password end_name end_name begin_operator EQ end_operator begin_name proxy password end_name end_expr end_expr_stmt end_block 
 begin_comment writes the data descriptor entry param ze the entry to write throws io exception on error since 1 1 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write data descriptor end_name begin_parameter_list begin_param begin_decl begin_type begin_name zip entry end_name end_type begin_name ze end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name ze end_name begin_operator DOT end_operator begin_name get method end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name deflated end_name begin_operator UNP end_operator begin_name raf end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name write out end_name begin_argument_list begin_argument begin_expr begin_name dd sig end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write out end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name zip long end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get crc end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write out end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name zip long end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get compressed size end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write out end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name zip long end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get size end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name written end_name begin_operator UNP end_operator end_expr end_expr_stmt end_block 
 begin_comment whether the task should suppress the foo exception is in signals list but is not signalled within the method which is sometimes rather useless the warning is logged as verbose message though param suppress exception not signalled a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set suppress exception not signalled end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name suppress exception not signalled end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name suppress exception not signalled end_name end_name begin_operator EQ end_operator begin_name suppress exception not signalled end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 3 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the type attribute this is optional attribute param type an ant component type name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set type end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name type end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name type end_name end_name begin_operator EQ end_operator begin_name type end_name end_expr end_expr_stmt end_block 
 begin_comment quot true quot to find out automatically the time difference between local and remote machine this requires right to create and delete a temporary file in the remote directory param time diff auto true find automatically the time diff since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set time diff auto end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name time diff auto end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name time diff auto end_name end_name begin_operator EQ end_operator begin_name time diff auto end_name end_expr end_expr_stmt end_block 
 begin_comment test the operation of the cache end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test cache end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test the code that validates the selector end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test validate end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name filename selector end_name end_type begin_name s end_name begin_init begin_expr begin_operator LPAR end_operator begin_name filename selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name is selected end_name end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name filenames end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be 1 end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be 1 end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name filename selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name parameter end_name end_type begin_name param end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name parameter end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name param end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name param end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name parameter end_name begin_index end_index end_type begin_name params end_name begin_init begin_expr begin_block begin_expr begin_name param end_name end_expr end_block end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set parameters end_name end_name begin_argument_list begin_argument begin_expr begin_name params end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name is selected end_name end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name filenames end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name files end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be 2 end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be 2 end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test ns prefix on attribute even without element end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name document end_name end_type begin_name d end_name begin_init begin_expr begin_call begin_name begin_name dom utils end_name begin_operator DOT end_operator begin_name new document end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name element end_name end_type begin_name root end_name begin_init begin_expr begin_call begin_name begin_name d end_name begin_operator DOT end_operator begin_name create element ns end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name root end_name begin_operator DOT end_operator begin_name set attribute ns end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string writer end_name end_type begin_name sw end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string writer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name dom element writer end_name end_type begin_name w end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name dom element writer end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name dom element writer end_name begin_operator DOT end_operator begin_name xml namespace policy end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name root end_name end_expr end_argument begin_argument begin_expr begin_name sw end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name sw end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment a archive fileset accepts another archive file set or a file set as reference file sets are often used by the war task for the lib attribute param zfs the project to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name configure file set end_name begin_parameter_list begin_param begin_decl begin_type begin_name archive file set end_name end_type begin_name zfs end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name zfs end_name begin_operator DOT end_operator begin_name set prefix end_name end_name begin_argument_list begin_argument begin_expr begin_name prefix end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name zfs end_name begin_operator DOT end_operator begin_name set fullpath end_name end_name begin_argument_list begin_argument begin_expr begin_name fullpath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name zfs end_name begin_operator DOT end_operator begin_name file mode has been set end_name end_name begin_operator EQ end_operator begin_name file mode has been set end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name zfs end_name begin_operator DOT end_operator begin_name file mode end_name end_name begin_operator EQ end_operator begin_name file mode end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name zfs end_name begin_operator DOT end_operator begin_name dir mode has been set end_name end_name begin_operator EQ end_operator begin_name dir mode has been set end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name zfs end_name begin_operator DOT end_operator begin_name dir mode end_name end_name begin_operator EQ end_operator begin_name dir mode end_name end_expr end_expr_stmt end_block 
 begin_comment return the group identifier end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get gid end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name tar file set end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get gid end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr begin_name gid end_name end_expr end_return end_block 
 begin_comment adds a different selector to the selector list param selector the selector to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add different end_name begin_parameter_list begin_param begin_decl begin_type begin_name different selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name append selector end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name has more elements end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name e 1 end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name e 2 end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment set whether output should be appended to or overwrite an existing file defaults to false param append if true append is desired since 1 30 ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set append end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name append end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name set append end_name end_name begin_argument_list begin_argument begin_expr begin_name append end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name incompatible with spawn end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment set whether to treat resources as if they were text files ignoring line endings param as text whether to ignore line endings end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set as text end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name as text end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name as text end_name end_name begin_operator EQ end_operator begin_name as text end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set ten end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name f end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name path end_name begin_init begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name project basedir end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name project basedir end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name to lower case end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name project basedir end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name to lower case end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name substring end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test tail lines end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name expected end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name content equals end_name end_name begin_argument_list begin_argument begin_expr begin_name expected end_name end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment whether to stop the build true default or keep going if an error is returned from the p 4 command param fail indicates whether one wants to fail the build if an error comes from the perforce command end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set failonerror end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name fail end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name fail on error end_name begin_operator EQ end_operator begin_name fail end_name end_expr end_expr_stmt end_block 
 begin_comment get the vm command parameters including memory settings return the vm command parameters end_comment begin_type begin_specifier end_specifier begin_name commandline end_name end_type begin_name get actual vm command end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name commandline end_name end_type begin_name actual vm command end_name begin_init begin_expr begin_operator LPAR end_operator begin_name commandline end_name begin_operator RPAR end_operator begin_call begin_name begin_name vm command end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name max memory end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name vm version end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name actual vm command end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name max memory end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name actual vm command end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name max memory end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_return begin_expr begin_name actual vm command end_name end_expr end_return end_block 
 begin_comment set the classpath to be used to find this compiler adapter param cp the compiler classpath end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set compilerclasspath end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name cp end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name compiler classpath end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name compiler classpath end_name begin_operator EQ end_operator begin_name cp end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name compiler classpath end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name cp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment set the quiet attribute param quiet the value to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set internal quiet end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name quiet end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name quiet end_name end_name begin_operator EQ end_operator begin_name quiet end_name end_expr end_expr_stmt end_block 
 begin_comment get failonerr flag status return boolean containing status of failonerr flag since ant 1 6 1 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get fail on err end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m failonerr end_name end_expr end_return end_block 
 begin_comment create a nested error code filter chain code return code filter chain code end_comment begin_type begin_specifier end_specifier begin_name filter chain end_name end_type begin_name create error filter chain end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name no children allowed end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name filter chain end_name end_type begin_name result end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name filter chain end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name error filter chains end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name result end_name end_expr end_return end_block 
 begin_comment writes a string to a file if destination file exists it may be overwritten depending on the append value param from string to write param to file to write to param append if true append to existing file else overwrite exception exception most likely an io exception end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write to file end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name from end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name append end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name to end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name file writer end_name end_type begin_name out end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name out end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file writer end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name to end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name append end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string reader end_name end_type begin_name in end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string reader end_name begin_argument_list begin_argument begin_expr begin_name from end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name char end_name begin_index end_index end_type begin_name buffer end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name char end_name begin_index begin_expr end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name bytes read end_name end_decl end_decl_stmt begin_while begin_condition begin_expr end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name bytes read end_name begin_operator EQ end_operator begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name bytes read end_name begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_break end_break end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name bytes read end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_if begin_condition begin_expr begin_name out end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try end_block 
 begin_comment constructor for tar input stream param os the output stream to use end_comment begin_specifier end_specifier begin_name tar output stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name output stream end_name end_type begin_name os end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr begin_name os end_name end_expr end_argument begin_argument begin_expr begin_name begin_name tar buffer end_name begin_operator DOT end_operator begin_name default blksize end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name tar buffer end_name begin_operator DOT end_operator begin_name default rcdsize end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment quote a string to place in a file param str the string to quote return the quoted string if there is no need to quote the string return the original string end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name quote string end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name str end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name str end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_operator MINUS end_operator begin_operator UNP end_operator begin_call begin_name begin_name str end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_operator MINUS end_operator begin_operator UNP end_operator begin_call begin_name begin_name str end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_name str end_name end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name str end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name quote string end_name begin_argument_list begin_argument begin_expr begin_name str end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr begin_call begin_name quote string end_name begin_argument_list begin_argument begin_expr begin_name str end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set home end_name begin_parameter_list begin_param begin_decl begin_type begin_name classname end_name end_type begin_name home end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name home end_name end_name begin_operator EQ end_operator begin_name home end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name read end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name io exception end_name end_name end_expr end_argument end_throws begin_block begin_return begin_expr begin_name preempt index end_name begin_operator GT end_operator begin_operator QM end_operator begin_name begin_name preempt end_name begin_index begin_expr begin_operator MMINUS end_operator begin_name preempt index end_name end_expr end_index end_name begin_operator DP end_operator begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment add the list of files to a command param files to build vector of files param command the command to append to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add files to command end_name begin_parameter_list begin_param begin_decl begin_type begin_name hashtable end_name end_type begin_name files to build end_name end_decl end_param begin_param begin_decl begin_type begin_name net command end_name end_type begin_name command end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name count end_name begin_init begin_expr begin_call begin_name begin_name files to build end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name count end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name count end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name files end_name begin_init begin_expr begin_call begin_name begin_name files to build end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file end_name begin_operator RPAR end_operator begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test case sensitive end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name equals end_name end_type begin_name eq end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name equals end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name eq end_name begin_operator DOT end_operator begin_name set arg 1 end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name eq end_name begin_operator DOT end_operator begin_name set arg 2 end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name eq end_name begin_operator DOT end_operator begin_name eval end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name eq end_name begin_operator DOT end_operator begin_name set casesensitive end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name eq end_name begin_operator DOT end_operator begin_name eval end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment splits the string on every token into an array of strings param string the string param on token the token return the resultant array end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name split end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name string end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name on token end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string tokenizer end_name end_type begin_name tokenizer end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string tokenizer end_name begin_argument_list begin_argument begin_expr begin_name string end_name end_expr end_argument begin_argument begin_expr begin_name on token end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name result end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_call begin_name begin_name tokenizer end_name begin_operator DOT end_operator begin_name count tokens end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name result end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name begin_name result end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_call begin_name begin_name tokenizer end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_name result end_name end_expr end_return end_block 
 begin_comment malformed manifest name attribute in main section end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 5 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name output end_name begin_init begin_expr begin_call begin_name get log end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name has warning end_name begin_init begin_expr begin_call begin_name begin_name output end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name has warning end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the username return if it was set null if not end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get username end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name sos username end_name end_expr end_return end_block 
 begin_comment overriden to close the stream end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name finalize end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name throwable end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name close end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name finalize end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment clear out the arguments to this java task end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name clear args end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name get command line end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name clear java args end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment override to make two instances with same value equal return the value stored in the zip long since 1 1 end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name hash code end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name int end_name begin_operator RPAR end_operator begin_name value end_name end_expr end_return end_block 
 begin_comment get the file mode for given permissions with the correct file type param mode the mode return the type with the mode since 1 1 end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get mode end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name mode end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name type end_name begin_init begin_expr begin_name file flag end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name is link end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name type end_name begin_operator EQ end_operator begin_name link flag end_name end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name is directory end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name type end_name begin_operator EQ end_operator begin_name dir flag end_name end_expr end_expr_stmt end_block end_then end_if end_else end_if begin_return begin_expr begin_name type end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_name mode end_name begin_operator UNP end_operator begin_name perm mask end_name begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment return a zip file set that has the same properties as this one return the cloned zip file set end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name clone end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name zip file set end_name begin_operator RPAR end_operator begin_call begin_name get ref end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name clone end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_else end_if end_block 
 begin_comment tets long line wrapping end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test long line end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument begin_argument begin_expr begin_name manifest exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name project end_name end_type begin_name p end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name set user property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name long line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name set user property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name long 68 name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name set user property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name long 70 name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name set user property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name not long name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name set user property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name manifest end_name end_type begin_name manifest end_name begin_init begin_expr begin_call begin_name get manifest end_name begin_argument_list begin_argument begin_expr begin_name expanded manifest end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name manifest end_name begin_operator DOT end_operator begin_name section end_name end_name end_type begin_name main section end_name begin_init begin_expr begin_call begin_name begin_name manifest end_name begin_operator DOT end_operator begin_name get main section end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name classpath end_name begin_init begin_expr begin_call begin_name begin_name main section end_name begin_operator DOT end_operator begin_name get attribute value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name long line end_name end_expr end_argument begin_argument begin_expr begin_name classpath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name value end_name begin_init begin_expr begin_call begin_name begin_name main section end_name begin_operator DOT end_operator begin_name get attribute value end_name end_name begin_argument_list begin_argument begin_expr begin_name long 68 name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name value end_name begin_operator EQ end_operator begin_call begin_name begin_name main section end_name begin_operator DOT end_operator begin_name get attribute value end_name end_name begin_argument_list begin_argument begin_expr begin_name long 70 name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name value end_name begin_operator EQ end_operator begin_call begin_name begin_name main section end_name begin_operator DOT end_operator begin_name get attribute value end_name end_name begin_argument_list begin_argument begin_expr begin_name not long name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name buffered reader end_name end_type begin_name in end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name buffered reader end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file reader end_name begin_argument_list begin_argument begin_expr begin_name expanded manifest end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name set end_name end_type begin_name set end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name hash set end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name read end_name begin_init begin_expr begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_name read end_name begin_operator UNP end_operator end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name set end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name read end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name read end_name begin_operator EQ end_operator begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name set end_name begin_operator DOT end_operator begin_name remove end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name set end_name begin_operator DOT end_operator begin_name remove end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name set end_name begin_operator DOT end_operator begin_name remove end_name end_name begin_argument_list begin_argument begin_expr begin_name long 70 name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name set end_name begin_operator DOT end_operator begin_name remove end_name end_name begin_argument_list begin_argument begin_expr begin_name not long name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the destination directory return the destination directory end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get to dir end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name dest dir end_name end_expr end_return end_block 
 begin_comment adds pcdata to an element using the element s code void add text string code method if it has one if no such method is present a build exception is thrown if the given text contains non whitespace param project the project which the element is part of must not be code null code param element the element to add the text to must not be code null code param text the text to add must not be code null code exception build exception if non whitespace text is provided and no method is available to handle it or if the handling method fails end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add text end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name element end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name text end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name add text end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator begin_call begin_name begin_name text end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment element doesn t handle text content end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name text end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment only whitespace ignore end_comment begin_return end_return end_block end_then begin_else begin_block begin_comment not whitespace fail end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get element name end_name end_name begin_argument_list begin_argument begin_expr begin_name element end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name condense text end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_block end_then end_if begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name add text end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_name element end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_name text end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal access exception end_name end_type begin_name ie end_name end_decl end_param end_parameter_list begin_block begin_comment impossible as get methods should only return public methods end_comment begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name ie end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name invocation target exception end_name end_type begin_name ite end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name begin_init begin_expr begin_call begin_name begin_name ite end_name begin_operator DOT end_operator begin_name get target exception end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name t end_name begin_operator UNP end_operator begin_name build exception end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator LPAR end_operator begin_name build exception end_name begin_operator RPAR end_operator begin_name t end_name end_expr end_throw end_block end_then end_if begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment empty end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set system error end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name err end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_specifier end_specifier begin_name g unzip test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name main end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name args end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment here is a comment with an embedded tab end_comment begin_if begin_condition begin_expr begin_name mybool end_name end_expr end_condition begin_then begin_block begin_comment here is a multi line with embedded tab comment end_comment begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name mychar end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment tab end_comment end_block end_then end_if begin_comment end of if mybool end_comment end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name main end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name args end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment here is a comment with an embedded tab end_comment begin_if begin_condition begin_expr begin_name mybool end_name end_expr end_condition begin_then begin_block begin_comment here is a multi line with embedded tab comment end_comment begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name mychar end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment tab end_comment end_block end_then end_if begin_comment end of if mybool end_comment end_block 
 begin_comment get the classpath return the classpath end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name get classpath end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name classpath end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name read end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name this char end_name begin_init begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment if source is eof but last character was not ctrl z return ctrl z end_comment begin_if begin_condition begin_expr begin_name this char end_name begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name last char end_name begin_operator UNP end_operator begin_name ctrlz end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name last char end_name begin_operator EQ end_operator begin_name ctrlz end_name end_expr end_expr_stmt begin_return begin_expr begin_name last char end_name end_expr end_return end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name last char end_name begin_operator EQ end_operator begin_name this char end_name end_expr end_expr_stmt end_block end_else end_if begin_return begin_expr begin_name this char end_name end_expr end_return end_block 
 begin_comment shall we assume jdk 1 4 command line switches return true if jdk 1 4 since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name assume java 14 end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get compiler version end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get compiler version end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name is java version end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name java 1 4 end_name end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get compiler version end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name is java version end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name java 1 4 end_name end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name get compiler version end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name is java version end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name java 1 4 end_name end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment gets this macro s elements return the map nested elements keyed by element name with link template element values end_comment begin_type begin_specifier end_specifier begin_name map end_name end_type begin_name get elements end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name elements end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name macro subs end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param begin_param begin_decl begin_type begin_name map end_name end_type begin_name macro mapping end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name s end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name ret end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name macro name end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name state end_name begin_init begin_expr begin_name state normal end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name ch end_name begin_init begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_switch begin_condition begin_expr begin_name state end_name end_expr end_condition begin_block begin_case begin_expr begin_name state normal end_name end_expr begin_if begin_condition begin_expr begin_name ch end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name state end_name begin_operator EQ end_operator begin_name state expect bracket end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ret end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name ch end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_break end_break end_case begin_case begin_expr begin_name state expect bracket end_name end_expr begin_if begin_condition begin_expr begin_name ch end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name state end_name begin_operator EQ end_operator begin_name state expect name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name macro name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name ch end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name state end_name begin_operator EQ end_operator begin_name state normal end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ret end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name state end_name begin_operator EQ end_operator begin_name state normal end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ret end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ret end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name ch end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if begin_break end_break end_case begin_case begin_expr begin_name state expect name end_name end_expr begin_if begin_condition begin_expr begin_name ch end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name state end_name begin_operator EQ end_operator begin_name state normal end_name end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_call begin_name begin_name macro name end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to lower case end_name begin_argument_list begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name value end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name macro mapping end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name value end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ret end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ret end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ret end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ret end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_name macro name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name macro name end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name ch end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_break end_break end_case begin_default begin_break end_break end_default end_block end_switch end_block end_for begin_switch begin_condition begin_expr begin_name state end_name end_expr end_condition begin_block begin_case begin_expr begin_name state normal end_name end_expr begin_break end_break end_case begin_case begin_expr begin_name state expect bracket end_name end_expr begin_expr_stmt begin_expr begin_call begin_name begin_name ret end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name state expect name end_name end_expr begin_expr_stmt begin_expr begin_call begin_name begin_name ret end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ret end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name macro name end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_default begin_break end_break end_default end_block end_switch begin_return begin_expr begin_call begin_name begin_name ret end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment constructor used when creating main for later arg processing and startup end_comment begin_specifier end_specifier begin_name main end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment run the java command in a separate vm this does not give you the full flexibility of the java task but may be enough for simple needs param pc the project component to use for logging etc return the exit status of the subprocess throws build exception on error since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name fork end_name begin_parameter_list begin_param begin_decl begin_type begin_name project component end_name end_type begin_name pc end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name commandline java end_name end_type begin_name cmdl end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name commandline java end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmdl end_name begin_operator DOT end_operator begin_name set classname end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name java command end_name begin_operator DOT end_operator begin_name get executable end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name args end_name begin_init begin_expr begin_call begin_name begin_name java command end_name begin_operator DOT end_operator begin_name get arguments end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name args end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmdl end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name begin_name args end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_if begin_condition begin_expr begin_name classpath end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmdl end_name begin_operator DOT end_operator begin_name create classpath end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name pc end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name classpath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name sys properties end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmdl end_name begin_operator DOT end_operator begin_name add sysproperties end_name end_name begin_argument_list begin_argument begin_expr begin_name sys properties end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name redirector end_name end_type begin_name redirector end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name redirector end_name begin_argument_list begin_argument begin_expr begin_name pc end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name execute end_name end_type begin_name exe end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name execute end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name create handler end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name timeout end_name begin_operator EQT end_operator begin_operator QM end_operator begin_operator DP end_operator begin_operator UNP end_operator begin_call begin_name execute watchdog end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name timeout end_name begin_operator DOT end_operator begin_name long value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set ant run end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name pc end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name setup command line for vms end_name begin_argument_list begin_argument begin_expr begin_name exe end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name cmdl end_name begin_operator DOT end_operator begin_name get commandline end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set commandline end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name cmdl end_name begin_operator DOT end_operator begin_name get commandline end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name rc end_name begin_init begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name complete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name rc end_name end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_name timed out end_name begin_operator EQ end_operator begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name killed process end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_specifier end_specifier begin_name input test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment adds an implementation specific command line argument return a implementation specific argument to be configured since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name implementation specific argument end_name end_type begin_name create arg end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name implementation specific argument end_name end_type begin_name arg end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name implementation specific argument end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name facade end_name begin_operator DOT end_operator begin_name add implementation argument end_name end_name begin_argument_list begin_argument begin_expr begin_name arg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name arg end_name end_expr end_return end_block 
 begin_comment set the extension looking for param extension set the extension looking for end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add configured extension end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name extension adapter end_name end_type begin_name extension end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name required extension end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name message end_name begin_init begin_expr begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name required extension end_name begin_operator EQ end_operator begin_call begin_name begin_name extension end_name begin_operator DOT end_operator begin_name to extension end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment determines if the ejbc utility needs to be run or not if the stubs and skeletons can all be found in the destination directory and all of their timestamps are more recent than the ejb source classes home remote and implementation classes the method returns code false code otherwise the method returns code true code param dest dir the directory where the ejb source classes stubs and skeletons are located return a boolean indicating whether or not the ejbc utility needs to be run to bring the stubs and skeletons up to date end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name must be recompiled end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name dest dir end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name source modified end_name begin_init begin_expr begin_call begin_name source classes modified end_name begin_argument_list begin_argument begin_expr begin_name dest dir end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name dest modified end_name begin_init begin_expr begin_call begin_name dest classes modified end_name begin_argument_list begin_argument begin_expr begin_name dest dir end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_operator LPAR end_operator begin_name dest modified end_name begin_operator LT end_operator begin_name source modified end_name begin_operator RPAR end_operator end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test paragraph character end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name test paragraph character end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name assertion failed error end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block end_catch end_try end_block 
 begin_comment get the comment command param cmd containing the command line string with or without the comment flag and value appended end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name get comment command end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name get comment end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then begin_else begin_block begin_comment had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes this breaks clearcase end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag comment end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get comment end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment remove an item found to be controlled from the map param local file the local item found to be controlled end_comment begin_type begin_name void end_name end_type begin_name remove controlled item end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name end_type begin_name local file end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is active end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name local file end_name begin_operator DOT end_operator begin_name get absolute file end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name remove end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name local file end_name begin_operator DOT end_operator begin_name get absolute file end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment recursively expand the named property using the project s reference table and the given set of properties fail if a circular definition is detected param props properties object to resolve param name of the property to resolve param references seen stack of all property names that have been tried to expand before coming here end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name resolve end_name begin_parameter_list begin_param begin_decl begin_type begin_name properties end_name end_type begin_name props end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name stack end_name end_type begin_name references seen end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name references seen end_name begin_operator DOT end_operator begin_name contains end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name property value end_name begin_init begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name fragments end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name property refs end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name property helper end_name begin_operator DOT end_operator begin_name get property helper end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name parse property string end_name begin_argument_list begin_argument begin_expr begin_name property value end_name end_expr end_argument begin_argument begin_expr begin_name fragments end_name end_expr end_argument begin_argument begin_expr begin_name property refs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name property refs end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name references seen end_name begin_operator DOT end_operator begin_name push end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name sb end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name fragments end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name j end_name begin_init begin_expr begin_call begin_name begin_name property refs end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name fragment end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name fragment end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name property name end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name j end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name fragment end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr begin_name property name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name fragment end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name contains key end_name end_name begin_argument_list begin_argument begin_expr begin_name property name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name resolve end_name begin_argument_list begin_argument begin_expr begin_name props end_name end_expr end_argument begin_argument begin_expr begin_name property name end_name end_expr end_argument begin_argument begin_expr begin_name references seen end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name fragment end_name begin_operator EQ end_operator begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name property name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name fragment end_name begin_operator EQ end_operator begin_operator PLUS end_operator begin_name property name end_name begin_operator PLUS end_operator end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name fragment end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_name property value end_name begin_operator EQ end_operator begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name property value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name references seen end_name begin_operator DOT end_operator begin_name pop end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment add a runtime configurable wrapper to the internal stack param wrapper runtime configurable wrapper end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name push wrapper end_name begin_parameter_list begin_param begin_decl begin_type begin_name runtime configurable end_name end_type begin_name wrapper end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name w stack end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name wrapper end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment where ant should place temporary files param tmp dir location where temporary files should go to since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set tempdir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name tmp dir end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name tmp dir end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name tmp dir end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name tmp dir end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name tmp dir end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name tmp dir end_name end_name begin_operator EQ end_operator begin_name tmp dir end_name end_expr end_expr_stmt end_block 
 begin_comment sets the project for this component helper param project the project for this helper end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set project end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name project end_name end_name begin_operator EQ end_operator begin_name project end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name ant type table end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name ant type table end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return the resource end_comment begin_type begin_specifier end_specifier begin_name resource end_name end_type begin_name get resource end_name begin_parameter_list end_parameter_list begin_block begin_comment delegate this way around to support subclasses that end_comment begin_comment overwrite get file end_comment begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_call begin_name get file end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name f end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name file resource end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr begin_name src end_name end_expr end_return end_block end_else end_if end_block 
 begin_comment demultiplex flush operations so that each task receives the appropriate messages if the current thread is not currently executing a task the message is logged directly since ant 1 5 2 param output message to handle should not be code null code param is error whether the text represents an error code true code or information code false code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name demux flush end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name output end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name is error end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name task end_name end_type begin_name task end_name begin_init begin_expr begin_call begin_name get thread task end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name current thread end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name task end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name fire message logged end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_name output end_name end_expr end_argument begin_argument begin_expr begin_name is error end_name begin_operator QM end_operator begin_name msg err end_name begin_operator DP end_operator begin_name msg info end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_name is error end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name handle error flush end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name handle flush end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_else end_if end_block 
 begin_comment set the type of code file name mapper code to use param type the code mapper type code enumerated attribute end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set type end_name begin_parameter_list begin_param begin_decl begin_type begin_name mapper type end_name end_type begin_name type end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name type end_name end_name begin_operator EQ end_operator begin_name type end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test get executable most platforms end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name java home end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name normalize end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment could still be os 2 end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name extension end_name begin_init begin_expr begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator QM end_operator begin_operator DP end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name j end_name begin_init begin_expr begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name get jre executable end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name extension end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name j end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr begin_name extension end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_name j end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name j end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name is absolute end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_name j end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name j end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr begin_name java home end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name j end_name begin_operator EQ end_operator begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name get jdk executable end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name extension end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name j end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr begin_name extension end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_name j end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name j end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name is absolute end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name java home parent end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name normalize end_name end_name begin_argument_list begin_argument begin_expr begin_name java home end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_name j end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name j end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr begin_name java home parent end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_name j end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name j end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr begin_name java home end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_name j end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name j end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr begin_name java home end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name extension end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name get jre executable end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name extension end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name get jdk executable end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment constructor for dummy instances see base filter reader base filter reader end_comment begin_specifier end_specifier begin_name prefix lines end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test single file fileset end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name resource end_name end_type begin_name get resource end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_name resource end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_else end_if begin_return begin_expr begin_name resource end_name end_expr end_return end_block 
 begin_comment set this to map a com safe array to the system array class param use sys array a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set use sys array end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name use sys array end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name use sys array end_name end_name begin_operator EQ end_operator begin_name use sys array end_name end_expr end_expr_stmt end_block 
 begin_comment param file fail the location of the audio file to be played when the build fails param loops fail the number of times the file should be played when the build is fails param duration fail the number of milliseconds the file should be played when the build fails end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add build failed sound end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file fail end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name loops fail end_name end_decl end_param begin_param begin_decl begin_type begin_name long end_name end_type begin_name duration fail end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name file fail end_name end_name begin_operator EQ end_operator begin_name file fail end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name loops fail end_name end_name begin_operator EQ end_operator begin_name loops fail end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name duration fail end_name end_name begin_operator EQ end_operator begin_name duration fail end_name end_expr end_expr_stmt end_block 
 begin_comment set comment string param comment the comment string end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set comment end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name comment end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m comment end_name begin_operator EQ end_operator begin_name comment end_name end_expr end_expr_stmt end_block 
 begin_comment throws an exception if extra data cannot be parsed into extra fields param extra an array of bytes to be parsed into extra fields throws runtime exception if the bytes cannot be parsed since 1 1 throws runtime exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set extra end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name extra end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name runtime exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name set extra fields end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name extra field utils end_name begin_operator DOT end_operator begin_name parse end_name end_name begin_argument_list begin_argument begin_expr begin_name extra end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment verifies that the specified filename represents an absolute path differs from new java io file filename is absolute in that a path beginning with a double file separator signifying a windows unc must at minimum match a b to be considered an absolute path param filename the filename to be checked return true if the filename represents an absolute path throws java lang null pointer exception if filename is null since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name is absolute path end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name filename end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name len end_name begin_init begin_expr begin_call begin_name begin_name filename end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name len end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name sep end_name begin_init begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name filename end_name begin_operator EQ end_operator begin_call begin_name begin_name filename end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name sep end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name sep end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name c end_name begin_init begin_expr begin_call begin_name begin_name filename end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_name on dos end_name begin_operator UNP end_operator begin_name on net ware end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name c end_name begin_operator EQT end_operator begin_name sep end_name begin_operator RPAR end_operator end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name c end_name begin_operator EQT end_operator begin_name sep end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_name on dos end_name begin_operator UNP end_operator begin_name len end_name begin_operator GT end_operator begin_operator UNP end_operator begin_call begin_name begin_name filename end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_name sep end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name nextsep end_name begin_init begin_expr begin_call begin_name begin_name filename end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name sep end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_name nextsep end_name begin_operator GT end_operator begin_operator UNP end_operator begin_name nextsep end_name begin_operator PLUS end_operator begin_operator LT end_operator begin_name len end_name end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name colon end_name begin_init begin_expr begin_call begin_name begin_name filename end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name is letter end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_name colon end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name filename end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_operator UNP end_operator begin_call begin_name begin_name filename end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_name sep end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name on net ware end_name begin_operator UNP end_operator begin_name colon end_name begin_operator GT end_operator begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment return the phase of the moon note the completely different semantics of the other implementation which goes to show why signature is an inadequate way of verifying how well an interface is implemented return throws remote exception end_comment begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name when end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name remote exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name calendar end_name end_type begin_name cal end_name begin_init begin_expr begin_call begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name get instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name date utils end_name begin_operator DOT end_operator begin_name get phase of moon end_name end_name begin_argument_list begin_argument begin_expr begin_name cal end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment flag to force actions regardless of the status that star team is maintaining for the file optional default false if tt rootlocalfolder tt is set then this should be set true as otherwise the checkout will be based on statuses which do not relate to the target folder param v value to assign to forced end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set forced end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name v end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name forced end_name end_name begin_operator EQ end_operator begin_name v end_name end_expr end_expr_stmt end_block 
 begin_comment parses the parameters to set the comment prefixes end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name initialize end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name parameter end_name begin_index end_index end_type begin_name params end_name begin_init begin_expr begin_call begin_name get parameters end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name params end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name params end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name comments key end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name params end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get type end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name comments end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name params end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for end_block end_then end_if end_block 
 begin_comment constructor using a string param value the value of the attribute end_comment begin_specifier end_specifier begin_name on error end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment link to docs at url using package list at url 2 separate the ur ls by using a space character param src the offline link specification url and package list end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set linkoffline end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name src end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name link argument end_name end_type begin_name le end_name begin_init begin_expr begin_call begin_name create link end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name le end_name begin_operator DOT end_operator begin_name set offline end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name link offline error end_name begin_init begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name src end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name link offline error end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string tokenizer end_name end_type begin_name tok end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string tokenizer end_name begin_argument_list begin_argument begin_expr begin_name src end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name le end_name begin_operator DOT end_operator begin_name set href end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name tok end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name tok end_name begin_operator DOT end_operator begin_name has more tokens end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name link offline error end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name le end_name begin_operator DOT end_operator begin_name set packagelist loc end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name tok end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the forceintegrate flag param setrest value chosen for forceintegrate end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set force integrate end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name setrest end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name forceintegrate end_name end_name begin_operator EQ end_operator begin_name setrest end_name end_expr end_expr_stmt end_block 
 begin_comment get the classloader used to create a driver return the classloader end_comment begin_type begin_specifier end_specifier begin_name ant class loader end_name end_type begin_name get loader end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name loader end_name end_expr end_return end_block 
 begin_comment same as link tokenize path tokenize path but hopefully faster end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name tokenize path as array end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name path end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name root end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name is absolute path end_name end_name begin_argument_list begin_argument begin_expr begin_name path end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name s end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name dissect end_name end_name begin_argument_list begin_argument begin_expr begin_name path end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name root end_name begin_operator EQ end_operator begin_name begin_name s end_name begin_index begin_expr end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name path end_name begin_operator EQ end_operator begin_name begin_name s end_name begin_index begin_expr end_expr end_index end_name end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name sep end_name begin_init begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name start end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name len end_name begin_init begin_expr begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name count end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name pos end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name pos end_name begin_operator LT end_operator begin_name len end_name end_expr end_condition begin_incr begin_expr begin_name pos end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name pos end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_name sep end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name pos end_name begin_operator UNP end_operator begin_name start end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name count end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name start end_name begin_operator EQ end_operator begin_name pos end_name begin_operator PLUS end_operator end_expr end_expr_stmt end_block end_then end_if end_block end_for begin_if begin_condition begin_expr begin_name len end_name begin_operator UNP end_operator begin_name start end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name count end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name l end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_name count end_name begin_operator PLUS end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name root end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name root end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator EQ end_operator begin_name root end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name count end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name count end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_name start end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name pos end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name pos end_name begin_operator LT end_operator begin_name len end_name end_expr end_condition begin_incr begin_expr begin_name pos end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name pos end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_name sep end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name pos end_name begin_operator UNP end_operator begin_name start end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name tok end_name begin_init begin_expr begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name start end_name end_expr end_argument begin_argument begin_expr begin_name pos end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name l end_name begin_index begin_expr begin_name count end_name begin_operator PPLUS end_operator end_expr end_index end_name begin_operator EQ end_operator begin_name tok end_name end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name start end_name begin_operator EQ end_operator begin_name pos end_name begin_operator PLUS end_operator end_expr end_expr_stmt end_block end_then end_if end_block end_for begin_if begin_condition begin_expr begin_name len end_name begin_operator UNP end_operator begin_name start end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name tok end_name begin_init begin_expr begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name start end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name l end_name begin_index begin_expr begin_name count end_name end_expr begin_comment end_comment end_index end_name begin_operator EQ end_operator begin_name tok end_name end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name l end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name line end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name util end_name begin_operator DOT end_operator begin_name match end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name util end_name begin_operator DOT end_operator begin_name match end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name util end_name begin_operator DOT end_operator begin_name match end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment we need to escape the description in case there are end_comment begin_expr_stmt begin_expr begin_name description end_name begin_operator EQ end_operator begin_call begin_name backslash end_name begin_argument_list begin_argument begin_expr begin_name description end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator begin_call begin_name begin_name util end_name begin_operator DOT end_operator begin_name substitute end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name description end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name util end_name begin_operator DOT end_operator begin_name match end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment match for begining of depot filespec end_comment begin_return end_return end_block end_then end_if end_else end_if end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name stringbuf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name stringbuf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment names of the classes to process return the array of classes since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get classes end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name array list end_name end_type begin_name al end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name cls end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string tokenizer end_name end_type begin_name tok end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string tokenizer end_name begin_argument_list begin_argument begin_expr begin_name cls end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name tok end_name begin_operator DOT end_operator begin_name has more tokens end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name al end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name tok end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name trim end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name classes end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name class argument end_name end_type begin_name arg end_name begin_init begin_expr begin_operator LPAR end_operator begin_name class argument end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name al end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_return begin_expr begin_operator LPAR end_operator begin_name begin_name string end_name begin_index end_index end_name begin_operator RPAR end_operator begin_call begin_name begin_name al end_name begin_operator DOT end_operator begin_name to array end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_call begin_name begin_name al end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment create a classpath param p the project to use to create the path return a path to be configured end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name create classpath end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name classpath end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name classpath end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name classpath end_name end_expr end_return end_block 
 begin_comment java plugin classid for internet explorer param iepluginid the id to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set ieplugin end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name iepluginid end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name iepluginid end_name end_name begin_operator EQ end_operator begin_name iepluginid end_name end_expr end_expr_stmt end_block 
 begin_comment if true modification time should be written as the current time either currenttime or preservetime can be specified param ct the status to set the flag to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set current time end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name ct end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m ctime end_name begin_operator EQ end_operator begin_name ct end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test phase of moon end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name time zone end_name end_type begin_name time zone end_name begin_init begin_expr begin_call begin_name begin_name time zone end_name begin_operator DOT end_operator begin_name get time zone end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name calendar end_name end_type begin_name cal end_name begin_init begin_expr begin_call begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name get instance end_name end_name begin_argument_list begin_argument begin_expr begin_name time zone end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment should be full moon end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cal end_name begin_operator DOT end_operator begin_name set end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name date utils end_name begin_operator DOT end_operator begin_name get phase of moon end_name end_name begin_argument_list begin_argument begin_expr begin_name cal end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment should be new moon end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cal end_name begin_operator DOT end_operator begin_name set end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name date utils end_name begin_operator DOT end_operator begin_name get phase of moon end_name end_name begin_argument_list begin_argument begin_expr begin_name cal end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the input file param file the input file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set srcfile end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name in file end_name begin_operator EQ end_operator begin_name file end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name log end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name line end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name emacs mode end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name error end_name begin_operator QM end_operator begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name begin_operator DP end_operator begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name error end_name begin_operator QM end_operator begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name begin_operator DP end_operator begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment this method is called when this element and all elements nested into it have been handled i e this happens at the lt end tag of the element gt param uri the namespace uri for this element param tag the element name param context the current context end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name on end element end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name uri end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name tag end_name end_decl end_param begin_param begin_decl begin_type begin_name ant xml context end_name end_type begin_name context end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test empty catalog end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name input source end_name end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name catalog end_name begin_operator DOT end_operator begin_name resolve entity end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert null end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name source end_name end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name catalog end_name begin_operator DOT end_operator begin_name resolve end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name expected end_name begin_init begin_expr begin_call begin_name to url string end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get base dir end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment end_comment begin_comment these shenanigans are necessary b c norm walsh s resolver end_comment begin_comment has a different idea of how file ur ls are created on windoze end_comment begin_comment ie file c foo instead of file c foo end_comment begin_comment end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name result str end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name url end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name sax source end_name begin_operator RPAR end_operator begin_name result end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get input source end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get system id end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get file end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name expected end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr begin_name result str end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment does the work exception build exception thrown in case of an unrecoverable error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name start end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name src path end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name src path list end_name begin_operator EQ end_operator begin_call begin_name begin_name src path end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name begin_name src path list end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name dest path end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name dest path end_name begin_operator EQ end_operator begin_name src path end_name end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name cache end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name cache end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name cache end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name cache end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name cache end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cache end_name begin_operator DOT end_operator begin_name mkdirs end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name determine dependencies end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name dump end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name dump dependencies end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name determine out of date classes end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name count end_name begin_init begin_expr begin_call begin_name delete all affected files end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name duration end_name begin_init begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator begin_name start end_name begin_operator RPAR end_operator begin_operator SLASH end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name summary log level end_name end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name count end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name summary log level end_name begin_operator EQ end_operator begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name summary log level end_name begin_operator EQ end_operator begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name count end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name duration end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name summary log level end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 7 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name test 7 end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test input handler end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name input handler end_name end_type begin_name ih end_name begin_init begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get input handler end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr begin_name ih end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_name ih end_name begin_operator UNP end_operator begin_name default input handler end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name input handler end_name end_type begin_name pfih end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name property file input handler end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name set input handler end_name end_name begin_argument_list begin_argument begin_expr begin_name pfih end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert same end_name begin_argument_list begin_argument begin_expr begin_name pfih end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get input handler end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name project component test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name file set test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the directory into which the serialized deployment descriptors are to be written param dir name the name of the directory into which the serialised deployment descriptors are written end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set dest end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name dir name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name generated files directory end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name dir name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the url used by this url resource return a url object end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name url end_name end_type begin_name get url end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name url resource end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get url end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr begin_name url end_name end_expr end_return end_block 
 begin_comment methods below all add specific selectors end_comment begin_comment add a select selector entry on the selector list param selector the selector to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add selector end_name begin_parameter_list begin_param begin_decl begin_type begin_name select selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name fileset end_name begin_operator DOT end_operator begin_name add selector end_name end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the ignore case grammar option param ignore case a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set ignorecase end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name ignore case end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name optional attrs end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name ignore case end_name end_expr end_argument begin_argument begin_expr begin_name ignore case end_name begin_operator QM end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name true end_name end_name begin_operator DP end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name false end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_name assertion failed error end_name end_type begin_name get error end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name error end_name end_expr end_return end_block 
 begin_comment based on the parameter passed in this method creates the necessary factory desired the current mapping for compiler names are as follows ul li jasper jasper compiler the default li i a fully quallified classname i the name of a jsp compiler adapter ul param compiler type either the name of the desired compiler or the full classname of the compiler s adapter param task a task to log through return the compiler throws build exception if the compiler type could not be resolved into a compiler adapter end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name jsp compiler adapter end_name end_type begin_name get compiler end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name compiler type end_name end_decl end_param begin_param begin_decl begin_type begin_name task end_name end_type begin_name task end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_return begin_expr begin_call begin_name get compiler end_name begin_argument_list begin_argument begin_expr begin_name compiler type end_name end_expr end_argument begin_argument begin_expr begin_name task end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name create class loader end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test replace tokens property file end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name expected end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name content equals end_name end_name begin_argument_list begin_argument begin_expr begin_name expected end_name end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment clear the list of files to be compiled and copied end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name reset file lists end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name compile list end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_name begin_name file end_name begin_index begin_expr end_expr end_index end_name end_expr end_expr_stmt end_block 
 begin_comment add a none selector entry on the selector list param selector the selector to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add none end_name begin_parameter_list begin_param begin_decl begin_type begin_name none selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name append selector end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the name of the star team user needed for the connection param user name name of the user to be logged in end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set user name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name user name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name user name end_name end_name begin_operator EQ end_operator begin_name user name end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name close end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name in shadow end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name in end_name end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name in shadow end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_if begin_condition begin_expr begin_name in shadow end_name begin_operator UNP end_operator begin_name begin_name system end_name begin_operator DOT end_operator begin_name in end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name in shadow end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block begin_finally begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name data end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name in end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_finally end_try end_block end_then end_if end_block 
 begin_comment the string which terminates the bean name the convention used by this task is that bean descriptors are named as the bean name with some suffix the base name terminator string separates the bean name and the suffix and is used to determine the bean name param in value a string which marks the end of the basename end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set basenameterminator end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name in value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name config end_name begin_operator DOT end_operator begin_name base name terminator end_name end_name begin_operator EQ end_operator begin_name in value end_name end_expr end_expr_stmt end_block 
 begin_comment state engine false envelope true message end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name run end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_name ssock end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name server socket end_name begin_argument_list begin_argument begin_expr begin_name test port end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name sock end_name begin_operator EQ end_operator begin_call begin_name begin_name ssock end_name begin_operator DOT end_operator begin_name accept end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment wait for connection end_comment begin_expr_stmt begin_expr begin_name in end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name buffered reader end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name input stream reader end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name sock end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name out end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name buffered writer end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name output stream writer end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name sock end_name begin_operator DOT end_operator begin_name get output stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name sb end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name send end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name loop end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_while begin_condition begin_expr begin_name loop end_name end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name response end_name begin_init begin_expr begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name response end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name loop end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_break end_break end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name response end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name data end_name begin_operator UNP end_operator begin_call begin_name begin_name response end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name send end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name local end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name local end_name begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name data end_name begin_operator UNP end_operator begin_call begin_name begin_name response end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name send end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name data end_name begin_operator UNP end_operator begin_call begin_name begin_name response end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name send end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name data end_name begin_operator UNP end_operator begin_call begin_name begin_name response end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name send end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name data end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name data end_name begin_operator UNP end_operator begin_call begin_name begin_name response end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name send end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name data end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name data end_name begin_operator UNP end_operator begin_call begin_name begin_name response end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name send end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name loop end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name data end_name end_expr end_condition begin_then begin_block begin_comment throw new illegal state exception command unrecognized end_comment begin_comment response end_comment begin_expr_stmt begin_expr begin_call begin_name send end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name response end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name loop end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment sb append response r n end_comment end_block end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_block end_while begin_comment while end_comment end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name disconnect end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment set the file containing the filters for this filterset param filters file sets the filter file from which to read filters for this filter set throws build exception if there is an error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set filtersfile end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name filters file end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name filters files end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name filters file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment ignore end_comment begin_comment get the error stream return code output stream code end_comment begin_type begin_specifier end_specifier begin_name output stream end_name end_type begin_name get err end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name err end_name end_expr end_return end_block 
 begin_comment get the remote path return the remote path end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get remote path end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name remote path end_name end_expr end_return end_block 
 begin_comment add a task or type to the container param task an unknown element end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add task end_name begin_parameter_list begin_param begin_decl begin_type begin_name task end_name end_type begin_name task end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name nested end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name task end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test core end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment check the command line options end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check options end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name end_decl end_param end_parameter_list begin_block begin_comment clear case items end_comment begin_if begin_condition begin_expr begin_call begin_name get replace end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment replace end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag replace end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name get obsolete end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment obsolete end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag obsolete end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name get nusers command end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name get comment command end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name get objselect end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name get pname end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name get pname command end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment object selector end_comment begin_if begin_condition begin_expr begin_call begin_name get objselect end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get objselect end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test verify from property end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the ftp port used by the remote server param port the port on which the remote server is listening end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set port end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name port end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name port end_name end_name begin_operator EQ end_operator begin_name port end_name end_expr end_expr_stmt end_block 
 begin_comment whether or not to halt on failure default false param haltonerror the value to set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set haltonerror end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name haltonerror end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name haltonerror end_name end_name begin_operator EQ end_operator begin_name haltonerror end_name end_expr end_expr_stmt end_block 
 begin_comment compare two timestamps for being up to date using the current granularity param source time timestamp of source file param dest time timestamp of dest file return true if the dest file is considered up to date end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is up to date end_name begin_parameter_list begin_param begin_decl begin_type begin_name long end_name end_type begin_name source time end_name end_decl end_param begin_param begin_decl begin_type begin_name long end_name end_type begin_name dest time end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name is up to date end_name begin_argument_list begin_argument begin_expr begin_name source time end_name end_expr end_argument begin_argument begin_expr begin_name dest time end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get file timestamp granularity end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment get the argument or null for no argument needed return the unsafe parameter to csc end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get unsafe parameter end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name unsafe end_name begin_operator QM end_operator begin_operator DP end_operator end_expr end_return end_block 
 begin_comment test whether or not a given path matches the start of a given pattern up to the first p this is not a general purpose test and should only be used if you can live with false positives for example code pattern a code and code str b code will yield code true code param pattern the pattern to match against must not be code null code param str the path to match as a string must not be code null code return whether or not a given path matches the start of a given pattern up to the first end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name match pattern start end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name pattern end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name str end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name selector utils end_name begin_operator DOT end_operator begin_name match pattern start end_name end_name begin_argument_list begin_argument begin_expr begin_name pattern end_name end_expr end_argument begin_argument begin_expr begin_name str end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment hashcode is based only on the boolean members and returns a value in the range 0 7 return hash code value end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name hash code end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name filter trace end_name begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name halt on error end_name begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name halt on failure end_name begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment builds a command line to execute ss return the constructed commandline end_comment begin_type begin_specifier end_specifier begin_name commandline end_name end_type begin_name build cmd line end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name commandline end_name end_type begin_name command line end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name commandline end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment first off make sure that we ve got a command and a vssdir end_comment begin_if begin_condition begin_expr begin_call begin_name get vsspath end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment build the command line from what we got the format is end_comment begin_comment ss checkin vss items h c i n o r w y end_comment begin_comment as specified in the ss exe help end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name set executable end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get ss command end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name command checkin end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment vss items end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get vsspath end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment gl end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get localpath end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment i or i y or i n end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get autoresponse end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment r end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get recursive end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment w end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get writable end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment y end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get login end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment c end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get comment end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name command line end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 9 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get line string end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name line end_name end_expr end_return end_block 
 begin_comment constructor param parent a p 4 base instance end_comment begin_specifier end_specifier begin_name p 4 submit adapter end_name begin_parameter_list begin_param begin_decl begin_type begin_name p 4 base end_name end_type begin_name parent end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name parent end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment breaks a path up into a vector of path elements tokenizing on code file separator code param path path to tokenize must not be code null code return a vector of path elements from the tokenized path end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name vector end_name end_type begin_name tokenize path end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name path end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name tokenize path end_name begin_argument_list begin_argument begin_expr begin_name path end_name end_expr end_argument begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment the name attribute of the file element param name the name of a file to add to the file list end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name name end_name end_name begin_operator EQ end_operator begin_name name end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test include end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name do test end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment flag to include the sf file inside the signature optional default false param internalsf if true include the sf file inside the signature end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set internalsf end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name internalsf end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name internalsf end_name end_name begin_operator EQ end_operator begin_name internalsf end_name end_expr end_expr_stmt end_block 
 begin_comment indicate whether filenames should be listed in the body param b if true list attached file names in the body content end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set include file names end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name include file names end_name end_name begin_operator EQ end_operator begin_name b end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test properties from resource end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 1 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets up the environment for to execute and then runs it param to execute the command line to execute throws build exception if failon error is set to true and the cvs command fails end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name run command end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name to execute end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_comment xxx we should use jcvs www ice com jcvs instead of end_comment begin_comment command line execution so that we don t rely on having end_comment begin_comment native cvs stuff around sm end_comment begin_comment we can t do it ourselves as j cvs is gp led a third party task end_comment begin_comment outside of jakarta repositories would be possible though sb end_comment begin_decl_stmt begin_decl begin_type begin_name environment end_name end_type begin_name env end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name environment end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name port end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name environment end_name begin_operator DOT end_operator begin_name variable end_name end_name end_type begin_name var end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name environment end_name begin_operator DOT end_operator begin_name variable end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name var end_name begin_operator DOT end_operator begin_name set key end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name var end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name string end_name begin_operator DOT end_operator begin_name value of end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name env end_name begin_operator DOT end_operator begin_name add variable end_name end_name begin_argument_list begin_argument begin_expr begin_name var end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment need a better cross platform integration with cvspass so use the same filename end_comment begin_if begin_condition begin_expr begin_name pass file end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name default pass file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name default pass file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name set passfile end_name end_name begin_argument_list begin_argument begin_expr begin_name default pass file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_if begin_condition begin_expr begin_name pass file end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name pass file end_name begin_operator DOT end_operator begin_name is file end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name pass file end_name begin_operator DOT end_operator begin_name can read end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name environment end_name begin_operator DOT end_operator begin_name variable end_name end_name end_type begin_name var end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name environment end_name begin_operator DOT end_operator begin_name variable end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name var end_name begin_operator DOT end_operator begin_name set key end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name var end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name string end_name begin_operator DOT end_operator begin_name value of end_name end_name begin_argument_list begin_argument begin_expr begin_name pass file end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name env end_name begin_operator DOT end_operator begin_name add variable end_name end_name begin_argument_list begin_argument begin_expr begin_name var end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name string end_name begin_operator DOT end_operator begin_name value of end_name end_name begin_argument_list begin_argument begin_expr begin_name pass file end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name pass file end_name begin_operator DOT end_operator begin_name can read end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name string end_name begin_operator DOT end_operator begin_name value of end_name end_name begin_argument_list begin_argument begin_expr begin_name pass file end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name string end_name begin_operator DOT end_operator begin_name value of end_name end_name begin_argument_list begin_argument begin_expr begin_name pass file end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if end_block end_then end_if begin_if begin_condition begin_expr begin_name cvs rsh end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name environment end_name begin_operator DOT end_operator begin_name variable end_name end_name end_type begin_name var end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name environment end_name begin_operator DOT end_operator begin_name variable end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name var end_name begin_operator DOT end_operator begin_name set key end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name var end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name string end_name begin_operator DOT end_operator begin_name value of end_name end_name begin_argument_list begin_argument begin_expr begin_name cvs rsh end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name env end_name begin_operator DOT end_operator begin_name add variable end_name end_name begin_argument_list begin_argument begin_expr begin_name var end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment end_comment begin_comment just call the get execute stream handler and let it handle end_comment begin_comment the semantics of instantiation or retrieval end_comment begin_comment end_comment begin_decl_stmt begin_decl begin_type begin_name execute end_name end_type begin_name exe end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name execute end_name begin_argument_list begin_argument begin_expr begin_call begin_name get execute stream handler end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set ant run end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name dest end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name dest end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name dest end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name dest end_name begin_operator DOT end_operator begin_name mkdirs end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set working directory end_name end_name begin_argument_list begin_argument begin_expr begin_name dest end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set commandline end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name get commandline end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set environment end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name env end_name begin_operator DOT end_operator begin_name get variables end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name actual command line end_name begin_init begin_expr begin_call begin_name execute to string end_name begin_argument_list begin_argument begin_expr begin_name exe end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name actual command line end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name ret code end_name begin_init begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name ret code end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment throw an exception if cvs exited with error iulian end_comment begin_if begin_condition begin_expr begin_name fail on error end_name begin_operator UNP end_operator begin_call begin_name begin_name execute end_name begin_operator DOT end_operator begin_name is failure end_name end_name begin_argument_list begin_argument begin_expr begin_name ret code end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name ret code end_name begin_operator PLUS end_operator begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name actual command line end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name fail on error end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name fail on error end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator LPAR end_operator begin_name e end_name begin_operator RPAR end_operator end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name begin_init begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get exception end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name t end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name t end_name begin_operator EQ end_operator begin_name e end_name end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name fail on error end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr begin_name build xml end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment create a typelib command exception build exception if something goes wrong with the build end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name validate end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name src file end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name dest file end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name namespace end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment rebuild unless the dest file is newer than the source file end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name is execute needed end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name net command end_name end_type begin_name command end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name net command end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name set fail on error end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name src file end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment fill in args end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name dest file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name namespace end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name use sys array end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name unsafe end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr begin_name extra options end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name run command end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment simple constructor end_comment begin_specifier end_specifier begin_name condition base end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name task name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name read end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator MINUS end_operator end_expr end_return end_block 
 begin_comment test for a task or other ant type existing in the current project param typename the name of the type return true if the typename exists end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name does type exist end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name typename end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name component helper end_name end_type begin_name helper end_name begin_init begin_expr begin_call begin_name begin_name component helper end_name begin_operator DOT end_operator begin_name get component helper end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name component name end_name begin_init begin_expr begin_call begin_name begin_name project helper end_name begin_operator DOT end_operator begin_name gen component name end_name end_name begin_argument_list begin_argument begin_expr begin_name uri end_name end_expr end_argument begin_argument begin_expr begin_name typename end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name ant type definition end_name end_type begin_name def end_name begin_init begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name get definition end_name end_name begin_argument_list begin_argument begin_expr begin_name component name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name def end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_comment now verify that the class has an implementation end_comment begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name found end_name begin_init begin_expr begin_call begin_name begin_name def end_name begin_operator DOT end_operator begin_name get exposed class end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name found end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name text end_name begin_init begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name diagnose creation failure end_name end_name begin_argument_list begin_argument begin_expr begin_name component name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name found end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test top level target end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name assert attribute end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name attribute name end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name file end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name attribute name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment allows the manifest for the archive file to be provided inline in the build file rather than in an external file param new manifest an embedded manifest element throws manifest exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add configured manifest end_name begin_parameter_list begin_param begin_decl begin_type begin_name manifest end_name end_type begin_name new manifest end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name manifest exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name configured manifest end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name configured manifest end_name begin_operator EQ end_operator begin_name new manifest end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name configured manifest end_name begin_operator DOT end_operator begin_name merge end_name end_name begin_argument_list begin_argument begin_expr begin_name new manifest end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_name saved configured manifest end_name begin_operator EQ end_operator begin_name configured manifest end_name end_expr end_expr_stmt end_block 
 begin_comment get the absolute path of a file and assign it to the value param file file to use as the value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set file end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name value end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment assert that the given substring is in the output messages since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name assert output containing end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name substring end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name real output end_name begin_init begin_expr begin_call begin_name get output end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name substring end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name real output end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name real output end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name substring end_name end_expr end_argument end_argument_list end_call begin_operator GE end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment binary compares the contents of two resources p simple but sub optimal comparision algorithm written for working rather than fast better would be a block read into buffers followed by long comparisions apart from the final 1 7 bytes p param r 1 the resource whose content is to be compared param r 2 the other resource whose content is to be compared return a negative integer zero or a positive integer as the first argument is less than equal to or greater than the second throws io exception if the resources cannot be read since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name int end_name end_type begin_name binary compare end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource end_name end_type begin_name r 1 end_name end_decl end_param begin_param begin_decl begin_type begin_name resource end_name end_type begin_name r 2 end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name in 1 end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name in 2 end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name in 1 end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name buffered input stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name r 1 end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name in 2 end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name buffered input stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name r 2 end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name b 1 end_name begin_init begin_expr begin_call begin_name begin_name in 1 end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_name b 1 end_name begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_incr begin_expr begin_name b 1 end_name begin_operator EQ end_operator begin_call begin_name begin_name in 1 end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name b 2 end_name begin_init begin_expr begin_call begin_name begin_name in 2 end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name b 1 end_name begin_operator UNP end_operator begin_name b 2 end_name end_expr end_condition begin_then begin_block begin_return begin_expr begin_name b 1 end_name begin_operator GT end_operator begin_name b 2 end_name begin_operator QM end_operator begin_operator DP end_operator begin_operator MINUS end_operator end_expr end_return end_block end_then end_if end_block end_for begin_return begin_expr begin_call begin_name begin_name in 2 end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator MINUS end_operator begin_operator QM end_operator begin_operator DP end_operator begin_operator MINUS end_operator end_expr end_return end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name in 1 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name in 2 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment get an output stream for the resource return an output stream to which content can be written throws io exception if unable to provide the content of this resource as a stream throws unsupported operation exception if output streams are not supported for this resource type end_comment begin_type begin_specifier end_specifier begin_name output stream end_name end_type begin_name get output stream end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get output stream end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name is exists end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name immutable resource exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_return begin_expr begin_operator UNP end_operator begin_call begin_name property output stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment override to make two instances with same value equal param o an object to compare return true if the objects are equal since 1 1 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name equals end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name o end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name o end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name o end_name begin_operator UNP end_operator begin_name zip short end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_return begin_expr begin_name value end_name begin_operator EQT end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name zip short end_name begin_operator RPAR end_operator begin_name o end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment create the redirector to use if any return a configured redirector element end_comment begin_type begin_specifier end_specifier begin_name redirector element end_name end_type begin_name create redirector end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name redirector element end_name end_type begin_name result end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name redirector element end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name storepass end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name input end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr begin_name storepass end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name keypass end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name input end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name keypass end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set input string end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name input end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set log input string end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name result end_name end_expr end_return end_block 
 begin_comment returns the file location where this task was defined return the file location where this task was defined should not return code null code location unknown location is used for unknown locations see location unknown location end_comment begin_type begin_specifier end_specifier begin_name location end_name end_type begin_name get location end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name location end_name end_expr end_return end_block 
 begin_comment test whether an object equals this url resource param another the other object to compare return true if the specified object is equal to this resource end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name equals end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name another end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name this end_name begin_operator EQT end_operator begin_name another end_name end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name another end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name another end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name get class end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name url resource end_name end_type begin_name otheru end_name begin_init begin_expr begin_operator LPAR end_operator begin_name url resource end_name begin_operator RPAR end_operator begin_name another end_name end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name get url end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator QM end_operator begin_call begin_name begin_name otheru end_name begin_operator DOT end_operator begin_name get url end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator DP end_operator begin_call begin_name get url end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name otheru end_name begin_operator DOT end_operator begin_name get url end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment platform specification to put into the quot version made by quot part of the central file header return 0 ms dos fat unless link set unix mode set unix mode has been called in which case 3 unix will be returned since ant 1 5 2 end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get platform end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name platform end_name end_expr end_return end_block 
 begin_comment helper method to set result property to the passed in value if appropriate param result the exit code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name maybe set result property value end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name result end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name res end_name begin_init begin_expr begin_call begin_name begin_name integer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name result property end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set new property end_name begin_argument_list begin_argument begin_expr begin_name result property end_name end_expr end_argument begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get state end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name one liner end_name begin_operator DOT end_operator begin_name this end_name begin_operator DOT end_operator begin_name get state end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment set whether the filenames should be passed on the command line as absolute or relative pathnames paths are relative to the base directory of the corresponding fileset for source files or the dest attribute for target files param relative whether to pass relative pathnames end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set relative end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name relative end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name relative end_name end_name begin_operator EQ end_operator begin_name relative end_name end_expr end_expr_stmt end_block 
 begin_comment crack a command line param to process the command line to process return the command line broken into strings an empty or null to process parameter results in a zero sized array end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name translate commandline end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name to process end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name to process end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name to process end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment no command no string end_comment begin_return begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr end_expr end_index end_name end_expr end_return end_block end_then end_if begin_comment parse with a simple finite state machine end_comment begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name normal end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name in quote end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name in double quote end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name state end_name begin_init begin_expr begin_name normal end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string tokenizer end_name end_type begin_name tok end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string tokenizer end_name begin_argument_list begin_argument begin_expr begin_name to process end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name v end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name current end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name last token has been quoted end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name tok end_name begin_operator DOT end_operator begin_name has more tokens end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name next tok end_name begin_init begin_expr begin_call begin_name begin_name tok end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_switch begin_condition begin_expr begin_name state end_name end_expr end_condition begin_block begin_case begin_expr begin_name in quote end_name end_expr begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name next tok end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name last token has been quoted end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name state end_name begin_operator EQ end_operator begin_name normal end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name current end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name next tok end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_break end_break end_case begin_case begin_expr begin_name in double quote end_name end_expr begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name next tok end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name last token has been quoted end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name state end_name begin_operator EQ end_operator begin_name normal end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name current end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name next tok end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_break end_break end_case begin_default begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name next tok end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name state end_name begin_operator EQ end_operator begin_name in quote end_name end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name next tok end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name state end_name begin_operator EQ end_operator begin_name in double quote end_name end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name next tok end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name last token has been quoted end_name begin_operator UNP end_operator begin_call begin_name begin_name current end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name current end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name current end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name current end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name next tok end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if end_else end_if begin_expr_stmt begin_expr begin_name last token has been quoted end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_break end_break end_default end_block end_switch end_block end_while begin_if begin_condition begin_expr begin_name last token has been quoted end_name begin_operator UNP end_operator begin_call begin_name begin_name current end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name current end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name state end_name begin_operator EQT end_operator begin_name in quote end_name begin_operator UNP end_operator begin_name state end_name begin_operator EQT end_operator begin_name in double quote end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name to process end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name args end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name copy into end_name end_name begin_argument_list begin_argument begin_expr begin_name args end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name args end_name end_expr end_return end_block 
 begin_comment helper method invoked by execute for each websphere jar to be built encapsulates the logic of constructing a java task for calling websphere ejbdeploy and executing it param source jar java io file representing the source ejb 1 1 jarfile param dest jar java io file representing the destination websphere jarfile end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name build websphere jar end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name source jar end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name dest jar end_name end_decl end_param end_parameter_list begin_block begin_try begin_block begin_if begin_condition begin_expr begin_name ejbdeploy end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name java end_name end_type begin_name java task end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name java end_name begin_argument_list begin_argument begin_expr begin_call begin_name get task end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment set the jvm args end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name java task end_name begin_operator DOT end_operator begin_name create jvmarg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name java task end_name begin_operator DOT end_operator begin_name create jvmarg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment set the environment variable end_comment begin_decl_stmt begin_decl begin_type begin_name begin_name environment end_name begin_operator DOT end_operator begin_name variable end_name end_name end_type begin_name var end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name environment end_name begin_operator DOT end_operator begin_name variable end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name var end_name begin_operator DOT end_operator begin_name set key end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name libdir end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name websphere home end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name var end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name libdir end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name java task end_name begin_operator DOT end_operator begin_name add sysproperty end_name end_name begin_argument_list begin_argument begin_expr begin_name var end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment set the working directory end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name java task end_name begin_operator DOT end_operator begin_name set dir end_name end_name begin_argument_list begin_argument begin_expr begin_name websphere home end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment set the java class name end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name java task end_name begin_operator DOT end_operator begin_name set task name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name java task end_name begin_operator DOT end_operator begin_name set classname end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name java task end_name begin_operator DOT end_operator begin_name create arg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name source jar end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name java task end_name begin_operator DOT end_operator begin_name create arg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name tempdir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name java task end_name begin_operator DOT end_operator begin_name create arg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name dest jar end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name java task end_name begin_operator DOT end_operator begin_name create arg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set line end_name begin_argument_list begin_argument begin_expr begin_call begin_name get options end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name get combined classpath end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name get combined classpath end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name java task end_name begin_operator DOT end_operator begin_name create arg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name java task end_name begin_operator DOT end_operator begin_name create arg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get combined classpath end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name classpath end_name begin_init begin_expr begin_name was classpath end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name classpath end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name classpath end_name begin_operator EQ end_operator begin_call begin_name get combined classpath end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name classpath end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name java task end_name begin_operator DOT end_operator begin_name set classpath end_name end_name begin_argument_list begin_argument begin_expr begin_name classpath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name java task end_name begin_operator DOT end_operator begin_name set fork end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name java task end_name begin_operator DOT end_operator begin_name set fork end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name source jar end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name java task end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment have to catch this because of the semantics of calling main end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment tests vss get commandline generation end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test get command line end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name s test cmd line end_name begin_init begin_expr begin_block begin_expr begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name ss exe end_name end_name end_expr begin_expr begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name command get end_name end_name end_expr begin_expr begin_name ds vss project path end_name end_expr begin_expr begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name flag override working dir end_name end_name begin_operator PLUS end_operator begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get base dir end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator begin_name local path end_name end_expr begin_expr begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name flag autoresponse def end_name end_name end_expr begin_expr begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name flag recursion end_name end_name end_expr begin_expr begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name flag version end_name end_name begin_operator PLUS end_operator begin_name version end_name end_expr begin_expr begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name flag login end_name end_name begin_operator PLUS end_operator begin_name vss username end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name vss password end_name end_expr begin_expr begin_name flag filetime updated end_name end_expr begin_expr begin_name flag skip writable end_name end_expr end_block end_expr end_init end_decl end_decl_stmt begin_comment set up a vss get task end_comment begin_decl_stmt begin_decl begin_type begin_name msvssget end_name end_type begin_name vss get end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name msvssget end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss get end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss get end_name begin_operator DOT end_operator begin_name set recursive end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss get end_name begin_operator DOT end_operator begin_name set localpath end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr begin_name local path end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss get end_name begin_operator DOT end_operator begin_name set login end_name end_name begin_argument_list begin_argument begin_expr begin_name vss username end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name vss password end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss get end_name begin_operator DOT end_operator begin_name set version end_name end_name begin_argument_list begin_argument begin_expr begin_name version end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss get end_name begin_operator DOT end_operator begin_name set quiet end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss get end_name begin_operator DOT end_operator begin_name set date end_name end_name begin_argument_list begin_argument begin_expr begin_name date end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss get end_name begin_operator DOT end_operator begin_name set label end_name end_name begin_argument_list begin_argument begin_expr begin_name src label end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss get end_name begin_operator DOT end_operator begin_name set vsspath end_name end_name begin_argument_list begin_argument begin_expr begin_name vss project path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name current mod updated end_name end_name end_type begin_name cmu end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name current mod updated end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmu end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr begin_name time updated end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss get end_name begin_operator DOT end_operator begin_name set file time stamp end_name end_name begin_argument_list begin_argument begin_expr begin_name cmu end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name writable files end_name end_name end_type begin_name wf end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name writable files end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name wf end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr begin_name writable skip end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss get end_name begin_operator DOT end_operator begin_name set writable files end_name end_name begin_argument_list begin_argument begin_expr begin_name wf end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name commandline end_name begin_operator EQ end_operator begin_call begin_name begin_name vss get end_name begin_operator DOT end_operator begin_name build cmd line end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name check command lines end_name begin_argument_list begin_argument begin_expr begin_name s test cmd line end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name get commandline end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the character encoding to use in the manifest file param manifest encoding the character encoding end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set manifest encoding end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name manifest encoding end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name manifest encoding end_name end_name begin_operator EQ end_operator begin_name manifest encoding end_name end_expr end_expr_stmt end_block 
 begin_comment get the value attribute return a code string code value end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get value end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name value end_name end_expr end_return end_block 
 begin_comment specify the ccm release param v value to assign to release end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set release end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name v end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name release end_name end_name begin_operator EQ end_operator begin_name v end_name end_expr end_expr_stmt end_block 
 begin_comment execute this task throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name check configuration end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name files end_name begin_init begin_expr begin_call begin_name get file list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment quick exit if the target is up to date end_comment begin_if begin_condition begin_expr begin_call begin_name is up to date end_name begin_argument_list begin_argument begin_expr begin_name files end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name archive type end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name cab file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name sb end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name file enum end_name begin_init begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name file enum end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file enum end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name cab file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name process end_name end_type begin_name p end_name begin_init begin_expr begin_call begin_name begin_name execute end_name begin_operator DOT end_operator begin_name launch end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr end_block end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name base dir end_name begin_operator UNP end_operator begin_operator QM end_operator begin_name base dir end_name begin_operator DP end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name output stream end_name end_type begin_name out end_name begin_init begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get output stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment create the stream pumpers to forward listcab s stdout and stderr to the log end_comment begin_comment note listcab is an interactive program and issues prompts for every new line end_comment begin_comment therefore make it show only with verbose logging turned on end_comment begin_decl_stmt begin_decl begin_type begin_name log output stream end_name end_type begin_name out log end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name log output stream end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name log output stream end_name end_type begin_name err log end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name log output stream end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name stream pumper end_name end_type begin_name out pump end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name stream pumper end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name out log end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name stream pumper end_name end_type begin_name err pump end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name stream pumper end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get error stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name err log end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment pump streams asynchronously end_comment begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name thread end_name begin_argument_list begin_argument begin_expr begin_name out pump end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name start end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name thread end_name begin_argument_list begin_argument begin_expr begin_name err pump end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name start end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get bytes end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name result end_name begin_init begin_expr begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_comment a wild default for when the thread is interrupted end_comment begin_try begin_block begin_comment wait for the process to finish end_comment begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name wait for end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment wait for the end of output and error streams end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name out pump end_name begin_operator DOT end_operator begin_name wait for end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out log end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name err pump end_name begin_operator DOT end_operator begin_name wait for end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name err log end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name interrupted exception end_name end_type begin_name ie end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name ie end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_comment informative summary message in case of errors end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name execute end_name begin_operator DOT end_operator begin_name is failure end_name end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_name cab file end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name ex end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_then begin_else begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name list file end_name begin_init begin_expr begin_call begin_name create list file end_name begin_argument_list begin_argument begin_expr begin_name files end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name exec task end_name end_type begin_name exec end_name begin_init begin_expr begin_call begin_name create exec end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name out file end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment die if cabarc fails end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name exec end_name begin_operator DOT end_operator begin_name set failonerror end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exec end_name begin_operator DOT end_operator begin_name set dir end_name end_name begin_argument_list begin_argument begin_expr begin_name base dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name do verbose end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name out file end_name begin_operator EQ end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name create temp file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out file end_name begin_operator DOT end_operator begin_name delete on exit end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exec end_name begin_operator DOT end_operator begin_name set output end_name end_name begin_argument_list begin_argument begin_expr begin_name out file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name exec end_name begin_operator DOT end_operator begin_name set executable end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exec end_name begin_operator DOT end_operator begin_name create arg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exec end_name begin_operator DOT end_operator begin_name create arg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name do compress end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name exec end_name begin_operator DOT end_operator begin_name create arg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exec end_name begin_operator DOT end_operator begin_name create arg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name cmd options end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name exec end_name begin_operator DOT end_operator begin_name create arg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set line end_name begin_argument_list begin_argument begin_expr begin_name cmd options end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name exec end_name begin_operator DOT end_operator begin_name create arg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exec end_name begin_operator DOT end_operator begin_name create arg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set file end_name begin_argument_list begin_argument begin_expr begin_name cab file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exec end_name begin_operator DOT end_operator begin_name create arg end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name list file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exec end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name out file end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out file end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name list file end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_name cab file end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name ioe end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_else end_if end_block 
 begin_comment constructor used by ant s introspection mechanism for attribute population param value the value to decode end_comment begin_specifier end_specifier begin_name flex integer end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name value end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name integer end_name begin_operator DOT end_operator begin_name decode end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment default end_comment begin_comment set the name of this target element param name the code string code target name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name name end_name end_name begin_operator EQ end_operator begin_name name end_name end_expr end_expr_stmt end_block 
 begin_comment tells if the resource is a directory return boolean flag indicating if the resource is a directory end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is directory end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name is directory end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_comment default false end_comment begin_return begin_expr begin_name directory end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name directory end_name begin_operator DOT end_operator begin_name boolean value end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment check to see if the element is checked out in the current view end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name ls checkout end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name commandline end_name end_type begin_name cmdl end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name commandline end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name result end_name end_decl end_decl_stmt begin_comment build the command line from what we got the format is end_comment begin_comment cleartool lsco options viewpath end_comment begin_comment as specified in the cleartool exe help end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmdl end_name begin_operator DOT end_operator begin_name set executable end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get clear tool command end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmdl end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name command lsco end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmdl end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmdl end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmdl end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment viewpath end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmdl end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get view path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name run s end_name begin_argument_list begin_argument begin_expr begin_name cmdl end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment system out println ls checkout result end_comment begin_return begin_expr begin_operator LPAR end_operator begin_name result end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator DP end_operator end_expr end_return end_block 
 begin_comment return the value of java home return the java home value end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get java home end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name java home end_name end_expr end_return end_block 
 begin_comment handles output send it the the new project if is present otherwise call the super class param to flush the string to output see task handle flush string since ant 1 5 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name handle flush end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name to flush end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name new project end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name new project end_name begin_operator DOT end_operator begin_name demux flush end_name end_name begin_argument_list begin_argument begin_expr begin_name to flush end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name handle flush end_name end_name begin_argument_list begin_argument begin_expr begin_name to flush end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment old things we dont want not a test no more end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name oldtest quirky legacy behavior end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert expands to end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert expands to end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert expands to end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert expands to end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment cleans recorder registry and removes itself from build listener list since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name cleanup end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name recorder entries end_name begin_operator DOT end_operator begin_name clear end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name remove build listener end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get current value end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name old value end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name ret end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name operation end_name begin_operator EQT end_operator begin_name begin_name operation end_name begin_operator DOT end_operator begin_name equals oper end_name end_name end_expr end_condition begin_then begin_block begin_comment if only value is specified the property is set to it end_comment begin_comment regardless of its previous value end_comment begin_if begin_condition begin_expr begin_name value end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name default value end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name ret end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block end_then end_if begin_comment if only default is specified and the property previously end_comment begin_comment existed in the property file it is unchanged end_comment begin_if begin_condition begin_expr begin_name value end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name default value end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name old value end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name ret end_name begin_operator EQ end_operator begin_name old value end_name end_expr end_expr_stmt end_block end_then end_if begin_comment if only default is specified and the property did not end_comment begin_comment exist in the property file the property is set to default end_comment begin_if begin_condition begin_expr begin_name value end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name default value end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name old value end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name ret end_name begin_operator EQ end_operator begin_name default value end_name end_expr end_expr_stmt end_block end_then end_if begin_comment if value and default are both specified and the property end_comment begin_comment previously existed in the property file the property end_comment begin_comment is set to value end_comment begin_if begin_condition begin_expr begin_name value end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name default value end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name old value end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name ret end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block end_then end_if begin_comment if value and default are both specified and the property end_comment begin_comment did not exist in the property file the property is set end_comment begin_comment to default end_comment begin_if begin_condition begin_expr begin_name value end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name default value end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name old value end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name ret end_name begin_operator EQ end_operator begin_name default value end_name end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name ret end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name old value end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_name default value end_name begin_operator DP end_operator begin_name old value end_name end_expr end_expr_stmt end_block end_else end_if begin_return begin_expr begin_name ret end_name end_expr end_return end_block 
 begin_comment add a classpath to use when looking up a resource return the classpath to be configured end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name create classpath end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert src is java resource end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name java resource end_name begin_operator RPAR end_operator begin_name src end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name create classpath end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment ignore end_comment begin_comment determine the dependencies of the configured root classes param files a vector to be populated with the files which contain the dependency classes param classes a vector to be populated with the names of the depencency classes end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name determine dependencies end_name begin_parameter_list begin_param begin_decl begin_type begin_name vector end_name end_type begin_name files end_name end_decl end_param begin_param begin_decl begin_type begin_name vector end_name end_type begin_name classes end_name end_decl end_param end_parameter_list begin_block begin_comment we get the root classes and build up a set of end_comment begin_comment classes upon which they depend end_comment begin_decl_stmt begin_decl begin_type begin_name hashtable end_name end_type begin_name dependencies end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name hashtable end_name end_type begin_name containers end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name hashtable end_name end_type begin_name to analyze end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name get root classes end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name classname end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name to analyze end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument begin_argument begin_expr begin_name classname end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name count end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name max count end_name begin_init begin_expr begin_call begin_name is closure required end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_name max loops end_name begin_operator DP end_operator end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name to analyze end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_name count end_name begin_operator PPLUS end_operator begin_operator LT end_operator begin_name max count end_name end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name dependency visitor end_name end_type begin_name dependency visitor end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name dependency visitor end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name to analyze end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name classname end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dependencies end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument begin_argument begin_expr begin_name classname end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name container end_name begin_init begin_expr begin_call begin_name get class container end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name container end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name containers end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name container end_name end_expr end_argument begin_argument begin_expr begin_name container end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name class parser end_name end_type begin_name parser end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name container end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name parser end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name class parser end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name container end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name parser end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name class parser end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name container end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name classname end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_decl_stmt begin_decl begin_type begin_name java class end_name end_type begin_name java class end_name begin_init begin_expr begin_call begin_name begin_name parser end_name begin_operator DOT end_operator begin_name parse end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name descending visitor end_name end_type begin_name traverser end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name descending visitor end_name begin_argument_list begin_argument begin_expr begin_name java class end_name end_expr end_argument begin_argument begin_expr begin_name dependency visitor end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name traverser end_name begin_operator DOT end_operator begin_name visit end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name to analyze end_name begin_operator DOT end_operator begin_name clear end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment now recover all the dependencies collected and add to the list end_comment begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name deps enum end_name begin_init begin_expr begin_call begin_name begin_name dependency visitor end_name begin_operator DOT end_operator begin_name get dependencies end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name deps enum end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name class name end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name deps enum end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name dependencies end_name begin_operator DOT end_operator begin_name contains key end_name end_name begin_argument_list begin_argument begin_expr begin_name class name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name to analyze end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name class name end_name end_expr end_argument begin_argument begin_expr begin_name class name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_while end_block end_while begin_expr_stmt begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name remove all elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name containers end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name file end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name classes end_name begin_operator DOT end_operator begin_name remove all elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name dependencies end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name classes end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_comment return the name of the file for this element end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name name end_name end_expr end_return end_block 
 begin_comment list the possible values return array of allowed values end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get values end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_return end_block 
 begin_comment test sos checkout required attributes end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test checkout exceptions end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name expect specific build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name expect specific build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name expect specific build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name expect specific build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment makes this instance in effect a reference to another xml catalog instance p you must not set another attribute or nest elements inside this element if you make it a reference that is a catalog cannot both refer to another em and em contain elements or attributes p param r the reference to which this catalog instance is associated exception build exception if this instance already has been configured end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set refid end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name elements end_name begin_operator DOT end_operator begin_name is empty end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the doclet s parameters return an enumeration of doclet param instances end_comment begin_type begin_specifier end_specifier begin_name enumeration end_name end_type begin_name get params end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name params end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment flag to control whether the presence of a signature file means a jar is signed optional default false param lazy flag to control whether the presence of a signature end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set lazy end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name lazy end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name lazy end_name end_name begin_operator EQ end_operator begin_name lazy end_name end_expr end_expr_stmt end_block 
 begin_comment based on the parameter passed in this method creates the necessary factory desired p the current mapping for rmic names are as follows p ul li sun sun s rmic li kaffe kaffe s rmic li i a fully quallified classname i the name of a rmic adapter li weblogic weblogic compiler li forking sun s rmic by forking a new jvm ul param rmic type either the name of the desired rmic or the full classname of the rmic s adapter param task a task to log through return the compiler adapter throws build exception if the rmic type could not be resolved into a rmic adapter end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name rmic adapter end_name end_type begin_name get rmic end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name rmic type end_name end_decl end_param begin_param begin_decl begin_type begin_name task end_name end_type begin_name task end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_comment convert to lower case in the english locale end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name compiler end_name begin_init begin_expr begin_call begin_name begin_name rmic type end_name begin_operator DOT end_operator begin_name to lower case end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name english end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment handle default specially by choosing the sun or kaffe compiler end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name default compiler end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name compiler end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name compiler end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name compiler end_name begin_operator EQ end_operator begin_call begin_name begin_name kaffe rmic end_name begin_operator DOT end_operator begin_name is available end_name end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_name begin_name kaffe rmic end_name begin_operator DOT end_operator begin_name compiler name end_name end_name begin_operator DP end_operator begin_name begin_name sun rmic end_name begin_operator DOT end_operator begin_name compiler name end_name end_name end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name sun rmic end_name begin_operator DOT end_operator begin_name compiler name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name compiler end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name sun rmic end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name kaffe rmic end_name begin_operator DOT end_operator begin_name compiler name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name compiler end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name kaffe rmic end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name wl rmic end_name begin_operator DOT end_operator begin_name compiler name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name compiler end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name wl rmic end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name forking sun rmic end_name begin_operator DOT end_operator begin_name compiler name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name compiler end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name forking sun rmic end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name x new rmic end_name begin_operator DOT end_operator begin_name compiler name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name compiler end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name x new rmic end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if end_else end_if end_else end_if end_else end_if end_else end_if begin_comment no match ask for the non lower cased type end_comment begin_return begin_expr begin_call begin_name resolve class name end_name begin_argument_list begin_argument begin_expr begin_name rmic type end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment returns the next character in the filtered stream replacing tokens from the original stream return the next character in the resulting stream or 1 if the end of the resulting stream has been reached exception io exception if the underlying stream throws an io exception during reading end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name read end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name get initialized end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name initialize end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set initialized end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name replace index end_name begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name ch end_name begin_init begin_expr begin_call begin_name begin_name replace data end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name replace index end_name begin_operator PPLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name replace index end_name begin_operator GE end_operator begin_call begin_name begin_name replace data end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name replace index end_name begin_operator EQ end_operator begin_operator MINUS end_operator end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name ch end_name end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name ch end_name begin_init begin_expr begin_call begin_name get next char end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name ch end_name begin_operator EQT end_operator begin_name begin token end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string buffer end_name end_type begin_name key end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_do begin_block begin_expr_stmt begin_expr begin_name ch end_name begin_operator EQ end_operator begin_call begin_name get next char end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name ch end_name begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name key end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name char end_name begin_operator RPAR end_operator begin_name ch end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_break end_break end_block end_else end_if end_block begin_condition begin_expr begin_name ch end_name begin_operator UNP end_operator begin_name end token end_name end_expr end_condition end_do begin_if begin_condition begin_expr begin_name ch end_name begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name queued data end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name queue index end_name begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name queued data end_name begin_operator EQ end_operator begin_call begin_name begin_name key end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name queued data end_name begin_operator EQ end_operator begin_call begin_name begin_name key end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_call begin_name begin_name queued data end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name queue index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_name queue index end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_return begin_expr begin_name begin token end_name end_expr end_return end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name key end_name begin_operator DOT end_operator begin_name set length end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name key end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name replace with end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name hash end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name key end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name replace with end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name replace with end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name replace data end_name begin_operator EQ end_operator begin_name replace with end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name replace index end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name read end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name new data end_name begin_init begin_expr begin_call begin_name begin_name key end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_name end token end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name queued data end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name queue index end_name begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name queued data end_name begin_operator EQ end_operator begin_name new data end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name queued data end_name begin_operator EQ end_operator begin_name new data end_name begin_operator PLUS end_operator begin_call begin_name begin_name queued data end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name queue index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_name queue index end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_return begin_expr begin_name begin token end_name end_expr end_return end_block end_else end_if end_block end_else end_if end_block end_then end_if begin_return begin_expr begin_name ch end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test excepting foe fork end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the optimize token manager grammar option param optimize token manager a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set optimizetokenmanager end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name optimize token manager end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name optional attrs end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name optimize token manager end_name end_expr end_argument begin_argument begin_expr begin_name optimize token manager end_name begin_operator QM end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name true end_name end_name begin_operator DP end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name false end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return whether the group id has been explicitly set end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name has group id been set end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name group id set end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name task finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test ends with longer string end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert false end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test update if only manifest has changed end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name jar xml end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr begin_name temp dir end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name jar xml end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test preset end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect property set end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment basic data type to string return this data type formatted as a string end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name d end_name begin_init begin_expr begin_call begin_name get description end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_name d end_name begin_operator EQT end_operator begin_operator QM end_operator begin_call begin_name get data type name end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_call begin_name get data type name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name d end_name end_expr end_return end_block 
 begin_comment adds a set of files about which library data will be displayed param file set a set of files about which library data will be displayed end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add fileset end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name file set end_name end_type begin_name file set end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name library file sets end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name file set end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the character encoding param encoding the character encoding since 1 32 ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set encoding end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name encoding end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name input encoding end_name end_name begin_operator EQ end_operator begin_name encoding end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name output encoding end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name output encoding end_name begin_operator EQ end_operator begin_name encoding end_name end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment set the time for users who prefer to express time in ms since 1970 param millis the time to compare file s last modified date to expressed in milliseconds end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set millis end_name begin_parameter_list begin_param begin_decl begin_type begin_name long end_name end_type begin_name millis end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name millis end_name end_name begin_operator EQ end_operator begin_name millis end_name end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name splash screen end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name msg end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name init end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set text end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test tear down called by the unit test framework prior to each test end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment default constructor end_comment begin_specifier end_specifier begin_name type end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test filter set end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name tmp end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name check end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name tmp end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name content equals end_name end_name begin_argument_list begin_argument begin_expr begin_name tmp end_name end_expr end_argument begin_argument begin_expr begin_name check end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set this to true to always use the response file param use response file a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set use response file end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name use response file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name use response file end_name end_name begin_operator EQ end_operator begin_name use response file end_name end_expr end_expr_stmt end_block 
 begin_comment set the code input stream code from which to read the standard output of the process param is the code input stream code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set process output stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name input stream end_name end_type begin_name is end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name create process output pump end_name begin_argument_list begin_argument begin_expr begin_name is end_name end_expr end_argument begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the argument or null for no argument needed return the output file parameter to csc end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get dest file parameter end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name output file end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name output file end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr end_expr end_return end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get location end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get line number end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment generate a hashcode depending on the namespace url and file name return the hashcode end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name hash code end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name result end_name end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name namespace end_name begin_operator UNP end_operator begin_operator QM end_operator begin_call begin_name begin_name namespace end_name begin_operator DOT end_operator begin_name hash code end_name end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_operator RPAR end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_operator STAR end_operator begin_name result end_name begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name file end_name begin_operator UNP end_operator begin_operator QM end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name hash code end_name end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_operator RPAR end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_operator STAR end_operator begin_name result end_name begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name url end_name begin_operator UNP end_operator begin_operator QM end_operator begin_call begin_name begin_name url end_name begin_operator DOT end_operator begin_name hash code end_name end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_operator RPAR end_operator end_expr end_expr_stmt begin_return begin_expr begin_name result end_name end_expr end_return end_block 
 begin_comment check style visibility modifier on end_comment begin_comment ignored param from ignored end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set from end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name from end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set lookahead end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name lookahead end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name lookahead end_name end_name begin_operator EQ end_operator begin_name lookahead end_name end_expr end_expr_stmt end_block 
 begin_comment add a depth selector entry on the selector list param selector the selector to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add depth end_name begin_parameter_list begin_param begin_decl begin_type begin_name depth selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name fileset end_name begin_operator DOT end_operator begin_name add depth end_name end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the header id return the header id end_comment begin_type begin_specifier end_specifier begin_name zip short end_name end_type begin_name get header id end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name header id end_name end_expr end_return end_block 
 begin_comment get the comparison class return the class object end_comment begin_type begin_specifier end_specifier begin_name class end_name end_type begin_name get check class end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name clazz end_name end_expr end_return end_block 
 begin_comment set the implementation vendor of extension param implementation vendor the implementation vendor of extension end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set implementation vendor end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name implementation vendor end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name verify not a reference end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name implementation vendor end_name end_name begin_operator EQ end_operator begin_name implementation vendor end_name end_expr end_expr_stmt end_block 
 begin_comment saves a key value pair in the cache param key the key param value the value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name put end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name key end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cache end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name string end_name begin_operator DOT end_operator begin_name value of end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name string end_name begin_operator DOT end_operator begin_name value of end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name cache dirty end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment get the name of the compression method return the string bzip 2 end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get compression name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment determines if the output is appended to the file given in code set output code default is false that is overwrite the file param append true to append to an existing file false to overwrite end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set append end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name append end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name append end_name end_name begin_operator EQ end_operator begin_name append end_name end_expr end_expr_stmt end_block 
 begin_comment return the boolean equivalent of a string which is considered code true code if either code on code code true code or code yes code is found ignoring case param s the string to convert to a boolean value return code true code if the given string is code on code code true code or code yes code or code false code otherwise end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name to boolean end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator DOT end_operator begin_call begin_name equals ignore case end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator DOT end_operator begin_call begin_name equals ignore case end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator DOT end_operator begin_call begin_name equals ignore case end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment get the name of the extension return the extension s name end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name name end_name end_expr end_return end_block 
 begin_comment sets the location to store the compiled files required param base the location to store the compiled files end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set base end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name base end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name base dir end_name end_name begin_operator EQ end_operator begin_name base end_name end_expr end_expr_stmt end_block 
 begin_comment set the source resource param a the resource to pack as a single element resource collection end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add configured end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource collection end_name end_type begin_name a end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name set src resource end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name next end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 6 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test replace first substitution end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name regexp end_name end_type begin_name reg end_name begin_init begin_expr begin_operator LPAR end_operator begin_name regexp end_name begin_operator RPAR end_operator begin_call begin_name get reg end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name set pattern end_name end_name begin_argument_list begin_argument begin_expr begin_name pattern end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name matches end_name end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name substitute end_name end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name regexp end_name begin_operator DOT end_operator begin_name replace first end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment adds a new task definition to the project attempting to override an existing definition with an equivalent one i e with the same classname results in a verbose log message attempting to override an existing definition with a different one results in a warning log message param task name the name of the task to add must not be code null code param task class the full name of the class implementing the task must not be code null code exception build exception if the class is unsuitable for being an ant task an error level message is logged before this exception is thrown see check task class class end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add task definition end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name task name end_name end_decl end_param begin_param begin_decl begin_type begin_name class end_name end_type begin_name task class end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name check task class end_name begin_argument_list begin_argument begin_expr begin_name task class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name ant type definition end_name end_type begin_name def end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name ant type definition end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name def end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr begin_name task name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name def end_name begin_operator DOT end_operator begin_name set class loader end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name task class end_name begin_operator DOT end_operator begin_name get class loader end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name def end_name begin_operator DOT end_operator begin_name set class end_name end_name begin_argument_list begin_argument begin_expr begin_name task class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name def end_name begin_operator DOT end_operator begin_name set adapter class end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name task adapter end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name def end_name begin_operator DOT end_operator begin_name set class name end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name task class end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name def end_name begin_operator DOT end_operator begin_name set adapt to class end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name task end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name update data type definition end_name begin_argument_list begin_argument begin_expr begin_name def end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test jar and class name end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name regexp matcher end_name end_type begin_name get implementation end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name jdk 14 regexp matcher end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment performs the replace operation return the position of the last character that was inserted as replacement end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name replace end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name found end_name begin_init begin_expr begin_call begin_name begin_name input buffer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr begin_name token end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name pos end_name begin_init begin_expr begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_name found end_name begin_operator GE end_operator end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name input buffer end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr begin_name found end_name end_expr end_argument begin_argument begin_expr begin_name found end_name begin_operator PLUS end_operator begin_call begin_name begin_name token end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name replace value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name pos end_name begin_operator EQ end_operator begin_name found end_name begin_operator PLUS end_operator begin_call begin_name begin_name replace value end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name found end_name begin_operator EQ end_operator begin_call begin_name begin_name input buffer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr begin_name token end_name end_expr end_argument begin_argument begin_expr begin_name pos end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_operator PPLUS end_operator begin_name replace count end_name end_expr end_expr_stmt end_block end_while begin_return begin_expr begin_name pos end_name end_expr end_return end_block 
 begin_comment fulfill the iterator contract return true if there are more elements end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name has next end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name wrapped end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name fail fast end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name wrapped end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name start end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name start end_name begin_operator EQ end_operator begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the hash code for this resource return hash code as int since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name hash code end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name hash code end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_name magic end_name begin_operator STAR end_operator begin_operator LPAR end_operator begin_name name end_name begin_operator EQT end_operator begin_operator QM end_operator begin_name null name end_name begin_operator DP end_operator begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name hash code end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment create the specified directory on the remote host param ftp the ftp client connection param dir the directory to create format must be correct for host type throws io exception in unknown circumstances throws build exception if ignore noncritical errors has not been set to true and a directory could not be created for instance because it was already existing precisely the codes 521 550 and 553 will trigger a build exception end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name make remote dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name ftp client end_name end_type begin_name ftp end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name dir end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name working directory end_name begin_init begin_expr begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name print working directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name verbose end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name change working directory end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name subdir end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string tokenizer end_name end_type begin_name st end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string tokenizer end_name begin_argument_list begin_argument begin_expr begin_name dir end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name st end_name begin_operator DOT end_operator begin_name has more tokens end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name subdir end_name begin_operator EQ end_operator begin_call begin_name begin_name st end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name subdir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name change working directory end_name end_name begin_argument_list begin_argument begin_expr begin_name subdir end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name make directory end_name end_name begin_argument_list begin_argument begin_expr begin_name subdir end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment codes 521 550 and 553 can be produced by ftp servers end_comment begin_comment to indicate that an attempt to create a directory has end_comment begin_comment failed because the directory already exists end_comment begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name rc end_name begin_init begin_expr begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name get reply code end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_name ignore noncritical errors end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_name rc end_name begin_operator EQT end_operator begin_name begin_name ftp reply end_name begin_operator DOT end_operator begin_name code 550 end_name end_name begin_operator UNP end_operator begin_name rc end_name begin_operator EQT end_operator begin_name begin_name ftp reply end_name begin_operator DOT end_operator begin_name code 553 end_name end_name begin_operator UNP end_operator begin_name rc end_name begin_operator EQT end_operator begin_name code 521 end_name begin_operator RPAR end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name get reply string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name verbose end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_name verbose end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name change working directory end_name end_name begin_argument_list begin_argument begin_expr begin_name subdir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if end_block end_while begin_if begin_condition begin_expr begin_name working directory end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name change working directory end_name end_name begin_argument_list begin_argument begin_expr begin_name working directory end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment check style visibility modifier on end_comment begin_comment set the width param w the value to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set width end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name w end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name width end_name begin_operator EQ end_operator begin_name w end_name end_expr end_expr_stmt end_block 
 begin_comment executes the task p builds a command line to execute cleartool and then calls exec s run method to execute the command line throws build exception if the command fails and failonerr is set to true end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name commandline end_name end_type begin_name command line end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name commandline end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name project end_name end_type begin_name a proj end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name result end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment default the viewpath to basedir if it is not specified end_comment begin_if begin_condition begin_expr begin_call begin_name get view path end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set view path end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name a proj end_name begin_operator DOT end_operator begin_name get base dir end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment build the command line from what we got the format is end_comment begin_comment cleartool mkelem options viewpath end_comment begin_comment as specified in the cleartool exe help end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name set executable end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get clear tool command end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name command mkelem end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name check options end_name begin_argument_list begin_argument begin_expr begin_name command line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name get fail on err end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get view path basename end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name run end_name begin_argument_list begin_argument begin_expr begin_name command line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name execute end_name begin_operator DOT end_operator begin_name is failure end_name end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name get fail on err end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment return whether the user id has been explicitly set end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name has user id been set end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name user id set end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 9 end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name tmpdir end_name begin_init begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equal content end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name tmpdir end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name tmpdir end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the header text to be placed at the top of each output file param text the header text end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add header end_name begin_parameter_list begin_param begin_decl begin_type begin_name html end_name end_type begin_name text end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name header end_name begin_operator EQ end_operator begin_name text end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test default test end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns the next character in the filtered stream converting tabs to the specified number of spaces return the next character in the resulting stream or 1 if the end of the resulting stream has been reached exception io exception if the underlying stream throws an io exception during reading end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name read end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name get initialized end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name initialize end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set initialized end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name ch end_name begin_init begin_expr begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name spaces remaining end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name spaces remaining end_name begin_operator MMINUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name ch end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name ch end_name begin_operator EQ end_operator begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name ch end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name spaces remaining end_name begin_operator EQ end_operator begin_name tab length end_name begin_operator MINUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name ch end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if begin_return begin_expr begin_name ch end_name end_expr end_return end_block 
 begin_comment set the project param project the owner of this component end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set project end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name set project component end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a condition element return code condition base code since ant 1 6 2 end_comment begin_type begin_specifier end_specifier begin_name condition base end_name end_type begin_name create condition end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name nested condition end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name nested condition end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name nested condition end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name nested condition end_name end_expr end_return end_block 
 begin_specifier end_specifier begin_name j unit version helper test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment execute the touch operation throws build exception if an error occurs end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name check configuration end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name touch end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the permissions for the application run inside the same jvm since ant 1 6 return permissions end_comment begin_type begin_specifier end_specifier begin_name permissions end_name end_type begin_name create permissions end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name perm end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name perm end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator UNP end_operator begin_call begin_name permissions end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_name perm end_name end_expr end_expr_stmt begin_return begin_expr begin_name perm end_name end_expr end_return end_block 
 begin_comment initial value to set for a property if it is not already defined in the property file for type date an additional keyword is allowed quot now quot param value the default value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set default end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name default value end_name end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block 
 begin_comment set the rebuild flag to false to only update changes in the jar rather than rerunning ejbdeploy optional default true param rebuild a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set rebuild end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name rebuild end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name always rebuild end_name end_name begin_operator EQ end_operator begin_name rebuild end_name end_expr end_expr_stmt end_block 
 begin_comment return the set of code extension code objects representing optional packages that the application declares they will use if present if there are no such optional packages a zero length list is returned param manifest manifest to be parsed return the optional dependencies that are specified in manifest end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name extension end_name begin_index end_index end_type begin_name get options end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name manifest end_name end_type begin_name manifest end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name get listed end_name begin_argument_list begin_argument begin_expr begin_name manifest end_name end_expr end_argument begin_argument begin_expr begin_name optional extension list end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name testexists end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the url for this url resource param u the url to expose end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set url end_name begin_parameter_list begin_param begin_decl begin_type begin_name url end_name end_type begin_name u end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name check attributes allowed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name url end_name begin_operator EQ end_operator begin_name u end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test keeproot collapse semantic end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name do test end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment similar method for this definition param other another definition param project the current project return true if the definitions are the same end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name similar definition end_name begin_parameter_list begin_param begin_decl begin_type begin_name ant type definition end_name end_type begin_name other end_name end_decl end_param begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name similar definition end_name end_name begin_argument_list begin_argument begin_expr begin_name other end_name end_expr end_argument begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name my ant type definition end_name end_type begin_name other def end_name begin_init begin_expr begin_operator LPAR end_operator begin_name my ant type definition end_name begin_operator RPAR end_operator begin_name other end_name end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name macro def end_name begin_operator DOT end_operator begin_name similar end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name other def end_name begin_operator DOT end_operator begin_name macro def end_name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test replace regex end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name has regex end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_return end_return end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name contents end_name begin_init begin_expr begin_call begin_name get file string end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert string contains end_name begin_argument_list begin_argument begin_expr begin_name contents end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert string contains end_name begin_argument_list begin_argument begin_expr begin_name contents end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert string contains end_name begin_argument_list begin_argument begin_expr begin_name contents end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert string contains end_name begin_argument_list begin_argument begin_expr begin_name contents end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert string contains end_name begin_argument_list begin_argument begin_expr begin_name contents end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert string not contains end_name begin_argument_list begin_argument begin_expr begin_name contents end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name have attr end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name have attr end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name build finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name pb end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr begin_name max end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set visible end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name dispose end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test find resources end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_comment this path should contain the class files for these testcases end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name build testcases end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name build testcases end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name build testcases end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name build testcases end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name is directory end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name path end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name build testcases end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment a special parent loader which is not the system class loader end_comment begin_decl_stmt begin_decl begin_type begin_name class loader end_name end_type begin_name parent end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name parent loader end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment an ant class loader which is supposed to delegate to end_comment begin_comment the parent and then to the disk path end_comment begin_decl_stmt begin_decl begin_type begin_name class loader end_name end_type begin_name acl end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name ant class loader end_name begin_argument_list begin_argument begin_expr begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name path end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment the intended result ur ls end_comment begin_decl_stmt begin_decl begin_type begin_name url end_name end_type begin_name url from path end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name url end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name to uri end_name end_name begin_argument_list begin_argument begin_expr begin_name build testcases end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name test resource end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name url end_name end_type begin_name url from parent end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name url end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name test resource end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name arrays end_name begin_operator DOT end_operator begin_name as list end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name url end_name begin_index end_index end_name begin_block begin_expr begin_name url from parent end_name end_expr begin_operator UNP end_operator begin_expr begin_name url from path end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name enum 2 list end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name acl end_name begin_operator DOT end_operator begin_name get resources end_name end_name begin_argument_list begin_argument begin_expr begin_name test resource end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name acl end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name ant class loader end_name begin_argument_list begin_argument begin_expr begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_name path end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name arrays end_name begin_operator DOT end_operator begin_name as list end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name url end_name begin_index end_index end_name begin_block begin_expr begin_name url from path end_name end_expr begin_operator UNP end_operator begin_expr begin_name url from parent end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name enum 2 list end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name acl end_name begin_operator DOT end_operator begin_name get resources end_name end_name begin_argument_list begin_argument begin_expr begin_name test resource end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor for scp to message param session the ssh session to use end_comment begin_specifier end_specifier begin_name scp to message end_name begin_parameter_list begin_param begin_decl begin_type begin_name session end_name end_type begin_name session end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name session end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment process each external catalog file specified in a code lt catalogpath gt code it will be parsed by the resolver library and the individual elements will be added back to us that is the controlling xml catalog instance via a callback mechanism end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process external catalogs end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name external catalogs processed end_name end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name set xml catalog end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_name resolver impl end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_name begin_name xml catalog end_name begin_operator DOT end_operator begin_name this end_name end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name ex end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_comment parse each catalog listed in nested catalogpath elements end_comment begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name cat path end_name begin_init begin_expr begin_call begin_name get catalog path end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name cat path end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get catalog path end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name cat path list end_name begin_init begin_expr begin_call begin_name get catalog path end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name cat path list end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name cat file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name begin_name cat path list end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name cat file end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name parse catalog end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_name resolver impl end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_call begin_name begin_name cat file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name ex end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_for end_block end_then end_if end_block end_then end_if begin_expr_stmt begin_expr begin_name external catalogs processed end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment retrieves the instance of the singleton return singleton instance end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name selector utils end_name end_type begin_name get instance end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name instance end_name end_expr end_return end_block 
 begin_comment defines valid input parameters as comma separated strings if set input task will reject any input not defined as accepted and requires the user to reenter it validargs are case sensitive if you want a and a to be accepted you need to define both values as accepted arguments param validargs a comma separated string defining valid input args end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set validargs end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name validargs end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name validargs end_name end_name begin_operator EQ end_operator begin_name validargs end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the action to be performed may be quot single quot quot delete quot quot recreate quot or quot record quot param action the action to perform end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set action end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name action end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set action end_name end_name begin_argument_list begin_argument begin_expr begin_name action end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment class is found in specified classpath end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 24 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the code project name code attribute to the given value param project name the star team project to search see get project name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set project name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name project name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name project name end_name end_name begin_operator EQ end_operator begin_name project name end_name end_expr end_expr_stmt end_block 
 begin_comment convert the value to a multipler millisecond to unit return a multipler a long value end_comment begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name get multiplier end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name key end_name begin_init begin_expr begin_call begin_name get value end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to lower case end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name l end_name begin_init begin_expr begin_operator LPAR end_operator begin_name long end_name begin_operator RPAR end_operator begin_call begin_name begin_name time table end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name l end_name begin_operator DOT end_operator begin_name long value end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment from code base code traverse the filesystem in order to find a file that matches the given name param base base file dir param path file path param cs whether to scan case sensitively return file object that points to the file in question or null since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name find file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name base end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name path end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name cs end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name is absolute path end_name end_name begin_argument_list begin_argument begin_expr begin_name path end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name base end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name s end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name dissect end_name end_name begin_argument_list begin_argument begin_expr begin_name path end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name base end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name begin_name s end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name path end_name begin_operator EQ end_operator begin_name begin_name s end_name begin_index begin_expr end_expr end_index end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name normalize end_name end_name begin_argument_list begin_argument begin_expr begin_name path end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name s end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name remove leading path end_name end_name begin_argument_list begin_argument begin_expr begin_name base end_name end_expr end_argument begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment removing base from path yields no change path not child of base end_comment begin_return begin_expr end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name path end_name begin_operator EQ end_operator begin_name s end_name end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_return begin_expr begin_call begin_name find file end_name begin_argument_list begin_argument begin_expr begin_name base end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name selector utils end_name begin_operator DOT end_operator begin_name tokenize path end_name end_name begin_argument_list begin_argument begin_expr begin_name path end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name cs end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment date representing the end of the range param to date the end date end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set to date end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name to date end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal to date end_name end_name begin_argument_list begin_argument begin_expr begin_name to date end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name resource end_name end_type begin_name get resource end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name file resource end_name begin_argument_list begin_argument begin_expr begin_name to dir end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment allows simple classpath string not allowed if this catalog is itself a reference to another catalog that is a catalog cannot both refer to another em and em contain elements or other attributes param classpath the classpath to use to look up entities end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classpath end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name classpath end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name end_name begin_operator EQ end_operator begin_name classpath end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name classpath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name set checked end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment specify whether a missing eol will be added to the final line of input param fixlast if true a missing eol will be appended end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set fixlast end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name fixlast end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name fixlast end_name end_name begin_operator EQ end_operator begin_name fixlast end_name end_expr end_expr_stmt end_block 
 begin_comment returns whether the star team default path is factored into calculated target path locations false or whether target folder is an absolute mapping to the root folder named by folder name return returns true if absolute mapping is used false if it is not used see set target folder absolute boolean end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get target folder absolute end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name target folder absolute end_name end_name end_expr end_return end_block 
 begin_comment set the first string param a 1 the first string end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set arg 1 end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name a 1 end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name arg 1 end_name begin_operator EQ end_operator begin_name a 1 end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test multi move end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test scenario custom selector settings end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name do scenario test end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the external file attributes param value an code long code value since 1 1 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set external attributes end_name begin_parameter_list begin_param begin_decl begin_type begin_name long end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name external attributes end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name clean buffer end_name begin_parameter_list begin_param begin_decl begin_type begin_name string buffer end_name end_type begin_name buffer end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name cleaned buffer end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name cr end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name ch end_name begin_init begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name ch end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name cr end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_continue end_continue end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name cr end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cleaned buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name ch end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cleaned buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name ch end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_for begin_return begin_expr begin_call begin_name begin_name cleaned buffer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment bugzilla report 30365 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test zip empty dir end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets the output file attribute of the jspc test object param subpath description of parameter return the output file value end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get output file end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name subpath end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name out dir end_name end_expr end_argument begin_argument begin_expr begin_name subpath end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment the string that should replace the token during filtered copies param value token replace value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set value end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name value end_name end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block 
 begin_comment perform the actual deployment for this generic implementation a jvm is spawned using the supplied classpath classname jvm args and command line arguments exception org apache tools ant build exception if the attributes are invalid or incomplete end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name deploy end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name set classname end_name end_name begin_argument_list begin_argument begin_expr begin_name class name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name set classpath end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get classpath end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name set fork end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name set failonerror end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment specifies a file containing a comment param cfile the path to the comment file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set comment file end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name cfile end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m cfile end_name begin_operator EQ end_operator begin_name cfile end_name end_expr end_expr_stmt end_block 
 begin_comment format the test for printing param test a test return the formatted testname end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name format test end_name begin_parameter_list begin_param begin_decl begin_type begin_name test end_name end_type begin_name test end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name test end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name test end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_return end_block end_else end_if end_block 
 begin_comment the standard method for executing any task throws build exception on error end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name executing end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_try begin_block begin_expr_stmt begin_expr begin_name executing end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dispatch utils end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_expr_stmt begin_expr begin_name executing end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment execute the task end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name ant sound player end_name end_type begin_name sound player end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name ant sound player end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name success end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sound player end_name begin_operator DOT end_operator begin_name add build successful sound end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name success end_name begin_operator DOT end_operator begin_name get source end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name success end_name begin_operator DOT end_operator begin_name get loops end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name success end_name begin_operator DOT end_operator begin_name get duration end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_name fail end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sound player end_name begin_operator DOT end_operator begin_name add build failed sound end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name fail end_name begin_operator DOT end_operator begin_name get source end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name fail end_name begin_operator DOT end_operator begin_name get loops end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name fail end_name begin_operator DOT end_operator begin_name get duration end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name add build listener end_name begin_argument_list begin_argument begin_expr begin_name sound player end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 4 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment reset to default values see zip reset since 1 44 ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name reset end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name reset end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name empty behavior end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name configured manifest end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name fileset manifest config end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name merge manifests main end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name manifest file end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name index end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name main end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name args end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment here is a comment with an embedded tab end_comment begin_if begin_condition begin_expr begin_name mybool end_name end_expr end_condition begin_then begin_block begin_comment here is a multi line with embedded tab comment end_comment begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name mychar end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment tab end_comment end_block end_then end_if begin_comment end of if mybool end_comment end_block 
 begin_comment default constructor causes the bcel classes to load to ensure bcel dependencies can be satisfied end_comment begin_specifier end_specifier begin_name full analyzer end_name begin_parameter_list end_parameter_list begin_block begin_comment force bcel classes to load now end_comment begin_try begin_block begin_expr_stmt begin_expr begin_operator UNP end_operator begin_call begin_name class parser end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try end_block 
 begin_comment get the definition class param project the current project return the type of the definition end_comment begin_type begin_specifier end_specifier begin_name class end_name end_type begin_name get type class end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_block begin_try begin_block begin_return begin_expr begin_call begin_name inner get type class end_name begin_argument_list end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no class def found error end_name end_type begin_name ncdfe end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name ncdfe end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name cnfe end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name class name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_return begin_expr end_expr end_return end_block 
 begin_specifier end_specifier begin_name my path end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the commentfile command param cmd command line containing the command line string with or without the commentfile flag and file appended end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name get comment file command end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name get comment file end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes this breaks clearcase end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag commentfile end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get comment file end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment a copy constructor param filelist a code file list code value end_comment begin_specifier end_specifier begin_name file list end_name begin_parameter_list begin_param begin_decl begin_type begin_name file list end_name end_type begin_name filelist end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name dir end_name end_name begin_operator EQ end_operator begin_name begin_name filelist end_name begin_operator DOT end_operator begin_name dir end_name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name filenames end_name end_name begin_operator EQ end_operator begin_name begin_name filelist end_name begin_operator DOT end_operator begin_name filenames end_name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set project end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name filelist end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name send mtf values 5 end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name n groups end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name n selectors end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name bs w end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name n groups end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name bs w end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name n selectors end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name output stream end_name end_type begin_name out shadow end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name out end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name byte end_name begin_index end_index end_type begin_name selector mtf end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name data end_name begin_operator DOT end_operator begin_name selector mtf end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name bs live shadow end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name bs live end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name bs buff shadow end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name bs buff end_name end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name n selectors end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr end_expr end_init begin_operator UNP end_operator begin_name hj end_name begin_init begin_expr begin_name begin_name selector mtf end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator UNP end_operator end_expr end_init end_decl end_init begin_condition begin_expr begin_name j end_name begin_operator LT end_operator begin_name hj end_name end_expr end_condition begin_incr begin_expr begin_name j end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_comment inlined bs w 1 1 end_comment begin_while begin_condition begin_expr begin_name bs live shadow end_name begin_operator GE end_operator end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out shadow end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name bs buff shadow end_name begin_operator UNP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name bs buff shadow end_name begin_operator UNP end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name bs live shadow end_name begin_operator UNP end_operator end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_name bs buff shadow end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator MINUS end_operator begin_name bs live shadow end_name begin_operator MINUS end_operator begin_operator RPAR end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name bs live shadow end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_for begin_comment inlined bs w 1 0 end_comment begin_while begin_condition begin_expr begin_name bs live shadow end_name begin_operator GE end_operator end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out shadow end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name bs buff shadow end_name begin_operator UNP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name bs buff shadow end_name begin_operator UNP end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name bs live shadow end_name begin_operator UNP end_operator end_expr end_expr_stmt end_block end_while begin_comment bs buff shadow 0 32 bs live shadow 1 end_comment begin_expr_stmt begin_expr begin_name bs live shadow end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name bs buff end_name end_name begin_operator EQ end_operator begin_name bs buff shadow end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name bs live end_name end_name begin_operator EQ end_operator begin_name bs live shadow end_name end_expr end_expr_stmt end_block 
 begin_comment return the value for the given attribute if we are not using semantic attributes its just the literal string value of the attribute p if we em are em using semantic attributes then first dependent properties are resolved i e foo is resolved based on the foo property value and then an appropriate data type is used in particular location based properties are resolved to absolute file names also for refid values look up the referenced object from the project p end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get attribute value end_name begin_parameter_list begin_param begin_decl begin_type begin_name node end_name end_type begin_name attribute node end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name node value end_name begin_init begin_expr begin_call begin_name begin_name attribute node end_name begin_operator DOT end_operator begin_name get node value end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name trim end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name semantic attributes end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name attribute name end_name begin_init begin_expr begin_call begin_name begin_name attribute node end_name begin_operator DOT end_operator begin_name get node name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name node value end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace properties end_name begin_argument_list begin_argument begin_expr begin_name node value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name attribute name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name location end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr begin_name node value end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name attribute name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name ref id end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name ref end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get reference end_name begin_argument_list begin_argument begin_expr begin_name node value end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name ref end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name begin_name ref end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if end_block end_then end_if end_else end_if end_block end_then end_if begin_return begin_expr begin_name node value end_name end_expr end_return end_block 
 begin_comment get comment file return string containing the path to the comment file end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get comment file end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m cfile end_name end_expr end_return end_block 
 begin_comment add the assertions to a list in a format suitable for adding to a command line param command list the command line to format end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name apply assertions end_name begin_parameter_list begin_param begin_decl begin_type begin_name list end_name end_type begin_name command list end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name assertions end_name end_type begin_name clause end_name begin_init begin_expr begin_call begin_name get final reference end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment do the system assertions end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name true end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name clause end_name begin_operator DOT end_operator begin_name enable system assertions end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command list end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name false end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name clause end_name begin_operator DOT end_operator begin_name enable system assertions end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command list end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if begin_comment now any inner assertions end_comment begin_decl_stmt begin_decl begin_type begin_name iterator end_name end_type begin_name it end_name begin_init begin_expr begin_call begin_name begin_name clause end_name begin_operator DOT end_operator begin_name assertion list end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name it end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name base assertion end_name end_type begin_name assertion end_name begin_init begin_expr begin_operator LPAR end_operator begin_name base assertion end_name begin_operator RPAR end_operator begin_call begin_name begin_name it end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name arg end_name begin_init begin_expr begin_call begin_name begin_name assertion end_name begin_operator DOT end_operator begin_name to command end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name arg end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command list end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name arg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block 
 begin_comment what a valid return value from pvcs looks like when it describes a file defaults to code quot p code if you are not using an unc name for your repository and the drive letter code p code is incorrect for your setup you may need to change this value unc names will always be accepted param l the value to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set line start end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name l end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name line start end_name begin_operator EQ end_operator begin_name l end_name end_expr end_expr_stmt end_block 
 begin_comment execute the script param attributes collection of attributes param elements a list of nested element values deprecated since 1 7 use execute script attribute elements instance instead end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute script end_name begin_parameter_list begin_param begin_decl begin_type begin_name map end_name end_type begin_name attributes end_name end_decl end_param begin_param begin_decl begin_type begin_name map end_name end_type begin_name elements end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute script end_name begin_argument_list begin_argument begin_expr begin_name attributes end_name end_expr end_argument begin_argument begin_expr begin_name elements end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test that version 1 2 stubs are good throws exception end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test version 12 end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment if true error and non error output will be teed redirected as specified while being sent to ant s logging mechanism as if no redirection had taken place defaults to false param always log code boolean code since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set always log end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name always log end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name always log end_name end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name always log end_name begin_operator RPAR end_operator begin_operator QM end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name true end_name end_name begin_operator DP end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name false end_name end_name begin_operator RPAR end_operator end_expr end_expr_stmt end_block 
 begin_comment get the warnings for this section return an enumeration of warning strings end_comment begin_type begin_specifier end_specifier begin_name enumeration end_name end_type begin_name get warnings end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name warnings end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name mangle end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name password end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name buf end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name password end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name shifts end_name begin_index begin_expr begin_call begin_name begin_name password end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment resolve the reference using the associated project if it set otherwise use the passed in project param fallback the fallback project to use if the project attribute of reference is not set return the dereferenced object throws build exception if the reference cannot be dereferenced end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name get referenced object end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name fallback end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name refid end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name o end_name begin_init begin_expr begin_name project end_name begin_operator EQT end_operator begin_operator QM end_operator begin_call begin_name begin_name fallback end_name begin_operator DOT end_operator begin_name get reference end_name end_name begin_argument_list begin_argument begin_expr begin_name refid end_name end_expr end_argument end_argument_list end_call begin_operator DP end_operator begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get reference end_name end_name begin_argument_list begin_argument begin_expr begin_name refid end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name o end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name refid end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_return begin_expr begin_name o end_name end_expr end_return end_block 
 begin_comment return the classname for the filenamemapper name end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get implementation end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name implementations end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get values end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_return end_block 
 begin_comment add a propertyset to the total set param ps the new property set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add syspropertyset end_name begin_parameter_list begin_param begin_decl begin_type begin_name property set end_name end_type begin_name ps end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name property sets end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name ps end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name read end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name this char end_name begin_init begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name normalized eol end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name num eol end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name at end end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_switch begin_condition begin_expr begin_name this char end_name end_expr end_condition begin_block begin_case begin_expr begin_name ctrlz end_name end_expr begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name c end_name begin_init begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name c end_name begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name at end end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name fix last end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name previous was eol end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name num eol end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name push end_name begin_argument_list begin_argument begin_expr begin_name this char end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name push end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_break end_break end_case begin_case begin_expr begin_operator MINUS end_operator end_expr begin_expr_stmt begin_expr begin_name at end end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name fix last end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name previous was eol end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name num eol end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_break end_break end_case begin_case begin_expr end_expr begin_comment eol was n end_comment begin_expr_stmt begin_expr begin_name num eol end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr end_expr begin_expr_stmt begin_expr begin_name num eol end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name c 1 end_name begin_init begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name c 2 end_name begin_init begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name c 1 end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name c 2 end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment eol was r r n end_comment end_block end_then begin_else begin_if begin_condition begin_expr begin_name c 1 end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment eol was r r handle as two consecutive r and end_comment begin_comment r end_comment begin_expr_stmt begin_expr begin_name num eol end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name push end_name begin_argument_list begin_argument begin_expr begin_name c 2 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name c 1 end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment eol was r n end_comment begin_expr_stmt begin_expr begin_call begin_name push end_name begin_argument_list begin_argument begin_expr begin_name c 2 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment eol was r end_comment begin_expr_stmt begin_expr begin_call begin_name push end_name begin_argument_list begin_argument begin_expr begin_name c 2 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name push end_name begin_argument_list begin_argument begin_expr begin_name c 1 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if end_else end_if end_case begin_default begin_comment fall tru end_comment end_default end_block end_switch begin_if begin_condition begin_expr begin_name num eol end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_while begin_condition begin_expr begin_name num eol end_name begin_operator MMINUS end_operator begin_operator GT end_operator end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name push end_name begin_argument_list begin_argument begin_expr begin_name eol end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name normalized eol end_name begin_operator UNP end_operator begin_name begin_name eol end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_name previous was eol end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name this char end_name begin_operator EQ end_operator begin_call begin_name read end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name at end end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name previous was eol end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_else end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name normalized eol end_name begin_operator MMINUS end_operator end_expr end_expr_stmt end_block end_else end_if begin_return begin_expr begin_name this char end_name end_expr end_return end_block 
 begin_comment specify how end of line characters are to be handled param attr valid values ul li asis leave line endings alone li cr convert line endings to cr li lf convert line endings to lf li crlf convert line endings to crlf ul end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set eol end_name begin_parameter_list begin_param begin_decl begin_type begin_name cr lf end_name end_type begin_name attr end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name filter end_name begin_operator DOT end_operator begin_name set eol end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name fix cr lf filter end_name begin_operator DOT end_operator begin_name cr lf end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name attr end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test pass end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment path to use for classpath param classpath the path to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classpath end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name classpath end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name end_name begin_operator EQ end_operator begin_name classpath end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name classpath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment test a mail message with no to or bcc lines end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test cc only end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name server thread end_name end_type begin_name test mail server end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name server thread end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name thread end_name end_type begin_name server end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name thread end_name begin_argument_list begin_argument begin_expr begin_name test mail server end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name server end_name begin_operator DOT end_operator begin_name start end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name client thread end_name end_type begin_name test mail client end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name client thread end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test mail client end_name begin_operator DOT end_operator begin_name from end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test mail client end_name begin_operator DOT end_operator begin_name cc end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test mail client end_name begin_operator DOT end_operator begin_name set subject end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test mail client end_name begin_operator DOT end_operator begin_name set message end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name thread end_name end_type begin_name client end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name thread end_name begin_argument_list begin_argument begin_expr begin_name test mail client end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name client end_name begin_operator DOT end_operator begin_name start end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name server end_name begin_operator DOT end_operator begin_name join end_name end_name begin_argument_list begin_argument begin_expr begin_operator STAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment 60 s end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name client end_name begin_operator DOT end_operator begin_name join end_name end_name begin_argument_list begin_argument begin_expr begin_operator STAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment a further 30 s end_comment end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name interrupted exception end_name end_type begin_name ie end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name ie end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name test mail server end_name begin_operator DOT end_operator begin_name get result end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name expected result end_name begin_init begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name local end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name local end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name local end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name expected result end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name expected result end_name end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name test mail client end_name begin_operator DOT end_operator begin_name is failed end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name test mail client end_name begin_operator DOT end_operator begin_name get fail message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment sets the destination directory if not set the basedir directory is used instead param dest dir the new dest dir value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set dest dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name dest dir end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name dest dir end_name end_name begin_operator EQ end_operator begin_name dest dir end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 2 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment overridden from zip class to deal with web xml here are cases that can arise not a web xml file add first web xml add remember we added it same web xml again skip alternate web xml warn and skip param file the file to add to the archive param z out the stream to write to param v path the name this entry shall have in the archive param mode the unix permissions to set throws io exception on output error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name zip file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param begin_param begin_decl begin_type begin_name zip output stream end_name end_type begin_name z out end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name v path end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name mode end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_comment if the file being added is web inf web xml we warn if it s end_comment begin_comment not the one specified in the webxml attribute or if end_comment begin_comment it s being added twice meaning the same file is specified end_comment begin_comment by the webxml attribute and in a fileset element end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name v path lower case end_name begin_init begin_expr begin_call begin_name begin_name v path end_name begin_operator DOT end_operator begin_name to lower case end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name english end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment by default we add the file end_comment begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name add file end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name xml descriptor path lc end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name v path lower case end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment a web xml file was found see if it is a duplicate or not end_comment begin_if begin_condition begin_expr begin_name added web xml file end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment a second web xml file so skip it end_comment begin_expr_stmt begin_expr begin_name add file end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_comment check to see if we warn or not end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name file name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name added web xml file end_name end_expr end_argument begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name archive type end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name xml descriptor path end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name file end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name added web xml file end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_comment no added file yet end_comment begin_expr_stmt begin_expr begin_name added web xml file end_name begin_operator EQ end_operator begin_name file end_name end_expr end_expr_stmt begin_comment there is no web xml file so add it end_comment begin_expr_stmt begin_expr begin_name add file end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_comment and remember that we did end_comment begin_expr_stmt begin_expr begin_name deployment descriptor end_name begin_operator EQ end_operator begin_name file end_name end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_if begin_condition begin_expr begin_name add file end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name zip file end_name end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument begin_argument begin_expr begin_name z out end_name end_expr end_argument begin_argument begin_expr begin_name v path end_name end_expr end_argument begin_argument begin_expr begin_name mode end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment deprecated use nested arg instead set the command line arguments for the class param s arguments ant attribute ignore true end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set args end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name get command line end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name create argument end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set line end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment when using this as a custom selector this method will be called it translates each parameter into the appropriate set xxx call param parameters the complete set of parameters for this selector end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set parameters end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name parameter end_name begin_index end_index end_name end_type begin_name parameters end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set parameters end_name end_name begin_argument_list begin_argument begin_expr begin_name parameters end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name parameters end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name parameters end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name paramname end_name begin_init begin_expr begin_name begin_name parameters end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name millis key end_name begin_operator DOT end_operator begin_name equals ignore case end_name end_name begin_argument_list begin_argument begin_expr begin_name paramname end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name set millis end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name long end_name begin_argument_list begin_argument begin_expr begin_name begin_name parameters end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name long value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name number format exception end_name end_type begin_name nfe end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set error end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name parameters end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name datetime key end_name begin_operator DOT end_operator begin_name equals ignore case end_name end_name begin_argument_list begin_argument begin_expr begin_name paramname end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set datetime end_name begin_argument_list begin_argument begin_expr begin_name begin_name parameters end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name checkdirs key end_name begin_operator DOT end_operator begin_name equals ignore case end_name end_name begin_argument_list begin_argument begin_expr begin_name paramname end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set checkdirs end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name to boolean end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name parameters end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name granularity key end_name begin_operator DOT end_operator begin_name equals ignore case end_name end_name begin_argument_list begin_argument begin_expr begin_name paramname end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name set granularity end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name integer end_name begin_argument_list begin_argument begin_expr begin_name begin_name parameters end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name int value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name number format exception end_name end_type begin_name nfe end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set error end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name parameters end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name when key end_name begin_operator DOT end_operator begin_name equals ignore case end_name end_name begin_argument_list begin_argument begin_expr begin_name paramname end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set when end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name time comparison end_name begin_argument_list begin_argument begin_expr begin_name begin_name parameters end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name pattern key end_name begin_operator DOT end_operator begin_name equals ignore case end_name end_name begin_argument_list begin_argument begin_expr begin_name paramname end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set pattern end_name begin_argument_list begin_argument begin_expr begin_name begin_name parameters end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name set error end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name paramname end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_block end_for end_block end_then end_if end_block 
 begin_comment get the redirector non null between invocations of link begin execution and link end execution return a redirector or null end_comment begin_type begin_specifier end_specifier begin_name redirector element end_name end_type begin_name get redirector end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name redirector end_name end_expr end_return end_block 
 begin_comment controls whether the destination ja rs are written out in the destination directory with the same hierarchical structure from which the deployment descriptors have been read if this is set to true the generated ejb jars are written into the root of the destination directory otherwise they are written out in the same relative position as the deployment descriptors in the descriptor directory param in value the new value of the flatdestdir flag end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set flatdestdir end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name in value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name config end_name begin_operator DOT end_operator begin_name flat dest dir end_name end_name begin_operator EQ end_operator begin_name in value end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test is legal character end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name is legal character end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name is legal character end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name is legal character end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name is legal character end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name is legal character end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name is legal character end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name is legal character end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name is legal character end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name is legal character end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name is legal character end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name is legal character end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name is legal character end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment launch this execution through the vm where possible rather than through the os s shell in some cases and operating systems using the shell will allow the shell to perform additional processing such as associating an executable with a script etc param use vm launcher true if exec should launch through the vm false if the shell should be used to launch the command end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set vm launcher end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name use vm launcher end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name use vm launcher end_name end_name begin_operator EQ end_operator begin_name use vm launcher end_name end_expr end_expr_stmt end_block 
 begin_comment composes a stream from a string param source the string to read from must not be code null code end_comment begin_specifier end_specifier begin_name string input stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name source end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name string reader end_name begin_argument_list begin_argument begin_expr begin_name source end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment shorthand method to set the message param message message body of this email end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set message end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name message end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name message end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name message end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name message end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name message end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get buildfile end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name buildfile end_name end_expr end_return end_block 
 begin_specifier end_specifier begin_name antlib test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructs a code file code uri that represents the external form of the given pathname p will be an absolute uri if the given path is absolute p p this code encodes non ascii characters too p p the coding of the output is the same as what file to uri to ascii string produces p see a href http www w 3 org tr xml 11 dt sysid dt sysid a which makes some mention of how characters not supported by uri reference syntax should be escaped param path the path in the local file system return the uri version of the local path since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to uri end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name path end_name end_decl end_param end_parameter_list begin_block begin_comment 8031 first try java 1 4 end_comment begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name uri clazz end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name uri clazz end_name begin_operator EQ end_operator begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment ok java 1 3 end_comment end_block end_catch end_try begin_if begin_condition begin_expr begin_name uri clazz end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name path end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get absolute file end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name lang end_name begin_operator DOT end_operator begin_name reflect end_name begin_operator DOT end_operator begin_name method end_name end_name end_type begin_name to uri method end_name begin_init begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name get method end_name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name class end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name uri obj end_name begin_init begin_expr begin_call begin_name begin_name to uri method end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block end_block end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name lang end_name begin_operator DOT end_operator begin_name reflect end_name begin_operator DOT end_operator begin_name method end_name end_name end_type begin_name to ascii string method end_name begin_init begin_expr begin_call begin_name begin_name uri clazz end_name begin_operator DOT end_operator begin_name get method end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name class end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name to ascii string method end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_name uri obj end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block end_block end_expr end_argument end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment reflection problems should not happen debug end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name print stack trace end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name is dir end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name path end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name is directory end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name sb end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name path end_name begin_operator EQ end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name path end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment add an extra slash for filesystems with drive specifiers end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name path end_name begin_operator EQ end_operator begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name locator end_name begin_operator DOT end_operator begin_name encode uri end_name end_name begin_argument_list begin_argument begin_expr begin_name path end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name unsupported encoding exception end_name end_type begin_name exc end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name exc end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_if begin_condition begin_expr begin_name is dir end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment append the contents of the other path instance to this param other a code path code to be added to the path end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name append end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name other end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name other end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name add end_name begin_argument_list begin_argument begin_expr begin_name other end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment append all the arguments to the tail of a supplied list param list the list of arguments since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add arguments to list end_name begin_parameter_list begin_param begin_decl begin_type begin_name list iterator end_name end_type begin_name list end_name end_decl end_param end_parameter_list begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name arguments end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name argument end_name end_type begin_name arg end_name begin_init begin_expr begin_operator LPAR end_operator begin_name argument end_name begin_operator RPAR end_operator begin_call begin_name begin_name arguments end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name s end_name begin_init begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get parts end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name s end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name j end_name begin_operator LT end_operator begin_name begin_name s end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name j end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name list end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name s end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if end_block end_for end_block 
 begin_comment returns the vector of words which must be contained within a line read from the original stream in order for it to match this filter return the vector of words which must be contained within a line read from the original stream in order for it to match this filter the returned object is live in other words changes made to the returned object are mirrored in the filter end_comment begin_type begin_specifier end_specifier begin_name vector end_name end_type begin_name get contains end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name contains end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test use tomorrow end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment control deprecation infromation param b if true do not include deprecated information end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set nodeprecated end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add arg if end_name begin_argument_list begin_argument begin_expr begin_name b end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment implementation of org apache tools ant taskdefs execute stream handler interface end_comment begin_comment throws io exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name start end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block end_block 
 begin_comment indicates whether the task supports a given attribute name param attribute name the name of the attribute return true if the attribute is supported by the script end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is attribute supported end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name attribute name end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name attribute set end_name begin_operator DOT end_operator begin_name contains end_name end_name begin_argument_list begin_argument begin_expr begin_name attribute name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment the j unit setup method end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment control generation of the navigation bar param b if true do not generate navigation bar end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set nonavbar end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add arg if end_name begin_argument_list begin_argument begin_expr begin_name b end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment testcases for the cache implementations end_comment begin_comment propertycache must have a set cachefile attribute the default in modified selector cache properties is set by the selector end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test propcache invalid end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name cache end_name end_type begin_name cache end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name propertiesfile cache end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name cache end_name begin_operator DOT end_operator begin_name is valid end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_then end_if end_block 
 begin_comment construct an attribute by parsing a line from the manifest param line the line containing the attribute name and value throws manifest exception if the line is not valid end_comment begin_specifier end_specifier begin_name attribute end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name line end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name manifest exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name parse end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment does replacement on the given string with token matching this uses the defined begintoken and endtoken values which default to for both param line the line to process the tokens in return the string with the tokens replaced end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name replace tokens end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name line end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name replaced line end_name begin_init begin_expr begin_name line end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name filter sets end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name filter set end_name end_type begin_name filter set end_name begin_init begin_expr begin_operator LPAR end_operator begin_name filter set end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name replaced line end_name begin_operator EQ end_operator begin_call begin_name begin_name filter set end_name begin_operator DOT end_operator begin_name replace tokens end_name end_name begin_argument_list begin_argument begin_expr begin_name replaced line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_name replaced line end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 5 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect name address end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name email address end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment see directory scanner get excluded directories end_comment begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get excluded directories end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name assumed java version end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name is java version end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name java 1 2 end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name javac 12 end_name end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name is java version end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name java 1 3 end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name javac 13 end_name end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name is java version end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name java 1 4 end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name javac 14 end_name end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name is java version end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name java 1 5 end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name javac 15 end_name end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name is java version end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name java 1 6 end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name javac 16 end_name end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr begin_name classic end_name end_expr end_return end_block end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_block 
 begin_comment since i as doesn t generate a generic jar as part of its processing this attribute is ignored and a warning message is displayed to the user param in string the string to use as the suffix this parameter is ignored end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set generic jar suffix end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name in string end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
