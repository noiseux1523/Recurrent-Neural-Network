 begin_comment end_comment begin_comment get directory entry method end_comment begin_type begin_specifier end_specifier begin_name directory entry end_name end_type begin_name get directory entry end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name session end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name path end_name end_decl end_param begin_param begin_decl begin_type begin_name component end_name end_type begin_name comp end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name favorites entry end_name begin_argument_list begin_argument begin_expr begin_name path end_name end_expr end_argument begin_argument begin_expr begin_name begin_name vfs end_name begin_operator DOT end_operator begin_name directory entry end_name begin_operator DOT end_operator begin_name directory end_name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name class end_name end_type begin_name load source class end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name file name end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name in end_name begin_init begin_expr begin_call begin_name get resource as stream end_name begin_argument_list begin_argument begin_expr begin_name file name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name in end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_return begin_expr end_expr end_return end_then end_if begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name file name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name declaring interpreter end_name begin_operator DOT end_operator begin_name eval end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name input stream reader end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name eval error end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_try begin_block begin_return begin_expr begin_call begin_name plain class for name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block end_catch end_try end_block 
 begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name eval end_name begin_parameter_list begin_param begin_decl begin_type begin_name call stack end_name end_type begin_name callstack end_name end_decl end_param begin_param begin_decl begin_type begin_name interpreter end_name end_type begin_name interpreter end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name eval error end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name bsh block end_name end_type begin_name try block end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name bsh block end_name begin_operator RPAR end_operator begin_call begin_name jjt get child end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name catch params end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name catch blocks end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name nchild end_name begin_init begin_expr begin_call begin_name jjt get num children end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name node end_name end_type begin_name node end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_operator LPAR end_operator begin_name i end_name begin_operator LT end_operator begin_name nchild end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name node end_name begin_operator EQ end_operator begin_call begin_name jjt get child end_name begin_argument_list begin_argument begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_name bsh formal parameter end_name begin_operator RPAR end_operator end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name catch params end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name node end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name catch blocks end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name jjt get child end_name begin_argument_list begin_argument begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name node end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_while begin_comment finaly block end_comment begin_decl_stmt begin_decl begin_type begin_name bsh block end_name end_type begin_name finally block end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name node end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_expr_stmt begin_expr begin_name finally block end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name bsh block end_name begin_operator RPAR end_operator begin_name node end_name end_expr end_expr_stmt end_then end_if begin_decl_stmt begin_decl begin_type begin_name target error end_name end_type begin_name target end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name throwable end_name end_type begin_name thrown end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name ret end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment evaluate the contents of the try block and catch any resulting target errors generated by the script we save the callstack depth and if an exception is thrown we pop back to that depth before contiuing the exception short circuited any intervening method context pops note we the stack info what do we do with it append to exception message end_comment begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name callstack depth end_name begin_init begin_expr begin_call begin_name begin_name callstack end_name begin_operator DOT end_operator begin_name depth end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name ret end_name begin_operator EQ end_operator begin_call begin_name begin_name try block end_name begin_operator DOT end_operator begin_name eval end_name end_name begin_argument_list begin_argument begin_expr begin_name callstack end_name end_expr end_argument begin_argument begin_expr begin_name interpreter end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name target error end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name target end_name begin_operator EQ end_operator begin_name e end_name end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name stack info end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name callstack end_name begin_operator DOT end_operator begin_name depth end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_name callstack depth end_name end_expr end_condition begin_expr_stmt begin_expr begin_name stack info end_name begin_operator UNP end_operator begin_operator PLUS end_operator begin_call begin_name begin_name callstack end_name begin_operator DOT end_operator begin_name pop end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_expr_stmt end_while end_block end_catch end_try begin_comment unwrap the target error end_comment begin_if begin_condition begin_expr begin_name target end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_expr_stmt begin_expr begin_name thrown end_name begin_operator EQ end_operator begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name get target end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_then end_if begin_comment if we have an exception find a catch end_comment begin_if begin_condition begin_expr begin_name thrown end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name n end_name begin_init begin_expr begin_call begin_name begin_name catch params end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_expr begin_name i end_name begin_operator EQ end_operator end_expr end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name n end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_comment get catch block end_comment begin_decl_stmt begin_decl begin_type begin_name bsh formal parameter end_name end_type begin_name fp end_name begin_init begin_expr begin_operator LPAR end_operator begin_name bsh formal parameter end_name begin_operator RPAR end_operator begin_call begin_name begin_name catch params end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment should cache this subject to classloader change message end_comment begin_comment evaluation of the formal parameter simply resolves its end_comment begin_comment type via the specified namespace it doesn t modify the end_comment begin_comment namespace end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name fp end_name begin_operator DOT end_operator begin_name eval end_name end_name begin_argument_list begin_argument begin_expr begin_name callstack end_name end_expr end_argument begin_argument begin_expr begin_name interpreter end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name begin_name fp end_name begin_operator DOT end_operator begin_name type end_name end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name interpreter end_name begin_operator DOT end_operator begin_name get strict java end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name eval error end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_name callstack end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_then end_if begin_comment if the param is typed check assignability end_comment begin_if begin_condition begin_expr begin_name begin_name fp end_name begin_operator DOT end_operator begin_name type end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_try begin_block begin_expr_stmt begin_expr begin_name thrown end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name throwable end_name begin_operator RPAR end_operator begin_call begin_name begin_name types end_name begin_operator DOT end_operator begin_name get assignable form end_name end_name begin_argument_list begin_argument begin_expr begin_name thrown end_name end_expr end_argument begin_argument begin_expr begin_name begin_name fp end_name begin_operator DOT end_operator begin_name type end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name util eval error end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment catch the mismatch and continue to try the next note this is innefficient should have an is assignable from that doesn t throw end_comment begin_continue end_continue end_block end_catch end_try end_then end_if begin_comment found match execute catch block end_comment begin_decl_stmt begin_decl begin_type begin_name bsh block end_name end_type begin_name cb end_name begin_init begin_expr begin_call begin_name bsh block end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name catch blocks end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment prepare to execute the block end_comment begin_comment we must create a new block name space to hold the catch end_comment begin_comment parameter and swap it on the stack after initializing it end_comment begin_decl_stmt begin_decl begin_type begin_name name space end_name end_type begin_name enclosing name space end_name begin_init begin_expr begin_call begin_name begin_name callstack end_name begin_operator DOT end_operator begin_name top end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name block name space end_name end_type begin_name cb name space end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name block name space end_name begin_argument_list begin_argument begin_expr begin_name enclosing name space end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_if begin_condition begin_expr begin_name begin_name fp end_name begin_operator DOT end_operator begin_name type end_name end_name begin_operator EQT end_operator begin_name begin_name bsh formal parameter end_name begin_operator DOT end_operator begin_name untyped end_name end_name end_expr end_condition begin_then begin_comment set an untyped variable directly in the block end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cb name space end_name begin_operator DOT end_operator begin_name set block variable end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name fp end_name begin_operator DOT end_operator begin_name name end_name end_name end_expr end_argument begin_argument begin_expr begin_name thrown end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_then begin_else begin_comment set a typed variable directly in the block end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cb name space end_name begin_operator DOT end_operator begin_name set typed variable end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name fp end_name begin_operator DOT end_operator begin_name name end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name fp end_name begin_operator DOT end_operator begin_name type end_name end_name end_expr end_argument begin_argument begin_expr begin_name thrown end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_else end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name util eval error end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name interpreter error end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_comment put cb name space on the top of the stack end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name callstack end_name begin_operator DOT end_operator begin_name swap end_name end_name begin_argument_list begin_argument begin_expr begin_name cb name space end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name ret end_name begin_operator EQ end_operator begin_call begin_name begin_name cb end_name begin_operator DOT end_operator begin_name eval end_name end_name begin_argument_list begin_argument begin_expr begin_name callstack end_name end_expr end_argument begin_argument begin_expr begin_name interpreter end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_comment put it back end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name callstack end_name begin_operator DOT end_operator begin_name swap end_name end_name begin_argument_list begin_argument begin_expr begin_name enclosing name space end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try begin_expr_stmt begin_expr begin_name target end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_comment handled target end_comment begin_break end_break end_block end_for end_block end_then end_if begin_comment evaluate finally block end_comment begin_if begin_condition begin_expr begin_name finally block end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_expr_stmt begin_expr begin_name ret end_name begin_operator EQ end_operator begin_call begin_name begin_name finally block end_name begin_operator DOT end_operator begin_name eval end_name end_name begin_argument_list begin_argument begin_expr begin_name callstack end_name end_expr end_argument begin_argument begin_expr begin_name interpreter end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_then end_if begin_comment exception fell through throw it upward end_comment begin_if begin_condition begin_expr begin_name target end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_throw begin_expr begin_name target end_name end_expr end_throw end_then end_if begin_if begin_condition begin_expr begin_name ret end_name begin_operator UNP end_operator begin_name return control end_name end_expr end_condition begin_then begin_return begin_expr begin_name ret end_name end_expr end_return end_then begin_else begin_return begin_expr begin_name begin_name primitive end_name begin_operator DOT end_operator begin_name void end_name end_name end_expr end_return end_else end_if end_block 
 begin_comment initialize an instance of the class this method is called from the generated class constructor to evaluate the instance initializer and scripted constructor in the instance namespace end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name init instance end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name instance end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name class name end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name object end_name begin_index end_index end_name end_type begin_name args end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name class end_name begin_index end_index end_type begin_name sig end_name begin_init begin_expr begin_call begin_name begin_name types end_name begin_operator DOT end_operator begin_name get types end_name end_name begin_argument_list begin_argument begin_expr begin_name args end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name call stack end_name end_type begin_name callstack end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name call stack end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name interpreter end_name end_type begin_name interpreter end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name name space end_name end_type begin_name instance name space end_name end_decl end_decl_stmt begin_comment check to see if the instance has already been initialized end_comment begin_comment the case if using a this alternate constuctor end_comment begin_decl_stmt begin_decl begin_type begin_name this end_name end_type begin_name instance this end_name begin_init begin_expr begin_call begin_name get class instance this end_name begin_argument_list begin_argument begin_expr begin_name instance end_name end_expr end_argument begin_argument begin_expr begin_name class name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name instance this end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment create the instance this namespace set it on the object end_comment begin_comment instance and invoke the instance initializer end_comment begin_comment get the static this reference from the proto instance end_comment begin_decl_stmt begin_decl begin_type begin_name this end_name end_type begin_name class static this end_name begin_init begin_expr begin_call begin_name get class static this end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name instance end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name class name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name interpreter end_name begin_operator EQ end_operator begin_name begin_name class static this end_name begin_operator DOT end_operator begin_name declaring interpreter end_name end_name end_expr end_expr_stmt begin_comment get the instance initializer block from the static this end_comment begin_decl_stmt begin_decl begin_type begin_name bsh block end_name end_type begin_name instance init block end_name end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name instance init block end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name bsh block end_name begin_operator RPAR end_operator begin_call begin_name begin_name class static this end_name begin_operator DOT end_operator begin_name get name space end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get variable end_name begin_argument_list begin_argument begin_expr begin_name bshinit end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name interpreter error end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_comment create the instance namespace end_comment begin_expr_stmt begin_expr begin_name instance name space end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name name space end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name class static this end_name begin_operator DOT end_operator begin_name get name space end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name class name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name instance name space end_name begin_operator DOT end_operator begin_name is class end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_comment set the instance this reference on the instance end_comment begin_expr_stmt begin_expr begin_name instance this end_name begin_operator EQ end_operator begin_call begin_name begin_name instance name space end_name begin_operator DOT end_operator begin_name get this end_name end_name begin_argument_list begin_argument begin_expr begin_name interpreter end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name lhs end_name end_type begin_name lhs end_name begin_init begin_expr begin_call begin_name begin_name reflect end_name begin_operator DOT end_operator begin_name get lhs object field end_name end_name begin_argument_list begin_argument begin_expr begin_name instance end_name end_expr end_argument begin_argument begin_expr begin_name bshthis end_name begin_operator PLUS end_operator begin_name class name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name lhs end_name begin_operator DOT end_operator begin_name assign end_name end_name begin_argument_list begin_argument begin_expr begin_name instance this end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_comment strict end_comment end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name interpreter error end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_comment give the instance space its object import end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name instance name space end_name begin_operator DOT end_operator begin_name set class instance end_name end_name begin_argument_list begin_argument begin_expr begin_name instance end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name callstack end_name begin_operator DOT end_operator begin_name push end_name end_name begin_argument_list begin_argument begin_expr begin_name instance name space end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment evaluate the instance portion of the block in it end_comment begin_try begin_block begin_comment evaluate the initializer block end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name instance init block end_name begin_operator DOT end_operator begin_name eval block end_name end_name begin_argument_list begin_argument begin_expr begin_name callstack end_name end_expr end_argument begin_argument begin_expr begin_name interpreter end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_comment override end_comment begin_argument begin_expr begin_name begin_name class generator impl end_name begin_operator DOT end_operator begin_name class node filter end_name begin_operator DOT end_operator begin_name classinstance end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name interpreter error end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name begin_name callstack end_name begin_operator DOT end_operator begin_name pop end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment the object instance has already been initialzed by another end_comment begin_comment constructor fall through to invoke the constructor body below end_comment begin_expr_stmt begin_expr begin_name interpreter end_name begin_operator EQ end_operator begin_name begin_name instance this end_name begin_operator DOT end_operator begin_name declaring interpreter end_name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name instance name space end_name begin_operator EQ end_operator begin_call begin_name begin_name instance this end_name begin_operator DOT end_operator begin_name get name space end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_comment invoke the constructor method from the instance this end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name constructor name end_name begin_init begin_expr begin_call begin_name get base name end_name begin_argument_list begin_argument begin_expr begin_name class name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_comment find the constructor now in the instance namespace end_comment begin_decl_stmt begin_decl begin_type begin_name bsh method end_name end_type begin_name constructor end_name begin_init begin_expr begin_call begin_name begin_name instance name space end_name begin_operator DOT end_operator begin_name get method end_name end_name begin_argument_list begin_argument begin_expr begin_name constructor name end_name end_expr end_argument begin_argument begin_expr begin_name sig end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_comment declared only end_comment end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment if args we must have constructor end_comment begin_if begin_condition begin_expr begin_name begin_name args end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator begin_operator UNP end_operator begin_name constructor end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name interpreter error end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name class name end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_then end_if begin_comment evaluate the constructor end_comment begin_if begin_condition begin_expr begin_name constructor end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_expr_stmt begin_expr begin_call begin_name begin_name constructor end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_name args end_name end_expr end_argument begin_argument begin_expr begin_name interpreter end_name end_expr end_argument begin_argument begin_expr begin_name callstack end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_comment caller info end_comment begin_argument begin_expr end_expr end_argument begin_comment override name space end_comment end_argument_list end_call end_expr end_expr_stmt end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name e end_name begin_operator UNP end_operator begin_name target error end_name end_expr end_condition begin_then begin_expr_stmt begin_expr begin_name e end_name begin_operator EQ end_operator begin_call begin_name exception end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name target error end_name begin_operator RPAR end_operator begin_name e end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get target end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_then end_if begin_if begin_condition begin_expr begin_name e end_name begin_operator UNP end_operator begin_name invocation target exception end_name end_expr end_condition begin_then begin_expr_stmt begin_expr begin_name e end_name begin_operator EQ end_operator begin_call begin_name exception end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name invocation target exception end_name begin_operator RPAR end_operator begin_name e end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get target exception end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name print stack trace end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name interpreter error end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment evaluate text in the interpreter at url capturing output into output and returning a possible integer return value end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name int end_name end_type begin_name eval end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name url end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name text end_name end_decl end_param begin_param begin_decl begin_type begin_name string buffer end_name end_type begin_name output end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name return value end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name url end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name return value end_name begin_operator EQ end_operator begin_call begin_name do http end_name begin_argument_list begin_argument begin_expr begin_name url end_name end_expr end_argument begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name url end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name return value end_name begin_operator EQ end_operator begin_call begin_name do bsh end_name begin_argument_list begin_argument begin_expr begin_name url end_name end_expr end_argument begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name io exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_else end_if end_else end_if begin_try begin_block begin_return begin_expr begin_call begin_name begin_name integer end_name begin_operator DOT end_operator begin_name parse int end_name end_name begin_argument_list begin_argument begin_expr begin_name return value end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block end_catch end_try end_block 
 begin_comment accept method end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name accept end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name pathname end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name pathname end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_return begin_expr end_expr end_return end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name pathname end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_return begin_expr end_expr end_return end_then end_if begin_comment try mrjos type type mrj file utils get file type pathname mrjos type creator mrj file utils get file creator pathname if type equals new mrjos type osas return true else if type equals new mrjos type appl creator equals new mrjos type dplt return true catch exception e return false end_comment begin_return begin_expr end_expr end_return end_block 
 begin_comment end_comment begin_comment get table cell renderer component method end_comment begin_type begin_specifier end_specifier begin_name component end_name end_type begin_name get table cell renderer component end_name begin_parameter_list begin_param begin_decl begin_type begin_name j table end_name end_type begin_name table end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name value end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name is selected end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name cell has focus end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name row end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name col end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name value end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name syntax style end_name end_type begin_name style end_name begin_init begin_expr begin_operator LPAR end_operator begin_name syntax style end_name begin_operator RPAR end_operator begin_name value end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name set foreground end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name style end_name begin_operator DOT end_operator begin_name get foreground color end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name style end_name begin_operator DOT end_operator begin_name get background color end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_expr_stmt begin_expr begin_call begin_name set background end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name style end_name begin_operator DOT end_operator begin_name get background color end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name set background end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name j edit end_name begin_operator DOT end_operator begin_name get color property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name set font end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name style end_name begin_operator DOT end_operator begin_name get font end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name set border end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name cell has focus end_name begin_operator RPAR end_operator begin_operator QM end_operator begin_call begin_name begin_name ui manager end_name begin_operator DOT end_operator begin_name get border end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DP end_operator begin_name begin_name syntax hilite option pane end_name begin_operator DOT end_operator begin_name no focus border end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name this end_name end_expr end_return end_block 
 begin_comment end_comment begin_comment update wrap settings method end_comment begin_type begin_name void end_name end_type begin_name update wrap settings end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name wrap end_name begin_init begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name get string property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name soft wrap end_name begin_operator EQ end_operator begin_call begin_name begin_name wrap end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name begin_name text area end_name begin_operator DOT end_operator begin_name max line len end_name end_name begin_operator LE end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name soft wrap end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name wrap margin end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name char end_name begin_index end_index end_type begin_name foo end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name char end_name begin_index begin_expr begin_name begin_name text area end_name begin_operator DOT end_operator begin_name max line len end_name end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name foo end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name begin_name foo end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_for begin_decl_stmt begin_decl begin_type begin_name text area painter end_name end_type begin_name painter end_name begin_init begin_expr begin_call begin_name begin_name text area end_name begin_operator DOT end_operator begin_name get painter end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name wrap margin end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name int end_name begin_operator RPAR end_operator begin_call begin_name begin_name painter end_name begin_operator DOT end_operator begin_name get font end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get string bounds end_name begin_argument_list begin_argument begin_expr begin_name foo end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name foo end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name painter end_name begin_operator DOT end_operator begin_name get font render context end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get width end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_type begin_name boolean end_name end_type begin_name match end_name begin_parameter_list begin_param begin_decl begin_type begin_name char indexed end_name end_type begin_name input end_name end_decl end_param begin_param begin_decl begin_type begin_name re match end_name end_type begin_name mymatch end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name ch end_name begin_init begin_expr begin_call begin_name begin_name input end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name mymatch end_name begin_operator DOT end_operator begin_name index end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name ch end_name begin_operator EQT end_operator begin_name begin_name char indexed end_name begin_operator DOT end_operator begin_name out of bounds end_name end_name end_expr end_condition begin_then begin_return begin_expr end_expr end_return end_then end_if begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name retval end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_switch begin_condition begin_expr begin_name type end_name end_expr end_condition begin_block begin_case begin_expr begin_name alnum end_name end_expr begin_comment note that there is some debate over whether should be included end_comment begin_expr_stmt begin_expr begin_name retval end_name begin_operator EQ end_operator begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name is letter or digit end_name end_name begin_argument_list begin_argument begin_expr begin_name ch end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator LPAR end_operator begin_name ch end_name begin_operator EQT end_operator begin_operator RPAR end_operator end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name alpha end_name end_expr begin_expr_stmt begin_expr begin_name retval end_name begin_operator EQ end_operator begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name is letter end_name end_name begin_argument_list begin_argument begin_expr begin_name ch end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name blank end_name end_expr begin_expr_stmt begin_expr begin_name retval end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name ch end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name ch end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator RPAR end_operator end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name cntrl end_name end_expr begin_expr_stmt begin_expr begin_name retval end_name begin_operator EQ end_operator begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name is iso control end_name end_name begin_argument_list begin_argument begin_expr begin_name ch end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name digit end_name end_expr begin_expr_stmt begin_expr begin_name retval end_name begin_operator EQ end_operator begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name is digit end_name end_name begin_argument_list begin_argument begin_expr begin_name ch end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name graph end_name end_expr begin_expr_stmt begin_expr begin_name retval end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name is whitespace end_name end_name begin_argument_list begin_argument begin_expr begin_name ch end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name is iso control end_name end_name begin_argument_list begin_argument begin_expr begin_name ch end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator RPAR end_operator end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name lower end_name end_expr begin_expr_stmt begin_expr begin_name retval end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name insens end_name begin_operator UNP end_operator begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name is letter end_name end_name begin_argument_list begin_argument begin_expr begin_name ch end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name is lower case end_name end_name begin_argument_list begin_argument begin_expr begin_name ch end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name print end_name end_expr begin_expr_stmt begin_expr begin_name retval end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name is whitespace end_name end_name begin_argument_list begin_argument begin_expr begin_name ch end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name is iso control end_name end_name begin_argument_list begin_argument begin_expr begin_name ch end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name ch end_name begin_operator EQT end_operator begin_operator RPAR end_operator end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name punct end_name end_expr begin_expr_stmt begin_expr begin_name retval end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr begin_name ch end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator MINUS end_operator begin_operator RPAR end_operator end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name space end_name end_expr begin_expr_stmt begin_expr begin_name retval end_name begin_operator EQ end_operator begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name is whitespace end_name end_name begin_argument_list begin_argument begin_expr begin_name ch end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name upper end_name end_expr begin_expr_stmt begin_expr begin_name retval end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name insens end_name begin_operator UNP end_operator begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name is letter end_name end_name begin_argument_list begin_argument begin_expr begin_name ch end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name is upper case end_name end_name begin_argument_list begin_argument begin_expr begin_name ch end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_expr_stmt begin_break end_break end_case begin_case begin_expr begin_name xdigit end_name end_expr begin_expr_stmt begin_expr begin_name retval end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name is digit end_name end_name begin_argument_list begin_argument begin_expr begin_name ch end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr begin_name ch end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator MINUS end_operator begin_operator RPAR end_operator begin_operator RPAR end_operator end_expr end_expr_stmt begin_break end_break end_case end_block end_switch begin_if begin_condition begin_expr begin_name negated end_name end_expr end_condition begin_then begin_expr_stmt begin_expr begin_name retval end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_name retval end_name end_expr end_expr_stmt end_then end_if begin_if begin_condition begin_expr begin_name retval end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_operator PPLUS end_operator begin_name begin_name mymatch end_name begin_operator DOT end_operator begin_name index end_name end_name end_expr end_expr_stmt begin_return begin_expr begin_call begin_name next end_name begin_argument_list begin_argument begin_expr begin_name input end_name end_expr end_argument begin_argument begin_expr begin_name mymatch end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then begin_else begin_return begin_expr end_expr end_return end_else end_if end_block 
 begin_comment end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name lhs end_name end_type begin_name to lhs end_name begin_parameter_list begin_param begin_decl begin_type begin_name call stack end_name end_type begin_name callstack end_name end_decl end_param begin_param begin_decl begin_type begin_name interpreter end_name end_type begin_name interpreter end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name util eval error end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name reset end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name lhs end_name end_type begin_name lhs end_name end_decl end_decl_stmt begin_comment simple non compound variable assignment e g x 5 end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name is compound end_name begin_argument_list begin_argument begin_expr begin_name eval name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name eval name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name util eval error end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_then end_if begin_comment interpreter debug simple var lhs end_comment begin_expr_stmt begin_expr begin_name lhs end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name lhs end_name begin_argument_list begin_argument begin_expr begin_name namespace end_name end_expr end_argument begin_argument begin_expr begin_name eval name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_comment bubble up if allowed end_comment end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name lhs end_name end_expr end_return end_block end_then end_if begin_comment field e g foo bar 5 end_comment begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name obj end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_while begin_condition begin_expr begin_name eval name end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name is compound end_name begin_argument_list begin_argument begin_expr begin_name eval name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name obj end_name begin_operator EQ end_operator begin_call begin_name consume next object field end_name begin_argument_list begin_argument begin_expr begin_name callstack end_name end_expr end_argument begin_argument begin_expr begin_name interpreter end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_comment forcclass end_comment begin_argument begin_expr end_expr end_argument begin_comment autoallocthis end_comment end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name util eval error end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name util eval error end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_comment finished eval and its a class end_comment begin_if begin_condition begin_expr begin_name eval name end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name obj end_name begin_operator UNP end_operator begin_name class identifier end_name end_expr end_condition begin_then begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name util eval error end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_then end_if begin_if begin_condition begin_expr begin_name obj end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name util eval error end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_then end_if begin_comment e g this x 5 or some this type x 5 end_comment begin_if begin_condition begin_expr begin_name obj end_name begin_operator UNP end_operator begin_name this end_name end_expr end_condition begin_then begin_block begin_comment dissallow assignment to magic fields end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name eval name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name eval name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name eval name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name eval name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name util eval error end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name eval name end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name interpreter end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment if this was a literal super reference then we allow recursion in setting the variable to get the normal effect of finding the nearest definition starting at the super scope on any other resolution qualified by a this type reference we want to set the variable directly in that scope e g this x 5 or some this type x 5 in the old scoping rules super didn t do this end_comment begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name local var end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name last eval name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_operator UNP end_operator begin_call begin_name lhs end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name this end_name begin_operator RPAR end_operator begin_name obj end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_name namespace end_name end_expr end_argument begin_argument begin_expr begin_name eval name end_name end_expr end_argument begin_argument begin_expr begin_name local var end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name eval name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_if begin_condition begin_expr begin_name obj end_name begin_operator UNP end_operator begin_name class identifier end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name clas end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name class identifier end_name begin_operator RPAR end_operator begin_name obj end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get target class end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name lhs end_name begin_operator EQ end_operator begin_call begin_name begin_name reflect end_name begin_operator DOT end_operator begin_name get lhs static field end_name end_name begin_argument_list begin_argument begin_expr begin_name clas end_name end_expr end_argument begin_argument begin_expr begin_name eval name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name lhs end_name end_expr end_return end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name lhs end_name begin_operator EQ end_operator begin_call begin_name begin_name reflect end_name begin_operator DOT end_operator begin_name get lhs object field end_name end_name begin_argument_list begin_argument begin_expr begin_name obj end_name end_expr end_argument begin_argument begin_expr begin_name eval name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name lhs end_name end_expr end_return end_block end_else end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name reflect error end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name util eval error end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_then end_if begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name interpreter error end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_comment end_comment begin_comment go to selected node method end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name go to selected node end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name tree path end_name end_type begin_name path end_name begin_init begin_expr begin_call begin_name begin_name result tree end_name begin_operator DOT end_operator begin_name get selection path end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name path end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_return end_return end_then end_if begin_decl_stmt begin_decl begin_type begin_name default mutable tree node end_name end_type begin_name node end_name begin_init begin_expr begin_operator LPAR end_operator begin_name default mutable tree node end_name begin_operator RPAR end_operator begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name get last path component end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name value end_name begin_init begin_expr begin_call begin_name begin_name node end_name begin_operator DOT end_operator begin_name get user object end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name node end_name begin_operator DOT end_operator begin_name get parent end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_name result tree root end_name end_expr end_condition begin_then begin_block begin_comment do nothing if clicked foo showing n occurrences in m files end_comment end_block end_then begin_else begin_if begin_condition begin_expr begin_name value end_name begin_operator UNP end_operator begin_name string end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name buffer end_name end_type begin_name buffer end_name begin_init begin_expr begin_call begin_name begin_name j edit end_name begin_operator DOT end_operator begin_name open file end_name end_name begin_argument_list begin_argument begin_expr begin_name view end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name buffer end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_return end_return end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name view end_name begin_operator DOT end_operator begin_name go to buffer end_name end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name swing utilities end_name begin_operator DOT end_operator begin_name invoke later end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_class begin_super begin_name runnable end_name end_super begin_argument_list end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name run end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name result tree end_name begin_operator DOT end_operator begin_name request focus end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_function end_block end_class end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name value end_name begin_operator UNP end_operator begin_name hyper search result end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name hyper search result end_name begin_operator RPAR end_operator begin_name value end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name go to end_name begin_argument_list begin_argument begin_expr begin_name view end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if end_else end_if end_block 
 begin_comment memory status constructor end_comment begin_specifier end_specifier begin_name memory status end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name font end_name end_type begin_name font end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name j label end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get font end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment font font ui manager get font label font end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name memory status end_name begin_operator DOT end_operator begin_name this end_name begin_operator DOT end_operator begin_name set font end_name end_name begin_argument_list begin_argument begin_expr begin_name font end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name font render context end_name end_type begin_name frc end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name font render context end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name rectangle 2 d end_name end_type begin_name bounds end_name begin_init begin_expr begin_call begin_name begin_name font end_name begin_operator DOT end_operator begin_name get string bounds end_name end_name begin_argument_list begin_argument begin_expr begin_name memory test str end_name end_expr end_argument begin_argument begin_expr begin_name frc end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name dimension end_name end_type begin_name dim end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name dimension end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name int end_name begin_operator RPAR end_operator begin_call begin_name begin_name bounds end_name begin_operator DOT end_operator begin_name get width end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name int end_name begin_operator RPAR end_operator begin_call begin_name begin_name bounds end_name begin_operator DOT end_operator begin_name get height end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name set preferred size end_name begin_argument_list begin_argument begin_expr begin_name dim end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set maximum size end_name begin_argument_list begin_argument begin_expr begin_name dim end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name lm end_name begin_operator EQ end_operator begin_call begin_name begin_name font end_name begin_operator DOT end_operator begin_name get line metrics end_name end_name begin_argument_list begin_argument begin_expr begin_name memory test str end_name end_expr end_argument begin_argument begin_expr begin_name frc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set foreground end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name j edit end_name begin_operator DOT end_operator begin_name get color property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set background end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name j edit end_name begin_operator DOT end_operator begin_name get color property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name progress foreground end_name begin_operator EQ end_operator begin_call begin_name begin_name j edit end_name begin_operator DOT end_operator begin_name get color property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name progress background end_name begin_operator EQ end_operator begin_call begin_name begin_name j edit end_name begin_operator DOT end_operator begin_name get color property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add mouse listener end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name mouse handler end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment end_comment begin_comment scroll up method end_comment begin_type begin_name void end_name end_type begin_name scroll up end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name amount end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_name line info end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name line info end_name end_expr end_argument begin_argument begin_expr begin_name amount end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name text area end_name begin_operator DOT end_operator begin_name get visible lines end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator begin_name amount end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name amount end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name begin_name line info end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name line info end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name old first invalid line end_name begin_init begin_expr begin_name first invalid line end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name first invalid line end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name update chunks up to end_name begin_argument_list begin_argument begin_expr begin_name amount end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name first invalid line end_name begin_operator EQ end_operator begin_name old first invalid line end_name begin_operator PLUS end_operator begin_name amount end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name first invalid line end_name begin_operator GT end_operator begin_call begin_name begin_name text area end_name begin_operator DOT end_operator begin_name get visible lines end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_expr_stmt begin_expr begin_name first invalid line end_name begin_operator EQ end_operator begin_call begin_name begin_name text area end_name begin_operator DOT end_operator begin_name get visible lines end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_then end_if begin_if begin_condition begin_expr begin_name begin_name debug end_name begin_operator DOT end_operator begin_name chunk cache debug end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator begin_name amount end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name last screen line end_name begin_operator EQ end_operator begin_name last screen line p end_name begin_operator EQ end_operator begin_operator MINUS end_operator end_expr end_expr_stmt end_block 
