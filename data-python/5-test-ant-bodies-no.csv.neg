 begin_comment if false note errors but continue param failonerror true or false end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set fail on error end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name failonerror end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name failonerror end_name end_name begin_operator EQ end_operator begin_name failonerror end_name end_expr end_expr_stmt end_block 
 begin_comment add source file this is not allowed and it always throws a build exception param b ignored ant attribute ignore true end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set addsourcefile end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name get task type end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_comment get a string rep of this object return a string containing the pwd and the file end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator PLUS end_operator begin_name curpwd end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name ftp file end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name contains end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name clazz end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name found end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name clazz end_name begin_operator UNP end_operator begin_name class end_name end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name values end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_name found end_name end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_name found end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_call begin_name ant type definition end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get exposed class end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_name clazz end_name begin_operator RPAR end_operator end_expr end_expr_stmt end_block end_for end_block end_then end_if begin_return begin_expr begin_name found end_name end_expr end_return end_block 
 begin_comment sets the quot from quot pattern required param from a string end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set from end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name from end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name index end_name begin_init begin_expr begin_call begin_name begin_name from end_name begin_operator DOT end_operator begin_name last index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name index end_name begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name from prefix end_name begin_operator EQ end_operator begin_name from end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name from postfix end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name from prefix end_name begin_operator EQ end_operator begin_call begin_name begin_name from end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name from postfix end_name begin_operator EQ end_operator begin_call begin_name begin_name from end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name index end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_name prefix length end_name begin_operator EQ end_operator begin_call begin_name begin_name from prefix end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name postfix length end_name begin_operator EQ end_operator begin_call begin_name begin_name from postfix end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a mapper to convert the file names param mapper a code mapper code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add mapper end_name begin_parameter_list begin_param begin_decl begin_type begin_name mapper end_name end_type begin_name mapper end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name mapper end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name mapper end_name end_name begin_operator EQ end_operator begin_name mapper end_name end_expr end_expr_stmt end_block 
 begin_comment get whether file names should be included return identifies whether file names should be included end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get include file names end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name include file names end_name end_expr end_return end_block 
 begin_comment gets the label string lbuild 1 max label length is 32 chars return an empty string if label is not set end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get label end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name short label end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name label end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name label end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name short label end_name begin_operator EQ end_operator begin_name flag label end_name begin_operator PLUS end_operator begin_call begin_name get short label end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name short label end_name end_expr end_return end_block 
 begin_comment the comment to apply to all files being labelled param comment the new comment value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set comment end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name comment end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal comment end_name end_name begin_argument_list begin_argument begin_expr begin_name comment end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a section to the manifest param section the manifest section to be added exception manifest exception if the secti 0 on is not valid end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add configured section end_name begin_parameter_list begin_param begin_decl begin_type begin_name section end_name end_type begin_name section end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name manifest exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name section name end_name begin_init begin_expr begin_call begin_name begin_name section end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name section name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name sections end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name section name end_name end_expr end_argument begin_argument begin_expr begin_name section end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name section index end_name begin_operator DOT end_operator begin_name contains end_name end_name begin_argument_list begin_argument begin_expr begin_name section name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name section index end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name section name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment flag to set to true if you want dependency issues with rmi stubs to appear at warning level param warn on rmi stubs if true set dependency issues to appear at warning level since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set warn on rmi stubs end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name warn on rmi stubs end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name warn on rmi stubs end_name end_name begin_operator EQ end_operator begin_name warn on rmi stubs end_name end_expr end_expr_stmt end_block 
 begin_comment get our script runner return the runner end_comment begin_type begin_specifier end_specifier begin_name script runner base end_name end_type begin_name get runner end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name init script runner end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name runner end_name end_expr end_return end_block 
 begin_comment tests if this enumeration contains more elements return code true code if and only if this enumeration object contains at least one more element to provide code false code otherwise end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name has more elements end_name begin_parameter_list end_parameter_list begin_block begin_while begin_condition begin_expr begin_name index end_name begin_operator LT end_operator begin_name begin_name enum array end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_block begin_if begin_condition begin_expr begin_name begin_name enum array end_name begin_index begin_expr begin_name index end_name end_expr end_index end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name begin_name enum array end_name begin_index begin_expr begin_name index end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name has more elements end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name index end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_while begin_return begin_expr end_expr end_return end_block 
 begin_comment sets locale specific country of resource bundle optional param bundle country country of the bundle end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set bundle country end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name bundle country end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name bundle country end_name end_name begin_operator EQ end_operator begin_name bundle country end_name end_expr end_expr_stmt end_block 
 begin_comment tests to make sure that the selector is selecting files correctly end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test selection behaviour end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name filename selector end_name end_type begin_name s end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name results end_name end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name make bed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name filename selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name results end_name begin_operator EQ end_operator begin_call begin_name selection string end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name results end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name filename selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name results end_name begin_operator EQ end_operator begin_call begin_name selection string end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment this is turned off temporarily there appears to be a bug end_comment begin_comment in selector utils match pattern where it is recursive on end_comment begin_comment windows even if no is in pattern end_comment begin_comment assert equals ffftffffffff results unix end_comment begin_comment vs end_comment begin_comment assert equals ffftfffftfff results windows end_comment begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name filename selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set negate end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name results end_name begin_operator EQ end_operator begin_call begin_name selection string end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name results end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name filename selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set casesensitive end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name results end_name begin_operator EQ end_operator begin_call begin_name selection string end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name results end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name filename selector end_name begin_operator RPAR end_operator begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name parameter end_name end_type begin_name param 1 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name parameter end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name param 1 end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name param 1 end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name parameter end_name begin_index end_index end_type begin_name params end_name begin_init begin_expr begin_block begin_expr begin_name param 1 end_name end_expr end_block end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set parameters end_name end_name begin_argument_list begin_argument begin_expr begin_name params end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name results end_name begin_operator EQ end_operator begin_call begin_name selection string end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name results end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name cleanup bed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment set the implementation version of extension param implementation version the implementation version of extension end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set implementation version end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name implementation version end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name verify not a reference end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name implementation version end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name dewey decimal end_name begin_argument_list begin_argument begin_expr begin_name implementation version end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor end_comment begin_specifier end_specifier begin_name utf 8 cp info end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name constant utf 8 end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the name of the weblogic server within the weblogic home which is to be run optiona defaults to quot myserver quot param server name the name of the server end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name server name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name weblogic system name end_name end_name begin_operator EQ end_operator begin_name server name end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 5 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name expect log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the date attribute param date the value to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set internal date end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name date end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name date end_name end_name begin_operator EQ end_operator begin_name date end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test date check end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name log end_name begin_init begin_expr begin_call begin_name get log end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name log end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment adds a package root to the list of packages which must be loaded using this loader all subpackages are also included param package root the root of all packages to be included should not be code null code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add loader package root end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name package root end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name loader packages end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name package root end_name begin_operator PLUS end_operator begin_operator LPAR end_operator begin_call begin_name begin_name package root end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment takes a classpath like string and adds each element of this string to a new classpath if the components exist components that don t exist aren t added we do this because jikes issues warnings for non existant files dirs in his classpath and these warnings are pretty annoying param target target classpath param source source classpath to get file objects end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add existing to classpath end_name begin_parameter_list begin_param begin_decl begin_type begin_name string buffer end_name end_type begin_name target end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name source end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string tokenizer end_name end_type begin_name tok end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string tokenizer end_name begin_argument_list begin_argument begin_expr begin_name source end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name tok end_name begin_operator DOT end_operator begin_name has more tokens end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name tok end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name path separator end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_while end_block 
 begin_comment client jar file name param clientjar the file to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set clientjar end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name clientjar end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name clientjarfile end_name begin_operator EQ end_operator begin_name clientjar end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 1 end_name begin_parameter_list end_parameter_list begin_block begin_comment should get no output at all end_comment begin_expr_stmt begin_expr begin_call begin_name expect output and error end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment a test ended param test a test end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name end test end_name begin_parameter_list begin_param begin_decl begin_type begin_name test end_name end_type begin_name test end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment used with creating child projects each child project inherits the component definitions from its parent param helper the component helper of the parent project end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name init sub project end_name begin_parameter_list begin_param begin_decl begin_type begin_name component helper end_name end_type begin_name helper end_name end_decl end_param end_parameter_list begin_block begin_comment add the types of the parent project end_comment begin_decl_stmt begin_decl begin_type begin_name ant type table end_name end_type begin_name type table end_name begin_init begin_expr begin_name begin_name helper end_name begin_operator DOT end_operator begin_name ant type table end_name end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name type table end_name begin_operator DOT end_operator begin_name values end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name ant type definition end_name end_type begin_name def end_name begin_init begin_expr begin_operator LPAR end_operator begin_name ant type definition end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ant type table end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name def end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name def end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_comment add the parsed namespaces of the parent project end_comment begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name checked namespaces end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name checked namespaces end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_comment register the dt ds param handler the handler to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name register known dt ds end_name begin_parameter_list begin_param begin_decl begin_type begin_name descriptor handler end_name end_type begin_name handler end_name end_decl end_param end_parameter_list begin_block begin_comment register all the known dt ds end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name handler end_name begin_operator DOT end_operator begin_name register dtd end_name end_name begin_argument_list begin_argument begin_expr begin_name publicid ejb 11 end_name end_expr end_argument begin_argument begin_expr begin_name default wl 51 ejb 11 dtd location end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name handler end_name begin_operator DOT end_operator begin_name register dtd end_name end_name begin_argument_list begin_argument begin_expr begin_name publicid ejb 11 end_name end_expr end_argument begin_argument begin_expr begin_name default wl 60 ejb 11 dtd location end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name handler end_name begin_operator DOT end_operator begin_name register dtd end_name end_name begin_argument_list begin_argument begin_expr begin_name publicid ejb 11 end_name end_expr end_argument begin_argument begin_expr begin_name ejb 11 dtd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name handler end_name begin_operator DOT end_operator begin_name register dtd end_name end_name begin_argument_list begin_argument begin_expr begin_name publicid ejb 20 end_name end_expr end_argument begin_argument begin_expr begin_name default wl 60 ejb 20 dtd location end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment called by the project to let the task initialize properly the default implementation is a no op throws build exception if something goes wrong with the build end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name init end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name init end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment validating end_comment begin_expr_stmt begin_expr begin_call begin_name set lenient end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test output property end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment initialization common to all constructors end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name initialize end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name block size end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name record size end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name block size end_name end_name begin_operator EQ end_operator begin_name block size end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name record size end_name end_name begin_operator EQ end_operator begin_name record size end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name recs per block end_name end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name block size end_name end_name begin_operator SLASH end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name record size end_name end_name begin_operator RPAR end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name block buffer end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_name begin_name byte end_name begin_index begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name block size end_name end_name end_expr end_index end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name in stream end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr blk idx end_name end_name begin_operator EQ end_operator begin_operator MINUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr rec idx end_name end_name begin_operator EQ end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name recs per block end_name end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr blk idx end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr rec idx end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test null end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name j unit version helper end_name begin_operator DOT end_operator begin_name get test case name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a target to the project or replaces one with the same name param target the target to be added or replaced in the project must not be code null code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add or replace target end_name begin_parameter_list begin_param begin_decl begin_type begin_name target end_name end_type begin_name target end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add or replace target end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test line separator character end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name test line separator character end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name assertion failed error end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block end_catch end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name compare files end_name begin_parameter_list begin_param begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name expected files end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name expected directories end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name begin_name included files end_name begin_index end_index end_name begin_init begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get included files end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name begin_name included directories end_name begin_index end_index end_name begin_init begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get included directories end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name expected files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name included files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name expected directories end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name included directories end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name counter end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name counter end_name begin_operator LT end_operator begin_name begin_name included files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name counter end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name begin_name included files end_name begin_index begin_expr begin_name counter end_name end_expr end_index end_name begin_operator EQ end_operator begin_name begin_name included files end_name begin_index begin_expr begin_name counter end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name arrays end_name begin_operator DOT end_operator begin_name sort end_name end_name begin_argument_list begin_argument begin_expr begin_name included files end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name counter end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name counter end_name begin_operator LT end_operator begin_name begin_name included directories end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name counter end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name begin_name included directories end_name begin_index begin_expr begin_name counter end_name end_expr end_index end_name begin_operator EQ end_operator begin_name begin_name included directories end_name begin_index begin_expr begin_name counter end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name arrays end_name begin_operator DOT end_operator begin_name sort end_name end_name begin_argument_list begin_argument begin_expr begin_name included directories end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name counter end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name counter end_name begin_operator LT end_operator begin_name begin_name included files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name counter end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name expected files end_name begin_index begin_expr begin_name counter end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name included files end_name begin_index begin_expr begin_name counter end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name counter end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name counter end_name begin_operator LT end_operator begin_name begin_name included directories end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name counter end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name expected directories end_name begin_index begin_expr begin_name counter end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name included directories end_name begin_index begin_expr begin_name counter end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name counter end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_for end_block 
 begin_comment return the attribute name end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name name end_name end_expr end_return end_block 
 begin_comment helper method to get the value as a java long from a four byte array param bytes the array of bytes return the correspondanding java long value end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name long end_name end_type begin_name get value end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name bytes end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name get value end_name begin_argument_list begin_argument begin_expr begin_name bytes end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment equality method for this definition assumes the names are the same param other another definition param project the project the definition return true if the definitions are the same end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name same definition end_name begin_parameter_list begin_param begin_decl begin_type begin_name ant type definition end_name end_type begin_name other end_name end_decl end_param begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name other end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name other end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_call begin_name get class end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name other end_name begin_operator DOT end_operator begin_name get type class end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name get type class end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name other end_name begin_operator DOT end_operator begin_name get exposed class end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name get exposed class end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_name begin_name other end_name begin_operator DOT end_operator begin_name adapter class end_name end_name begin_operator EQT end_operator begin_name adapter class end_name begin_operator UNP end_operator begin_name begin_name other end_name begin_operator DOT end_operator begin_name adapt to class end_name end_name begin_operator EQT end_operator begin_name adapt to class end_name begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment adds a path to the classpath return a classpath to be configured end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name create classpath end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name classpath end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name classpath end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name classpath end_name begin_operator DOT end_operator begin_name create path end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment add an ignore blank filter param filter a code token filter ignore blank code value since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add ignore blank end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name token filter end_name begin_operator DOT end_operator begin_name ignore blank end_name end_name end_type begin_name filter end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name filter readers end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name filter end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment default constructor end_comment begin_specifier end_specifier begin_name tar resource end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment this is used then the realobject of the ue is a pre set definition this is also used when a presetdef is used on a presetdef the attributes elements and text are applied to this ue param u an unknown element containing the attributes elements and text end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name apply pre set end_name begin_parameter_list begin_param begin_decl begin_type begin_name unknown element end_name end_type begin_name u end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name preset defed end_name end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_comment do the runtime end_comment begin_expr_stmt begin_expr begin_call begin_name get wrapper end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name apply pre set end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name u end_name begin_operator DOT end_operator begin_name get wrapper end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name begin_name u end_name begin_operator DOT end_operator begin_name children end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name list end_name end_type begin_name new children end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name new children end_name begin_operator DOT end_operator begin_name add all end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name u end_name begin_operator DOT end_operator begin_name children end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name children end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name new children end_name begin_operator DOT end_operator begin_name add all end_name end_name begin_argument_list begin_argument begin_expr begin_name children end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name children end_name begin_operator EQ end_operator begin_name new children end_name end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name preset defed end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment the heart of the matter this is where the selector gets to decide on the inclusion of a file in a particular fileset param basedir a java io file object for the base directory param filename the name of the file to check param file a file object for this filename return whether the file should be selected or not end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is selected end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name basedir end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name filename end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_comment throw build exception on error end_comment begin_expr_stmt begin_expr begin_call begin_name validate end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment directory size never selected for end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name diff end_name begin_init begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator begin_name sizelimit end_name end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name when end_name begin_operator DOT end_operator begin_name evaluate end_name end_name begin_argument_list begin_argument begin_expr begin_name diff end_name begin_operator EQT end_operator begin_operator QM end_operator begin_operator DP end_operator begin_call begin_name int end_name begin_argument_list begin_argument begin_expr begin_name diff end_name begin_operator SLASH end_operator begin_call begin_name begin_name math end_name begin_operator DOT end_operator begin_name abs end_name end_name begin_argument_list begin_argument begin_expr begin_name diff end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_specifier end_specifier begin_name jaxp utils test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets the patterns from the exclude filter rather that duplicate the details of ant star tean check out s filtering here refer to these links return a string of filter patterns separated by spaces see set excludes string excludes see set includes string includes see get includes end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get excludes end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name excludes end_name end_expr end_return end_block 
 begin_comment pass the filename of the current processed file as a xsl parameter to the transformation this value sets the name of that xsl parameter param file name parameter name of the xsl parameter retrieving the current file name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set file name parameter end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name file name parameter end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name file name parameter end_name end_name begin_operator EQ end_operator begin_name file name parameter end_name end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name zip long test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment create a jaxp sax parser return parser or null for trouble end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name sax parser end_name end_type begin_name get sax parser end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name sax parser factory end_name end_type begin_name sax parser factory end_name begin_init begin_expr begin_call begin_name begin_name sax parser factory end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name sax parser factory end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name sax parser end_name end_type begin_name sax parser end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name sax parser end_name begin_operator EQ end_operator begin_call begin_name begin_name sax parser factory end_name begin_operator DOT end_operator begin_name new sax parser end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment begin_expr_stmt begin_expr begin_call begin_name ignore throwable end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_return begin_expr begin_name sax parser end_name end_expr end_return end_block 
 begin_comment set the file alignment valid values are 0 512 1024 2048 4096 8192 and 16384 0 means leave to the compiler param file align the value to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set file align end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name file align end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name file align end_name end_name begin_operator EQ end_operator begin_name file align end_name end_expr end_expr_stmt end_block 
 begin_comment scans the parameters list for the lines parameter and uses it to set the number of lines to be returned in the filtered stream also scan for skip parameter end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name initialize end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name parameter end_name begin_index end_index end_type begin_name params end_name begin_init begin_expr begin_call begin_name get parameters end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name params end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name params end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name lines key end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name params end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name lines end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name long end_name begin_argument_list begin_argument begin_expr begin_name begin_name params end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name long value end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_continue end_continue end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name skip key end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name params end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name skip end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name long end_name begin_argument_list begin_argument begin_expr begin_name begin_name params end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name long value end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_continue end_continue end_block end_then end_if end_block end_for end_block end_then end_if end_block 
 begin_comment return true if all the contained conditions evaluates to true exception build exception if an error occurs end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name eval end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name get conditions end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name condition end_name end_type begin_name c end_name begin_init begin_expr begin_operator LPAR end_operator begin_name condition end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name eval end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_while begin_return begin_expr end_expr end_return end_block 
 begin_specifier end_specifier begin_name commandline test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_name cr lf end_name end_type begin_name resolve end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name asis end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name asis end_name end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name cr end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name mac end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name cr end_name end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name crlf end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name dos end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name crlf end_name end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name lf end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name unix end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name lf end_name end_expr end_return end_block end_then end_if begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name illegal state exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_comment constructor with options param name the name of the test param halt on error if true halt the tests if there is an error param halt on failure if true halt the tests if there is a failure param filtertrace if true filter stack traces end_comment begin_specifier end_specifier begin_name j unit test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name halt on error end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name halt on failure end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name filtertrace end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name name end_name end_name begin_operator EQ end_operator begin_name name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name halt on error end_name end_name begin_operator EQ end_operator begin_name halt on error end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name halt on fail end_name end_name begin_operator EQ end_operator begin_name halt on failure end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name filtertrace end_name end_name begin_operator EQ end_operator begin_name filtertrace end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test get xyz source end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f 1 end_name begin_init begin_expr begin_call begin_name begin_name loader utils end_name begin_operator DOT end_operator begin_name get class source end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name loader utils end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr begin_name f 1 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f 2 end_name begin_init begin_expr begin_call begin_name begin_name loader utils end_name begin_operator DOT end_operator begin_name get resource source end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr begin_name f 2 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name f 1 end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name f 2 end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets the file of the win 32 res file to include return path to the file end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get win 32 res end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name win 32 res end_name end_expr end_return end_block 
 begin_type begin_name int end_name end_type begin_name get final crc end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_name global crc end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name long end_name end_type begin_name get length end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name t end_name begin_operator QM end_operator begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_name s end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment the name of the definition required param name the name value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name name end_name end_name begin_operator EQ end_operator begin_name name end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set project end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name project end_name end_name begin_operator EQ end_operator begin_name project end_name end_expr end_expr_stmt end_block 
 begin_comment what parser are we using return the classname of the parser end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get xml parser name end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name sax parser end_name end_type begin_name sax parser end_name begin_init begin_expr begin_call begin_name get sax parser end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name sax parser end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_comment check to what is in the classname end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name sax parser name end_name begin_init begin_expr begin_call begin_name begin_name sax parser end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_name sax parser name end_name end_expr end_return end_block 
 begin_comment static convenience method to union an arbitrary set of resources param rc a resource collection return a union end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name union end_name end_type begin_name get instance end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource collection end_name end_type begin_name rc end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_name rc end_name begin_operator UNP end_operator begin_name union end_name begin_operator QM end_operator begin_operator LPAR end_operator begin_name union end_name begin_operator RPAR end_operator begin_name rc end_name begin_operator DP end_operator begin_operator UNP end_operator begin_call begin_name union end_name begin_argument_list begin_argument begin_expr begin_name rc end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment checks whether code exit value code signals a failure on the current system os specific p b note b that this method relies on the conventions of the os it will return false results if the application you are running doesn t follow these conventions one notable exception is the java vm provided by hp for open vms it will return 0 if successful like on any other platform but this signals a failure on open vms so if you execute a new java vm on open vms you cannot trust this method p param exit value the exit value return code to be checked return code true code if code exit value code signals a failure end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name is failure end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name exit value end_name end_decl end_param end_parameter_list begin_block begin_comment on openvms even exit value signals failure end_comment begin_comment for other platforms nonzero exit value signals failure end_comment begin_return begin_expr begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator QM end_operator begin_operator LPAR end_operator begin_name exit value end_name begin_operator UNP end_operator begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator DP end_operator begin_operator LPAR end_operator begin_name exit value end_name begin_operator UNP end_operator begin_operator RPAR end_operator end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name remove end_name begin_parameter_list end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name unsupported operation exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block 
 begin_comment test from uri end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test from uri end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name dos root end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name dos root end_name begin_operator EQ end_operator begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name substring end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name dos root end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals ignore drive case end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name from uri end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals ignore drive case end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name from uri end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name assert equals ignore drive case end_name begin_argument_list begin_argument begin_expr begin_name dos root end_name begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name from uri end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name from uri end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name dos root end_name begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name from uri end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name dos root end_name begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name from uri end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment execute as a task end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name rc end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name one nested message end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name property end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name rc end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set new property end_name begin_argument_list begin_argument begin_expr begin_name property end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name integer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name rc end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment set a log listener param a listener the log listener end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set log listener end_name begin_parameter_list begin_param begin_decl begin_type begin_name log listener end_name end_type begin_name a listener end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name listener end_name begin_operator EQ end_operator begin_name a listener end_name end_expr end_expr_stmt end_block 
 begin_comment sets the file or dir mode for this resource param mode integer representation of unix permission mask end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set mode end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name mode end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name check attributes allowed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name mode end_name end_name begin_operator EQ end_operator begin_name mode end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name mode set end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test path end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment restrict the nested resource collection based on the nested selectors return a collection of resources end_comment begin_type begin_specifier end_specifier begin_name collection end_name end_type begin_name get collection end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name array list end_name end_type begin_name result end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_label begin_name outer end_name end_label begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name ri end_name begin_init begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name get resource collection end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name ri end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name resource end_name end_type begin_name r end_name begin_init begin_expr begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name begin_name ri end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name get selectors end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name resource selector end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name is selected end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_name result end_name end_expr end_return end_block 
 begin_comment prefix to apply to properties loaded using code file code or code resource code a is appended to the prefix if not specified param prefix prefix string since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set prefix end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name prefix end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name prefix end_name end_name begin_operator EQ end_operator begin_name prefix end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name prefix end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name prefix end_name end_name begin_operator UNP end_operator end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment gets whether or not the ant classpath is to be included in the classpath return whether or not the ant classpath is to be included in the classpath end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get includeantruntime end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name include ant runtime end_name end_expr end_return end_block 
 begin_comment set the value for this property param value the non null string value of the output property end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set value end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name value end_name end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name testtype end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment indicates that iiop compatible stubs should be generated optional defaults to false if not set param iiop generate iiop compatible stubs end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set iiop end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name iiop end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name iiop end_name end_name begin_operator EQ end_operator begin_name iiop end_name end_expr end_expr_stmt end_block 
 begin_comment a loader configuration to send to stylebook optional param loader config the configuration to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set loader config end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name loader config end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m loader config end_name begin_operator EQ end_operator begin_name loader config end_name end_expr end_expr_stmt end_block 
 begin_comment set target to execute param target the name of the target to execute end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set target end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name target end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name callee end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name init end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name callee end_name begin_operator DOT end_operator begin_name set target end_name end_name begin_argument_list begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name target set end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment get the raw vector of variables this is not a clone return a potentially empty but never null vector of elements of type variable since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name vector end_name end_type begin_name get variables vector end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name variables end_name end_expr end_return end_block 
 begin_comment level of warning currently between 1 and 4 with 4 being the strictest param warn level warn level see net docs for valid range probably 0 4 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set warn level end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name warn level end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name warn level end_name end_name begin_operator EQ end_operator begin_name warn level end_name end_expr end_expr_stmt end_block 
 begin_comment creates a new strip java comments using the passed in reader for instantiation param rdr a reader object providing the underlying stream must not be code null code return a new filter based on this configuration but filtering the specified reader end_comment begin_type begin_specifier end_specifier begin_name reader end_name end_type begin_name chain end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name reader end_name end_type begin_name rdr end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name strip java comments end_name end_type begin_name new filter end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name strip java comments end_name begin_argument_list begin_argument begin_expr begin_name rdr end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_name new filter end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the end date param s the end date end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set end date end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name myend date end_name begin_operator EQ end_operator begin_name s end_name end_expr end_expr_stmt end_block 
 begin_comment constructor end_comment begin_specifier end_specifier begin_name double cp info end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name constant double end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment process a typical login if it differs use the read and write tasks explicitely end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name login end_name begin_parameter_list begin_param begin_decl begin_type begin_name ant telnet client end_name end_type begin_name telnet end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name add carriage return end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name telnet end_name begin_operator DOT end_operator begin_name send string end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name telnet end_name begin_operator DOT end_operator begin_name wait for string end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name telnet end_name begin_operator DOT end_operator begin_name send string end_name end_name begin_argument_list begin_argument begin_expr begin_name userid end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name telnet end_name begin_operator DOT end_operator begin_name wait for string end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name telnet end_name begin_operator DOT end_operator begin_name send string end_name end_name begin_argument_list begin_argument begin_expr begin_name password end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment whether verbose output should get generated return the verbose attribute since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get verbose end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name verbose end_name end_expr end_return end_block 
 begin_comment end_comment begin_comment protected and private methods end_comment begin_comment end_comment begin_comment override copy s do file operations to move the files instead of copying them end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name do file operations end_name begin_parameter_list end_parameter_list begin_block begin_comment attempt complete directory renames if any first end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name complete dir map end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name complete dir map end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name from dir end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name to dir end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file end_name begin_operator RPAR end_operator begin_call begin_name begin_name complete dir map end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name from dir end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name renamed end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name from dir end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name to dir end_name end_expr end_argument begin_argument begin_expr begin_name verbosity end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name renamed end_name begin_operator EQ end_operator begin_call begin_name rename file end_name begin_argument_list begin_argument begin_expr begin_name from dir end_name end_expr end_argument begin_argument begin_expr begin_name to dir end_name end_expr end_argument begin_argument begin_expr begin_name filtering end_name end_expr end_argument begin_argument begin_expr begin_name force overwrite end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_name from dir end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name to dir end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name ioe end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name ioe end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name renamed end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name file set end_name end_type begin_name fs end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file set end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name set dir end_name end_name begin_argument_list begin_argument begin_expr begin_name from dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add fileset end_name begin_argument_list begin_argument begin_expr begin_name fs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds end_name begin_init begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name get directory scanner end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name files end_name begin_init begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get included files end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name dirs end_name begin_init begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get included directories end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name scan end_name begin_argument_list begin_argument begin_expr begin_name from dir end_name end_expr end_argument begin_argument begin_expr begin_name to dir end_name end_expr end_argument begin_argument begin_expr begin_name files end_name end_expr end_argument begin_argument begin_expr begin_name dirs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_while end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name move count end_name begin_init begin_expr begin_call begin_name begin_name file copy map end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name move count end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_comment files to move end_comment begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name move count end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name move count end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name dest dir end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name file copy map end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name from file end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name from file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name self move end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment is this file still available to be moved end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name to files end_name begin_init begin_expr begin_operator LPAR end_operator begin_name begin_name string end_name begin_index end_index end_name begin_operator RPAR end_operator begin_call begin_name begin_name file copy map end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name from file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name to files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name to file end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_name begin_name to files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name from file end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name to file end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name from file end_name end_expr end_argument begin_argument begin_expr begin_name verbosity end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name self move end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_comment if this is the last time through the loop then end_comment begin_comment move will not occur but that s what we want end_comment begin_continue end_continue end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name d end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name to file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name i end_name begin_operator PLUS end_operator begin_operator RPAR end_operator begin_operator EQT end_operator begin_name begin_name to files end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name self move end_name end_expr end_condition begin_then begin_block begin_comment only try to move if this is the last mapped file end_comment begin_comment and one of the mappings isn t to itself end_comment begin_expr_stmt begin_expr begin_call begin_name move file end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument begin_argument begin_expr begin_name d end_name end_expr end_argument begin_argument begin_expr begin_name filtering end_name end_expr end_argument begin_argument begin_expr begin_name force overwrite end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name copy file end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument begin_argument begin_expr begin_name d end_name end_expr end_argument begin_argument begin_expr begin_name filtering end_name end_expr end_argument begin_argument begin_expr begin_name force overwrite end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_for end_block end_then end_if end_block end_while end_block end_then end_if begin_if begin_condition begin_expr begin_name include empty end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name dir copy map end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name create count end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name from dir name end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name to dir names end_name begin_init begin_expr begin_operator LPAR end_operator begin_name begin_name string end_name begin_index end_index end_name begin_operator RPAR end_operator begin_call begin_name begin_name dir copy map end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name from dir name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name self move end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name to dir names end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name from dir name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name to dir names end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name from dir name end_name end_expr end_argument begin_argument begin_expr begin_name verbosity end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name self move end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_continue end_continue end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name d end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name begin_name to dir names end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name d end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name d end_name begin_operator DOT end_operator begin_name mkdirs end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name d end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name create count end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if end_block end_for begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name from dir end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name from dir name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name self move end_name begin_operator UNP end_operator begin_call begin_name ok to delete end_name begin_argument_list begin_argument begin_expr begin_name from dir end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name delete dir end_name begin_argument_list begin_argument begin_expr begin_name from dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_while begin_if begin_condition begin_expr begin_name create count end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name dir copy map end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator LPAR end_operator begin_call begin_name begin_name dir copy map end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name create count end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name create count end_name begin_operator EQT end_operator begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name dest dir end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block 
 begin_comment make a new definition end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name nested task end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name name end_name begin_operator EQ end_operator begin_call begin_name begin_name project helper end_name begin_operator DOT end_operator begin_name gen component name end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get uri end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name component helper end_name end_type begin_name helper end_name begin_init begin_expr begin_call begin_name begin_name component helper end_name begin_operator DOT end_operator begin_name get component helper end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name component name end_name begin_init begin_expr begin_call begin_name begin_name project helper end_name begin_operator DOT end_operator begin_name gen component name end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name nested task end_name begin_operator DOT end_operator begin_name get namespace end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name nested task end_name begin_operator DOT end_operator begin_name get tag end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name ant type definition end_name end_type begin_name def end_name begin_init begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name get definition end_name end_name begin_argument_list begin_argument begin_expr begin_name component name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name def end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name component name end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name pre set definition end_name end_type begin_name new def end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name pre set definition end_name begin_argument_list begin_argument begin_expr begin_name def end_name end_expr end_argument begin_argument begin_expr begin_name nested task end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name new def end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name add data type definition end_name end_name begin_argument_list begin_argument begin_expr begin_name new def end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment verify that a named file was created param filename description of parameter exception exception trouble end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name assert java file created end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name filename end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file end_name begin_init begin_expr begin_call begin_name get output file end_name begin_argument_list begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name filename end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name filename end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 8 using tar fileset src end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name test 8 end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the regexp pattern from the string description param pattern the pattern to match end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set pattern end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name pattern end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name pattern end_name end_name begin_operator EQ end_operator begin_name pattern end_name end_expr end_expr_stmt end_block 
 begin_comment whether variable cross references are generated param crossref a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set crossref end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name crossref end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name crossref end_name end_name begin_operator EQ end_operator begin_name crossref end_name end_expr end_expr_stmt end_block 
 begin_comment set whether or not you want the process to be spawned default is not spawned param spawn if true you do not want ant to wait for the end of the process since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set spawn end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name spawn end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name spawn end_name end_name begin_operator EQ end_operator begin_name spawn end_name end_expr end_expr_stmt end_block 
 begin_comment generate debug info passes g to rmic optional defaults to false param debug turn on debug info end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set debug end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name debug end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_operator EQ end_operator begin_name debug end_name end_expr end_expr_stmt end_block 
 begin_comment sets the scope of the tag this is in comma separated form with each element being one of all the default overview packages types constructors methods fields the elements are treated in a case insensitive manner param verbose scope the scope of the tag must not be code null code should not be empty exception build exception if all is specified along with other elements if any elements are repeated if no elements are specified or if any unrecognised elements are specified end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set scope end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name verbose scope end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_name verbose scope end_name begin_operator EQ end_operator begin_call begin_name begin_name verbose scope end_name begin_operator DOT end_operator begin_name to lower case end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name begin_index end_index end_type begin_name elements end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name boolean end_name begin_index begin_expr begin_name begin_name scope elements end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name got all end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name got not all end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment go through the tokens one at a time updating the end_comment begin_comment elements array and issuing warnings where appropriate end_comment begin_decl_stmt begin_decl begin_type begin_name string tokenizer end_name end_type begin_name tok end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string tokenizer end_name begin_argument_list begin_argument begin_expr begin_name verbose scope end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name tok end_name begin_operator DOT end_operator begin_name has more tokens end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name next end_name begin_init begin_expr begin_call begin_name begin_name tok end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name trim end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name next end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name got all end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name got all end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name i end_name end_decl end_decl_stmt begin_for begin_init begin_expr begin_name i end_name begin_operator EQ end_operator end_expr end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name scope elements end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name next end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name scope elements end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_break end_break end_block end_then end_if end_block end_for begin_if begin_condition begin_expr begin_name i end_name begin_operator EQT end_operator begin_name begin_name scope elements end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name next end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_name begin_name elements end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name next end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name elements end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name got not all end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_else end_if end_block end_else end_if end_block end_while begin_if begin_condition begin_expr begin_name got not all end_name begin_operator UNP end_operator begin_name got all end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name got not all end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name got all end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name got all end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name scope end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name buff end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr begin_name begin_name elements end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name elements end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name begin_name elements end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buff end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name scope elements end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name char at end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name scope end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name buff end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment adapt the specified iterator to the enumeration interface param iter the iterator to adapt return an enumeration end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name enumeration end_name end_type begin_name as enumeration end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name iterator end_name end_type begin_name iter end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_class begin_super begin_name enumeration end_name end_super begin_argument_list end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name has more elements end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_function begin_function begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name next element end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_function end_block end_class end_expr end_return end_block 
 begin_comment creates a new p 4 output stream for a p 4 handler param handler the handler which will process the streams end_comment begin_specifier end_specifier begin_name p 4 output stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name p 4 handler end_name end_type begin_name handler end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name handler end_name end_name begin_operator EQ end_operator begin_name handler end_name end_expr end_expr_stmt end_block 
 begin_comment compares the contents of two files param f 1 the file whose content is to be compared param f 2 the other file whose content is to be compared param textfile true if the file is to be treated as a text file and differences in kind of line break are to be ignored return true if the content of the files is the same throws io exception if the files cannot be read since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name content equals end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name f 1 end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name f 2 end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name textfile end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_return begin_expr begin_call begin_name begin_name resource utils end_name begin_operator DOT end_operator begin_name content equals end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file resource end_name begin_argument_list begin_argument begin_expr begin_name f 1 end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file resource end_name begin_argument_list begin_argument begin_expr begin_name f 2 end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name textfile end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment performs the check for circular references and returns the referenced selector end_comment begin_type begin_specifier end_specifier begin_name select selector end_name end_type begin_name get ref end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name o end_name begin_init begin_expr begin_call begin_name get checked ref end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_operator LPAR end_operator begin_name select selector end_name begin_operator RPAR end_operator begin_name o end_name end_expr end_return end_block 
 begin_comment the format to write the output in xml or text param ea xml or text end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set format end_name begin_parameter_list begin_param begin_decl begin_type begin_name format attribute end_name end_type begin_name ea end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name format end_name begin_operator EQ end_operator begin_call begin_name begin_name ea end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name next element end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment reset all contents end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name clear end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name clear end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name imports end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name root namespace end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name option compare end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name option explicit end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name option strict end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name remove int checks end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set executable end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment creates and configures an ant class loader instance from the nested classpath element since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name create class loader end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name user classpath end_name begin_init begin_expr begin_call begin_name get commandline end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get classpath end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name user classpath end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name reloading end_name begin_operator UNP end_operator begin_name class loader end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name delete class loader end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name classpath end_name begin_init begin_expr begin_operator LPAR end_operator begin_name path end_name begin_operator RPAR end_operator begin_call begin_name begin_name user classpath end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name include ant runtime end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name ant runtime classes end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name classpath end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name ant runtime classes end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name class loader end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name create class loader end_name begin_argument_list begin_argument begin_expr begin_name classpath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name get class end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get class loader end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name get class end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get class loader end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name get class loader end_name end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name class loader end_name begin_operator DOT end_operator begin_name set parent end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get class end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get class loader end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name class loader end_name begin_operator DOT end_operator begin_name set parent first end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name class loader end_name begin_operator DOT end_operator begin_name add java libraries end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name class loader end_name begin_operator DOT end_operator begin_name get classpath end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment make sure the test will be accepted as a test case end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name class loader end_name begin_operator DOT end_operator begin_name add system package root end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment make sure the test annotation are accepted end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name class loader end_name begin_operator DOT end_operator begin_name add system package root end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment will cause trouble in jdk 1 1 if omitted end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name class loader end_name begin_operator DOT end_operator begin_name add system package root end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block 
 begin_comment finishs writing the contents and closes this as well as the underlying stream since 1 1 throws io exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name finish end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name close entry end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name cd offset end_name begin_operator EQ end_operator begin_name written end_name end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init begin_operator UNP end_operator begin_name entries size end_name begin_init begin_expr begin_call begin_name begin_name entries end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name entries size end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name write central file header end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name zip entry end_name begin_operator RPAR end_operator begin_call begin_name begin_name entries end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_name cd length end_name begin_operator EQ end_operator begin_name written end_name begin_operator MINUS end_operator begin_name cd offset end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write central directory end end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name offsets end_name begin_operator DOT end_operator begin_name clear end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name entries end_name begin_operator DOT end_operator begin_name remove all elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the classpath to use when looking up a resource param classpath to add to any existing classpath end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classpath end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name classpath end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name end_name begin_operator EQ end_operator begin_name classpath end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name classpath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment returns an object that creates and stores an object for an element of a parent param project project to which the parent object belongs param parent uri the namespace uri of the parent object param parent parent object used to create the creator object to create and store and instance of a subelement param element name name of the element to create an instance of param ue the unknown element associated with the element return a creator object to create and store the element instance end_comment begin_type begin_specifier end_specifier begin_name creator end_name end_type begin_name get element creator end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name parent uri end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name element name end_name end_decl end_param begin_param begin_decl begin_type begin_name unknown element end_name end_type begin_name ue end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name nested creator end_name end_type begin_name nc end_name begin_init begin_expr begin_call begin_name get nested creator end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr begin_name parent uri end_name end_expr end_argument begin_argument begin_expr begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_name element name end_name end_expr end_argument begin_argument begin_expr begin_name ue end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_operator UNP end_operator begin_call begin_name creator end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_name nc end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment clears the static cache of on build finished end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name clear cache end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name helpers end_name begin_operator DOT end_operator begin_name clear end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment overwrite any existing destination file s param overwrite if true overwrite any existing destination file s end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set overwrite end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name overwrite end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name my copy end_name begin_operator DOT end_operator begin_name set overwrite end_name end_name begin_argument_list begin_argument begin_expr begin_name overwrite end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment performs the check for circular references and returns the referenced object return the dereferenced object throws build exception if the reference is invalid circular ref wrong class etc since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name get checked ref end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get checked ref end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment gets whether token filtering is set return filtering end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get filtering end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name filtering end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test head tail end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name expected end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name content equals end_name end_name begin_argument_list begin_argument begin_expr begin_name expected end_name end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test empty element if is reference end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name file list end_name end_type begin_name f end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name set dir end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_name f end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file list end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name set files end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_name f end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file list end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name set files end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name set dir end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name be end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment make sure we don t think we already have a application xml next time this task gets executed end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name clean up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name descriptor added end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name clean up end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_name p 4 change end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name p 4 change end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test selection clear works end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment this scenario is based on scenario 1 but does not use any default value and its based on custom selector used values are ul li b cache b propertyfile cachefile java io tmpdir mycache txt li li b algorithm b digest algorithm sha provider null li li b comparator b java text rule based collator li b update b true li end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test scenario 2 end_name begin_parameter_list end_parameter_list begin_block begin_comment rule based collator not yet supported see selector 375 note end_comment begin_decl_stmt begin_decl begin_type begin_name extend selector end_name end_type begin_name s end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name extend selector end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name bft end_name end_type begin_name bft end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name bft end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name cachefile end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name make bed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name set classname end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name add param end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name create param end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name cachefile end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment s add param create param algorithm provider i don t know any valid end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name add param end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name create param end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name add param end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name create param end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name add param end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name create param end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name add param end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name create param end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name add param end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name create param end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment first and second run end_comment begin_expr_stmt begin_expr begin_call begin_name perform tests end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name perform tests end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment make dirty end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name f 2 name end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name f 3 name end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name f 4 name end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bft end_name begin_operator DOT end_operator begin_name write properties end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name f 2 name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bft end_name begin_operator DOT end_operator begin_name write properties end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name f 3 name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bft end_name begin_operator DOT end_operator begin_name write properties end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name f 4 name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bft end_name begin_operator DOT end_operator begin_name do target end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment third run end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name results end_name begin_init begin_expr begin_call begin_name selection string end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name expected end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name filenames end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name ch end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name is directory end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_expr_stmt begin_expr begin_name ch end_name begin_operator EQ end_operator end_expr end_expr_stmt end_then end_if begin_if begin_condition begin_expr begin_name begin_name filenames end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name equals ignore case end_name begin_argument_list begin_argument begin_expr begin_name f 3 name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_expr_stmt begin_expr begin_name ch end_name begin_operator EQ end_operator end_expr end_expr_stmt end_then end_if begin_if begin_condition begin_expr begin_name begin_name filenames end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name equals ignore case end_name begin_argument_list begin_argument begin_expr begin_name f 4 name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_expr_stmt begin_expr begin_name ch end_name begin_operator EQ end_operator end_expr end_expr_stmt end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name expected end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name ch end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_comment info text end_comment begin_operator PLUS end_operator begin_call begin_name resolve end_name begin_argument_list begin_argument begin_expr begin_call begin_name diff end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name expected end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name results end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument begin_comment list of files end_comment begin_argument begin_expr begin_call begin_name begin_name expected end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_comment expected result end_comment begin_argument begin_expr begin_name results end_name end_expr end_argument begin_comment result end_comment end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_comment cleanup the environment end_comment begin_expr_stmt begin_expr begin_call begin_name cleanup bed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name begin_argument_list begin_argument begin_expr begin_name cachefile end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name delete end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name bft end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_expr_stmt begin_expr begin_call begin_name begin_name bft end_name begin_operator DOT end_operator begin_name delete propertiesfile end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_then end_if end_block end_finally end_try end_block 
 begin_comment execute the task throws build exception is there is a problem in the task execution end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name commandline end_name end_type begin_name to execute end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name commandline end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name set executable end_name end_name begin_argument_list begin_argument begin_expr begin_name rpm build command end_name begin_operator EQT end_operator begin_operator QM end_operator begin_call begin_name guess rpm build command end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_name rpm build command end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name top dir end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name top dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set line end_name begin_argument_list begin_argument begin_expr begin_name command end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name clean build dir end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name remove spec end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name remove source end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name spec file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name execute stream handler end_name end_type begin_name streamhandler end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name output stream end_name end_type begin_name outputstream end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name output stream end_name end_type begin_name errorstream end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name error end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name output end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name quiet end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name streamhandler end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name log stream handler end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name streamhandler end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name log stream handler end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_name output end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name buffered output stream end_name end_type begin_name bos end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name buffered output stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file output stream end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name outputstream end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name print stream end_name begin_argument_list begin_argument begin_expr begin_name bos end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_then begin_else begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name quiet end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name outputstream end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name log output stream end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name outputstream end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name log output stream end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if begin_if begin_condition begin_expr begin_name error end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name buffered output stream end_name end_type begin_name bos end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name buffered output stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file output stream end_name begin_argument_list begin_argument begin_expr begin_name error end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name errorstream end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name print stream end_name begin_argument_list begin_argument begin_expr begin_name bos end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_then begin_else begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name quiet end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name errorstream end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name log output stream end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name errorstream end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name log output stream end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if begin_expr_stmt begin_expr begin_name streamhandler end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name pump stream handler end_name begin_argument_list begin_argument begin_expr begin_name outputstream end_name end_expr end_argument begin_argument begin_expr begin_name errorstream end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_decl_stmt begin_decl begin_type begin_name execute end_name end_type begin_name exe end_name begin_init begin_expr begin_call begin_name get execute end_name begin_argument_list begin_argument begin_expr begin_name to execute end_name end_expr end_argument begin_argument begin_expr begin_name streamhandler end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name spec file end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name returncode end_name begin_init begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name execute end_name begin_operator DOT end_operator begin_name is failure end_name end_name begin_argument_list begin_argument begin_expr begin_name returncode end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name get executable end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name returncode end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name fail on error end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name outputstream end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name errorstream end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_specifier end_specifier begin_name ant output stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name string buffer end_name end_type begin_name buffer end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name buffer end_name end_name begin_operator EQ end_operator begin_name buffer end_name end_expr end_expr_stmt end_block 
 begin_comment constructor for ssh exec task end_comment begin_specifier end_specifier begin_name ssh exec end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return returns the server time zone config end_comment begin_type begin_name string end_name end_type begin_name get server time zone config end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name server time zone config end_name end_expr end_return end_block 
 begin_comment find out whether this file resource iterator has more elements return whether there are more resources to iterate over end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name has next end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name pos end_name begin_operator LT end_operator begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_return end_block 
 begin_comment add a new filter param filter the filter to be added end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name add filter end_name begin_parameter_list begin_param begin_decl begin_type begin_name filter end_name end_type begin_name filter end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name no children allowed end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name filters end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name filter end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name filter hash end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment include the author tag in the generated documentation param b true if the author tag should be included end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set author end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name author end_name begin_operator EQ end_operator begin_name b end_name end_expr end_expr_stmt end_block 
 begin_comment creates new rename extensions end_comment begin_specifier end_specifier begin_name rename extensions end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name glob type end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name begin_name mapper end_name begin_operator DOT end_operator begin_name mapper type end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name glob type end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name create two end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment local copy since log output stream task is private end_comment begin_comment constructor param task the task being logged param level the log level used to log data written to this stream end_comment begin_specifier end_specifier begin_name j unit log output stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name task end_name end_type begin_name task end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name level end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name task end_name end_expr end_argument begin_argument begin_expr begin_name level end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name task end_name end_name begin_operator EQ end_operator begin_name task end_name end_expr end_expr_stmt end_block 
 begin_comment attribute specifing whether to ignore the difference between and the two common directory characters param handle dir sep a boolean default is false since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set handle dir sep end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name handle dir sep end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name handle dir sep end_name end_name begin_operator EQ end_operator begin_name handle dir sep end_name end_expr end_expr_stmt end_block 
 begin_comment get a description handler param src dir the source directory return the handler end_comment begin_type begin_specifier end_specifier begin_name descriptor handler end_name end_type begin_name get websphere descriptor handler end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name src dir end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name descriptor handler end_name end_type begin_name handler end_name begin_init begin_expr begin_operator UNP end_operator begin_class begin_super begin_name descriptor handler end_name end_super begin_argument_list begin_argument begin_expr begin_call begin_name get task end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name src dir end_name end_expr end_argument end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process element end_name begin_parameter_list end_parameter_list begin_block end_block end_function end_block end_class end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name get config end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name begin_name dtd locations end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name ejb jar end_name begin_operator DOT end_operator begin_name dtd location end_name end_name end_type begin_name dtd location end_name begin_init begin_expr begin_operator LPAR end_operator begin_name begin_name ejb jar end_name begin_operator DOT end_operator begin_name dtd location end_name end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name handler end_name begin_operator DOT end_operator begin_name register dtd end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name dtd location end_name begin_operator DOT end_operator begin_name get public id end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name dtd location end_name begin_operator DOT end_operator begin_name get location end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_name handler end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name project end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name project end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name init end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name javac end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name javac end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name javac end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test site action end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name perform command test end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name int end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment see java lang object to string end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment performs the check for circular references and returns the referenced file set param p the current project return the referenced file set end_comment begin_type begin_specifier end_specifier begin_name abstract file set end_name end_type begin_name get ref end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name abstract file set end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment the cvs rsh variable param rsh the cvs rsh variable end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set cvs rsh end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name rsh end_name end_decl end_param end_parameter_list begin_block begin_comment check if not real cvsrsh set it to null end_comment begin_if begin_condition begin_expr begin_name rsh end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name rsh end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name rsh end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name cvs rsh end_name end_name begin_operator EQ end_operator begin_name rsh end_name end_expr end_expr_stmt end_block 
 begin_comment set whether the formatter should log to file param use file if true use a file if false send to standard out end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set use file end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name use file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name use file end_name end_name begin_operator EQ end_operator begin_name use file end_name end_expr end_expr_stmt end_block 
 begin_comment sign one jar p the signing only takes place if link is up to date file file indicates that it is needed param jar source source to sign param jar target target may be null throws build exception end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name sign one jar end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name jar source end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name jar target end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name target file end_name begin_init begin_expr begin_name jar target end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name target file end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name target file end_name begin_operator EQ end_operator begin_name jar source end_name end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name is up to date end_name begin_argument_list begin_argument begin_expr begin_name jar source end_name end_expr end_argument begin_argument begin_expr begin_name target file end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name last modified end_name begin_init begin_expr begin_call begin_name begin_name jar source end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name exec task end_name end_type begin_name cmd end_name begin_init begin_expr begin_call begin_name create jar signer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name set common options end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name bind to keystore end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name sigfile end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name add value end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name value end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name sigfile end_name end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name add value end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment do not set the signedjar option if source dest end_comment begin_comment unless you like fielding hotspot crash reports end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name target file end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name jar source end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name target file end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name add value end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add value end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name target file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name internalsf end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name add value end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name sectionsonly end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name add value end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment add tsa operations if declared end_comment begin_expr_stmt begin_expr begin_call begin_name add timestamp authority commands end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment jar source is required end_comment begin_expr_stmt begin_expr begin_call begin_name add value end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name jar source end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment alias is required for signing end_comment begin_expr_stmt begin_expr begin_call begin_name add value end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument begin_argument begin_expr begin_name alias end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name jar source end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name target file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name alias end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment restore the last modified attribute end_comment begin_if begin_condition begin_expr begin_name preserve last modified end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name target file end_name begin_operator DOT end_operator begin_name set last modified end_name end_name begin_argument_list begin_argument begin_expr begin_name last modified end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment get the mode of the archive fileset param p the project to use return the mode end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get file mode end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name archive file set end_name begin_operator RPAR end_operator begin_call begin_name get ref end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get file mode end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr begin_name file mode end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test script end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment adds a container for resource collections p all included files will be added as sourcefiles p return the source files to configure since 1 7 end_comment begin_type begin_specifier end_specifier begin_name resource collection container end_name end_type begin_name create source files end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name nested source files end_name end_expr end_return end_block 
 begin_comment sets family name of resource bundle required param bundle family name of resource bundle end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set bundle end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name bundle end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name bundle end_name end_name begin_operator EQ end_operator begin_name bundle end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 4 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment this flag tells the selector to ignore contents param ignore contents if true ignore contents since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set ignore contents end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name ignore contents end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name ignore contents end_name end_name begin_operator EQ end_operator begin_name ignore contents end_name end_expr end_expr_stmt end_block 
 begin_comment returns a vector of matched groups found in the argument using default options p group 0 will be the full match the rest are the parenthesized subexpressions p param argument the string to match against return the vector of groups throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name vector end_name end_type begin_name get groups end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name argument end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_return begin_expr begin_call begin_name get groups end_name begin_argument_list begin_argument begin_expr begin_name argument end_name end_expr end_argument begin_argument begin_expr begin_name match default end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment assigns an ant property to another param to the destination property whose content is modified param from the source property whose content is copied end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name copy property end_name begin_parameter_list begin_param begin_decl begin_type begin_name property end_name end_type begin_name to end_name end_decl end_param begin_param begin_decl begin_type begin_name property end_name end_type begin_name from end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name to end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name from end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name from end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name to end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name from end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name from end_name begin_operator DOT end_operator begin_name get file end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name to end_name begin_operator DOT end_operator begin_name set file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name from end_name begin_operator DOT end_operator begin_name get file end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name from end_name begin_operator DOT end_operator begin_name get resource end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name to end_name begin_operator DOT end_operator begin_name set resource end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name from end_name begin_operator DOT end_operator begin_name get resource end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name from end_name begin_operator DOT end_operator begin_name get prefix end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name to end_name begin_operator DOT end_operator begin_name set prefix end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name from end_name begin_operator DOT end_operator begin_name get prefix end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name from end_name begin_operator DOT end_operator begin_name get refid end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name to end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name from end_name begin_operator DOT end_operator begin_name get refid end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name from end_name begin_operator DOT end_operator begin_name get environment end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name to end_name begin_operator DOT end_operator begin_name set environment end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name from end_name begin_operator DOT end_operator begin_name get environment end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name from end_name begin_operator DOT end_operator begin_name get classpath end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name to end_name begin_operator DOT end_operator begin_name set classpath end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name from end_name begin_operator DOT end_operator begin_name get classpath end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test multi copy end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment register the locations of all known dt ds vendor specific subclasses should override this method to define the vendor specific locations of the ejb dt ds param handler no used in this class end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name register known dt ds end_name begin_parameter_list begin_param begin_decl begin_type begin_name descriptor handler end_name end_type begin_name handler end_name end_decl end_param end_parameter_list begin_block begin_comment none to register for generic end_comment end_block 
 begin_comment returns the parser factory to use only one parser factory is ever created by this method and is then cached for future use return a sax parser factory to use throws build exception on error since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_specifier end_specifier begin_name sax parser factory end_name end_type begin_name get parser factory end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name parser factory end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name parser factory end_name begin_operator EQ end_operator begin_call begin_name new parser factory end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name parser factory end_name end_expr end_return end_block 
 begin_comment sets the other ambiguity check grammar option param other ambiguity check an code int code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set otherambiguity check end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name other ambiguity check end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name optional attrs end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name other ambiguity check end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name integer end_name begin_argument_list begin_argument begin_expr begin_name other ambiguity check end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name target finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment set the message param m the message content end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set message end_name begin_parameter_list begin_param begin_decl begin_type begin_name message end_name end_type begin_name m end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name message end_name end_name begin_operator EQ end_operator begin_name m end_name end_expr end_expr_stmt end_block 
 begin_comment sets the sanity check grammar option param sanity check a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set sanitycheck end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name sanity check end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name optional attrs end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name sanity check end_name end_expr end_argument begin_argument begin_expr begin_name sanity check end_name begin_operator QM end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name true end_name end_name begin_operator DP end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name false end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 2 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect name address end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name email address end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test get with selector retryable 3 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name add task definition end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name three failure ftp end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name bx end_name end_decl end_param end_parameter_list begin_block end_block end_catch end_try end_block 
 begin_comment add a reference to a path to the factory path attribute param ref a reference to a path end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set factory path ref end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name ref end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name create factory path end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set refid end_name begin_argument_list begin_argument begin_expr begin_name ref end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name set end_name end_type begin_name entry set end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name set end_name end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name entry set end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name is kaffe end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name tree set end_name end_type begin_name t end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name tree set end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_class begin_super begin_name comparator end_name end_super begin_argument_list end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name compare end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name o 1 end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name o 2 end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name key 1 end_name begin_init begin_expr begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name begin_name map end_name begin_operator DOT end_operator begin_name entry end_name end_name begin_operator RPAR end_operator begin_name o 1 end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get key end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name key 2 end_name begin_init begin_expr begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name begin_name map end_name begin_operator DOT end_operator begin_name entry end_name end_name begin_operator RPAR end_operator begin_name o 2 end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get key end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name key 1 end_name begin_operator DOT end_operator begin_name compare to end_name end_name begin_argument_list begin_argument begin_expr begin_name key 2 end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_function end_block end_class end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name add all end_name end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_name t end_name end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name result end_name end_expr end_return end_block 
 begin_comment get the out command param cmd containing the command line string with or without the out flag and path appended end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name get out command end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name get out end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes this breaks clearcase end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get out end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name element end_name begin_operator DOT end_operator begin_name get tag name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name element end_name begin_operator DOT end_operator begin_name get attribute end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment get the classpath return the classpath end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name path end_name end_type begin_name get classpath end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name classpath end_name end_expr end_return end_block 
 begin_comment create a set of permissions equivalent to calling code new permissions false code end_comment begin_specifier end_specifier begin_name permissions end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment draw the text return the resultant image end_comment begin_type begin_specifier end_specifier begin_name planar image end_name end_type begin_name execute draw operation end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name str text end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name color end_name end_type begin_name couloir end_name begin_init begin_expr begin_call begin_name begin_name color mapper end_name begin_operator DOT end_operator begin_name get color by name end_name end_name begin_argument_list begin_argument begin_expr begin_name color end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name width end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name height end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name buffered image end_name end_type begin_name bi end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name buffered image end_name begin_argument_list begin_argument begin_expr begin_name width end_name end_expr end_argument begin_argument begin_expr begin_name height end_name end_expr end_argument begin_argument begin_expr begin_name begin_name buffered image end_name begin_operator DOT end_operator begin_name type 4 byte abgr pre end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name graphics 2 d end_name end_type begin_name graphics end_name begin_init begin_expr begin_operator LPAR end_operator begin_name graphics 2 d end_name begin_operator RPAR end_operator begin_call begin_name begin_name bi end_name begin_operator DOT end_operator begin_name get graphics end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name graphics end_name begin_operator DOT end_operator begin_name set rendering hint end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name rendering hints end_name begin_operator DOT end_operator begin_name key antialiasing end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name rendering hints end_name begin_operator DOT end_operator begin_name value antialias on end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name graphics end_name begin_operator DOT end_operator begin_name set rendering hint end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name rendering hints end_name begin_operator DOT end_operator begin_name key fractionalmetrics end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name rendering hints end_name begin_operator DOT end_operator begin_name value fractionalmetrics on end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name font end_name end_type begin_name f end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name font end_name begin_argument_list begin_argument begin_expr begin_name font end_name end_expr end_argument begin_argument begin_expr begin_name begin_name font end_name begin_operator DOT end_operator begin_name plain end_name end_name end_expr end_argument begin_argument begin_expr begin_name point end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name font metrics end_name end_type begin_name fmetrics end_name begin_init begin_expr begin_call begin_name begin_name graphics end_name begin_operator DOT end_operator begin_name get font metrics end_name end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name height end_name begin_operator EQ end_operator begin_call begin_name begin_name fmetrics end_name begin_operator DOT end_operator begin_name get max ascent end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_call begin_name begin_name fmetrics end_name begin_operator DOT end_operator begin_name get max descent end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name width end_name begin_operator EQ end_operator begin_call begin_name begin_name fmetrics end_name begin_operator DOT end_operator begin_name string width end_name end_name begin_argument_list begin_argument begin_expr begin_name str text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name bi end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name buffered image end_name begin_argument_list begin_argument begin_expr begin_name width end_name end_expr end_argument begin_argument begin_expr begin_name height end_name end_expr end_argument begin_argument begin_expr begin_name begin_name buffered image end_name begin_operator DOT end_operator begin_name type 4 byte abgr pre end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name graphics end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name graphics 2 d end_name begin_operator RPAR end_operator begin_call begin_name begin_name bi end_name begin_operator DOT end_operator begin_name get graphics end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name graphics end_name begin_operator DOT end_operator begin_name set rendering hint end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name rendering hints end_name begin_operator DOT end_operator begin_name key antialiasing end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name rendering hints end_name begin_operator DOT end_operator begin_name value antialias on end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name graphics end_name begin_operator DOT end_operator begin_name set rendering hint end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name rendering hints end_name begin_operator DOT end_operator begin_name key fractionalmetrics end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name rendering hints end_name begin_operator DOT end_operator begin_name value fractionalmetrics on end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name graphics end_name begin_operator DOT end_operator begin_name set font end_name end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name graphics end_name begin_operator DOT end_operator begin_name set color end_name end_name begin_argument_list begin_argument begin_expr begin_name couloir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name graphics end_name begin_operator DOT end_operator begin_name draw string end_name end_name begin_argument_list begin_argument begin_expr begin_name str text end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name height end_name begin_operator MINUS end_operator begin_call begin_name begin_name fmetrics end_name begin_operator DOT end_operator begin_name get max descent end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name planar image end_name end_type begin_name image end_name begin_init begin_expr begin_call begin_name begin_name planar image end_name begin_operator DOT end_operator begin_name wrap rendered image end_name end_name begin_argument_list begin_argument begin_expr begin_name bi end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_name image end_name end_expr end_return end_block 
 begin_comment get the handler type return a handler type object end_comment begin_type begin_specifier end_specifier begin_name handler type end_name end_type begin_name get type end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name type end_name end_expr end_return end_block 
 begin_specifier end_specifier begin_name p 4 change test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment override the project working directory param local path the path on disk end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set localpath end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name local path end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal local path end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name local path end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment find out if the file exists return true if the file exists end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name exists end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name ftp file end_name begin_operator UNP end_operator begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment if the formatter sends output to a file return that file null otherwise param fe formatter element param test one j unit test return file reference since ant 1 3 end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get output end_name begin_parameter_list begin_param begin_decl begin_type begin_name formatter element end_name end_type begin_name fe end_name end_decl end_param begin_param begin_decl begin_type begin_name j unit test end_name end_type begin_name test end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name fe end_name begin_operator DOT end_operator begin_name get use file end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name base end_name begin_init begin_expr begin_call begin_name begin_name test end_name begin_operator DOT end_operator begin_name get outfile end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name base end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name base end_name begin_operator EQ end_operator begin_name begin_name j unit task mirror end_name begin_operator DOT end_operator begin_name j unit test runner mirror end_name begin_operator DOT end_operator begin_name ignored file name end_name end_name end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name filename end_name begin_init begin_expr begin_name base end_name begin_operator PLUS end_operator begin_call begin_name begin_name fe end_name begin_operator DOT end_operator begin_name get extension end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name dest file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name test end_name begin_operator DOT end_operator begin_name get todir end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name abs filename end_name begin_init begin_expr begin_call begin_name begin_name dest file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr begin_name abs filename end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr end_expr end_return end_block 
 begin_comment indicates whether there are any selectors here return true if there are selectors end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name has selectors end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name selectors list end_name begin_operator DOT end_operator begin_name is empty end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment return true if this resource is selected param r the resource to check return whether the resource was selected end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name is selected end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name passed end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name failed end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name count end_name begin_init begin_expr begin_call begin_name selector count end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name even end_name begin_init begin_expr begin_name count end_name begin_operator UNP end_operator begin_operator EQT end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name threshold end_name begin_init begin_expr begin_name count end_name begin_operator SLASH end_operator end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name get selectors end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name resource selector end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name is selected end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_operator PPLUS end_operator begin_name passed end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name passed end_name begin_operator GT end_operator begin_name threshold end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_name even end_name begin_operator UNP end_operator begin_name tie end_name begin_operator UNP end_operator begin_name passed end_name begin_operator EQT end_operator begin_name threshold end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_operator PPLUS end_operator begin_name failed end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name failed end_name begin_operator GT end_operator begin_name threshold end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_name even end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name tie end_name begin_operator UNP end_operator begin_name failed end_name begin_operator EQT end_operator begin_name threshold end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_else end_if end_block end_for begin_comment dummy end_comment begin_return begin_expr end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name main end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name args end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment here is a comment with an embedded tab end_comment begin_if begin_condition begin_expr begin_name mybool end_name end_expr end_condition begin_then begin_block begin_comment here is a multi line with embedded tab comment end_comment begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name mychar end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment tab end_comment end_block end_then end_if begin_comment end of if mybool end_comment end_block 
 begin_comment test remove leading path end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test remove leading path end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name remove leading path end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name remove leading path end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name remove leading path end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name remove leading path end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name remove leading path end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name remove leading path end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name remove leading path end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name remove leading path end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name normalize end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name remove leading path end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name normalize end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name remove leading path end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment bugzilla report 19979 end_comment begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name remove leading path end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name remove leading path end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name remove leading path end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name remove leading path end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name expected end_name begin_init begin_expr begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name expected end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name remove leading path end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name expected end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name remove leading path end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name expected end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name remove leading path end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the message which gets displayed to the user during the build run param message the message to be displayed end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set message end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name message end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name message end_name end_name begin_operator EQ end_operator begin_name message end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name message attribute end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment reconfigure the element even if it has already been configured param p the project instance for this configuration end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name reconfigure end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name proxy configured end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name maybe configure end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment flag to enable proxy settings optional deprecated consider using lt setproxy gt instead param use proxy if ture enable proxy settings deprecated since 1 5 x use org apache tools ant taskdefs optional set proxy end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set useproxy end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name use proxy end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name use proxy end_name end_name begin_operator EQ end_operator begin_name use proxy end_name end_expr end_expr_stmt end_block 
 begin_comment the destination directory if any return the destination directory since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get destdir end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name dest dir end_name end_expr end_return end_block 
 begin_comment get the begin token for this filterset return the filter set s begin token for filtering end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get begin token end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name get ref end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get begin token end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr begin_name start of token end_name end_expr end_return end_block 
 begin_comment set the footer text to be placed at the bottom of each output file param footer the footer text end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set footer end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name footer end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name html end_name end_type begin_name h end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name html end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name h end_name begin_operator DOT end_operator begin_name add text end_name end_name begin_argument_list begin_argument begin_expr begin_name footer end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add footer end_name begin_argument_list begin_argument begin_expr begin_name h end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment log an output message param line the line to putput param message level the level of logging ignored if output is going to a file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name output log end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name line end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name message level end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name fos end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument begin_argument begin_expr begin_name message level end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name fos end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment set the archive file attribute param value a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set archive end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add arg end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument begin_argument begin_expr begin_name attr archive end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name task finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment tests if this enumeration contains more elements return code true code if and only if this enumeration object contains at least one more element to provide code false code otherwise end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name has more elements end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name pos end_name begin_operator LT end_operator begin_name begin_name array end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment utility method to set the appropriate property to indicate that specified file satisfies library requirements param file the library end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set library property end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set new property end_name begin_argument_list begin_argument begin_expr begin_name property name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment build a string list of all schema locations then set the relevant property end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add schema locations end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name iterator end_name end_type begin_name it end_name begin_init begin_expr begin_call begin_name begin_name schema locations end_name begin_operator DOT end_operator begin_name values end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name buffer end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name count end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name it end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_if begin_condition begin_expr begin_name count end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name schema location end_name end_type begin_name schema location end_name begin_init begin_expr begin_operator LPAR end_operator begin_name schema location end_name begin_operator RPAR end_operator begin_call begin_name begin_name it end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name tuple end_name begin_init begin_expr begin_call begin_name begin_name schema location end_name begin_operator DOT end_operator begin_name get ur iand location end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name tuple end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name tuple end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name count end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_while begin_if begin_condition begin_expr begin_name count end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set property end_name begin_argument_list begin_argument begin_expr begin_name begin_name xml constants end_name begin_operator DOT end_operator begin_name property schema location end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 2 end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set seven end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a message element param message the message object throws build exception if a message has already been added end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add message end_name begin_parameter_list begin_param begin_decl begin_type begin_name message end_name end_type begin_name message end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name message end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name message end_name end_name begin_operator EQ end_operator begin_name message end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no recompile end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator MINUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get full log end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator MINUS end_operator begin_operator UNP end_operator begin_call begin_name get full log end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment deletes the cache and its underlying file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name delete end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name cache end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name properties end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cachefile end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name cache loaded end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name cache dirty end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment calculate the phase of the moon for a given date p code heavily influenced by hacklib c in a href http www nethack org nethack a p p the algorithm pre moon period 29 53058 days 30 year 365 2422 days days moon phase advances on first day of year compared to preceding year 365 2422 12 29 53058 11 years in metonic cycle time until same phases fall on the same days of the month 18 6 19 moon phase on first day of year epact 11 year 19 18 30 18 as initial condition for 1900 current phase in days first day phase days elapsed in year 6 moons 177 days 177 8 reported phases 22 11 22 for rounding pre param cal the calander return the phase of the moon as a number between 0 and 7 with 0 meaning new moon and 4 meaning full moon since 1 2 ant 1 5 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name int end_name end_type begin_name get phase of moon end_name begin_parameter_list begin_param begin_decl begin_type begin_name calendar end_name end_type begin_name cal end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name day of the year end_name begin_init begin_expr begin_call begin_name begin_name cal end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name day of year end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name year in metonic cycle end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_call begin_name begin_name cal end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name year end_name end_name end_expr end_argument end_argument_list end_call begin_operator MINUS end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name epact end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator STAR end_operator begin_name year in metonic cycle end_name begin_operator PLUS end_operator begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name epact end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name year in metonic cycle end_name begin_operator GT end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_name epact end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name epact end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name day of the year end_name begin_operator PLUS end_operator begin_name epact end_name begin_operator RPAR end_operator begin_operator STAR end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator SLASH end_operator begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_return end_block 
 begin_comment try to set a value on an object using reflection helper method for easier access to introspection helper set attribute param obj the object on which the attribute should be set param name the attributename param value the new value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name try to set a parameter end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name obj end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name project end_name end_type begin_name prj end_name begin_init begin_expr begin_operator LPAR end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_operator UNP end_operator begin_call begin_name project end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name introspection helper end_name end_type begin_name i helper end_name begin_init begin_expr begin_call begin_name begin_name introspection helper end_name begin_operator DOT end_operator begin_name get helper end_name end_name begin_argument_list begin_argument begin_expr begin_name prj end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name obj end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name i helper end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name prj end_name end_expr end_argument begin_argument begin_expr begin_name obj end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name begin_name org end_name begin_operator DOT end_operator begin_name apache end_name begin_operator DOT end_operator begin_name tools end_name begin_operator DOT end_operator begin_name ant end_name begin_operator DOT end_operator begin_name build exception end_name end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment no op end_comment end_block end_catch end_try end_block 
 begin_comment create a filterset from another filterset param filterset the filterset upon which this filterset will be based end_comment begin_specifier end_specifier begin_name filter set end_name begin_parameter_list begin_param begin_decl begin_type begin_name filter set end_name end_type begin_name filterset end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name filters end_name end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name vector end_name begin_operator RPAR end_operator begin_call begin_name begin_name filterset end_name begin_operator DOT end_operator begin_name get filters end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name clone end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the run time return the run time in milliseconds end_comment begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name get run time end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name run time end_name end_expr end_return end_block 
 begin_comment set the pbranch flag param pbranch the status to set the flag to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set pbranch end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name pbranch end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m pbranch end_name begin_operator EQ end_operator begin_name pbranch end_name end_expr end_expr_stmt end_block 
 begin_comment return true if this resource is selected param r the resource to check return whether the resource was selected end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is selected end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name n end_name begin_init begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name selector utils end_name begin_operator DOT end_operator begin_name match end_name end_name begin_argument_list begin_argument begin_expr begin_name pattern end_name end_expr end_argument begin_argument begin_expr begin_name n end_name end_expr end_argument begin_argument begin_expr begin_name cs end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name s end_name begin_init begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name n end_name end_expr end_argument end_argument_list end_call begin_operator QM end_operator begin_operator DP end_operator begin_call begin_name begin_name selector utils end_name begin_operator DOT end_operator begin_name match end_name end_name begin_argument_list begin_argument begin_expr begin_name pattern end_name end_expr end_argument begin_argument begin_expr begin_name s end_name end_expr end_argument begin_argument begin_expr begin_name cs end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment find out the build file return the build file to which the xml context belongs end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get build file end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name build file end_name end_expr end_return end_block 
 begin_comment return the line number since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get line number end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name line number end_name end_expr end_return end_block 
 begin_comment empty implementation required by sub build listener interface param event ignored since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name message logged end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test filename as param no setting end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert file contains end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert file contains end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert file contains end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert file contains end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 1 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return a string representation of this object return string representation of object end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name brace end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string buffer end_name end_type begin_name sb end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name specification title end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name brace end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name specification title end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name specification version end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name specification version end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name brace end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name specification version end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name specification vendor end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name specification vendor end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name brace end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name specification vendor end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name implementation title end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name implementation title end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name brace end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name implementation title end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name implementation version end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name implementation version end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name brace end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name implementation version end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name implementation vendor end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name implementation vendor end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name brace end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name implementation vendor end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment constructor specifing a name for the encoded buffer begin line will be pre begin 644 name pre param name the name of the encoded buffer end_comment begin_specifier end_specifier begin_name uu encoder end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name name end_name end_name begin_operator EQ end_operator begin_name name end_name end_expr end_expr_stmt end_block 
 begin_comment creates a new strip line comments using the passed in reader for instantiation param rdr a reader object providing the underlying stream must not be code null code return a new filter based on this configuration but filtering the specified reader end_comment begin_type begin_specifier end_specifier begin_name reader end_name end_type begin_name chain end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name reader end_name end_type begin_name rdr end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name strip line comments end_name end_type begin_name new filter end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name strip line comments end_name begin_argument_list begin_argument begin_expr begin_name rdr end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name new filter end_name begin_operator DOT end_operator begin_name set comments end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get comments end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name new filter end_name begin_operator DOT end_operator begin_name set initialized end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name new filter end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name char end_name begin_operator RPAR end_operator begin_name b end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment apply all the assertions to the command param command the command line to format end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name apply assertions end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline java end_name end_type begin_name command end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name assertions end_name end_type begin_name clause end_name begin_init begin_expr begin_call begin_name get final reference end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment do the system assertions end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name true end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name clause end_name begin_operator DOT end_operator begin_name enable system assertions end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name add vm argument end_name begin_argument_list begin_argument begin_expr begin_name command end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name false end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name clause end_name begin_operator DOT end_operator begin_name enable system assertions end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name add vm argument end_name begin_argument_list begin_argument begin_expr begin_name command end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if begin_comment now any inner assertions end_comment begin_decl_stmt begin_decl begin_type begin_name iterator end_name end_type begin_name it end_name begin_init begin_expr begin_call begin_name begin_name clause end_name begin_operator DOT end_operator begin_name assertion list end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name it end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name base assertion end_name end_type begin_name assertion end_name begin_init begin_expr begin_operator LPAR end_operator begin_name base assertion end_name begin_operator RPAR end_operator begin_call begin_name begin_name it end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name arg end_name begin_init begin_expr begin_call begin_name begin_name assertion end_name begin_operator DOT end_operator begin_name to command end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name add vm argument end_name begin_argument_list begin_argument begin_expr begin_name command end_name end_expr end_argument begin_argument begin_expr begin_name arg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block 
 begin_comment adds a group of zip files param set the group a fileset to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add zip group fileset end_name begin_parameter_list begin_param begin_decl begin_type begin_name file set end_name end_type begin_name set end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name groupfilesets end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name set end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name list end_name end_type begin_name enum 2 list end_name begin_parameter_list begin_param begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment jdk 1 4 return collections list e end_comment begin_decl_stmt begin_decl begin_type begin_name list end_name end_type begin_name l end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name l end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_return begin_expr begin_name l end_name end_expr end_return end_block 
 begin_comment returns the adder or creator method of a named nested element param element name the name of the attribute to find the setter method of must not be code null code return the method on this introspected class that adds or creates this nested element can be code null code when the introspected class is a dynamic configurator throws build exception if the introspected class does not support the named nested element since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name method end_name end_type begin_name get element method end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name element name end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name creator end_name begin_init begin_expr begin_call begin_name begin_name nested creators end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name element name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name creator end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name unsupported element exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name bean end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name element name end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name element name end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name nested creator end_name begin_operator RPAR end_operator begin_name creator end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_name method end_name end_expr end_return end_block 
 begin_comment empty implementation end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set to end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment creates a new code tar file set code instance end_comment begin_specifier end_specifier begin_name tar file set end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment try a keyword in a file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test keyword end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute jsp compile end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment param default value the default value for the implementation must not be null end_comment begin_specifier end_specifier begin_name facade task helper end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name default value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr begin_name default value end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment since ant 1 5 2 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name zip scanner end_name end_type begin_name get zip scanner end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name zs end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name zs end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name zip scanner end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name zs end_name begin_operator DOT end_operator begin_name set encoding end_name end_name begin_argument_list begin_argument begin_expr begin_name encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name zs end_name begin_operator DOT end_operator begin_name set src end_name end_name begin_argument_list begin_argument begin_expr begin_name zip file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name zs end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name assert empty end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name is empty end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add an element element param element an element nested element end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add configured element end_name begin_parameter_list begin_param begin_decl begin_type begin_name template element end_name end_type begin_name element end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name element end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name elements end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name element end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name element end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name has implicit element end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name element end_name begin_operator DOT end_operator begin_name is implicit end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name elements end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name has implicit element end_name begin_operator EQ end_operator begin_call begin_name begin_name element end_name begin_operator DOT end_operator begin_name is implicit end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name elements end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name element end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name element end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a path to the url all elements in the path will be converted to individual url entries param path a path value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add path end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name path end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name paths end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set fourteen end_name begin_parameter_list begin_param begin_decl begin_type begin_name string buffer end_name end_type begin_name sb end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the token to replace param token code string code token end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set token end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name token end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name token end_name end_name begin_operator EQ end_operator begin_name token end_name end_expr end_expr_stmt end_block 
 begin_comment create a new regular expression matcher instance param p project whose ant regexp regexpimpl property will be used return the matcher instance throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name regexp end_name end_type begin_name new regexp end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name system default end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name p end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name system default end_name begin_operator EQ end_operator begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name system default end_name begin_operator EQ end_operator begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_name system default end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name create regexp instance end_name begin_argument_list begin_argument begin_expr begin_name system default end_name end_expr end_argument end_argument_list end_call end_expr end_return begin_comment xxx should we silently catch possible exceptions and try to end_comment begin_comment load a different implementation end_comment end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name throwable end_name end_type begin_name cause end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name test availability end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name create regexp instance end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name cause end_name begin_operator EQ end_operator begin_call begin_name or cause end_name begin_argument_list begin_argument begin_expr begin_name cause end_name end_expr end_argument begin_argument begin_expr begin_name be end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name get java version number end_name end_name begin_argument_list end_argument_list end_call begin_operator LT end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name test availability end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name create regexp instance end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name cause end_name begin_operator EQ end_operator begin_call begin_name or cause end_name begin_argument_list begin_argument begin_expr begin_name cause end_name end_expr end_argument begin_argument begin_expr begin_name be end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name test availability end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name create regexp instance end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name cause end_name begin_operator EQ end_operator begin_call begin_name or cause end_name begin_argument_list begin_argument begin_expr begin_name cause end_name end_expr end_argument begin_argument begin_expr begin_name be end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name cause end_name begin_operator UNP end_operator begin_operator QM end_operator begin_operator PLUS end_operator begin_name cause end_name begin_operator DP end_operator begin_operator RPAR end_operator end_expr end_argument begin_argument begin_expr begin_name cause end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test script filter end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name has script end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_return end_return end_then end_if begin_expr_stmt begin_expr begin_call begin_name expect file contains end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns a value for a given key from the cache param key the key return the stored value end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name get end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name key end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name cache loaded end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name load end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_try begin_block begin_return begin_expr begin_call begin_name begin_name cache end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name string end_name begin_operator DOT end_operator begin_name value of end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class cast exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block end_catch end_try end_block 
 begin_comment add a collection of resources upon which to operate param rc resource collection to add since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource collection end_name end_type begin_name rc end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name resources end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name resources end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name union end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name resources end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name rc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test my own name end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name j unit version helper end_name begin_operator DOT end_operator begin_name get test case name end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name testrvcontent end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return true if this resource is selected param r the resource to check return whether the resource was selected end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is selected end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name get selectors end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name resource selector end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name is selected end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_for begin_return begin_expr end_expr end_return end_block 
 begin_comment close the reader throws io exception if there is an error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name close end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name reader end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment the p 4 username optional defaults to the current user param p 4 user the user name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set user end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name p 4 user end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name p 4 user end_name end_name begin_operator EQ end_operator begin_operator PLUS end_operator begin_name p 4 user end_name end_expr end_expr_stmt end_block 
 begin_comment set the file to which standard error is to be redirected param error the file to which error is to be written end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set error end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name error end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set error end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name error end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator DP end_operator begin_operator UNP end_operator begin_name begin_name file end_name begin_index end_index end_name begin_block begin_expr begin_name error end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment execute the created command line throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name result end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name build cmd line end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name run end_name begin_argument_list begin_argument begin_expr begin_name command line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name result end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment this is the exit status end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment when using this as a custom selector this method will be called it translates each parameter into the appropriate set xxx call param parameters the complete set of parameters for this selector end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set parameters end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name parameter end_name begin_index end_index end_name end_type begin_name parameters end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set parameters end_name end_name begin_argument_list begin_argument begin_expr begin_name parameters end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name parameters end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name parameters end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name paramname end_name begin_init begin_expr begin_name begin_name parameters end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name type key end_name begin_operator DOT end_operator begin_name equals ignore case end_name end_name begin_argument_list begin_argument begin_expr begin_name paramname end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name file type end_name end_type begin_name t end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file type end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name parameters end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set type end_name begin_argument_list begin_argument begin_expr begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name set error end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name paramname end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_for end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get parameter end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name file name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name csharp style end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name buffer end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name is embed end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_operator DP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name file name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name csharp style end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name get public end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_call begin_name get public end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get public end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name boolean value end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_operator DP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name get public end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_else end_if end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment a debug to string return a string version of this object end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name regex end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name prefix end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name builtin end_name end_expr end_return end_block 
 begin_comment return the output property value end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get value end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name value end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test trimignore end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name expect log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment whether this task can deal with non file resources p this implementation returns true only if this task is lt gunzip gt any subclass of this class that also wants to support non file resources needs to override this method we need to do so for backwards compatibility reasons since we can t expect subclasses to support resources p return true if this class supports non file resources since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name supports non file resources end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get class end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name b unzip 2 end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment do nothing constructor end_comment begin_specifier end_specifier begin_name base selector end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name substring end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name begin end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name end end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name begin end_name end_expr end_argument begin_argument begin_expr begin_name end end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment sets the file location where this task was defined param location the file location where this task was defined should not be code null code use location unknown location if the location isn t known see location unknown location end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set location end_name begin_parameter_list begin_param begin_decl begin_type begin_name location end_name end_type begin_name location end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name location end_name end_name begin_operator EQ end_operator begin_name location end_name end_expr end_expr_stmt end_block 
 begin_comment creates an exception that indicates that this xml element must not have child elements if the refid attribute is set return build exception end_comment begin_type begin_specifier end_specifier begin_name build exception end_name end_type begin_name no children allowed end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment no args constructor end_comment begin_specifier end_specifier begin_name native 2 ascii end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name facade end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name facade task helper end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name native 2 ascii adapter factory end_name begin_operator DOT end_operator begin_name get default end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment exact match end_comment begin_comment return string representation of code dewey decimal code return the string representation of dewey decimal end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string buffer end_name end_type begin_name sb end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name components end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name i end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name components end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment merge in another section param section the section to be merged with this one throws manifest exception if the sections cannot be merged end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name merge end_name begin_parameter_list begin_param begin_decl begin_type begin_name section end_name end_type begin_name section end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name manifest exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name name end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name section end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_name name end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name equals ignore case end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name section end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name manifest exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name section end_name begin_operator DOT end_operator begin_name get attribute keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name attribute end_name end_type begin_name classpath attribute end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name attribute name end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name attribute end_name end_type begin_name attribute end_name begin_init begin_expr begin_call begin_name begin_name section end_name begin_operator DOT end_operator begin_name get attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name attribute name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name attribute name end_name begin_operator DOT end_operator begin_name equals ignore case end_name end_name begin_argument_list begin_argument begin_expr begin_name attribute classpath end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name classpath attribute end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name classpath attribute end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name attribute end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name classpath attribute end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr begin_name attribute classpath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name cpe end_name begin_init begin_expr begin_call begin_name begin_name attribute end_name begin_operator DOT end_operator begin_name get values end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name cpe end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name value end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name cpe end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name classpath attribute end_name begin_operator DOT end_operator begin_name add value end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block end_then begin_else begin_block begin_comment the merge file always wins end_comment begin_expr_stmt begin_expr begin_call begin_name store attribute end_name begin_argument_list begin_argument begin_expr begin_name attribute end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_while begin_if begin_condition begin_expr begin_name classpath attribute end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment the merge file always wins even for class path end_comment begin_expr_stmt begin_expr begin_call begin_name store attribute end_name begin_argument_list begin_argument begin_expr begin_name classpath attribute end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment add in the warnings end_comment begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name warn enum end_name begin_init begin_expr begin_call begin_name begin_name section end_name begin_operator DOT end_operator begin_name warnings end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name warn enum end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name warnings end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name warn enum end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block 
 begin_comment enable quiet mode defaults to false param quiet the boolean value for quiet end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set quiet end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name quiet end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal quiet end_name end_name begin_argument_list begin_argument begin_expr begin_name quiet end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor for dummy instances see base filter reader base filter reader end_comment begin_specifier end_specifier begin_name strip line breaks end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment processes checks out code st files code files from star team folder param each file repository file to process param target folder a java io file folder to work throws io exception when star team api fails to work with files end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process file end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name com end_name begin_operator DOT end_operator begin_name starbase end_name begin_operator DOT end_operator begin_name starteam end_name begin_operator DOT end_operator begin_name file end_name end_name end_type begin_name each file end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name filename end_name begin_init begin_expr begin_call begin_name begin_name each file end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment if the file doesn t pass the include exclude tests skip it end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name should process end_name begin_argument_list begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get full repository path end_name begin_argument_list begin_argument begin_expr begin_name each file end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name checkin end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name file status end_name begin_init begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name each file end_name begin_operator DOT end_operator begin_name get status end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_init end_decl end_decl_stmt begin_comment we try to update the status once to give star team end_comment begin_comment another chance end_comment begin_if begin_condition begin_expr begin_name file status end_name begin_operator EQT end_operator begin_name begin_name status end_name begin_operator DOT end_operator begin_name merge end_name end_name begin_operator UNP end_operator begin_name file status end_name begin_operator EQT end_operator begin_name begin_name status end_name begin_operator DOT end_operator begin_name unknown end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name each file end_name begin_operator DOT end_operator begin_name update status end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name file status end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_call begin_name begin_name each file end_name begin_operator DOT end_operator begin_name get status end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name file status end_name begin_operator EQT end_operator begin_name begin_name status end_name begin_operator DOT end_operator begin_name modified end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name describe checkin end_name begin_argument_list begin_argument begin_expr begin_name each file end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name file status end_name begin_operator EQT end_operator begin_name begin_name status end_name begin_operator DOT end_operator begin_name missing end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name describe checkin end_name begin_argument_list begin_argument begin_expr begin_name each file end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name checkin end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_call begin_name is forced end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name describe checkin end_name begin_argument_list begin_argument begin_expr begin_name each file end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name status end_name begin_operator DOT end_operator begin_name name end_name end_name begin_argument_list begin_argument begin_expr begin_name file status end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get full repository path end_name begin_argument_list begin_argument begin_expr begin_name each file end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name status end_name begin_operator DOT end_operator begin_name name end_name end_name begin_argument_list begin_argument begin_expr begin_name file status end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name checkin end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_else end_if end_block end_else end_if end_else end_if begin_if begin_condition begin_expr begin_name checkin end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name each file end_name begin_operator DOT end_operator begin_name checkin end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name comment end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name lock status end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name is forced end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment ignore exception end_comment begin_comment this is implemented to listen for any line events and closes the clip if required param event the line event to follow end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name update end_name begin_parameter_list begin_param begin_decl begin_type begin_name line event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get type end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name line event end_name begin_operator DOT end_operator begin_name type end_name begin_operator DOT end_operator begin_name stop end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name line end_name end_type begin_name line end_name begin_init begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get line end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get type end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name line event end_name begin_operator DOT end_operator begin_name type end_name begin_operator DOT end_operator begin_name close end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment there is a bug in java sound 0 90 jdk 1 3 beta it prevents correct termination of the vm so we have to exit ourselves end_comment begin_comment system exit 0 end_comment end_block end_then end_if end_else end_if end_block 
 begin_comment add all patterns that are not real patterns do not contain wildcards to the set and returns the real patterns param set set to populate param patterns string of patterns since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name fill non pattern set end_name begin_parameter_list begin_param begin_decl begin_type begin_name set end_name end_type begin_name set end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name patterns end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name array list end_name end_type begin_name al end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list begin_argument begin_expr begin_name begin_name patterns end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name patterns end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name selector utils end_name begin_operator DOT end_operator begin_name has wildcards end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name patterns end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name set end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name is case sensitive end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_name begin_name patterns end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DP end_operator begin_name begin_name patterns end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name to upper case end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name al end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name patterns end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_for begin_return begin_expr begin_call begin_name begin_name set end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator QM end_operator begin_name patterns end_name begin_operator DP end_operator begin_operator LPAR end_operator begin_name begin_name string end_name begin_index end_index end_name begin_operator RPAR end_operator begin_call begin_name begin_name al end_name begin_operator DOT end_operator begin_name to array end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_call begin_name begin_name al end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment check style visibility modifier on end_comment begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set project end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fileset end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the comparison for use as a condition param c comparison an enumerated attribute when see org apache tools ant types comparison end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set when end_name begin_parameter_list begin_param begin_decl begin_type begin_name comparison end_name end_type begin_name c end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name when end_name begin_operator EQ end_operator begin_name c end_name end_expr end_expr_stmt end_block 
 begin_comment sets a single source file to touch if the file does not exist an empty file will be created param file the code file code to touch end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name file end_name end_name begin_operator EQ end_operator begin_name file end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name eval end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block 
 begin_comment creates a new xslt process task end_comment begin_specifier end_specifier begin_name xslt process end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment interval to poll for completed threads when thread count or threads per processor is specified integer in milliseconds optional param poll interval new value of property poll interval end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set poll interval end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name poll interval end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment set the value attribute param value a code string code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set value end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name value end_name end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block 
 begin_comment no argument conmstructor end_comment begin_specifier end_specifier begin_name filter end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set partition end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name partition end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name partition end_name end_name begin_operator EQ end_operator begin_name partition end_name end_expr end_expr_stmt end_block 
 begin_comment specifies whether to use passive mode set to true if you are behind a firewall and cannot connect without it passive mode is disabled by default param passive true is passive mode should be used end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set passive end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name passive end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name passive end_name end_name begin_operator EQ end_operator begin_name passive end_name end_expr end_expr_stmt end_block 
 begin_comment builds a command line to execute ss return the constructed commandline end_comment begin_type begin_name commandline end_name end_type begin_name build cmd line end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name commandline end_name end_type begin_name command line end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name commandline end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment first off make sure that we ve got a command and a vssdir and a label end_comment begin_if begin_condition begin_expr begin_call begin_name get vsspath end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name label end_name begin_init begin_expr begin_call begin_name get label end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name label end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment build the command line from what we got the format is end_comment begin_comment ss label vss items c h i llabel n o v y end_comment begin_comment as specified in the ss exe help end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name set executable end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get ss command end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name command label end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment vss items end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get vsspath end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment c end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get comment end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment i or i y or i n end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get autoresponse end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment l specify the new label on the command line instead of being prompted end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name label end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment v label an existing file or project version end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get version end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment y end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get login end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name command line end_name end_expr end_return end_block 
 begin_comment convert the value to a calendar field index return the calander value end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get calendar field end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name key end_name begin_init begin_expr begin_call begin_name get value end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to lower case end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name integer end_name end_type begin_name i end_name begin_init begin_expr begin_operator LPAR end_operator begin_name integer end_name begin_operator RPAR end_operator begin_call begin_name begin_name calendar fields end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name int value end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment return the result of the filters on the sourcefilename param source file name the filename to map return a one element array of converted filenames or null if the filterchain returns an empty string end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name map file name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name source file name end_name end_decl end_param end_parameter_list begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name reader end_name end_type begin_name string reader end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string reader end_name begin_argument_list begin_argument begin_expr begin_name source file name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name chain reader helper end_name end_type begin_name helper end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name chain reader helper end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name set buffer size end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name set primary reader end_name end_name begin_argument_list begin_argument begin_expr begin_name string reader end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name filter chains end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name filter chains end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name set filter chains end_name end_name begin_argument_list begin_argument begin_expr begin_name filter chains end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name read fully end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name get assembled reader end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr begin_name result end_name end_expr end_block end_expr end_return end_block end_else end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_name ex end_name end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name ex end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment loads a class through this class loader even if that class is available on the parent classpath this ensures that any classes which are loaded by the returned class will use this classloader param classname the name of the class to be loaded must not be code null code return the required class object exception class not found exception if the requested class does not exist on this loader s classpath end_comment begin_type begin_specifier end_specifier begin_name class end_name end_type begin_name force load class end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name classname end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name class not found exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name classname end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name the class end_name begin_init begin_expr begin_call begin_name find loaded class end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name the class end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name the class end_name begin_operator EQ end_operator begin_call begin_name find class end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name the class end_name end_expr end_return end_block 
 begin_comment iterate over all filesets and return the filename of all files that end with tt java tt or tt class tt this is to avoid wrapping a tt j unit test tt over an xml file for example a testcase is obviously a java file compiled or not return an array of filenames without their extension as they should normally be taken from their root filenames should match their fully qualified class name if it is not the case it will fail when running the test for the class tt org apache whatever class tt it will return tt org apache whatever tt end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get filenames end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name v end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name iterator end_name end_type begin_name iter end_name begin_init begin_expr begin_call begin_name begin_name resources end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name resource end_name end_type begin_name r end_name begin_init begin_expr begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name is exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name pathname end_name begin_init begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name pathname end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name pathname end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name pathname end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name pathname end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name pathname end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name pathname end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if end_block end_then end_if end_block end_while begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name files end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name copy into end_name end_name begin_argument_list begin_argument begin_expr begin_name files end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name files end_name end_expr end_return end_block 
 begin_comment helper method to set the project on an object the reflection set project does not work for anonymous protected private classes even if they have public methods end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set project on object end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name obj end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name project end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name obj end_name begin_operator UNP end_operator begin_name base filter reader end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name base filter reader end_name begin_operator RPAR end_operator begin_name obj end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name set project end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name set project reference end_name end_name begin_argument_list begin_argument begin_expr begin_name obj end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment does replacement on text using the hashtable of keys param orig string an input string param keys mapping of keys to values return the string with the replacements in it throws build exception on error end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name replace end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name orig string end_name end_decl end_param begin_param begin_decl begin_type begin_name hashtable end_name end_type begin_name keys end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name final string end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name index end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name key end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_operator LPAR end_operator begin_name index end_name begin_operator EQ end_operator begin_call begin_name begin_name orig string end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name key end_name begin_operator EQ end_operator begin_call begin_name begin_name orig string end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name index end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name orig string end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name index end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name final string end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name orig string end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument begin_argument begin_expr begin_name index end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name keys end_name begin_operator DOT end_operator begin_name contains key end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name final string end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name keys end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name final string end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name final string end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name final string end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_name i end_name begin_operator EQ end_operator begin_name index end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name key end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_call begin_name begin_name final string end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name orig string end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name final string end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment see directory scanner get included dirs count end_comment begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get included dirs count end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment determines the default choice of adapter based on the vm vendor return the default choice of adapter based on the vm vendor end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get default end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name is kaffe end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name begin_name kaffeh end_name begin_operator DOT end_operator begin_name implementation name end_name end_name end_expr end_return end_block end_then end_if begin_return begin_expr begin_name begin_name sun javah end_name begin_operator DOT end_operator begin_name implementation name end_name end_name end_expr end_return end_block 
 begin_comment sets the src file for scanning this is the jar or zip file that is scanned for matching entries param src file the non null archive file name for scanning end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set src end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name src file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set src end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file resource end_name begin_argument_list begin_argument begin_expr begin_name src file end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment map from a jsp file to a java filename does not do packages param jsp file file return java filename end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name map jsp to java name end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name jsp file end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name jsp uri end_name begin_init begin_expr begin_call begin_name begin_name jsp file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name start end_name begin_init begin_expr begin_call begin_name begin_name jsp uri end_name begin_operator DOT end_operator begin_name last index of end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name end end_name begin_init begin_expr begin_call begin_name begin_name jsp uri end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name modified class name end_name end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name modified class name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name jsp uri end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator begin_name start end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name is java identifier start end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name jsp uri end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name start end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name jsp uri end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name start end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment if the first char is not a start of java identifier or is end_comment begin_comment prepend a end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name modified class name end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr begin_name start end_name end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name end end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name ch end_name begin_init begin_expr begin_call begin_name begin_name jsp uri end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name is java identifier part end_name end_name begin_argument_list begin_argument begin_expr begin_name ch end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name modified class name end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name ch end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name ch end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name modified class name end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name modified class name end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name mangle char end_name begin_argument_list begin_argument begin_expr begin_name ch end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if end_block end_for begin_return begin_expr begin_call begin_name begin_name modified class name end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment the value of the executable attribute if any since ant 1 6 return the name of the java executable end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get executable end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name forked executable end_name end_expr end_return end_block 
 begin_comment the name of a property file from which properties specified using nested code lt replacefilter gt code elements are drawn required only if the i property i attribute of code lt replacefilter gt code is used param property file code file code to load end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set property file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name property file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name property file end_name end_name begin_operator EQ end_operator begin_name property file end_name end_expr end_expr_stmt end_block 
 begin_comment mock cache doesnt create a file therefore no cleanup needed end_comment begin_comment extracts the real used algorithm name from the modified selector using its to string method param classname the classname from the algorithm to use return the algorithm part from the to string without brackets end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get algo name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name classname end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name modified selector end_name end_type begin_name sel end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name modified selector end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment add the test classes to its classpath end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name sel end_name begin_operator DOT end_operator begin_name add classpath end_name end_name begin_argument_list begin_argument begin_expr begin_name testclasses end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sel end_name begin_operator DOT end_operator begin_name set algorithm class end_name end_name begin_argument_list begin_argument begin_expr begin_name classname end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment let the selector do its checks end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name sel end_name begin_operator DOT end_operator begin_name validate end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment extract the algorithm name and config from the selectors output end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name s 1 end_name begin_init begin_expr begin_call begin_name begin_name sel end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name pos start end_name begin_init begin_expr begin_call begin_name begin_name s 1 end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name pos end end_name begin_init begin_expr begin_call begin_name begin_name s 1 end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name algo end_name begin_init begin_expr begin_call begin_name begin_name s 1 end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name pos start end_name end_expr end_argument begin_argument begin_expr begin_name pos end end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment and are only used if the algorithm has properties end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name algo end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_expr_stmt begin_expr begin_name algo end_name begin_operator EQ end_operator begin_call begin_name begin_name algo end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name algo end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_expr_stmt begin_expr begin_name algo end_name begin_operator EQ end_operator begin_call begin_name begin_name algo end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name algo end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_then end_if begin_comment return the clean value end_comment begin_return begin_expr begin_name algo end_name end_expr end_return end_block 
 begin_comment report the content of ant home lib directory param out the stream to print the content to end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name do report ant properties end_name begin_parameter_list begin_param begin_decl begin_type begin_name print stream end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name project end_name end_type begin_name p end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name project end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name init properties end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name ant version end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name ant version end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name ant java version end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name ant java version end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name ant lib end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name ant lib end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name ant home end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name ant home end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment do the task throws build exception if there is an error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_comment load command line with optional attributes end_comment begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name iter end_name begin_init begin_expr begin_call begin_name begin_name optional attrs end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name value end_name begin_init begin_expr begin_call begin_name begin_name optional attrs end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmdl end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_if begin_condition begin_expr begin_name target file end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name target file end_name begin_operator DOT end_operator begin_name is file end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name target file end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name output file end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmdl end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name output file end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name output file end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment use the directory containing the target as the output directory end_comment begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name java file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name create output file name end_name begin_argument_list begin_argument begin_expr begin_name target file end_name end_expr end_argument begin_argument begin_expr begin_name output file end_name end_expr end_argument begin_argument begin_expr begin_name plain text end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name java file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name target file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call begin_operator LT end_operator begin_call begin_name begin_name java file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name target file end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name cmdl end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name target file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name classpath end_name begin_init begin_expr begin_call begin_name begin_name cmdl end_name begin_operator DOT end_operator begin_name create classpath end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name javacc jar end_name begin_init begin_expr begin_call begin_name begin_name java cc end_name begin_operator DOT end_operator begin_name get archive file end_name end_name begin_argument_list begin_argument begin_expr begin_name javacc home end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name classpath end_name begin_operator DOT end_operator begin_name create path element end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set path end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name javacc jar end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name classpath end_name begin_operator DOT end_operator begin_name add java runtime end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmdl end_name begin_operator DOT end_operator begin_name set classname end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name java cc end_name begin_operator DOT end_operator begin_name get main class end_name end_name begin_argument_list begin_argument begin_expr begin_name classpath end_name end_expr end_argument begin_argument begin_expr begin_name begin_name java cc end_name begin_operator DOT end_operator begin_name taskdef type jjdoc end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name argument end_name end_name end_type begin_name arg end_name begin_init begin_expr begin_call begin_name begin_name cmdl end_name begin_operator DOT end_operator begin_name create vm argument end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name javacc home end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name execute end_name end_type begin_name process end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name execute end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name log stream handler end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name cmdl end_name begin_operator DOT end_operator begin_name describe command end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name process end_name begin_operator DOT end_operator begin_name set commandline end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name cmdl end_name begin_operator DOT end_operator begin_name get commandline end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name process end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment any extra wsdl exe options which aren t explicitly supported by the ant wrapper task optional param extra options the new extra options value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set extra options end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name extra options end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name extra options end_name end_name begin_operator EQ end_operator begin_name extra options end_name end_expr end_expr_stmt end_block 
 begin_comment test for a string containing something useful param s string in return true if the argument is not null or empty end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name not empty end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_name s end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name s end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_return end_block 
 begin_comment overrides the version of data type to recurse on all data type child elements that may have been added param stk the stack of data types to use recursively param p the project to use to dereference the references throws build exception on error end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name die on circular reference end_name begin_parameter_list begin_param begin_decl begin_type begin_name stack end_name end_type begin_name stk end_name end_decl end_param begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name is checked end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name die on circular reference end_name end_name begin_argument_list begin_argument begin_expr begin_name stk end_name end_expr end_argument begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_name rc end_name begin_operator UNP end_operator begin_name data type end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name stk end_name begin_operator DOT end_operator begin_name push end_name end_name begin_argument_list begin_argument begin_expr begin_name rc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name invoke circular reference check end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name data type end_name begin_operator RPAR end_operator begin_name rc end_name end_expr end_argument begin_argument begin_expr begin_name stk end_name end_expr end_argument begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name stk end_name begin_operator DOT end_operator begin_name pop end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name set checked end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment check that this task has been configured properly throws build exception if configuration errors are detected since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name check configuration end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name file end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name resources end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name file end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name date time end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_name date time configured end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name workmillis end_name begin_init begin_expr begin_name millis end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name date format end_name end_type begin_name df end_name begin_init begin_expr begin_call begin_name begin_name df factory end_name begin_operator DOT end_operator begin_name get primary format end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name parse exception end_name end_type begin_name pe end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name workmillis end_name begin_operator EQ end_operator begin_call begin_name begin_name df end_name begin_operator DOT end_operator begin_name parse end_name end_name begin_argument_list begin_argument begin_expr begin_name date time end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get time end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name parse exception end_name end_type begin_name pe one end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name df end_name begin_operator EQ end_operator begin_call begin_name begin_name df factory end_name begin_operator DOT end_operator begin_name get fallback format end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name df end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name pe end_name begin_operator EQ end_operator begin_name pe one end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_try begin_block begin_expr_stmt begin_expr begin_name workmillis end_name begin_operator EQ end_operator begin_call begin_name begin_name df end_name begin_operator DOT end_operator begin_name parse end_name end_name begin_argument_list begin_argument begin_expr begin_name date time end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get time end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name parse exception end_name end_type begin_name pe two end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name pe end_name begin_operator EQ end_operator begin_name pe two end_name end_expr end_expr_stmt end_block end_catch end_try end_block end_else end_if end_block end_catch end_try begin_if begin_condition begin_expr begin_name pe end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name pe end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name pe end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name workmillis end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name date time end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name workmillis end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name millis end_name begin_operator LT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name begin_operator DP end_operator begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set millis end_name begin_argument_list begin_argument begin_expr begin_name workmillis end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment only set if successful to this point end_comment begin_expr_stmt begin_expr begin_name date time configured end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment get the file represented by this file resource ensuring it is not null return the not null file throws build exception if file is null end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get not null file end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name get file end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_return begin_expr begin_call begin_name get file end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment return the reverse loader attribute of the classpath delegate end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is reverse loader end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get delegate end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name is reverse loader end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment actual method executed by ant throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name addproperty end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr begin_name addproperty end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get task name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name addproperty end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name input request end_name end_type begin_name request end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name validargs end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name accept end_name begin_init begin_expr begin_call begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name split end_name end_name begin_argument_list begin_argument begin_expr begin_name validargs end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name request end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name multiple choice input request end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_name accept end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name request end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name input request end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name set default value end_name end_name begin_argument_list begin_argument begin_expr begin_name defaultvalue end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name input handler end_name end_type begin_name h end_name begin_init begin_expr begin_name handler end_name begin_operator EQT end_operator begin_operator QM end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get input handler end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_call begin_name begin_name handler end_name begin_operator DOT end_operator begin_name get input handler end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name h end_name begin_operator DOT end_operator begin_name handle input end_name end_name begin_argument_list begin_argument begin_expr begin_name request end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name value end_name begin_init begin_expr begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name get input end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name value end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_name defaultvalue end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name value end_name begin_operator EQ end_operator begin_name defaultvalue end_name end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name addproperty end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name value end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set new property end_name begin_argument_list begin_argument begin_expr begin_name addproperty end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment add a not selector entry on the selector list param selector the selector to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add not end_name begin_parameter_list begin_param begin_decl begin_type begin_name not selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name append selector end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name remove end_name begin_parameter_list end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name unsupported operation exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test b end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect name address 3 end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name email address end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment inner implementation of the link create and set project class logic with no exception catching param newclass class to create param project the project to use return a newly constructed and bound instance throws no such method exception no good construtor throws instantiation exception cannot initialize the object throws illegal access exception cannot access the object throws invocation target exception error in invocation end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name inner create and set end_name begin_parameter_list begin_param begin_decl begin_type begin_name class end_name end_type begin_name newclass end_name end_decl end_param begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name no such method exception end_name end_expr end_argument begin_argument begin_expr begin_name instantiation exception end_name end_expr end_argument begin_argument begin_expr begin_name illegal access exception end_name end_expr end_argument begin_argument begin_expr begin_name invocation target exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name constructor end_name end_type begin_name ctor end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name no arg end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment data type can have a no arg constructor or take a single end_comment begin_comment project argument end_comment begin_try begin_block begin_expr_stmt begin_expr begin_name ctor end_name begin_operator EQ end_operator begin_call begin_name begin_name newclass end_name begin_operator DOT end_operator begin_name get constructor end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name class end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name no arg end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no such method exception end_name end_type begin_name nse end_name end_decl end_param end_parameter_list begin_block begin_comment can throw the same exception if there is no this project ctor end_comment begin_expr_stmt begin_expr begin_name ctor end_name begin_operator EQ end_operator begin_call begin_name begin_name newclass end_name begin_operator DOT end_operator begin_name get constructor end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name class end_name begin_index end_index end_name begin_block begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name no arg end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_catch end_try begin_comment now we instantiate end_comment begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name o end_name begin_init begin_expr begin_call begin_name begin_name ctor end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name no arg end_name begin_operator RPAR end_operator begin_operator QM end_operator begin_operator UNP end_operator begin_name begin_name object end_name begin_index begin_expr end_expr end_index end_name begin_operator DP end_operator begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_name project end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment set up project references end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name set project reference end_name end_name begin_argument_list begin_argument begin_expr begin_name o end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name o end_name end_expr end_return end_block 
 begin_comment no op end_comment begin_comment signals a message logging event param event recieved build event end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name message logged end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_comment no op end_comment end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test verify md 5 sum as task end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set pattern end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name set pattern pending end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name regexp end_name begin_operator DOT end_operator begin_name set pattern end_name end_name begin_argument_list begin_argument begin_expr begin_name my pattern end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name set pattern pending end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment directory where code ss exe code resides by default the task expects it to be in the path param dir the directory containing ss exe end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set ssdir end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name dir end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name ss dir end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name translate path end_name end_name begin_argument_list begin_argument begin_expr begin_name dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructs a new enumeration of resources of the given name found within this class loader s classpath param name the name of the resource to search for end_comment begin_name resource enumeration end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name resource name end_name end_name begin_operator EQ end_operator begin_name name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name path elements index end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name find next resource end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr begin_name taskdefs dir end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment learn whether one path leads another param leading the leading path must not be null must be absolute param path the path to remove from must not be null must be absolute return true if path starts with leading false otherwise since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is leading path end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name leading end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name path end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name l end_name begin_init begin_expr begin_call begin_name normalize end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name leading end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name p end_name begin_init begin_expr begin_call begin_name normalize end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name l end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_comment ensure that l ends with a end_comment begin_comment so we never think foo was a parent directory of foobar end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name l end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name l end_name begin_operator UNP end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr begin_name l end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name configure task end_name begin_parameter_list begin_param begin_decl begin_type begin_name task end_name end_type begin_name helper end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name set task name end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get task name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name set owning target end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get owning target end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name init end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment empty param test not used param t not used end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add error end_name begin_parameter_list begin_param begin_decl begin_type begin_name test end_name end_type begin_name test end_name end_decl end_param begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_specifier end_specifier begin_name file list test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test absolute 3 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name directory scanner end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name tmpdir end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set includes end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr begin_name tmpdir end_name begin_operator PLUS end_operator end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set excludes end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name compare files end_name begin_argument_list begin_argument begin_expr begin_name ds end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr begin_name tmpdir end_name begin_operator PLUS end_operator end_expr begin_operator UNP end_operator begin_expr begin_name tmpdir end_name begin_operator PLUS end_operator end_expr end_block end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr begin_name tmpdir end_name begin_operator PLUS end_operator end_expr begin_operator UNP end_operator begin_expr begin_name tmpdir end_name begin_operator PLUS end_operator end_expr begin_operator UNP end_operator begin_expr begin_name tmpdir end_name begin_operator PLUS end_operator end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets the sourcepath to be used for this compilation return the source path end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name get sourcepath end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name compile sourcepath end_name end_expr end_return end_block 
 begin_comment sets a property if no value currently exists if the property exists already a message is logged and the method returns with no other effect param ns the namespace for the property currently not used param name the name of property to set must not be code null code param value the new value of the property must not be code null code since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set new property end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name ns end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name properties end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name done end_name begin_init begin_expr begin_call begin_name set property hook end_name begin_argument_list begin_argument begin_expr begin_name ns end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name done end_name end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name value end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name name end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name value end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name properties end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment add a majority selector entry on the selector list param selector the code majority selector code to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add majority end_name begin_parameter_list begin_param begin_decl begin_type begin_name majority selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name append selector end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns the key for this token return the key for this token end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get key end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name key end_name end_expr end_return end_block 
 begin_comment dangerous method to obtain the classpath for the test this is severely tighted to the build xml properties end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get test class path end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name classpath end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name classpath end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name classpath end_name begin_operator EQ end_operator begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name classpath end_name end_expr end_return end_block 
 begin_comment inline manifest invalid attribute without value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 11 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a nested lt replacefilter gt element return a nested code replacefilter code object to be configured end_comment begin_type begin_specifier end_specifier begin_name replacefilter end_name end_type begin_name create replacefilter end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name replacefilter end_name end_type begin_name filter end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name replacefilter end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name replacefilters end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name filter end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name filter end_name end_expr end_return end_block 
 begin_comment get the version command param cmd command line containing the command line string with or without the version flag and string appended end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name get version command end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name get version end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes this breaks clearcase end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag version end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get version end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment learn whether this file exists return true if this resource exists end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is exists end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name is exists end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_call begin_name get not null file end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name exists end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment set the haltonfailure attribute param value a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set haltonfailure end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name halt on fail end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block 
 begin_comment return the real object used currently only for preset def end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name get real object end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name nested creator end_name begin_operator DOT end_operator begin_name get real object end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment adds location resolver to look for a library in a location relative to project directory param loc the resolver location to search end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add configured location end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name location resolver end_name end_type begin_name loc end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name resolvers end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name loc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment name of a file to use as a source of wsdl or xsd data param file the file to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name file end_name end_name begin_operator EQ end_operator begin_name file end_name end_expr end_expr_stmt end_block 
 begin_comment handles input deleate to the created project if present otherwise call the super class param buffer the buffer into which data is to be read param offset the offset into the buffer at which data is stored param length the amount of data to read return the number of bytes read exception io exception if the data cannot be read see task handle input byte int int since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name handle input end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name buffer end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name offset end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name length end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name callee end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name begin_name callee end_name begin_operator DOT end_operator begin_name handle input end_name end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name length end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name handle input end_name end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name length end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment binary or text for the string comparison style return the option compare style end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get option compare end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name option compare end_name end_name end_expr end_return end_block 
 begin_comment add a new selector into this container param selector the new selector to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name append selector end_name begin_parameter_list begin_param begin_decl begin_type begin_name file selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name selectors list end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment helper method to set result property to the passed in value if appropriate param result value desired for the result property value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name maybe set result property value end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name result end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name result property end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name res end_name begin_init begin_expr begin_call begin_name begin_name integer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set new property end_name begin_argument_list begin_argument begin_expr begin_name result property end_name end_expr end_argument begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment returns the task that fired this event return the task that fired this event or code null code if this event is a project or target level event end_comment begin_type begin_specifier end_specifier begin_name task end_name end_type begin_name get task end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name task end_name end_expr end_return end_block 
 begin_comment optional directory to save generated source files to param source base the directory to save source files to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set source base end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name source base end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name source base end_name end_name begin_operator EQ end_operator begin_name source base end_name end_expr end_expr_stmt end_block 
 begin_comment get the level of the echo of the current value return the level end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get level end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name levels end_name begin_index begin_expr begin_call begin_name get index end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name change remote dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name remote dir end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name result end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name cwd end_name end_name begin_argument_list begin_argument begin_expr begin_name remote dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name remote tmp dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_catch end_try begin_return begin_expr begin_name result end_name end_expr end_return end_block 
 begin_comment set the search parents attribute this controls the behaviour of the the file type if true the path parent path and grandparent path are searched for the file if false only the path is seached the default value is false param search parents the value to set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set search parents end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name search parents end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name search parents end_name end_name begin_operator EQ end_operator begin_name search parents end_name end_expr end_expr_stmt end_block 
 begin_comment explicitly override the mono auto detection p defaults to false on windows and true on any other platform p param b a code boolean code value since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set mono end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name is mono end_name begin_operator EQ end_operator begin_name b end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test missing dir ignore end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment password for private key if different param keypass password end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set keypass end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name keypass end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name keypass end_name end_name begin_operator EQ end_operator begin_name keypass end_name end_expr end_expr_stmt end_block 
 begin_comment do the compile with the specified arguments param args arguments to pass to process on command line param first file name index of the first source file in args if the index is negative no temporary file will ever be created but this may hit the command line length limit on your system param quote files if set to true filenames containing spaces will be quoted when they appear in the external file this is necessary when running jdk 1 4 s javac and probably others return the exit code of the compilation since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name execute external compile end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name args end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name first file name end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name quote files end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name command array end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name tmp file end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_comment many system have been reported to get into trouble with long command lines no not only windows posix seems to define a lower limit of 4 k so use a temporary file if the total length of the command line exceeds this limit end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list begin_argument begin_expr begin_name args end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_operator UNP end_operator begin_name first file name end_name begin_operator GE end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name print writer end_name end_type begin_name out end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name tmp file end_name begin_operator EQ end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name create temp file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get javac end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get tempdir end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tmp file end_name begin_operator DOT end_operator begin_name delete on exit end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name out end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name print writer end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file writer end_name begin_argument_list begin_argument begin_expr begin_name tmp file end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr begin_name first file name end_name end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name args end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name quote files end_name begin_operator UNP end_operator begin_name begin_name args end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name args end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_name begin_name args end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name args end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name args end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name command array end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_name first file name end_name begin_operator PLUS end_operator end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_name args end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name command array end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name first file name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name command array end_name begin_index begin_expr begin_name first file name end_name end_expr end_index end_name begin_operator EQ end_operator begin_operator PLUS end_operator begin_name tmp file end_name end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_name location end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name command array end_name begin_operator EQ end_operator begin_name args end_name end_expr end_expr_stmt end_block end_else end_if begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name execute end_name end_type begin_name exe end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name execute end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name log stream handler end_name begin_argument_list begin_argument begin_expr begin_name attributes end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment use the vm launcher instead of shell launcher on vms end_comment begin_comment for java end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set vm launcher end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set ant run end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set working directory end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get base dir end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set commandline end_name end_name begin_argument_list begin_argument begin_expr begin_name command array end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name get exit value end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name args end_name begin_index begin_expr end_expr end_index end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_name location end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block begin_finally begin_block begin_if begin_condition begin_expr begin_name tmp file end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name tmp file end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test rule comparator end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name rule based collator end_name end_type begin_name comp end_name begin_init begin_expr begin_operator LPAR end_operator begin_name rule based collator end_name begin_operator RPAR end_operator begin_call begin_name begin_name rule based collator end_name begin_operator DOT end_operator begin_name get instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name do test end_name begin_argument_list begin_argument begin_expr begin_name comp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the include empty dirs attribute return true if empty dirs are to be included end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get include empty dirs end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name include empty end_name end_expr end_return end_block 
 begin_comment fetches information from the named entry inside the archive end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name fetch entry end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name resource end_name end_type begin_name archive end_name begin_init begin_expr begin_call begin_name get archive end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name tar input stream end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name i end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name tar input stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name archive end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name tar entry end_name end_type begin_name te end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_operator LPAR end_operator begin_name te end_name begin_operator EQ end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name get next entry end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name te end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set entry end_name begin_argument_list begin_argument begin_expr begin_name te end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if end_block end_while end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_if begin_condition begin_expr begin_name i end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try begin_expr_stmt begin_expr begin_call begin_name set entry end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name rmic advanced test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment removes the buffer for the current thread end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name remove buffer end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name thread end_name end_type begin_name current end_name begin_init begin_expr begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name current thread end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buffers end_name begin_operator DOT end_operator begin_name remove end_name end_name begin_argument_list begin_argument begin_expr begin_name current end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns true if a label has been specified and it is a view label return true if a label has been specified and it is a view label end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is using view label end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name label in use end_name end_name begin_operator UNP end_operator begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name label in use end_name begin_operator DOT end_operator begin_name is view label end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment carry out the transfer throws io exception on i o errors throws j sch exception on errors detected by scp end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument begin_argument begin_expr begin_name j sch exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name channel sftp end_name end_type begin_name channel end_name begin_init begin_expr begin_call begin_name open sftp channel end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name channel end_name begin_operator DOT end_operator begin_name connect end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name sftp attrs end_name end_type begin_name attrs end_name begin_init begin_expr begin_call begin_name begin_name channel end_name begin_operator DOT end_operator begin_name stat end_name end_name begin_argument_list begin_argument begin_expr begin_name remote file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name attrs end_name begin_operator DOT end_operator begin_name is dir end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name remote file end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name remote file end_name begin_operator EQ end_operator begin_name remote file end_name begin_operator PLUS end_operator end_expr end_expr_stmt end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name sftp exception end_name end_type begin_name ee end_name end_decl end_param end_parameter_list begin_block begin_comment ignored end_comment end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name get dir end_name begin_argument_list begin_argument begin_expr begin_name channel end_name end_expr end_argument begin_argument begin_expr begin_name remote file end_name end_expr end_argument begin_argument begin_expr begin_name local file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name sftp exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name j sch exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_if begin_condition begin_expr begin_name channel end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name channel end_name begin_operator DOT end_operator begin_name disconnect end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name teststringoutput 2 end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string resource end_name end_type begin_name r end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string resource end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name testoutput end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name immutable resource exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment convenience method to copy a file from a source to a destination no filtering is performed param source file name of file to copy from must not be code null code param dest file name of file to copy to must not be code null code exception io exception if the copying fails deprecated since 1 4 x end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name copy file end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name source file end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name dest file end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name copy file end_name end_name begin_argument_list begin_argument begin_expr begin_name source file end_name end_expr end_argument begin_argument begin_expr begin_name dest file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name mail print stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name output stream end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment deprecated but email is byte oriented end_comment end_block 
 begin_specifier end_specifier begin_name strip java comments test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the output writer this is to allow concat to be used as a nested element param output writer the output writer since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set writer end_name begin_parameter_list begin_param begin_decl begin_type begin_name writer end_name end_type begin_name output writer end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name output writer end_name end_name begin_operator EQ end_operator begin_name output writer end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test all signed end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the runtime param run time the time in milliseconds end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set run time end_name begin_parameter_list begin_param begin_decl begin_type begin_name long end_name end_type begin_name run time end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name run time end_name end_name begin_operator EQ end_operator begin_name run time end_name end_expr end_expr_stmt end_block 
 begin_comment set the user s fullname param display name the user s full name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set displayname end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name display name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name display name end_name end_name begin_operator EQ end_operator begin_name display name end_name end_expr end_expr_stmt end_block 
 begin_comment this is the base directory to look in for things to tar param base dir the base directory end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set basedir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name base dir end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name base dir end_name end_name begin_operator EQ end_operator begin_name base dir end_name end_expr end_expr_stmt end_block 
 begin_comment configure the specified code redirector code for the specified sourcefile param redirector code redirector code param sourcefile code string code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name configure end_name begin_parameter_list begin_param begin_decl begin_type begin_name redirector end_name end_type begin_name redirector end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name sourcefile end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get ref end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name configure end_name begin_argument_list begin_argument begin_expr begin_name redirector end_name end_expr end_argument begin_argument begin_expr begin_name sourcefile end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name always log end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name set always log end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name always log end_name begin_operator DOT end_operator begin_name boolean value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name log error end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name set log error end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name log error end_name begin_operator DOT end_operator begin_name boolean value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name append end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name set append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name append end_name begin_operator DOT end_operator begin_name boolean value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name create empty files end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name set create empty files end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name create empty files end_name begin_operator DOT end_operator begin_name boolean value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name output property end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name set output property end_name end_name begin_argument_list begin_argument begin_expr begin_name output property end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name error property end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name set error property end_name end_name begin_argument_list begin_argument begin_expr begin_name error property end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name input string end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name set input string end_name end_name begin_argument_list begin_argument begin_expr begin_name input string end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name log input string end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name set log input string end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name log input string end_name begin_operator DOT end_operator begin_name boolean value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name input mapper end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name input targets end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name input targets end_name begin_operator EQ end_operator begin_call begin_name begin_name input mapper end_name begin_operator DOT end_operator begin_name get implementation end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name map file name end_name begin_argument_list begin_argument begin_expr begin_name sourcefile end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name null pointer exception end_name end_type begin_name en pea ex end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name sourcefile end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_name en pea ex end_name end_expr end_throw end_block end_then end_if end_block end_catch end_try begin_if begin_condition begin_expr begin_name input targets end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name begin_name input targets end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name set input end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name to file array end_name begin_argument_list begin_argument begin_expr begin_name input targets end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_if begin_condition begin_expr begin_name output mapper end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name output targets end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name output targets end_name begin_operator EQ end_operator begin_call begin_name begin_name output mapper end_name begin_operator DOT end_operator begin_name get implementation end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name map file name end_name begin_argument_list begin_argument begin_expr begin_name sourcefile end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name null pointer exception end_name end_type begin_name en pea ex end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name sourcefile end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_name en pea ex end_name end_expr end_throw end_block end_then end_if end_block end_catch end_try begin_if begin_condition begin_expr begin_name output targets end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name begin_name output targets end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name set output end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name to file array end_name begin_argument_list begin_argument begin_expr begin_name output targets end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_if begin_condition begin_expr begin_name error mapper end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name error targets end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name error targets end_name begin_operator EQ end_operator begin_call begin_name begin_name error mapper end_name begin_operator DOT end_operator begin_name get implementation end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name map file name end_name begin_argument_list begin_argument begin_expr begin_name sourcefile end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name null pointer exception end_name end_type begin_name en pea ex end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name sourcefile end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_name en pea ex end_name end_expr end_throw end_block end_then end_if end_block end_catch end_try begin_if begin_condition begin_expr begin_name error targets end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name begin_name error targets end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name set error end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name to file array end_name begin_argument_list begin_argument begin_expr begin_name error targets end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name input filter chains end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name set input filter chains end_name end_name begin_argument_list begin_argument begin_expr begin_name input filter chains end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name output filter chains end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name set output filter chains end_name end_name begin_argument_list begin_argument begin_expr begin_name output filter chains end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name error filter chains end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name set error filter chains end_name end_name begin_argument_list begin_argument begin_expr begin_name error filter chains end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name input encoding end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name set input encoding end_name end_name begin_argument_list begin_argument begin_expr begin_name input encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name output encoding end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name set output encoding end_name end_name begin_argument_list begin_argument begin_expr begin_name output encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name error encoding end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name set error encoding end_name end_name begin_argument_list begin_argument begin_expr begin_name error encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test redirector 4 end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name expected out end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get log end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name expected out end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get file string end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert property equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name expected out end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test a process that runs and failed end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test failed end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name process end_name end_type begin_name process end_name begin_init begin_expr begin_call begin_name get process end_name begin_argument_list begin_argument begin_expr begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment process should abort end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name watchdog end_name begin_operator DOT end_operator begin_name start end_name end_name begin_argument_list begin_argument begin_expr begin_name process end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name ret code end_name begin_init begin_expr begin_call begin_name begin_name process end_name begin_operator DOT end_operator begin_name wait for end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name watchdog end_name begin_operator DOT end_operator begin_name killed process end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name ret code end_name end_expr end_argument begin_argument begin_expr begin_name ret code end_name begin_operator UNP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name transfer formatters end_name begin_parameter_list begin_param begin_decl begin_type begin_name j unit test runner end_name end_type begin_name runner end_name end_decl end_param begin_param begin_decl begin_type begin_name j unit test end_name end_type begin_name test end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name runner end_name begin_operator DOT end_operator begin_name add formatter end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_class begin_super begin_name j unit result formatter end_name end_super begin_argument_list end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name start test suite end_name begin_parameter_list begin_param begin_decl begin_type begin_name j unit test end_name end_type begin_name suite end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block end_block end_function begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name end test suite end_name begin_parameter_list begin_param begin_decl begin_type begin_name j unit test end_name end_type begin_name suite end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block end_block end_function begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set output end_name begin_parameter_list begin_param begin_decl begin_type begin_name output stream end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_block end_block end_function begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set system output end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_block end_block end_function begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set system error end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name err end_name end_decl end_param end_parameter_list begin_block end_block end_function begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add error end_name begin_parameter_list begin_param begin_decl begin_type begin_name test end_name end_type begin_name arg 0 end_name end_decl end_param begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name arg 1 end_name end_decl end_param end_parameter_list begin_block end_block end_function begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add failure end_name begin_parameter_list begin_param begin_decl begin_type begin_name test end_name end_type begin_name arg 0 end_name end_decl end_param begin_param begin_decl begin_type begin_name assertion failed error end_name end_type begin_name arg 1 end_name end_decl end_param end_parameter_list begin_block end_block end_function begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name end test end_name begin_parameter_list begin_param begin_decl begin_type begin_name test end_name end_type begin_name arg 0 end_name end_decl end_param end_parameter_list begin_block end_block end_function begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name start test end_name begin_parameter_list begin_param begin_decl begin_type begin_name test end_name end_type begin_name arg 0 end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name register test case end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name j unit version helper end_name begin_operator DOT end_operator begin_name get test case name end_name end_name begin_argument_list begin_argument begin_expr begin_name arg 0 end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_function end_block end_class end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name from cmd line end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name formatter element end_name end_type begin_name fe end_name begin_init begin_expr begin_operator LPAR end_operator begin_name formatter element end_name begin_operator RPAR end_operator begin_call begin_name begin_name from cmd line end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name multiple tests end_name begin_operator UNP end_operator begin_call begin_name begin_name fe end_name begin_operator DOT end_operator begin_name get use file end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name dest file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name test end_name begin_operator DOT end_operator begin_name get todir end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name test end_name begin_operator DOT end_operator begin_name get outfile end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_call begin_name begin_name fe end_name begin_operator DOT end_operator begin_name get extension end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fe end_name begin_operator DOT end_operator begin_name set outfile end_name end_name begin_argument_list begin_argument begin_expr begin_name dest file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name runner end_name begin_operator DOT end_operator begin_name add formatter end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name j unit result formatter end_name begin_operator RPAR end_operator begin_call begin_name begin_name fe end_name begin_operator DOT end_operator begin_name create formatter end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_comment get the values return an array of the allowed values for this attribute end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get values end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr begin_name policy fail end_name end_expr begin_operator UNP end_operator begin_expr begin_name policy report end_name end_expr begin_operator UNP end_operator begin_expr begin_name policy ignore end_name end_expr begin_operator UNP end_operator begin_expr begin_name policy failall end_name end_expr end_block end_expr end_return end_block 
 begin_comment the name of the section optional default is the main section param name the section s name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name name end_name end_name begin_operator EQ end_operator begin_name name end_name end_expr end_expr_stmt end_block 
 begin_comment does the actual work assumes everything has been checked by now throws build exception if an error occurs end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name touch end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name default timestamp end_name begin_init begin_expr begin_call begin_name get timestamp end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name file end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name touch end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file resource end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get parent file end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name default timestamp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment deal with the resource collections end_comment begin_decl_stmt begin_decl begin_type begin_name iterator end_name end_type begin_name iter end_name begin_init begin_expr begin_call begin_name begin_name resources end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name resource end_name end_type begin_name r end_name begin_init begin_expr begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_name r end_name begin_operator UNP end_operator begin_name touchable end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name touch end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument begin_argument begin_expr begin_name default timestamp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_comment deal with filesets in a special way since the task end_comment begin_comment originally also used the directories and union won t return end_comment begin_comment them end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file set end_name end_type begin_name fs end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file set end_name begin_operator RPAR end_operator begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds end_name begin_init begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name get directory scanner end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name from dir end_name begin_init begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name get dir end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name src dirs end_name begin_init begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get included directories end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name j end_name begin_operator LT end_operator begin_name begin_name src dirs end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name j end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name touch end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file resource end_name begin_argument_list begin_argument begin_expr begin_name from dir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name src dirs end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name default timestamp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_for end_block 
 begin_comment creates the lt ant gt task configured to run a specific target param directory if not null the directory where the build should run return the ant task configured with the explicit properties and references necessary to run the sub build end_comment begin_type begin_specifier end_specifier begin_name ant end_name end_type begin_name create ant task end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name directory end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name ant end_name end_type begin_name ant task end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name ant end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ant task end_name begin_operator DOT end_operator begin_name init end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name sub target end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name sub target end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ant task end_name begin_operator DOT end_operator begin_name set target end_name end_name begin_argument_list begin_argument begin_expr begin_name sub target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name output end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ant task end_name begin_operator DOT end_operator begin_name set output end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name directory end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ant task end_name begin_operator DOT end_operator begin_name set dir end_name end_name begin_argument_list begin_argument begin_expr begin_name directory end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name ant task end_name begin_operator DOT end_operator begin_name set inherit all end_name end_name begin_argument_list begin_argument begin_expr begin_name inherit all end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name properties end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name copy property end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ant task end_name begin_operator DOT end_operator begin_name create property end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name property end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name property sets end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ant task end_name begin_operator DOT end_operator begin_name add propertyset end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name property set end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name ant task end_name begin_operator DOT end_operator begin_name set inherit refs end_name end_name begin_argument_list begin_argument begin_expr begin_name inherit refs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name references end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ant task end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name begin_name ant end_name begin_operator DOT end_operator begin_name reference end_name end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_name ant task end_name end_expr end_return end_block 
 begin_comment get the file that contains the resource param resource location the name of the required resource param paths the paths which will be searched for the resource return the file instance zip or class containing the class or null if the class could not be found exception io exception if the files in the given paths cannot be read end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get resource container end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name resource location end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name paths end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name paths end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name element end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name begin_name paths end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name element end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name element end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name resource end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name element end_name end_expr end_argument begin_argument begin_expr begin_name resource location end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name resource end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name resource end_name end_expr end_return end_block end_then end_if end_block end_then begin_else begin_block begin_comment must be a zip of some sort end_comment begin_decl_stmt begin_decl begin_type begin_name zip file end_name end_type begin_name zip file end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name zip file end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name zip file end_name begin_argument_list begin_argument begin_expr begin_name element end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name zip file end_name begin_operator DOT end_operator begin_name get entry end_name end_name begin_argument_list begin_argument begin_expr begin_name resource location end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_name element end_name end_expr end_return end_block end_then end_if end_block begin_finally begin_block begin_if begin_condition begin_expr begin_name zip file end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name zip file end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try end_block end_else end_if end_block end_for begin_return begin_expr end_expr end_return end_block 
 begin_comment optional file to save stderr to param error the file to save error output to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set error end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name error end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name error end_name end_name begin_operator EQ end_operator begin_name error end_name end_expr end_expr_stmt end_block 
 begin_comment register a dtd with a location the location is one of a filename a resource name in the classpath or a url param public id the public identity of the dtd param location the location of the dtd end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name register dtd end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name public id end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name location end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name location end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file dtd end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name location end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name file dtd end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment resolve relative to project basedir end_comment begin_expr_stmt begin_expr begin_name file dtd end_name begin_operator EQ end_operator begin_call begin_name begin_name owning task end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr begin_name location end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name file dtd end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name public id end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file dt ds end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name public id end_name end_expr end_argument begin_argument begin_expr begin_name file dtd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name owning task end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name public id end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name file dtd end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return end_return end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name get class end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get resource end_name begin_argument_list begin_argument begin_expr begin_name location end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name public id end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name resource dt ds end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name public id end_name end_expr end_argument begin_argument begin_expr begin_name location end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name owning task end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name public id end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name location end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_try begin_block begin_if begin_condition begin_expr begin_name public id end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name url end_name end_type begin_name urldtd end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name url end_name begin_argument_list begin_argument begin_expr begin_name location end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name url dt ds end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name public id end_name end_expr end_argument begin_argument begin_expr begin_name urldtd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name net end_name begin_operator DOT end_operator begin_name malformed url exception end_name end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment ignored end_comment end_block end_catch end_try end_block 
 begin_comment set the optional pattern to use with the datetime attribute param p the simple date format compatible pattern string end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set pattern end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name pattern end_name begin_operator EQ end_operator begin_name p end_name end_expr end_expr_stmt end_block 
 begin_comment do the work to eval the script param exec name the name that will be passed to the scripting engine for this script execution return the result of the evalulation exception build exception if someting goes wrong exectuing the script end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name evaluate script end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name exec name end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name check language end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name class loader end_name end_type begin_name orig loader end_name begin_init begin_expr begin_call begin_name replace context loader end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name reflect wrapper end_name end_type begin_name engine end_name begin_init begin_expr begin_call begin_name create engine end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name engine end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get language end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name get beans end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name key set end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name key end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name value end_name begin_init begin_expr begin_call begin_name get beans end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name engine end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name string end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument begin_argument begin_expr begin_name key end_name end_expr end_argument begin_argument begin_expr begin_name begin_name object end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_comment execute the script end_comment begin_return begin_expr begin_call begin_name begin_name engine end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name string end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get script end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name begin_init begin_expr begin_name be end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name throwable end_name end_type begin_name te end_name begin_init begin_expr begin_operator LPAR end_operator begin_name throwable end_name begin_operator RPAR end_operator begin_call begin_name begin_name reflect util end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_name be end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name te end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name te end_name begin_operator UNP end_operator begin_name build exception end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator LPAR end_operator begin_name build exception end_name begin_operator RPAR end_operator begin_name te end_name end_expr end_throw end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name t end_name begin_operator EQ end_operator begin_name te end_name end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name restore context loader end_name begin_argument_list begin_argument begin_expr begin_name orig loader end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment delegate method handling the reverse loader attribute p this attribute can set a boolean indicating that the used classloader should not follow the classical parent first scheme p p by default this is supposed to be false p p caution this behaviour is contradictory to the normal way classloaders work do not let your project component use it if you are not really sure p param reverse loader if true reverse the order of looking up a class end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set reverse loader end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name reverse loader end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name reverse loader end_name end_name begin_operator EQ end_operator begin_name reverse loader end_name end_expr end_expr_stmt end_block 
 begin_comment begin filter getters and setters end_comment begin_comment sets the include filter when filtering files ant star team check out uses an unmodified version of code directory scanner code s code match code method so here are the patterns straight from the ant source code br br matches a string against a pattern the pattern contains two special characters br which means zero or more characters br which means one and only one character br br separate multiple inlcude filters by i spaces i not commas as ant uses for example if you want to check out all java and class files you would put the following line in your program code set includes java class code finally note that filters have no effect on the b directories b that are scanned you could not check out files from directories with names beginning only with build for instance of course you could limit ant star team check out to a particular folder and its subfolders with the code set folder name string folder name code command br br treatment of overlapping inlcudes and excludes to give a simplistic example suppose that you set your include filter to htm html and your exclude filter to index what happens to index html ant star team check out will not check out index html as it matches an exclude filter index even though it matches the include filter as well br br please also read the following sections before using filters param includes a string of filter patterns to include separate the patterns by spaces see get includes see set excludes string excludes see get excludes end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set includes end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name includes end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name includes end_name end_name begin_operator EQ end_operator begin_name includes end_name end_expr end_expr_stmt end_block 
 begin_comment true to indicate that the signed jar modification date remains the same as the original defaults to false param preserve last modified if true preserve the last modified time end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set preserve last modified end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name preserve last modified end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name preserve last modified end_name end_name begin_operator EQ end_operator begin_name preserve last modified end_name end_expr end_expr_stmt end_block 
 begin_comment returns the list of files represented by this file list param p the current project return the list of files represented by this file list end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get files end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name get ref end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get files end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name dir end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name filenames end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name result end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_call begin_name begin_name filenames end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name filenames end_name begin_operator DOT end_operator begin_name copy into end_name end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name result end_name end_expr end_return end_block 
 begin_comment if true checks out the file but does not create an editable file containing its data param ndata the status to set the flag to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set no data end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name ndata end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m ndata end_name begin_operator EQ end_operator begin_name ndata end_name end_expr end_expr_stmt end_block 
 begin_comment set whether to cache collections param b boolean cache flag end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set cache end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name cache end_name begin_operator EQ end_operator begin_name b end_name end_expr end_expr_stmt end_block 
 begin_comment builds the arguments to pass to weblogic deploy according to the supplied action return a string containing the arguments for the weblogic deploy tool throws build exception if there is an error end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get arguments end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name action end_name begin_init begin_expr begin_call begin_name get task end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get action end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name args end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name action end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name action deploy end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name action end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name action update end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name args end_name begin_operator EQ end_operator begin_call begin_name build deploy args end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name action end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name action delete end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name action end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name action undeploy end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name args end_name begin_operator EQ end_operator begin_call begin_name build undeploy args end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name action end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name action list end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name args end_name begin_operator EQ end_operator begin_call begin_name build list args end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if end_else end_if begin_return begin_expr begin_name args end_name end_expr end_return end_block 
 begin_comment does this string match the xml nmtoken production param s the string to test return true if the string matches the xml nmtoken end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is nmtoken end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name dtd printer end_name begin_operator DOT end_operator begin_name is nmtoken end_name end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test text optional end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name handle error output end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name output end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name system error end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system error end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment get the comparison type return the string typename end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get type end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name type end_name end_expr end_return end_block 
 begin_comment adds a path of files to sign return a path of files to sign since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name create path end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name path end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name path end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name create path end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_name string end_name end_type begin_name get error end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name error end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string writer end_name end_type begin_name sw end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string writer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name error end_name begin_operator DOT end_operator begin_name print stack trace end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name print writer end_name begin_argument_list begin_argument begin_expr begin_name sw end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name sw end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment p set the file which the formatte should log to p note that logging to file must be enabled end_comment begin_type begin_name void end_name end_type begin_name set outfile end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name out file end_name end_name begin_operator EQ end_operator begin_name out end_name end_expr end_expr_stmt end_block 
 begin_comment set the height param h the value to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set height end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name h end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name height end_name begin_operator EQ end_operator begin_name h end_name end_expr end_expr_stmt end_block 
 begin_comment processes a line of input and determines if an error occurred end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process line end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name s end_name begin_init begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument begin_argument begin_expr begin_name msg output level end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor param parent handler the handler which should be restored to the parser at the end of the element must not be code null code param container container for the element must not be code null code param parent wrapper wrapper for the parent element if any may be code null code param target target this element is part of must not be code null code end_comment begin_specifier end_specifier begin_name task handler end_name begin_parameter_list begin_param begin_decl begin_type begin_name project helper impl end_name end_type begin_name helper impl end_name end_decl end_param begin_param begin_decl begin_type begin_name document handler end_name end_type begin_name parent handler end_name end_decl end_param begin_param begin_decl begin_type begin_name task container end_name end_type begin_name container end_name end_decl end_param begin_param begin_decl begin_type begin_name runtime configurable end_name end_type begin_name parent wrapper end_name end_decl end_param begin_param begin_decl begin_type begin_name target end_name end_type begin_name target end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name helper impl end_name end_expr end_argument begin_argument begin_expr begin_name parent handler end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name container end_name end_name begin_operator EQ end_operator begin_name container end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name parent wrapper end_name end_name begin_operator EQ end_operator begin_name parent wrapper end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name target end_name end_name begin_operator EQ end_operator begin_name target end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test get commandline end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name commandline java end_name end_type begin_name c end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name commandline java end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name set classname end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name create vm argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name s end_name begin_init begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name get commandline end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name s end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment after changing commandline java to search for the java executable i don t know how to tests the value returned here without using the same logic as applied in the class itself assert true no classpath java s 0 end_comment begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name s end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name s end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name s end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name commandline java end_name end_type begin_name c 2 end_name begin_init begin_expr begin_operator LPAR end_operator begin_name commandline java end_name begin_operator RPAR end_operator begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name null pointer exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name create classpath end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set location end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name create classpath end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set location end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name ant home end_name end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name s end_name begin_operator EQ end_operator begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name get commandline end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name s end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment assert equals with classpath java s 0 end_comment begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name s end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name s end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name s end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name begin_operator DOT end_operator begin_name path separator end_name end_name end_expr end_argument end_argument_list end_call begin_operator GE end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name s end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name s end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name s end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get a particular section from the manifest param name the name of the section desired return the specified section or null if that section does not exist in the manifest end_comment begin_type begin_specifier end_specifier begin_name section end_name end_type begin_name get section end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name section end_name begin_operator RPAR end_operator begin_call begin_name begin_name sections end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test ns attributes end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the next class file object from the jar return a class file object describing the class from the jar end_comment begin_type begin_specifier end_specifier begin_name class file end_name end_type begin_name get next class file end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name zip entry end_name end_type begin_name jar entry end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name class file end_name end_type begin_name next element end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name jar entry end_name begin_operator EQ end_operator begin_call begin_name begin_name jar stream end_name begin_operator DOT end_operator begin_name get next entry end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_while begin_condition begin_expr begin_name next element end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name jar entry end_name begin_operator UNP end_operator end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name entry name end_name begin_init begin_expr begin_call begin_name begin_name jar entry end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name jar entry end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name entry name end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment create a data input stream from the jar input stream end_comment begin_decl_stmt begin_decl begin_type begin_name class file end_name end_type begin_name java class end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name class file end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name java class end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list begin_argument begin_expr begin_name jar stream end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name next element end_name begin_operator EQ end_operator begin_name java class end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name jar entry end_name begin_operator EQ end_operator begin_call begin_name begin_name jar stream end_name begin_operator DOT end_operator begin_name get next entry end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_while end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name message end_name begin_init begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name text end_name begin_init begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name message end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name text end_name begin_operator UNP end_operator begin_operator PLUS end_operator begin_name message end_name end_expr end_expr_stmt end_block end_then end_if begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_return begin_expr begin_name next element end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name task started end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test relative path unix style end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name set basedir end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name p end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name l end_name begin_init begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name is unix style end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name is net ware end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test infinite filter end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name get output end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns a newly created sax 2 xml reader which is namespace aware return a sax 2 xml reader throws build exception on error see get parser factory since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name xml reader end_name end_type begin_name get namespace xml reader end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_return begin_expr begin_call begin_name new sax parser end_name begin_argument_list begin_argument begin_expr begin_call begin_name get ns parser factory end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get xml reader end_name begin_argument_list end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name sax exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_call begin_name convert to build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment turns on or off tracing and directs the resultant trace output valid values are trace trace 1 trace 2 and notrace trace and trace 2 param trace the value to set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set trace end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name trace end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name trace attr end_name end_type begin_name t end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name trace attr end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr begin_name trace end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set trace end_name begin_argument_list begin_argument begin_expr begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets idl flags return the idl flag end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get idl end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name idl end_name end_expr end_return end_block 
 begin_comment add a new resource collection instance to this batchtest whatever the collection is only names that are tt java tt or tt class tt will be considered as candidates param rc the new resource collection containing the rules to get the testcases since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource collection end_name end_type begin_name rc end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name resources end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name rc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set project reference end_name begin_argument_list begin_argument begin_expr begin_name proxy end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name method end_name end_type begin_name execute method end_name begin_init begin_expr begin_call begin_name get execute method end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name proxy end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name execute method end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_name proxy end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name lang end_name begin_operator DOT end_operator begin_name reflect end_name begin_operator DOT end_operator begin_name invocation target exception end_name end_name end_type begin_name ie end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name proxy end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name begin_init begin_expr begin_call begin_name begin_name ie end_name begin_operator DOT end_operator begin_name get target exception end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name t end_name begin_operator UNP end_operator begin_name build exception end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name build exception end_name begin_operator RPAR end_operator begin_name t end_name begin_operator RPAR end_operator end_expr end_throw end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name proxy end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name ex end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment tests if a string contains stars or question marks param input a string which one wants to test for containing wildcard return true if the string contains at least a star or a question mark end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name has wildcards end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name input end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name input end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator MINUS end_operator begin_operator UNP end_operator begin_call begin_name begin_name input end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator MINUS end_operator begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment returns the value or true if a specific value wasn t provided end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get value end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name value end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_name value end_name begin_operator DP end_operator end_expr end_return end_block 
 begin_comment delete all the class files of classes which depend on the given class param class name the name of the class whose dependent classes will be deleted return the number of class files removed end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name delete affected files end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name class name end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name count end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name hashtable end_name end_type begin_name affected classes end_name begin_init begin_expr begin_operator LPAR end_operator begin_name hashtable end_name begin_operator RPAR end_operator begin_call begin_name begin_name affected class map end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name class name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name affected classes end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_name count end_name end_expr end_return end_block end_then end_if begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name affected classes end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name affected class end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name class file info end_name end_type begin_name affected class info end_name begin_init begin_expr begin_operator LPAR end_operator begin_name class file info end_name begin_operator RPAR end_operator begin_call begin_name begin_name affected classes end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name affected class end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name affected class info end_name begin_operator DOT end_operator begin_name absolute file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name affected class info end_name begin_operator DOT end_operator begin_name source file end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name warn out of date but not deleted end_name begin_argument_list begin_argument begin_expr begin_name affected class info end_name end_expr end_argument begin_argument begin_expr begin_name affected class end_name end_expr end_argument begin_argument begin_expr begin_name class name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_continue end_continue end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name affected class info end_name begin_operator DOT end_operator begin_name absolute file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name class name end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name affected class info end_name begin_operator DOT end_operator begin_name absolute file end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name count end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name closure end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name count end_name begin_operator UNP end_operator begin_call begin_name delete affected files end_name begin_argument_list begin_argument begin_expr begin_name affected class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment without closure we may delete an inner class but not the end_comment begin_comment top level class which would not trigger a recompile end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name affected class end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_comment need to delete the main class end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name top level class name end_name begin_init begin_expr begin_call begin_name begin_name affected class end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name affected class end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name top level class name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name class file info end_name end_type begin_name top level class info end_name begin_init begin_expr begin_operator LPAR end_operator begin_name class file info end_name begin_operator RPAR end_operator begin_call begin_name begin_name class file info map end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name top level class name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name top level class info end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name top level class info end_name begin_operator DOT end_operator begin_name absolute file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name top level class info end_name begin_operator DOT end_operator begin_name absolute file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name top level class info end_name begin_operator DOT end_operator begin_name absolute file end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name count end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name closure end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name count end_name begin_operator UNP end_operator begin_call begin_name delete affected files end_name begin_argument_list begin_argument begin_expr begin_name top level class name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block end_else end_if end_block end_for begin_return begin_expr begin_name count end_name end_expr end_return end_block 
 begin_comment adds a set of files to translate as a nested fileset element param set the fileset to be added end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add fileset end_name begin_parameter_list begin_param begin_decl begin_type begin_name file set end_name end_type begin_name set end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name set end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment iterate through the generated command line comparing it to reference one param s test cmd line the reference command line param s generated cmd line the generated command line end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check command lines end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name s test cmd line end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name s generated cmd line end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name length end_name begin_init begin_expr begin_name begin_name s test cmd line end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name length end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name string end_name begin_operator DOT end_operator begin_name value of end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name s test cmd line end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name s generated cmd line end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name array index out of bounds exception end_name end_type begin_name aioob end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name s test cmd line end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_for begin_if begin_condition begin_expr begin_name begin_name s generated cmd line end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator begin_name begin_name s test cmd line end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_then begin_block begin_comment we have extra elements end_comment begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment constructs a new cb zip 2 input stream which decompresses bytes read from the specified stream p although b zip 2 headers are marked with the magic tt bz tt this constructor expects the next byte in the stream to be the first one after the magic thus callers have to skip the first two bytes otherwise this constructor will throw an exception p throws io exception if the stream content is malformed or an i o error occurs throws null pointer exception if tt in null tt end_comment begin_specifier end_specifier begin_name cb zip 2 input stream end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name input stream end_name end_type begin_name in end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name in end_name end_name begin_operator EQ end_operator begin_name in end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name init end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment flattens a string by removing all whitespace space tab linefeed carriage return and formfeed this uses string tokenizer and the default set of tokens as documented in the single arguement constructor param input a string to remove all whitespace return a string that has had all whitespace removed end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name remove whitespace end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name input end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name result end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name input end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string tokenizer end_name end_type begin_name st end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string tokenizer end_name begin_argument_list begin_argument begin_expr begin_name input end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name st end_name begin_operator DOT end_operator begin_name has more tokens end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name st end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_name javadoc output stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name level end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name begin_name javadoc end_name begin_operator DOT end_operator begin_name this end_name end_name end_expr end_argument begin_argument begin_expr begin_name level end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns the part of the given string that matches the in the quot from quot pattern replacing file separators with dots param name source filename return replaced variable part end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name extract variable part end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name var end_name begin_init begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name prefix length end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator begin_name postfix length end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name var end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test overwrite true end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_call begin_name create relative file end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name largeimage end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name last modified end_name begin_init begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name sleep end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name get file timestamp granularity end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name interrupted exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name expect log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name f end_name begin_operator EQ end_operator begin_call begin_name create relative file end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name largeimage end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name overwritten last modified end_name begin_init begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name last modified end_name begin_operator LT end_operator begin_name overwritten last modified end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the current text for the element return the current text end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get text end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name text end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment prefix to namespace uri mapping param prefix the prefix to map return the uri for this prefix null if not present end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get prefix mapping end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name prefix end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name list end_name end_type begin_name list end_name begin_init begin_expr begin_operator LPAR end_operator begin_name list end_name begin_operator RPAR end_operator begin_call begin_name begin_name prefix mapping end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name prefix end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name list end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name list end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_return begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name list end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name list end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment gets the memory maximum size flag return the memory maximum size flag end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get memory maximum size end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name memory maximum size end_name end_expr end_return end_block 
 begin_comment returns the path of the directory containing the ant ftp file of the full path of the file itself in case of ant ftp root file return parent directory of the ant ftp file end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get curpwd end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name curpwd end_name end_expr end_return end_block 
 begin_comment statically determine the maximum number of tasks to execute simultaneously if there are less tasks than threads then all will be executed at once if there are more then only code thread count code tasks will be executed at one time if code threads per processor code is set and the jvm is at least a 1 4 vm then this value is ignored optional param num threads total number of threads end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set thread count end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name num threads end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name num threads end_name end_name begin_operator EQ end_operator begin_name num threads end_name end_expr end_expr_stmt end_block 
 begin_comment apply any extra arguments of this class param command the command to apply the arguments to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name apply extra args end_name begin_parameter_list begin_param begin_decl begin_type begin_name net command end_name end_type begin_name command end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name args end_name begin_init begin_expr begin_call begin_name get extra args end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name args end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name args end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_comment convenience method to copy a file from a source to a destination specifying if token filtering must be used if source files may overwrite newer destination files the last modified time of code dest file code file should be made equal to the last modified time of code source file code and which character encoding to assume param source file the file to copy from must not be code null code param dest file the file to copy to must not be code null code param filters the collection of filters to apply to this copy param overwrite whether or not the destination file should be overwritten if it already exists param preserve last modified whether or not the last modified time of the resulting file should be set to that of the source file param encoding the encoding used to read and write the files throws io exception if the copying fails since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name copy file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name source file end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name dest file end_name end_decl end_param begin_param begin_decl begin_type begin_name filter set collection end_name end_type begin_name filters end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name overwrite end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name preserve last modified end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name encoding end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name copy file end_name begin_argument_list begin_argument begin_expr begin_name source file end_name end_expr end_argument begin_argument begin_expr begin_name dest file end_name end_expr end_argument begin_argument begin_expr begin_name filters end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name overwrite end_name end_expr end_argument begin_argument begin_expr begin_name preserve last modified end_name end_expr end_argument begin_argument begin_expr begin_name encoding end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name assert method end_name begin_parameter_list begin_param begin_decl begin_type begin_name method end_name end_type begin_name m end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name method name end_name end_decl end_param begin_param begin_decl begin_type begin_name class end_name end_type begin_name method arg end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name arg end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name bad arg end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name method name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name void end_name begin_operator DOT end_operator begin_name type end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name get return type end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name class end_name begin_index end_index end_type begin_name args end_name begin_init begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name get parameter types end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name args end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name method arg end_name end_expr end_argument begin_argument begin_expr begin_name begin_name args end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_name arg end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal access exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name invocation target exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_name bad arg end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal access exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name invocation target exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name begin_init begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get target exception end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_name t end_name begin_operator UNP end_operator begin_name begin_name junit end_name begin_operator DOT end_operator begin_name framework end_name begin_operator DOT end_operator begin_name assertion failed error end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment add the classpath param path the classpath end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add classpath end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name path end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name classpath end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name classpath end_name begin_operator EQ end_operator begin_name path end_name end_expr end_expr_stmt end_block 
 begin_comment has the user set all necessary attributes throws build exception if there are missing required parameters end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check configuration end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name cmdl end_name begin_operator DOT end_operator begin_name get executable end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name dir end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name dir end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name dir end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name dir end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name spawn end_name begin_operator UNP end_operator begin_name incompatible with spawn end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name setup redirector end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the jar files in user home ant lib end_comment begin_type begin_specifier end_specifier begin_name url end_name begin_index end_index end_type begin_name get user ur ls end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name malformed url exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name user lib dir end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name user homedir end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name user libdir end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name locator end_name begin_operator DOT end_operator begin_name get location ur ls end_name end_name begin_argument_list begin_argument begin_expr begin_name user lib dir end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment the equality method this checks if the directory field is the same param obj the object to compare to return true if this object has an equal directory field as the other object end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name equals end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name obj end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name obj end_name begin_operator EQT end_operator begin_name this end_name end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_name obj end_name begin_operator UNP end_operator begin_name directory end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name directory end_name end_type begin_name d end_name begin_init begin_expr begin_operator LPAR end_operator begin_name directory end_name begin_operator RPAR end_operator begin_name obj end_name end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name directory end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name d end_name begin_operator DOT end_operator begin_name directory end_name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name create three end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment list of filenames and directory names to not include they should be either or space separated the ignored files will be logged param ignore string the string containing the files to ignore end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name xset ignore end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name ignore string end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name ignore string end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name ignore string end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string tokenizer end_name end_type begin_name tok end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string tokenizer end_name begin_argument_list begin_argument begin_expr begin_name ignore string end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name tok end_name begin_operator DOT end_operator begin_name has more tokens end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name create exclude end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name tok end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name trim end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block end_then end_if end_block 
 begin_comment set the the login id to use on the server required if tt password tt is set param u a code string code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set userid end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name u end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name userid end_name end_name begin_operator EQ end_operator begin_name u end_name end_expr end_expr_stmt end_block 
 begin_comment constructor for creator param project the current project end_comment begin_specifier end_specifier begin_name script runner creator end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name project end_name end_name begin_operator EQ end_operator begin_name project end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test override end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name log end_name begin_init begin_expr begin_call begin_name get log end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name collection end_name end_type begin_name cache collection end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name coll end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name is cache end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name coll end_name begin_operator EQ end_operator begin_call begin_name get collection end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name coll end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment if true allows checkout of a version other than main latest param version the status to set the flag to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set version end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name version end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m version end_name begin_operator EQ end_operator begin_name version end_name end_expr end_expr_stmt end_block 
 begin_comment set the classpath by reference param r a reference to a path instance to be used as the classpath value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classpath ref end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name set classpath ref end_name end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name has next end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name array list end_name end_type begin_name get non existing end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name non existing end_name end_expr end_return end_block 
 begin_comment creates a deep clone of this instance except for the nested selectors the list of selectors is a shallow clone of this instance s list return the cloned object since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name object end_name end_type begin_name clone end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_call begin_name get ref end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name clone end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name abstract file set end_name end_type begin_name fs end_name begin_init begin_expr begin_operator LPAR end_operator begin_name abstract file set end_name begin_operator RPAR end_operator begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name fs end_name begin_operator DOT end_operator begin_name default patterns end_name end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name pattern set end_name begin_operator RPAR end_operator begin_call begin_name begin_name default patterns end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name fs end_name begin_operator DOT end_operator begin_name additional patterns end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name additional patterns end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name additional patterns end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name additional patterns end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name pattern set end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name clone end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_name begin_name fs end_name begin_operator DOT end_operator begin_name selectors end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list begin_argument begin_expr begin_name selectors end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name fs end_name end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name clone not supported exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_else end_if end_block 
 begin_specifier end_specifier begin_name asi extra field test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment adds nested text in a new child element p this means pre append text element lt a gt b c pre creates pre lt a gt lt b gt c lt b gt lt a gt pre p param parent element that will receive the new element as child param name of the child element param content text content since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name append text element end_name begin_parameter_list begin_param begin_decl begin_type begin_name element end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name content end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name element end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name create child element end_name begin_argument_list begin_argument begin_expr begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name append text end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_name content end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the name of a property file containing filters optional each property will be treated as a replacefilter where token is the name of the property and value is the value of the property param replace filter file code file code to load end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set replace filter file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name replace filter file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name replace filter file end_name end_name begin_operator EQ end_operator begin_name replace filter file end_name end_expr end_expr_stmt end_block 
 begin_comment tests add commandline generation end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test add command line end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name s test cmd line end_name begin_init begin_expr begin_block begin_expr begin_name ss dir end_name begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name ss exe end_name end_name end_expr begin_expr begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name command add end_name end_name end_expr begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get base dir end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator PLUS end_operator begin_name local path end_name end_expr begin_expr begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name flag autoresponse def end_name end_name end_expr begin_expr begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name flag recursion end_name end_name end_expr begin_expr begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name flag login end_name end_name begin_operator PLUS end_operator begin_name vss username end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name vss password end_name end_expr begin_expr begin_name begin_name msvss end_name begin_operator DOT end_operator begin_name flag comment end_name end_name begin_operator PLUS end_operator end_expr end_block end_expr end_init end_decl end_decl_stmt begin_comment set up a vss add task end_comment begin_decl_stmt begin_decl begin_type begin_name msvssadd end_name end_type begin_name vss add end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name msvssadd end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss add end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss add end_name begin_operator DOT end_operator begin_name set login end_name end_name begin_argument_list begin_argument begin_expr begin_name vss username end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name vss password end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss add end_name begin_operator DOT end_operator begin_name set vsspath end_name end_name begin_argument_list begin_argument begin_expr begin_name ds vss project path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss add end_name begin_operator DOT end_operator begin_name set recursive end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss add end_name begin_operator DOT end_operator begin_name set ssdir end_name end_name begin_argument_list begin_argument begin_expr begin_name ss dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss add end_name begin_operator DOT end_operator begin_name set writable end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vss add end_name begin_operator DOT end_operator begin_name set localpath end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr begin_name local path end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name commandline end_name begin_operator EQ end_operator begin_call begin_name begin_name vss add end_name begin_operator DOT end_operator begin_name build cmd line end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name check command lines end_name begin_argument_list begin_argument begin_expr begin_name s test cmd line end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name get commandline end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the code file code containing the includes patterns param incl code file code instance throws build exception on error end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set includesfile end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name incl end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name default patterns end_name begin_operator DOT end_operator begin_name set includesfile end_name end_name begin_argument_list begin_argument begin_expr begin_name incl end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name directory scanner end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment actually tests constructor as well as set path end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test constructor unix style end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name p end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name l end_name begin_init begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name is unix style end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name is net ware end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name base end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name base end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name base end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if end_block 
 begin_comment return the value of the fork attribute end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get fork end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name fork end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is active end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name star team checkin end_name begin_operator DOT end_operator begin_name this end_name begin_operator DOT end_operator begin_name add uncontrolled end_name end_name end_expr end_return end_block 
 begin_comment constructor param name testname end_comment begin_specifier end_specifier begin_name xml validate test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets the forceintegrate flag return restore deleted revisions end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is force integrate end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name forceintegrate end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test concat no newline end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment parse the tmp file and return and array of cvs tag entry to be written in the output param tmp file the file containing the output of the cvs rdiff command return the entries in the output exception build exception if an error occurs end_comment begin_type begin_specifier end_specifier begin_name cvs tag entry end_name begin_index end_index end_type begin_name parse r diff end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name tmp file end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_comment parse the output of the command end_comment begin_decl_stmt begin_decl begin_type begin_name buffered reader end_name end_type begin_name reader end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name reader end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name buffered reader end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file reader end_name begin_argument_list begin_argument begin_expr begin_name tmp file end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment entries are of the form end_comment begin_comment cvs 1 11 end_comment begin_comment file module filename is new current revision 1 1 end_comment begin_comment cvs 1 11 9 end_comment begin_comment file module filename is new cvstag 2003 11 03 2 revision 1 1 end_comment begin_comment or end_comment begin_comment file module filename changed from revision 1 4 to 1 6 end_comment begin_comment or end_comment begin_comment file module filename is removed not included in end_comment begin_comment release tag skinlf 12 end_comment begin_comment cvs 1 11 9 end_comment begin_comment file testantoine antoine bat is removed testantoine 1 revision 1 1 1 1 end_comment begin_comment end_comment begin_comment get rid of file module end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name to be removed end_name begin_init begin_expr begin_name file string end_name begin_operator PLUS end_operator begin_name mypackage end_name begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name header length end_name begin_init begin_expr begin_call begin_name begin_name to be removed end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name entries end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name line end_name begin_init begin_expr begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name index end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name cvs tag entry end_name end_type begin_name entry end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_operator UNP end_operator begin_name line end_name end_expr end_condition begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_name header length end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr begin_name to be removed end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name header length end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file string end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name index end_name begin_operator EQ end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name file is new end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_comment it is a new file end_comment begin_comment set the revision but not the prevrevision end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name filename end_name begin_init begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name rev end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name indexrev end_name begin_init begin_expr begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name indexrev end_name begin_operator EQ end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name revision end_name end_expr end_argument begin_argument begin_expr begin_name index end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name rev end_name begin_operator EQ end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name indexrev end_name begin_operator PLUS end_operator begin_call begin_name begin_name revision end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name entry end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name cvs tag entry end_name begin_argument_list begin_argument begin_expr begin_name filename end_name end_expr end_argument begin_argument begin_expr begin_name rev end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name entries end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name entry end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name index end_name begin_operator EQ end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name file has changed end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_comment it is a modified file end_comment begin_comment set the revision and the prevrevision end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name filename end_name begin_init begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name rev separator end_name begin_init begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name prev revision end_name begin_init begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name index end_name begin_operator PLUS end_operator begin_call begin_name begin_name file has changed end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name rev separator end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name revision end_name begin_init begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name rev separator end_name begin_operator PLUS end_operator begin_call begin_name begin_name to string end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name entry end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name cvs tag entry end_name begin_argument_list begin_argument begin_expr begin_name filename end_name end_expr end_argument begin_argument begin_expr begin_name revision end_name end_expr end_argument begin_argument begin_expr begin_name prev revision end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name entries end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name entry end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name index end_name begin_operator EQ end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name file was removed end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_comment it is a removed file end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name filename end_name begin_init begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name rev end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name indexrev end_name begin_init begin_expr begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name indexrev end_name begin_operator EQ end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name revision end_name end_expr end_argument begin_argument begin_expr begin_name index end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name rev end_name begin_operator EQ end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name indexrev end_name begin_operator PLUS end_operator begin_call begin_name begin_name revision end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name entry end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name cvs tag entry end_name begin_argument_list begin_argument begin_expr begin_name filename end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name rev end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name entries end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name entry end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if end_else end_if end_block end_then end_if begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_decl_stmt begin_decl begin_type begin_name cvs tag entry end_name begin_index end_index end_type begin_name array end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name cvs tag entry end_name begin_index begin_expr begin_call begin_name begin_name entries end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name entries end_name begin_operator DOT end_operator begin_name copy into end_name end_name begin_argument_list begin_argument begin_expr begin_name array end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name array end_name end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_if begin_condition begin_expr begin_name reader end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_then end_if end_block end_finally end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name generate mtf values end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name last shadow end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name last end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name data end_name end_type begin_name data shadow end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name data end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name boolean end_name begin_index end_index end_type begin_name in use end_name begin_init begin_expr begin_name begin_name data shadow end_name begin_operator DOT end_operator begin_name in use end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name byte end_name begin_index end_index end_type begin_name block end_name begin_init begin_expr begin_name begin_name data shadow end_name begin_operator DOT end_operator begin_name block end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name begin_index end_index end_type begin_name fmap end_name begin_init begin_expr begin_name begin_name data shadow end_name begin_operator DOT end_operator begin_name fmap end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name char end_name begin_index end_index end_type begin_name sfmap end_name begin_init begin_expr begin_name begin_name data shadow end_name begin_operator DOT end_operator begin_name sfmap end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name begin_index end_index end_type begin_name mtf freq end_name begin_init begin_expr begin_name begin_name data shadow end_name begin_operator DOT end_operator begin_name mtf freq end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name byte end_name begin_index end_index end_type begin_name unseq to seq end_name begin_init begin_expr begin_name begin_name data shadow end_name begin_operator DOT end_operator begin_name unseq to seq end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name byte end_name begin_index end_index end_type begin_name yy end_name begin_init begin_expr begin_name begin_name data shadow end_name begin_operator DOT end_operator begin_name generate mtf values yy end_name end_name end_expr end_init end_decl end_decl_stmt begin_comment make maps end_comment begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name n in use shadow end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name begin_name in use end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name unseq to seq end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator begin_name n in use shadow end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name n in use shadow end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_then end_if end_block end_for begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name n in use end_name end_name begin_operator EQ end_operator begin_name n in use shadow end_name end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name eob end_name begin_init begin_expr begin_name n in use shadow end_name begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr begin_name eob end_name end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator GE end_operator end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator MMINUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name begin_name mtf freq end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_for begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr begin_name n in use shadow end_name end_expr end_init end_decl end_init begin_condition begin_expr begin_operator MMINUS end_operator begin_name i end_name begin_operator GE end_operator end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_name begin_name yy end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator begin_name i end_name end_expr end_expr_stmt end_block end_for begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name wr end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name z pend end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LE end_operator begin_name last shadow end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name byte end_name end_type begin_name ll i end_name begin_init begin_expr begin_name begin_name unseq to seq end_name begin_index begin_expr begin_name begin_name block end_name begin_index begin_expr begin_name begin_name fmap end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_index end_name begin_operator UNP end_operator end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name byte end_name end_type begin_name tmp end_name begin_init begin_expr begin_name begin_name yy end_name begin_index begin_expr end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_name ll i end_name begin_operator UNP end_operator begin_name tmp end_name end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name j end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name byte end_name end_type begin_name tmp 2 end_name begin_init begin_expr begin_name tmp end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name tmp end_name begin_operator EQ end_operator begin_name begin_name yy end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name yy end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name begin_operator EQ end_operator begin_name tmp 2 end_name end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_name begin_name yy end_name begin_index begin_expr end_expr end_index end_name begin_operator EQ end_operator begin_name tmp end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name j end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name z pend end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_name z pend end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name z pend end_name begin_operator MMINUS end_operator end_expr end_expr_stmt begin_while begin_condition begin_expr end_expr end_condition begin_block begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name z pend end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name sfmap end_name begin_index begin_expr begin_name wr end_name end_expr end_index end_name begin_operator EQ end_operator begin_name runa end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name wr end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name mtf freq end_name begin_index begin_expr begin_name runa end_name end_expr end_index end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name begin_name sfmap end_name begin_index begin_expr begin_name wr end_name end_expr end_index end_name begin_operator EQ end_operator begin_name runb end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name wr end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name mtf freq end_name begin_index begin_expr begin_name runb end_name end_expr end_index end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_name z pend end_name begin_operator GE end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name z pend end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name z pend end_name begin_operator MINUS end_operator begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_break end_break end_block end_else end_if end_block end_while begin_expr_stmt begin_expr begin_name z pend end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name sfmap end_name begin_index begin_expr begin_name wr end_name end_expr end_index end_name begin_operator EQ end_operator begin_call begin_name char end_name begin_argument_list begin_argument begin_expr begin_name j end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name wr end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name mtf freq end_name begin_index begin_expr begin_name j end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_else end_if end_block end_for begin_if begin_condition begin_expr begin_name z pend end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name z pend end_name begin_operator MMINUS end_operator end_expr end_expr_stmt begin_while begin_condition begin_expr end_expr end_condition begin_block begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name z pend end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name sfmap end_name begin_index begin_expr begin_name wr end_name end_expr end_index end_name begin_operator EQ end_operator begin_name runa end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name wr end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name mtf freq end_name begin_index begin_expr begin_name runa end_name end_expr end_index end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name begin_name sfmap end_name begin_index begin_expr begin_name wr end_name end_expr end_index end_name begin_operator EQ end_operator begin_name runb end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name wr end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name mtf freq end_name begin_index begin_expr begin_name runb end_name end_expr end_index end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_name z pend end_name begin_operator GE end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name z pend end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name z pend end_name begin_operator MINUS end_operator begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_break end_break end_block end_else end_if end_block end_while end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name sfmap end_name begin_index begin_expr begin_name wr end_name end_expr end_index end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name char end_name begin_operator RPAR end_operator begin_name eob end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name mtf freq end_name begin_index begin_expr begin_name eob end_name end_expr end_index end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name n mtf end_name end_name begin_operator EQ end_operator begin_name wr end_name begin_operator PLUS end_operator end_expr end_expr_stmt end_block 
 begin_comment implement the gunzipping end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name extract end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name source end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_call begin_name begin_name dest end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name source end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name dest end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file output stream end_name end_type begin_name out end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name gzip input stream end_name end_type begin_name z in end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name fis end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name out end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file output stream end_name begin_argument_list begin_argument begin_expr begin_name dest end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name fis end_name begin_operator EQ end_operator begin_call begin_name begin_name src resource end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name z in end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name gzip input stream end_name begin_argument_list begin_argument begin_expr begin_name fis end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name buffer end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name byte end_name begin_index begin_expr begin_operator STAR end_operator end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name count end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_do begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name count end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name count end_name begin_operator EQ end_operator begin_call begin_name begin_name z in end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_condition begin_expr begin_name count end_name begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_condition end_do end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name ioe end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name ioe end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name fis end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr begin_name z in end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block end_then end_if end_block 
 begin_comment whether old jdk 1 0 style header files should be generated return the old attribute since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get old end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name old end_name end_expr end_return end_block 
 begin_comment logs a message for a target if it is of an appropriate priority also logging the name of the target if this is the first message which needs to be logged for the target param event a build event containing message information must not be code null code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name message logged end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get priority end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_name msg output level end_name begin_operator UNP end_operator begin_operator EQT end_operator begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name trim end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name target name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name begin_operator PLUS end_operator begin_name target name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name target name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name message logged end_name end_name begin_argument_list begin_argument begin_expr begin_name event end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment init the parser load the parser class and set features if necessary it is only after this that the reader is valid throws build exception if something went wrong end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name init validator end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name init validator end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment validate the parser type end_comment begin_if begin_condition begin_expr begin_call begin_name is sax 1 parser end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name error sax 1 end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment enable schema end_comment begin_comment set feature xml constants feature validation false end_comment begin_expr_stmt begin_expr begin_call begin_name set feature end_name begin_argument_list begin_argument begin_expr begin_name begin_name xml constants end_name begin_operator DOT end_operator begin_name feature namespaces end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name enable xerces schema validation end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name enable jaxp 12 schema validation end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment couldnt use the xerces or jaxp calls end_comment begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name error no xsd support end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment enable schema checking end_comment begin_expr_stmt begin_expr begin_call begin_name set feature end_name begin_argument_list begin_argument begin_expr begin_name begin_name xml constants end_name begin_operator DOT end_operator begin_name feature xsd full validation end_name end_name end_expr end_argument begin_argument begin_expr begin_name full checking end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment turn off dt ds if desired end_comment begin_expr_stmt begin_expr begin_call begin_name set feature if supported end_name begin_argument_list begin_argument begin_expr begin_name begin_name xml constants end_name begin_operator DOT end_operator begin_name feature disallow dtd end_name end_name end_expr end_argument begin_argument begin_expr begin_name disable dtd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment schema declarations go in next end_comment begin_expr_stmt begin_expr begin_call begin_name add schema locations end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no trim string end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a em new em target to the project param target the target to be added to the project must not be code null code exception build exception if the target already exists in the project see project add or replace target target end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add target end_name begin_parameter_list begin_param begin_decl begin_type begin_name target end_name end_type begin_name target end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name add target end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test filesmatch neither exist end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment similiar to link set file set file but explicitly states that the file is a local file this is the only way to specify a local file with a character param a from uri a string representing the source of the copy since ant 1 6 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set local file end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name a from uri end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set from uri end_name begin_argument_list begin_argument begin_expr begin_name a from uri end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name is from remote end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment read includesfile ot excludesfile if not already done so end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name read files end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name includes file list end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name includes file list end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name name entry end_name end_type begin_name ne end_name begin_init begin_expr begin_operator LPAR end_operator begin_name name entry end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name file name end_name begin_init begin_expr begin_call begin_name begin_name ne end_name begin_operator DOT end_operator begin_name eval name end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name file name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name incl file end_name begin_init begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_name file name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name incl file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name incl file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name read patterns end_name begin_argument_list begin_argument begin_expr begin_name incl file end_name end_expr end_argument begin_argument begin_expr begin_name include list end_name end_expr end_argument begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_while begin_expr_stmt begin_expr begin_call begin_name begin_name includes file list end_name begin_operator DOT end_operator begin_name remove all elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name excludes file list end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name excludes file list end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name name entry end_name end_type begin_name ne end_name begin_init begin_expr begin_operator LPAR end_operator begin_name name entry end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name file name end_name begin_init begin_expr begin_call begin_name begin_name ne end_name begin_operator DOT end_operator begin_name eval name end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name file name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name excl file end_name begin_init begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_name file name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name excl file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name excl file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name read patterns end_name begin_argument_list begin_argument begin_expr begin_name excl file end_name end_expr end_argument begin_argument begin_expr begin_name exclude list end_name end_expr end_argument begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_while begin_expr_stmt begin_expr begin_call begin_name begin_name excludes file list end_name begin_operator DOT end_operator begin_name remove all elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment set the verbose level of the compiler param i the verbose level to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set verbose end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name i end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name verbose end_name begin_operator EQ end_operator begin_name i end_name end_expr end_expr_stmt end_block 
 begin_comment quote the parts of the given array in way that makes them usable as command line arguments param line the list of arguments to quote return empty string for null or no command else every argument split by spaces and quoted by quoting rules end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name line end_name end_decl end_param end_parameter_list begin_block begin_comment empty path return empty string end_comment begin_if begin_condition begin_expr begin_name line end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name begin_name line end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_comment path containing one or more elements end_comment begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string buffer end_name end_type begin_name result end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name line end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name i end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name quote argument end_name begin_argument_list begin_argument begin_expr begin_name begin_name line end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test if end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name set property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment assert that a property equals a value comparison is case sensitive param property property name param value expected value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name assert property equals end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name property end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name property end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name property end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment if set to true additional information will be printed during the deployment process optional param debug a boolean representing weblogic deploy debug flag end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set debug end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name debug end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_operator EQ end_operator begin_name debug end_name end_expr end_expr_stmt end_block 
 begin_comment set the provider classname param type the value to set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set class name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name type end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name type end_name end_name begin_operator EQ end_operator begin_name type end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test url keystore file end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the class name of the adapter class an adapter class is used to proxy the definition class it is used if the definition class is not assignable to the adaptto class or if the adaptto class is not present param adapter the name of the adapter class end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set adapter end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name adapter end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name adapter end_name end_name begin_operator EQ end_operator begin_name adapter end_name end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name initialize class test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the primary descriptor of the given item type returns null if there isn t one in practice all item types have a primary descriptor param t an item type at this point it will always be file return the specified item s primary descriptor end_comment begin_type begin_specifier end_specifier begin_name property end_name end_type begin_name get primary descriptor end_name begin_parameter_list begin_param begin_decl begin_type begin_name type end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name property end_name begin_index end_index end_type begin_name properties end_name begin_init begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name get properties end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name properties end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name property end_name end_type begin_name p end_name begin_init begin_expr begin_name begin_name properties end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name is primary descriptor end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name p end_name end_expr end_return end_block end_then end_if end_block end_for begin_return begin_expr end_expr end_return end_block 
 begin_comment used to set the value of the magic property param magic value the value of a magic property that may hold a user end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set magic value end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name magic value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name magic value end_name end_name begin_operator EQ end_operator begin_name magic value end_name end_expr end_expr_stmt end_block 
 begin_comment creates a fresh object instance of the specified classname p this uses the user defined loader to load the specified class and then makes an instance using the default no argument constructor p param class name the full qualified class name to load param user defined loader the classloader to use return the fresh object instance throws build exception when loading or instantiation failed end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name object end_name end_type begin_name new instance end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name class name end_name end_decl end_param begin_param begin_decl begin_type begin_name class loader end_name end_type begin_name user defined loader end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name new instance end_name begin_argument_list begin_argument begin_expr begin_name class name end_name end_expr end_argument begin_argument begin_expr begin_name user defined loader end_name end_expr end_argument begin_argument begin_expr begin_name begin_name object end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment returns an enumeration of all child wrappers return an enumeration of the child wrappers since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name enumeration end_name end_type begin_name get children end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name children end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator UNP end_operator begin_call begin_name begin_name collection utils end_name begin_operator DOT end_operator begin_name empty enumeration end_name end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_call begin_name begin_name collections end_name begin_operator DOT end_operator begin_name enumeration end_name end_name begin_argument_list begin_argument begin_expr begin_name children end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment set the location param loc a code file code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set location end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name loc end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name parts end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr begin_call begin_name translate file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name loc end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_block end_expr end_expr_stmt end_block 
 begin_comment learn whether the resource is a directory return boolean flag indicating if the resource is a directory end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is directory end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name is directory end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_call begin_name get not null file end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name is directory end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment method for subclasses to override param z out the zip output stream throws io exception on output error throws build exception on other errors end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name finalize zip output stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name zip output stream end_name end_type begin_name z out end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block end_block 
 begin_comment default end_comment begin_comment get the name attribute return the name attribute end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name name end_name end_expr end_return end_block 
 begin_comment the heart of the matter this is where the selector gets to decide on the inclusion of a file in a particular fileset most of the work for this selector is offloaded into selector utils a static class that provides the same services for both filename selector and directory scanner param basedir the base directory the scan is being done from param filename is the name of the file to check param file is a java io file object the selector can use return whether the file should be selected or not end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is selected end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name basedir end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name filename end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_comment throw build exception on error end_comment begin_expr_stmt begin_expr begin_call begin_name validate end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name depth end_name begin_init begin_expr begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_comment if you felt daring you could cache the basedir absolute path end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name abs base end_name begin_init begin_expr begin_call begin_name begin_name basedir end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name abs file end_name begin_init begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string tokenizer end_name end_type begin_name tok base end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string tokenizer end_name begin_argument_list begin_argument begin_expr begin_name abs base end_name end_expr end_argument begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string tokenizer end_name end_type begin_name tok file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string tokenizer end_name begin_argument_list begin_argument begin_expr begin_name abs file end_name end_expr end_argument begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name tok file end_name begin_operator DOT end_operator begin_name has more tokens end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name filetoken end_name begin_init begin_expr begin_call begin_name begin_name tok file end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name tok base end_name begin_operator DOT end_operator begin_name has more tokens end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name basetoken end_name begin_init begin_expr begin_call begin_name begin_name tok base end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment sanity check ditch it if you want faster performance end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name basetoken end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name filetoken end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name filename end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name abs base end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name depth end_name begin_operator UNP end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name max end_name begin_operator GT end_operator begin_operator MINUS end_operator begin_operator UNP end_operator begin_name depth end_name begin_operator GT end_operator begin_name max end_name end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_else end_if end_block end_while begin_if begin_condition begin_expr begin_call begin_name begin_name tok base end_name begin_operator DOT end_operator begin_name has more tokens end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name filename end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name abs base end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name min end_name begin_operator GT end_operator begin_operator MINUS end_operator begin_operator UNP end_operator begin_name depth end_name begin_operator LT end_operator begin_name min end_name end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_return begin_expr end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name wait for end end_name begin_parameter_list begin_param begin_decl begin_type begin_name process end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name retcode end_name begin_init begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name wait for end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name retcode end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name err end_name begin_init begin_expr begin_call begin_name get error output end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name err end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name err end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_return begin_expr begin_name retcode end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name begin_name classpath utils end_name begin_operator DOT end_operator begin_name delegate end_name end_name end_type begin_name get delegate end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name cp delegate end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name cp delegate end_name begin_operator EQ end_operator begin_call begin_name begin_name classpath utils end_name begin_operator DOT end_operator begin_name get delegate end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name cp delegate end_name end_expr end_return end_block 
 begin_comment get global imports for namespaces in referenced metadata files return the imports string end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get imports end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name imports end_name end_name end_expr end_return end_block 
 begin_comment the string to search in param string the string to search in since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set string end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name string end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name string end_name end_name begin_operator EQ end_operator begin_name string end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment a unit test for j unit end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test wlrmic end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the stroke attribute param col the color value to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set stroke end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name col end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name stroke end_name begin_operator EQ end_operator begin_name col end_name end_expr end_expr_stmt end_block 
 begin_comment return the validate attribute end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get validate end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name validate end_name end_name end_expr end_return end_block 
 begin_comment if true preserve the modification time param ptime the status to set the flag to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set preserve time end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name ptime end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m ptime end_name begin_operator EQ end_operator begin_name ptime end_name end_expr end_expr_stmt end_block 
 begin_comment set the full pathname of the single entry in this fileset prevents both prefix and fullpath from being specified param fullpath the full pathname of the single entry in this fileset end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set fullpath end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name fullpath end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name check archive attributes allowed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name prefix end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name fullpath end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name fullpath end_name end_name begin_operator EQ end_operator begin_name fullpath end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr begin_name taskdefs dir end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name set property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name test value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment p set output stream for formatter to use p defaults to standard out param out the output stream to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set output end_name begin_parameter_list begin_param begin_decl begin_type begin_name output stream end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name out end_name end_name begin_operator EQ end_operator begin_name out end_name end_expr end_expr_stmt end_block 
 begin_comment create links to javadoc output at the given url param src the url to link to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set link end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name src end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name create link end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set href end_name begin_argument_list begin_argument begin_expr begin_name src end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the permissions for the application run inside the same jvm since ant 1 6 return end_comment begin_type begin_specifier end_specifier begin_name permissions end_name end_type begin_name create permissions end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name perm end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name perm end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name permissions end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name perm end_name end_expr end_return end_block 
 begin_comment filename for web xml param webxml the new webxml value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set webxml end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name webxml end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name webxml end_name end_name begin_operator EQ end_operator begin_name webxml end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment if true use a completely new environment p will be ignored if we are not forking a new vm param newenv if true use a completely new environment since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set newenvironment end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name newenv end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name new environment end_name begin_operator EQ end_operator begin_name newenv end_name end_expr end_expr_stmt end_block 
 begin_comment compare this java resource to another resource param another the other resource against which to compare return a negative integer zero or a positive integer as this java resource is less than equal to or greater than the specified resource end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name compare to end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name another end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name comparable end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name compare to end_name begin_argument_list begin_argument begin_expr begin_name another end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name another end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name get class end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name java resource end_name end_type begin_name otherjr end_name begin_init begin_expr begin_operator LPAR end_operator begin_name java resource end_name begin_operator RPAR end_operator begin_name another end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name otherjr end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name get name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name compare to end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name otherjr end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name loader end_name begin_operator UNP end_operator begin_name begin_name otherjr end_name begin_operator DOT end_operator begin_name loader end_name end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name loader end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator MINUS end_operator end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name otherjr end_name begin_operator DOT end_operator begin_name loader end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name loader end_name begin_operator DOT end_operator begin_name get ref id end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name compare to end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name otherjr end_name begin_operator DOT end_operator begin_name loader end_name begin_operator DOT end_operator begin_name get ref id end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name p end_name begin_init begin_expr begin_call begin_name get classpath end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name op end_name begin_init begin_expr begin_call begin_name begin_name otherjr end_name begin_operator DOT end_operator begin_name get classpath end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name p end_name begin_operator UNP end_operator begin_name op end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name p end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator MINUS end_operator end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name op end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name compare to end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name op end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr end_expr end_return end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name compare to end_name end_name begin_argument_list begin_argument begin_expr begin_name another end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name describe checkout end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name com end_name begin_operator DOT end_operator begin_name starbase end_name begin_operator DOT end_operator begin_name starteam end_name begin_operator DOT end_operator begin_name file end_name end_name end_type begin_name remotefile end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name describe checkout end_name begin_argument_list begin_argument begin_expr begin_name remotefile end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment get the number of errors return the number of errors end_comment begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name error count end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name errors end_name end_expr end_return end_block 
 begin_comment defines the mapper to map source entries to destination files return a mapper to be configured exception build exception if more than one mapper is defined since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name mapper end_name end_type begin_name create mapper end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name mapper element end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name error multiple mappers end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name mapper element end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name mapper end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name mapper element end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name log future end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource collection end_name end_type begin_name rc end_name end_decl end_param begin_param begin_decl begin_type begin_name resource selector end_name end_type begin_name rsel end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name restrict end_name end_type begin_name r end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name restrict end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name rsel end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name rc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_comment execute a code vector code of sorted targets param sorted targets the aforementioned code vector code throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute sorted targets end_name begin_parameter_list begin_param begin_decl begin_type begin_name vector end_name end_type begin_name sorted targets end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name set end_name end_type begin_name succeeded targets end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name hash set end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name build exception end_name end_type begin_name build exception end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment first build exception end_comment begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name iter end_name begin_init begin_expr begin_call begin_name begin_name sorted targets end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name target end_name end_type begin_name curtarget end_name begin_init begin_expr begin_operator LPAR end_operator begin_name target end_name begin_operator RPAR end_operator begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name can execute end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name dep iter end_name begin_init begin_expr begin_call begin_name begin_name curtarget end_name begin_operator DOT end_operator begin_name get dependencies end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name dep iter end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name dependency name end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name dep iter end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name succeeded targets end_name begin_operator DOT end_operator begin_name contains end_name end_name begin_argument_list begin_argument begin_expr begin_name dependency name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name can execute end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name curtarget end_name end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name curtarget end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name dependency name end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name msg err end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_block end_then end_if end_block end_for begin_if begin_condition begin_expr begin_name can execute end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name throwable end_name end_type begin_name thrown exception end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name curtarget end_name begin_operator DOT end_operator begin_name perform tasks end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name succeeded targets end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name curtarget end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name runtime exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_name keep going mode end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_name ex end_name end_expr end_throw begin_comment throw further end_comment end_block end_then end_if begin_expr_stmt begin_expr begin_name thrown exception end_name begin_operator EQ end_operator begin_name ex end_name end_expr end_expr_stmt end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_name keep going mode end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name ex end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name thrown exception end_name begin_operator EQ end_operator begin_name ex end_name end_expr end_expr_stmt end_block end_catch end_try begin_if begin_condition begin_expr begin_name thrown exception end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name thrown exception end_name begin_operator UNP end_operator begin_name build exception end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name curtarget end_name end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name curtarget end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name thrown exception end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name msg err end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment only the first build exception is reported end_comment begin_if begin_condition begin_expr begin_name build exception end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name build exception end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name build exception end_name begin_operator RPAR end_operator begin_name thrown exception end_name end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name curtarget end_name end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name curtarget end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name thrown exception end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name msg err end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name thrown exception end_name begin_operator DOT end_operator begin_name print stack trace end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name build exception end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name build exception end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name thrown exception end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if end_block end_then end_if end_block end_then end_if end_block end_for begin_if begin_condition begin_expr begin_name build exception end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_name build exception end_name end_expr end_throw end_block end_then end_if end_block 
 begin_comment set the project description param description the description of the project may be code null code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set description end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name description end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name description end_name end_name begin_operator EQ end_operator begin_name description end_name end_expr end_expr_stmt end_block 
 begin_comment adds a reference to a classpath defined elsewhere param r the reference containing the path end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set path ref end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name create path end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set refid end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment finds an executable that is part of a jre installation based on the java home system property p code java code code keytool code code policytool code code orbd code code rmid code code rmiregistry code code servertool code and code tnameserv code are jre executables on sun based jre s p p you typically find them in code java home jre bin code if code java home code points to your jdk installation jdk lt 1 2 has them in the same directory as the jdk executables p param command the java executable to find return the path to the command since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get jre executable end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name command end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name is netware end_name end_expr end_condition begin_then begin_block begin_comment extrapolating from end_comment begin_comment net ware may have a java in that directory but 99 of end_comment begin_comment the time you don t want to execute it jeff tulley end_comment begin_comment jtulley novell com end_comment begin_return begin_expr begin_name command end_name end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name j executable end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name is aix end_name end_expr end_condition begin_then begin_block begin_comment on ibm s jdk 1 2 the directory layout is different 1 3 follows end_comment begin_comment sun s layout end_comment begin_expr_stmt begin_expr begin_name j executable end_name begin_operator EQ end_operator begin_call begin_name find in dir end_name begin_argument_list begin_argument begin_expr begin_name java home end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name command end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name j executable end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name j executable end_name begin_operator EQ end_operator begin_call begin_name find in dir end_name begin_argument_list begin_argument begin_expr begin_name java home end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name command end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name j executable end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name begin_name j executable end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_comment unfortunately on windows java home doesn t always refer end_comment begin_comment to the correct location so we need to fall back to end_comment begin_comment assuming java is somewhere on the path end_comment begin_return begin_expr begin_call begin_name add extension end_name begin_argument_list begin_argument begin_expr begin_name command end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_else end_if end_block 
 begin_comment sets a flag to emit diagnostic text param enable a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set diagnostic end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name enable end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name diagnostic end_name begin_operator EQ end_operator begin_name enable end_name end_expr end_expr_stmt end_block 
 begin_comment specify a set of file to be checked param set the fileset to check end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add fileset end_name begin_parameter_list begin_param begin_decl begin_type begin_name file set end_name end_type begin_name set end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name set end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment since ant 1 6 2 end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name get classpath end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name p end_name begin_init begin_expr begin_call begin_name get jspc end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get classpath end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name p end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name p end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name concat system classpath end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name concat system classpath end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test parent differs in case scanning sensitive end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name login suceeded end_name end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name change remote dir end_name begin_argument_list begin_argument begin_expr begin_name remote tmp dir end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name ftp directory scanner end_name end_name end_type begin_name ds end_name begin_init begin_expr begin_call begin_name begin_name my ftp task end_name begin_operator DOT end_operator begin_name new scanner end_name end_name begin_argument_list begin_argument begin_expr begin_name ftp end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set basedir end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set includes end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name compare files end_name begin_argument_list begin_argument begin_expr begin_name ds end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the node scope hook grammar option param node scope hook a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set nodescopehook end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name node scope hook end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name optional attrs end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name node scope hook end_name end_expr end_argument begin_argument begin_expr begin_name node scope hook end_name begin_operator QM end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name true end_name end_name begin_operator DP end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name false end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment description for change list optional if none is specified it will default to auto submit by ant param desc description for the change list end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set description end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name desc end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name description end_name end_name begin_operator EQ end_operator begin_name desc end_name end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name is reachable test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment this parses tokens which point to tokens it also maintains a list of currently used tokens so we cannot get into an infinite loop param line the value token to parse param parent the parent token the token it was parsed from end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name replace tokens end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name line end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name parent end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name begin token end_name begin_init begin_expr begin_call begin_name get begin token end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name end token end_name begin_init begin_expr begin_call begin_name get end token end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name recurse depth end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name passed tokens end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name recurse depth end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name passed tokens end_name begin_operator DOT end_operator begin_name contains end_name end_name begin_argument_list begin_argument begin_expr begin_name parent end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_name duplicate token end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name duplicate token end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name passed tokens end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin token end_name begin_operator PLUS end_operator begin_name parent end_name begin_operator PLUS end_operator begin_name end token end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin token end_name begin_operator PLUS end_operator begin_call begin_name begin_name passed tokens end_name begin_operator DOT end_operator begin_name last element end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_name end token end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name recurse depth end_name begin_operator MMINUS end_operator end_expr end_expr_stmt begin_return begin_expr begin_name parent end_name end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name passed tokens end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name parent end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name value end_name begin_init begin_expr begin_call begin_name i replace tokens end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name begin token end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_operator MINUS end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_name duplicate token end_name begin_operator UNP end_operator begin_name recurse depth end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name passed tokens end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name duplicate token end_name end_expr end_condition begin_then begin_block begin_comment should always be the case end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name passed tokens end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name value end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name passed tokens end_name begin_operator DOT end_operator begin_name remove end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name passed tokens end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name passed tokens end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name value end_name begin_operator EQ end_operator begin_name begin token end_name begin_operator PLUS end_operator begin_name value end_name begin_operator PLUS end_operator begin_name end token end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name duplicate token end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block end_then end_if end_else end_if begin_expr_stmt begin_expr begin_name recurse depth end_name begin_operator MMINUS end_operator end_expr end_expr_stmt begin_return begin_expr begin_name value end_name end_expr end_return end_block 
 begin_comment no arg constructor end_comment begin_specifier end_specifier begin_name x new rmic end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name open file end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name index end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name close current end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name file end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name index end_name begin_operator LT end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name file end_name begin_index begin_expr begin_name index end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name current stream end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name buffered input stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_index begin_expr begin_name index end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name eye oh ex end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name file end_name begin_index begin_expr begin_name index end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_name eye oh ex end_name end_expr end_throw end_block end_catch end_try end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name eof end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment the uri for this definition return the uri for this defintion end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get uri end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name uri end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test task that isnt defined end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect property unset end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the comment text param text the comment text to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set internal comment end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name text end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name comment end_name begin_operator EQ end_operator begin_name text end_name end_expr end_expr_stmt end_block 
 begin_comment unused constructor end_comment begin_specifier end_specifier begin_name dom util end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment tests the system type key attribute with unix specified end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test configuration 3 end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name begin_index end_index end_type begin_name expected counts end_name begin_init begin_expr begin_block begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr begin_expr end_expr end_block end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name perform config test end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name expected counts end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set a managing code task code for this code lead pipe input stream code param task the managing code task code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set managing task end_name begin_parameter_list begin_param begin_decl begin_type begin_name task end_name end_type begin_name task end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set managing component end_name begin_argument_list begin_argument begin_expr begin_name task end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment execute task exception build exception if an error occurs end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_comment validate the input parameters end_comment begin_expr_stmt begin_expr begin_call begin_name validate end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment build the rdiff command end_comment begin_expr_stmt begin_expr begin_call begin_name add command argument end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add command argument end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name mystart tag end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name add command argument end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add command argument end_name begin_argument_list begin_argument begin_expr begin_name mystart tag end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name add command argument end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add command argument end_name begin_argument_list begin_argument begin_expr begin_name mystart date end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_name myend tag end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name add command argument end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add command argument end_name begin_argument_list begin_argument begin_expr begin_name myend tag end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name add command argument end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add command argument end_name begin_argument_list begin_argument begin_expr begin_name myend date end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_comment support multiple packages end_comment begin_decl_stmt begin_decl begin_type begin_name string tokenizer end_name end_type begin_name my tokenizer end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string tokenizer end_name begin_argument_list begin_argument begin_expr begin_name mypackage end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name my tokenizer end_name begin_operator DOT end_operator begin_name has more tokens end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name add command argument end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name my tokenizer end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_comment force command not to be null end_comment begin_expr_stmt begin_expr begin_call begin_name set command end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name tmp file end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name tmp file end_name begin_operator EQ end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name create temp file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tmp file end_name begin_operator DOT end_operator begin_name delete on exit end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set output end_name begin_argument_list begin_argument begin_expr begin_name tmp file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment run the cvs command end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment parse the rdiff end_comment begin_decl_stmt begin_decl begin_type begin_name cvs tag entry end_name begin_index end_index end_type begin_name entries end_name begin_init begin_expr begin_call begin_name parse r diff end_name begin_argument_list begin_argument begin_expr begin_name tmp file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment write the tag diff end_comment begin_expr_stmt begin_expr begin_call begin_name write tag diff end_name begin_argument_list begin_argument begin_expr begin_name entries end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_if begin_condition begin_expr begin_name tmp file end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name tmp file end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try end_block 
 begin_comment obtains a delegate that helps out with classic classpath configuration param component your project component that needs the assistence return the helper delegate see classpath utils delegate end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name delegate end_name end_type begin_name get delegate end_name begin_parameter_list begin_param begin_decl begin_type begin_name project component end_name end_type begin_name component end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name delegate end_name begin_argument_list begin_argument begin_expr begin_name component end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment add a target to the list of targets to invoke param t code ant target element code representing the target since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add configured target end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name ant end_name begin_operator DOT end_operator begin_name target element end_name end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name callee end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name init end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name callee end_name begin_operator DOT end_operator begin_name add configured target end_name end_name begin_argument_list begin_argument begin_expr begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name target set end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test redirect 2 end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get file string end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get file string end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment whether the given resource collection is a subclass of file set that only contains file system resources param rc the resource collection to check return true if the collection is a fileset since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name is file file set end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource collection end_name end_type begin_name rc end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_name rc end_name begin_operator UNP end_operator begin_name file set end_name begin_operator UNP end_operator begin_call begin_name begin_name rc end_name begin_operator DOT end_operator begin_name is filesystem only end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment validate end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name validate end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name setcount end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name classname end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name setcount end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name resource end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name setcount end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name setcount end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name setcount end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name property end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment check style member name check on end_comment begin_comment check style visibility modifier on end_comment begin_comment constructor end_comment begin_specifier end_specifier begin_name style book end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set classname end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set fork end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set failonerror end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the project for this runner param project the project end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set project end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name project end_name end_name begin_operator EQ end_operator begin_name project end_name end_expr end_expr_stmt end_block 
 begin_comment convenience method to copy a file from a source to a destination specifying if token filtering should be used param source file name of file to copy from must not be code null code param dest file name of file to copy to must not be code null code param filtering whether or not token filtering should be used during the copy exception io exception if the copying fails deprecated since 1 4 x end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name copy file end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name source file end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name dest file end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name filtering end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name copy file end_name end_name begin_argument_list begin_argument begin_expr begin_name source file end_name end_expr end_argument begin_argument begin_expr begin_name dest file end_name end_expr end_argument begin_argument begin_expr begin_name filtering end_name begin_operator QM end_operator begin_name global filters end_name begin_operator DP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment allows classpath reference not allowed if this catalog is itself a reference to another catalog that is a catalog cannot both refer to another em and em contain elements or other attributes param r an ant reference containing a classpath end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classpath ref end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name create classpath end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set refid end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set checked end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_name data end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name block size 100 k end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name n end_name begin_init begin_expr begin_name block size 100 k end_name begin_operator STAR end_operator begin_name begin_name b zip 2 constants end_name begin_operator DOT end_operator begin_name base block size end_name end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name block end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_name begin_name byte end_name begin_index begin_expr begin_operator LPAR end_operator begin_name n end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name num overshoot bytes end_name begin_operator RPAR end_operator end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name fmap end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_name begin_name int end_name begin_index begin_expr begin_name n end_name end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name sfmap end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_name begin_name char end_name begin_index begin_expr begin_operator STAR end_operator begin_name n end_name end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name quadrant end_name end_name begin_operator EQ end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name sfmap end_name end_name end_expr end_expr_stmt end_block 
 begin_comment wait for a given process param process the process one wants to wait for end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name wait for end_name begin_parameter_list begin_param begin_decl begin_type begin_name process end_name end_type begin_name process end_name end_decl end_param end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name process end_name begin_operator DOT end_operator begin_name wait for end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set exit value end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name process end_name begin_operator DOT end_operator begin_name exit value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name interrupted exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name process end_name begin_operator DOT end_operator begin_name destroy end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment creates a new instance of a task called from project create task which can be called by tasks param task type the name of the task to create an instance of must not be code null code return an instance of the specified task or code null code if the task name is not recognised exception build exception if the task name is recognised but task creation fails end_comment begin_type begin_specifier end_specifier begin_name task end_name end_type begin_name create task end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name task type end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name task end_name end_type begin_name task end_name begin_init begin_expr begin_call begin_name create new task end_name begin_argument_list begin_argument begin_expr begin_name task type end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name task end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name task type end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name ant property task end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment quick fix for ant java use of property before end_comment begin_comment initializing the project end_comment begin_expr_stmt begin_expr begin_call begin_name add task definition end_name begin_argument_list begin_argument begin_expr begin_name ant property task end_name end_expr end_argument begin_argument begin_expr begin_name begin_name org end_name begin_operator DOT end_operator begin_name apache end_name begin_operator DOT end_operator begin_name tools end_name begin_operator DOT end_operator begin_name ant end_name begin_operator DOT end_operator begin_name taskdefs end_name begin_operator DOT end_operator begin_name property end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name task end_name begin_operator EQ end_operator begin_call begin_name create new task end_name begin_argument_list begin_argument begin_expr begin_name task type end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name task end_name end_expr end_return end_block 
 begin_comment opens the given file for reading assuming the specified encoding for file names param name name of the archive param encoding the encoding to use for file names throws io exception if an error occurs while reading the file end_comment begin_specifier end_specifier begin_name zip file end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name encoding end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 3 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name end_type begin_name f end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment set the java source file encoding name param encoding the source file encoding end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set encoding end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name encoding end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name encoding end_name end_name begin_operator EQ end_operator begin_name encoding end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name do scenario test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name target end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name cachefilename end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name bft end_name end_type begin_name bft end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name bft end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bft end_name begin_operator DOT end_operator begin_name set up end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name cachefile end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr begin_name cachefilename end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_comment do the actions end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name bft end_name begin_operator DOT end_operator begin_name do target end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bft end_name begin_operator DOT end_operator begin_name do target end_name end_name begin_argument_list begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment the directories to check end_comment begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name to 1 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name to 2 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name to 3 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment do the checks end_comment begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name cachefile end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name to 1 end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_name length end_name begin_operator GT end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name to 2 end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_name length end_name begin_operator EQT end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name to 3 end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_name length end_name begin_operator EQT end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment don t catch the j unit exceptions end_comment end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name bft end_name begin_operator DOT end_operator begin_name do target end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bft end_name begin_operator DOT end_operator begin_name delete propertiesfile end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bft end_name begin_operator DOT end_operator begin_name tear down end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cachefile end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment add a selector date entry on the selector list param selector the selector to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add date end_name begin_parameter_list begin_param begin_decl begin_type begin_name date selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name append selector end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment create the watchdog to kill a runaway process return instance of execute watchdog throws build exception under unknown circumstances end_comment begin_type begin_specifier end_specifier begin_name execute watchdog end_name end_type begin_name create watchdog end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name timeout end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator DP end_operator begin_operator UNP end_operator begin_call begin_name execute watchdog end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name timeout end_name begin_operator DOT end_operator begin_name long value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment write an archive record to the archive where the record may be inside of a larger array buffer the buffer must be offset plus record size long param buf the buffer containing the record data to write param offset the offset of the record data within buf throws io exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write record end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name buf end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name offset end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name debug end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr rec idx end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr blk idx end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name out stream end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name io exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name offset end_name begin_operator PLUS end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name record size end_name end_name begin_operator RPAR end_operator begin_operator GT end_operator begin_name begin_name buf end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name io exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name buf end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name offset end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name record size end_name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr rec idx end_name end_name begin_operator GE end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name recs per block end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name write block end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_name buf end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name block buffer end_name end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr rec idx end_name end_name begin_operator STAR end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name record size end_name end_name begin_operator RPAR end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name record size end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr rec idx end_name end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block 
 begin_comment get the granularity of file timestamps the choice is made based on os which is incorrect it should really be by filesystem we do not have an easy way to probe for file systems however so this heuristic gives us a decent default return the difference in milliseconds which two file timestamps must have in order for the two files to be considered to have different timestamps end_comment begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name get file timestamp granularity end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name on win 9 x end_name end_expr end_condition begin_then begin_block begin_return begin_expr begin_name fat file timestamp granularity end_name end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_name on windows end_name end_expr end_condition begin_then begin_block begin_return begin_expr begin_name ntfs file timestamp granularity end_name end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_name on dos end_name end_expr end_condition begin_then begin_block begin_return begin_expr begin_name fat file timestamp granularity end_name end_expr end_return end_block end_then end_if end_else end_if end_else end_if begin_return begin_expr begin_name unix file timestamp granularity end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name list end_name end_type begin_name get cmp descriptors end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name cmp descriptors end_name end_expr end_return end_block 
 begin_comment adds to the classpath a reference to a lt path gt defined elsewhere param path ref the reference to add to the classpath end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classpath ref end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name path ref end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name create classpath end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set refid end_name begin_argument_list begin_argument begin_expr begin_name path ref end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment login to use when accessing vss formatted as username password p you can omit the password if your database is not password protected if you have a password and omit it ant will hang param vss login the login string to use end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set login end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name vss login end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name vss login end_name end_name begin_operator EQ end_operator begin_name vss login end_name end_expr end_expr_stmt end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set output end_name begin_parameter_list begin_param begin_decl begin_type begin_name output stream end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name out end_name end_name begin_operator EQ end_operator begin_name out end_name end_expr end_expr_stmt end_block 
 begin_comment builds and returns the g flag if required return an empty string if get local copy is true end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get get local copy end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator UNP end_operator begin_name get local copy end_name begin_operator RPAR end_operator begin_operator QM end_operator begin_name flag no get end_name begin_operator DP end_operator end_expr end_return end_block 
 begin_comment get the refid attribute return the refid attribute end_comment begin_type begin_specifier end_specifier begin_name reference end_name end_type begin_name get refid end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name ref end_name end_expr end_return end_block 
 begin_comment executes the task p builds a command line to execute cleartool and then calls exec s run method to execute the command line throws build exception if the command fails and failonerr is set to true end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name commandline end_name end_type begin_name command line end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name commandline end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name result end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment check for required attributes end_comment begin_if begin_condition begin_expr begin_call begin_name get type kind end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name get type name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment build the command line from what we got the format is end_comment begin_comment cleartool rmtype options type selector end_comment begin_comment as specified in the cleartool help end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name set executable end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get clear tool command end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name command rmtype end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name check options end_name begin_argument_list begin_argument begin_expr begin_name command line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name get fail on err end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get type specifier end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name run end_name begin_argument_list begin_argument begin_expr begin_name command line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name execute end_name begin_operator DOT end_operator begin_name is failure end_name end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name get fail on err end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment returns an enumerator for accessing the set of selectors return an enumerator for the selectors end_comment begin_type begin_specifier end_specifier begin_name enumeration end_name end_type begin_name selector elements end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name selectors list end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 2 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment if true hijacked files are renamed with a keep extension param ren the status to set the flag to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set rename end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name ren end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m rename end_name begin_operator EQ end_operator begin_name ren end_name end_expr end_expr_stmt end_block 
 begin_comment this code redirector code s subordinate code property output stream code s will not set their respective properties code while append properties append code param append properties whether to append properties end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set append properties end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name append properties end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name append properties end_name end_name begin_operator EQ end_operator begin_name append properties end_name end_expr end_expr_stmt end_block 
 begin_comment constructor for dummy instances see base filter reader base filter reader end_comment begin_specifier end_specifier begin_name strip line comments end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name array list end_name end_type begin_name collect end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name o end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name array list end_name end_type begin_name result end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name resource collection end_name begin_operator RPAR end_operator begin_name o end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_name result end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name assert string contains end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name string end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name contains end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name string end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name contains end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name string end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name contains end_name end_expr end_argument end_argument_list end_call begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment define the package information when the class comes from a jar with a manifest param container the jar file containing the manifest param package name the name of the package being defined param manifest the jar s manifest end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name define package end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name container end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name package name end_name end_decl end_param begin_param begin_decl begin_type begin_name manifest end_name end_type begin_name manifest end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name section name end_name begin_init begin_expr begin_call begin_name begin_name package name end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name specification title end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name specification vendor end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name specification version end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name implementation title end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name implementation vendor end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name implementation version end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name sealed string end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name url end_name end_type begin_name seal base end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name attributes end_name end_type begin_name section attributes end_name begin_init begin_expr begin_call begin_name begin_name manifest end_name begin_operator DOT end_operator begin_name get attributes end_name end_name begin_argument_list begin_argument begin_expr begin_name section name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name section attributes end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name specification title end_name begin_operator EQ end_operator begin_call begin_name begin_name section attributes end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name name end_name begin_operator DOT end_operator begin_name specification title end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name specification vendor end_name begin_operator EQ end_operator begin_call begin_name begin_name section attributes end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name name end_name begin_operator DOT end_operator begin_name specification vendor end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name specification version end_name begin_operator EQ end_operator begin_call begin_name begin_name section attributes end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name name end_name begin_operator DOT end_operator begin_name specification version end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name implementation title end_name begin_operator EQ end_operator begin_call begin_name begin_name section attributes end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name name end_name begin_operator DOT end_operator begin_name implementation title end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name implementation vendor end_name begin_operator EQ end_operator begin_call begin_name begin_name section attributes end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name name end_name begin_operator DOT end_operator begin_name implementation vendor end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name implementation version end_name begin_operator EQ end_operator begin_call begin_name begin_name section attributes end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name name end_name begin_operator DOT end_operator begin_name implementation version end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name sealed string end_name begin_operator EQ end_operator begin_call begin_name begin_name section attributes end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name name end_name begin_operator DOT end_operator begin_name sealed end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name attributes end_name end_type begin_name main attributes end_name begin_init begin_expr begin_call begin_name begin_name manifest end_name begin_operator DOT end_operator begin_name get main attributes end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name main attributes end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name specification title end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name specification title end_name begin_operator EQ end_operator begin_call begin_name begin_name main attributes end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name name end_name begin_operator DOT end_operator begin_name specification title end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name specification vendor end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name specification vendor end_name begin_operator EQ end_operator begin_call begin_name begin_name main attributes end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name name end_name begin_operator DOT end_operator begin_name specification vendor end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name specification version end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name specification version end_name begin_operator EQ end_operator begin_call begin_name begin_name main attributes end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name name end_name begin_operator DOT end_operator begin_name specification version end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name implementation title end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name implementation title end_name begin_operator EQ end_operator begin_call begin_name begin_name main attributes end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name name end_name begin_operator DOT end_operator begin_name implementation title end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name implementation vendor end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name implementation vendor end_name begin_operator EQ end_operator begin_call begin_name begin_name main attributes end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name name end_name begin_operator DOT end_operator begin_name implementation vendor end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name implementation version end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name implementation version end_name begin_operator EQ end_operator begin_call begin_name begin_name main attributes end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name name end_name begin_operator DOT end_operator begin_name implementation version end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name sealed string end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name sealed string end_name begin_operator EQ end_operator begin_call begin_name begin_name main attributes end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name name end_name begin_operator DOT end_operator begin_name sealed end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_if begin_condition begin_expr begin_name sealed string end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name sealed string end_name begin_operator DOT end_operator begin_name equals ignore case end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_name seal base end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name url end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name get file utils end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to uri end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name container end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name malformed url exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name define package end_name begin_argument_list begin_argument begin_expr begin_name package name end_name end_expr end_argument begin_argument begin_expr begin_name specification title end_name end_expr end_argument begin_argument begin_expr begin_name specification version end_name end_expr end_argument begin_argument begin_expr begin_name specification vendor end_name end_expr end_argument begin_argument begin_expr begin_name implementation title end_name end_expr end_argument begin_argument begin_expr begin_name implementation version end_name end_expr end_argument begin_argument begin_expr begin_name implementation vendor end_name end_expr end_argument begin_argument begin_expr begin_name seal base end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment is property expansion inside inline text enabled return true if properties are to be expanded since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get expand properties end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name expand properties end_name end_expr end_return end_block 
 begin_comment set the rmic options param options the options to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set rmicoptions end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name options end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name rmic options end_name end_name begin_operator EQ end_operator begin_name options end_name end_expr end_expr_stmt end_block 
 begin_comment interface test listener for j unit lt 3 4 p a test failed param test the test param t the exception end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add failure end_name begin_parameter_list begin_param begin_decl begin_type begin_name test end_name end_type begin_name test end_name end_decl end_param begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name format error end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name test end_name end_expr end_argument begin_argument begin_expr begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment print headers for result sets from the statements optional default true param showheaders if true print headers of result sets end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set showheaders end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name showheaders end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name showheaders end_name end_name begin_operator EQ end_operator begin_name showheaders end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 3 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file 3 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file 3 end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file 3 a end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file 3 a end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file 3 b end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file 3 b end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file 3 c end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file 3 c end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment file length checks rely on touch generating a zero byte file end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name file 3 end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name file 3 c end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name file 3 b end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment file time checks for java 1 2 end_comment begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file 3 a end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_call begin_name begin_name file 3 end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file 3 c end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call begin_operator LT end_operator begin_call begin_name begin_name file 3 a end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get comment file return string containing the path to the comment file end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get comment file end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m cfile end_name end_expr end_return end_block 
 begin_comment inline manifest invalid attribute without value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 12 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return the name of the default target of the project return name of the default target or code null code if no default has been set end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get default target end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name default target end_name end_expr end_return end_block 
 begin_comment create a nested handler element return a handler for this input task end_comment begin_type begin_specifier end_specifier begin_name handler end_name end_type begin_name create handler end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name handler end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name handler end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name handler end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name handler end_name end_expr end_return end_block 
 begin_comment translate a path into its native platform specific format p this method uses path tokenizer to separate the input path into its components this handles dos style paths in a relatively sensible way the file separators are then converted to their platform specific versions param to process the path to be translated may be code null code return the native version of the specified path or an empty string if the path is code null code or empty deprecated since 1 7 use file utils translate path instead see path tokenizer end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name translate path end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name to process end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name translate path end_name end_name begin_argument_list begin_argument begin_expr begin_name to process end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no recreate basedir excludes with update end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name test no recreate end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test nested mapped end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test file resource plain end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file 1 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file 2 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file 3 end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file 1 end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file 2 end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file 3 end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no property end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return a padded string param s the string to pad param padlen the size of the padded string return the padded string end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name pad end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name padlen end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name s end_name begin_operator PLUS end_operator begin_name blank string end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name substring end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name padlen end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment output file encoding name param enc name of the encoding to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set docencoding end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name enc end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name enc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test we can disassemble end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test ildasm end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name up to date test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return the executable and all defined arguments return the commandline as an array of strings end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get commandline end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name list end_name end_type begin_name commands end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name linked list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name list iterator end_name end_type begin_name list end_name begin_init begin_expr begin_call begin_name begin_name commands end_name begin_operator DOT end_operator begin_name list iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name add command to list end_name begin_argument_list begin_argument begin_expr begin_name list end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name result end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_call begin_name begin_name commands end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_operator LPAR end_operator begin_name begin_name string end_name begin_index end_index end_name begin_operator RPAR end_operator begin_call begin_name begin_name commands end_name begin_operator DOT end_operator begin_name to array end_name end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment convenience constructor param r the resource selector to add end_comment begin_specifier end_specifier begin_name majority end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name resource selector end_name begin_index end_index end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment print a readable version of the constant pool entry return the string representation of this constant pool entry end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator PLUS end_operator begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name mark end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name i end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name io exception end_name end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name mark end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment attribute delimsaretokens treat delimiters as separate tokens param delims are tokens true if delimiters are to be separate end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set delims are tokens end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name delims are tokens end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name delims are tokens end_name end_name begin_operator EQ end_operator begin_name delims are tokens end_name end_expr end_expr_stmt end_block 
 begin_comment set the user for smtp auth this requires java mail param user the string username since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set user end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name user end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name user end_name end_name begin_operator EQ end_operator begin_name user end_name end_expr end_expr_stmt end_block 
 begin_comment this is just a quick sanity check to run all the rest of the trace options trace lexer trace parser and trace tree walker to make sure that they don t throw any funny exceptions end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 13 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test sig file end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the size of the buffer param size the new buffer size ignored if current size end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set buffer size end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name size end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name size end_name begin_operator GT end_operator begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name new buffer end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name byte end_name begin_index begin_expr begin_name size end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name in end_name begin_operator GE end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name in end_name begin_operator GT end_operator begin_name out end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr begin_name new buffer end_name end_expr end_argument begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr begin_name in end_name begin_operator MINUS end_operator begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name outlen end_name begin_init begin_expr begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator MINUS end_operator begin_name out end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr begin_name new buffer end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name outlen end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name new buffer end_name end_expr end_argument begin_argument begin_expr begin_name outlen end_name end_expr end_argument begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name in end_name begin_operator UNP end_operator begin_name outlen end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name out end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_expr_stmt begin_expr begin_name buffer end_name begin_operator EQ end_operator begin_name new buffer end_name end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name target finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment set whether to check dates on directories param include dirs whether to check the timestamp on directories end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set checkdirs end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name include dirs end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name include dirs end_name end_name begin_operator EQ end_operator begin_name include dirs end_name end_expr end_expr_stmt end_block 
 begin_comment sets the project to work with param project the project this filter is part of should not be code null code end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set project end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name project end_name end_name begin_operator EQ end_operator begin_name project end_name end_expr end_expr_stmt end_block 
 begin_comment get the referenced filter set return the filterset from the reference end_comment begin_type begin_specifier end_specifier begin_name filter set end_name end_type begin_name get ref end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name filter set end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list begin_argument begin_expr begin_name begin_name filter set end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment indicates whether the introspected class is a task container supporting arbitrary nested tasks types return code true code if the introspected class is a container code false code otherwise since ant 1 6 3 see task container end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is container end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name task container end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name is assignable from end_name end_name end_name begin_argument_list begin_argument begin_expr begin_name bean end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_specifier end_specifier begin_name compound enumeration end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name enumeration end_name begin_index end_index end_name end_type begin_name enumarray end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name enum array end_name end_name begin_operator EQ end_operator begin_name enumarray end_name end_expr end_expr_stmt end_block 
 begin_comment converts the class dot notation to a filesystem equivalent for searching purposes param classname the class name in dot format eg java lang integer must not be code null code return the classname in filesystem format eg java lang integer class end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get class filename end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name classname end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name classname end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_return end_block 
 begin_comment returns the passphrase return string end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get passphrase end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name passphrase end_name end_expr end_return end_block 
 begin_comment always returns true return true indicating that all elements of a files collection will be file resources end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is filesystem only end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment add a new source schema to the compilation since ant 1 7 param source a nested schema element end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add schema end_name begin_parameter_list begin_param begin_decl begin_type begin_name schema end_name end_type begin_name source end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name schemas end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name source end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment ignore end_comment begin_comment returns all entries return all entries as link zip entry instances end_comment begin_type begin_specifier end_specifier begin_name enumeration end_name end_type begin_name get entries end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name entries end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name get end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name key end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name get type class end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment log a message with code msg verbose code priority param message the message to log end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name verbose end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name message end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the choice ambiguity check grammar option param choice ambiguity check an code int code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set choiceambiguitycheck end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name choice ambiguity check end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name optional attrs end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name choice ambiguity check end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name integer end_name begin_argument_list begin_argument begin_expr begin_name choice ambiguity check end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment adds a set of files to archive param set a set of files to archive end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add fileset end_name begin_parameter_list begin_param begin_decl begin_type begin_name file set end_name end_type begin_name set end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name set end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name start test end_name begin_parameter_list begin_param begin_decl begin_type begin_name test end_name end_type begin_name arg 0 end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name register test case end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name j unit version helper end_name begin_operator DOT end_operator begin_name get test case name end_name end_name begin_argument_list begin_argument begin_expr begin_name arg 0 end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the pathname to be locked return string containing the pathname to be locked end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get pname end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m pname end_name end_expr end_return end_block 
 begin_comment create a valid xalan executor it checks if xalan 2 is present if none is available it fails param caller object containing the transformation information throws build exception thrown if it could not find a valid xalan executor end_comment begin_type begin_specifier end_specifier begin_name xalan executor end_name end_type begin_name new instance end_name begin_parameter_list begin_param begin_decl begin_type begin_name aggregate transformer end_name end_type begin_name caller end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name xalan executor end_name end_type begin_name executor end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name clazz end_name begin_init begin_expr begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name package end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name executor end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name xalan executor end_name begin_operator RPAR end_operator begin_call begin_name begin_name clazz end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name xsltc apache missing end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name caller end_name begin_operator DOT end_operator begin_name task end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name xsltc apache missing end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name class name impl end_name begin_init begin_expr begin_call begin_name begin_name executor end_name begin_operator DOT end_operator begin_name get implementation end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name version end_name begin_init begin_expr begin_call begin_name begin_name executor end_name begin_operator DOT end_operator begin_name get proc version end_name end_name begin_argument_list begin_argument begin_expr begin_name class name impl end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name caller end_name begin_operator DOT end_operator begin_name task end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name version end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name executor end_name begin_operator DOT end_operator begin_name set caller end_name end_name begin_argument_list begin_argument begin_expr begin_name caller end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name executor end_name end_expr end_return end_block 
 begin_comment since ant 1 6 2 end_comment begin_type begin_specifier end_specifier begin_name iterator end_name end_type begin_name get build listeners end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get build listeners end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment construct a tar resource representing the specified entry in the specified archive param a the archive as file param e the tar entry end_comment begin_specifier end_specifier begin_name tar resource end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name a end_name end_decl end_param begin_param begin_decl begin_type begin_name tar entry end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name a end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set entry end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add an and selector entry on the selector list param selector the selector to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add and end_name begin_parameter_list begin_param begin_decl begin_type begin_name and selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name append selector end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name ant structure test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment creates a fresh object instance of the specified classname p this uses the user defined loader to load the specified class and then makes an instance using the default no argument constructor p param class name the full qualified class name to load param user defined loader the classloader to use param expected type the class that the result should be assignment compatible with no class cast exception will be thrown in case the result of this method is casted to the expected type return the fresh object instance throws build exception when loading or instantiation failed since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name object end_name end_type begin_name new instance end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name class name end_name end_decl end_param begin_param begin_decl begin_type begin_name class loader end_name end_type begin_name user defined loader end_name end_decl end_param begin_param begin_decl begin_type begin_name class end_name end_type begin_name expected type end_name end_decl end_param end_parameter_list begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name clazz end_name begin_init begin_expr begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name class name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name user defined loader end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name o end_name begin_init begin_expr begin_call begin_name begin_name clazz end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name expected type end_name begin_operator DOT end_operator begin_name is instance end_name end_name begin_argument_list begin_argument begin_expr begin_name o end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name class name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name expected type end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_return begin_expr begin_name o end_name end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name class name end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name instantiation exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name class name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal access exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name class name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name linkage error end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name class name end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment get the merged include patterns for this files collection param p project instance return the include patterns of the default pattern set and all nested patternsets end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name merge includes end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name merge patterns end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get include patterns end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment get comment string return string containing the comment end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get comment end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m comment end_name end_expr end_return end_block 
 begin_comment returns the password used for login return the password used for login end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get password end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name password end_name end_name end_expr end_return end_block 
 begin_comment gets the revision for this cvs tag entry return the revision end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get revision end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name revision end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test pass file end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name f end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name jakarta url end_name begin_operator PLUS end_operator begin_name eol end_name end_expr end_argument begin_argument begin_expr begin_call begin_name read file end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment go and delete the directory tree param d the directory to delete end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name delete dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name d end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name delete dir end_name begin_argument_list begin_argument begin_expr begin_name d end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name read end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name remaining end_name begin_operator MMINUS end_operator begin_operator LE end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name add dummy byte end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name add dummy byte end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block end_then end_if begin_return begin_expr begin_operator MINUS end_operator end_expr end_return end_block end_then end_if begin_synchronized begin_expr begin_name archive end_name end_expr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name archive end_name begin_operator DOT end_operator begin_name seek end_name end_name begin_argument_list begin_argument begin_expr begin_name loc end_name begin_operator PPLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name archive end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_synchronized end_block 
 begin_comment the action to be performed usually deploy required some tools support additional actions such as delete list undeploy update param action a string representing the action attribute end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set action end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name action end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name action end_name end_name begin_operator EQ end_operator begin_name action end_name end_expr end_expr_stmt end_block 
 begin_type begin_name void end_name end_type begin_name send dot end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name begin_index end_index end_type begin_name ok end_name begin_init begin_expr begin_block begin_expr begin_name ok dot end_name end_expr end_block end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name send end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name ok end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment make sure dot is on new line end_comment end_block 
 begin_comment get the classname of the definition return the name of the class of this definition end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get class name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name get class name end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test target overrides default end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name set new property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name javac end_name begin_operator DOT end_operator begin_name set target end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name javac end_name begin_operator DOT end_operator begin_name get target end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment specify which path will be used if the loader already exists and is an ant class loader or any other loader we can extend the path will be added to the loader param path ref a reference to a path throws build exception if there is a problem end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classpath ref end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name path ref end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_name classpath end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name path end_name begin_operator RPAR end_operator begin_call begin_name begin_name path ref end_name begin_operator DOT end_operator begin_name get referenced object end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment create a new soft reference which is bound to a weak reference inside param reference the object to reference see java lang ref weak reference end_comment begin_specifier end_specifier begin_name weakish reference 12 end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name reference end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name reference end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment stream to read and redirect to standard output end_comment begin_comment constructs a new instance that will redirect output from the specified stream to the standard output param stream input stream which will be read and redirected to the standard output end_comment begin_specifier end_specifier begin_name redirect output end_name begin_parameter_list begin_param begin_decl begin_type begin_name input stream end_name end_type begin_name stream end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name stream end_name end_name begin_operator EQ end_operator begin_name stream end_name end_expr end_expr_stmt end_block 
 begin_comment little helper method to validate stuff end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name assert expands to end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name source end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name expected end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name actual end_name begin_init begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name replace properties end_name end_name begin_argument_list begin_argument begin_expr begin_name source end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name source end_name end_expr end_argument begin_argument begin_expr begin_name expected end_name end_expr end_argument begin_argument begin_expr begin_name actual end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment evaluate the selector with the file return true if the file is selected by the embedded selector end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name eval end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name file end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name validate end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name my base dir end_name begin_init begin_expr begin_name base dir end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name my base dir end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name my base dir end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file selector end_name end_type begin_name f end_name begin_init begin_expr begin_call begin_name get selectors end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_index begin_expr end_expr end_index end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name is selected end_name end_name begin_argument_list begin_argument begin_expr begin_name my base dir end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name remove leading path end_name end_name begin_argument_list begin_argument begin_expr begin_name my base dir end_name end_expr end_argument begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_name boolean end_name end_type begin_name is poly morphic end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment return the filenamemapper names end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get values end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_return end_block 
 begin_comment find the directory or jar a given resource has been loaded from param c the classloader to be consulted for the source param resource the resource whose location is required return the file with the resource source or null if we cannot determine the location since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name file end_name end_type begin_name get resource source end_name begin_parameter_list begin_param begin_decl begin_type begin_name class loader end_name end_type begin_name c end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name resource end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name c end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name c end_name begin_operator EQ end_operator begin_call begin_name begin_name locator end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name get class loader end_name end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name url end_name end_type begin_name url end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name c end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name url end_name begin_operator EQ end_operator begin_call begin_name begin_name class loader end_name begin_operator DOT end_operator begin_name get system resource end_name end_name begin_argument_list begin_argument begin_expr begin_name resource end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name url end_name begin_operator EQ end_operator begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name get resource end_name end_name begin_argument_list begin_argument begin_expr begin_name resource end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_name url end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name u end_name begin_init begin_expr begin_call begin_name begin_name url end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name u end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name pling end_name begin_init begin_expr begin_call begin_name begin_name u end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name jar name end_name begin_init begin_expr begin_call begin_name begin_name u end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name pling end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name from uri end_name begin_argument_list begin_argument begin_expr begin_name jar name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name u end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name tail end_name begin_init begin_expr begin_call begin_name begin_name u end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name resource end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name dir name end_name begin_init begin_expr begin_call begin_name begin_name u end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name tail end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name from uri end_name begin_argument_list begin_argument begin_expr begin_name dir name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if end_else end_if end_block end_then end_if begin_return begin_expr end_expr end_return end_block 
 begin_comment private constructor for utility class end_comment begin_specifier end_specifier begin_name color mapper end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment set recurse flag param recurse the status to set the flag to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set recurse end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name recurse end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m recurse end_name begin_operator EQ end_operator begin_name recurse end_name end_expr end_expr_stmt end_block 
 begin_comment see bugrep 11418 in repeated calls to the same target end_comment begin_comment params will not be passed in end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test multi call end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name v end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name execute targets end_name end_name begin_argument_list begin_argument begin_expr begin_name v end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name bs w end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name n end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name v end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name output stream end_name end_type begin_name out shadow end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name out end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name bs live shadow end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name bs live end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name bs buff shadow end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name bs buff end_name end_name end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_name bs live shadow end_name begin_operator GE end_operator end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out shadow end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name bs buff shadow end_name begin_operator UNP end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment write 8 bit end_comment begin_expr_stmt begin_expr begin_name bs buff shadow end_name begin_operator UNP end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name bs live shadow end_name begin_operator UNP end_operator end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name bs buff end_name end_name begin_operator EQ end_operator begin_name bs buff shadow end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_name v end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator MINUS end_operator begin_name bs live shadow end_name begin_operator MINUS end_operator begin_name n end_name begin_operator RPAR end_operator begin_operator RPAR end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name bs live end_name end_name begin_operator EQ end_operator begin_name bs live shadow end_name begin_operator PLUS end_operator begin_name n end_name end_expr end_expr_stmt end_block 
 begin_comment get the comment command param cmd containing the command line string with or without the comment flag and value appended end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name get comment command end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name get comment end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then begin_else begin_block begin_comment had to make two separate commands here because if a space is inserted between the flag and the value it is treated as a windows filename with a space and it is enclosed in double quotes this breaks clearcase end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag comment end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get comment end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment only pass the specified argument if the chosen compiler implementation matches the value of this attribute legal values are the same as those in the above list of valid compilers param impl the compiler to be used end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set compiler end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name impl end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set implementation end_name end_name begin_argument_list begin_argument begin_expr begin_name impl end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test fork xml end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test fork xml end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 01 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment validate the parameters end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name validate end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name selector count end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name validate end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment i deprecated i name of the file to create use tt destfile tt instead param war file the destination file deprecated since 1 5 x use set dest file file instead ant attribute ignore true end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set warfile end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name war file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set dest file end_name begin_argument_list begin_argument begin_expr begin_name war file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a unknown element for the macro instances nested elements param nested task a nested element end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add task end_name begin_parameter_list begin_param begin_decl begin_type begin_name task end_name end_type begin_name nested task end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name unknown elements end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name nested task end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a set of files nested fileset attribute param fs the fileset end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add fileset end_name begin_parameter_list begin_param begin_decl begin_type begin_name file set end_name end_type begin_name fs end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name create attachments end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name add end_name begin_argument_list begin_argument begin_expr begin_name fs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name test end_name end_type begin_name suite end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name test suite end_name begin_argument_list begin_argument begin_expr begin_name begin_name suite test case end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment constructor for fork true or when the user hasn t specified a classpath param test the test to run param halt on error whether to stop the run if an error is found param filtertrace whether to filter junit stack frames out of exceptions param halt on failure whether to stop the run if failure is found param show output whether to send output to system out err as well as formatters param log test listener events whether to print test listener events since ant 1 7 end_comment begin_specifier end_specifier begin_name j unit test runner end_name begin_parameter_list begin_param begin_decl begin_type begin_name j unit test end_name end_type begin_name test end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name halt on error end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name filtertrace end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name halt on failure end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name show output end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name log test listener events end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument begin_argument begin_expr begin_name halt on error end_name end_expr end_argument begin_argument begin_expr begin_name filtertrace end_name end_expr end_argument begin_argument begin_expr begin_name halt on failure end_name end_expr end_argument begin_argument begin_expr begin_name show output end_name end_expr end_argument begin_argument begin_expr begin_name log test listener events end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment adds a path to class code to analyze return a classes path end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name create classespath end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name classes path end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name classes path end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name classes path end_name begin_operator DOT end_operator begin_name create path end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name dewey decimal end_name end_type begin_name get version end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name project end_name end_type begin_name p end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name project end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name init end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name char end_name begin_index end_index end_type begin_name version string end_name begin_init begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to char array end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name sb end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name found first digit end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name version string end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name is digit end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name version string end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name version string end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name found first digit end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name version string end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name found first digit end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name version string end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name character end_name begin_operator DOT end_operator begin_name is letter end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name version string end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_name found first digit end_name end_expr end_condition begin_then begin_block begin_break end_break end_block end_then end_if end_block end_for begin_return begin_expr begin_operator UNP end_operator begin_call begin_name dewey decimal end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment name the property to set after a timeout param p the property name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set timeout property end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name timeout property end_name begin_operator EQ end_operator begin_name p end_name end_expr end_expr_stmt end_block 
 begin_comment the heart of the matter this is where the selector gets to decide on the inclusion of a file in a particular fileset param basedir the base directory the scan is being done from param filename is the name of the file to check param file is a java io file object the selector can use return whether the file should be selected or not end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is selected end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name basedir end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name filename end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_comment throw build exception on error end_comment begin_expr_stmt begin_expr begin_call begin_name validate end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment determine file whose out of dateness is to be checked end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name destfiles end_name begin_init begin_expr begin_call begin_name begin_name map end_name begin_operator DOT end_operator begin_name map file name end_name end_name begin_argument_list begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment if filename does not match the to attribute of the mapper end_comment begin_comment then filter it out of the files we are considering end_comment begin_if begin_condition begin_expr begin_name destfiles end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_comment sanity check end_comment begin_if begin_condition begin_expr begin_name begin_name destfiles end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name begin_name destfiles end_name begin_index begin_expr end_expr end_index end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name targetdir end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name filename end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name destname end_name begin_init begin_expr begin_name begin_name destfiles end_name begin_index begin_expr end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name destfile end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name targetdir end_name end_expr end_argument begin_argument begin_expr begin_name destname end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name selected end_name begin_init begin_expr begin_call begin_name selection test end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument begin_argument begin_expr begin_name destfile end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_name selected end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name testfileheader end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name test 3 end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name expect log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets the values of the naming scheme return an array of the values of this attribute class end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get values end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr begin_name ejb name end_name end_expr begin_operator UNP end_operator begin_expr begin_name directory end_name end_expr begin_operator UNP end_operator begin_expr begin_name descriptor end_name end_expr begin_operator UNP end_operator begin_expr begin_name basejarname end_name end_expr end_block end_expr end_return end_block 
 begin_comment do the execution throws build exception if we cant build end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name saved filters end_name begin_init begin_expr begin_operator LPAR end_operator begin_name vector end_name begin_operator RPAR end_operator begin_call begin_name begin_name replacefilters end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name properties end_name end_type begin_name saved properties end_name begin_init begin_expr begin_name properties end_name begin_operator EQT end_operator begin_operator QM end_operator begin_operator DP end_operator begin_operator LPAR end_operator begin_name properties end_name begin_operator RPAR end_operator begin_call begin_name begin_name properties end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name token end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment line separators in values and tokens are n end_comment begin_comment in order to compare with the file contents replace them end_comment begin_comment as needed end_comment begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name val end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name get text end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name string replace end_name begin_argument_list begin_argument begin_expr begin_name val end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name string replace end_name begin_argument_list begin_argument begin_expr begin_name val end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name tok end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name token end_name begin_operator DOT end_operator begin_name get text end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name string replace end_name begin_argument_list begin_argument begin_expr begin_name tok end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name string replace end_name begin_argument_list begin_argument begin_expr begin_name tok end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name replacefilter end_name end_type begin_name first filter end_name begin_init begin_expr begin_call begin_name create primaryfilter end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name first filter end_name begin_operator DOT end_operator begin_name set token end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name tok end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name first filter end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name val end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_try begin_block begin_if begin_condition begin_expr begin_name replace filter file end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name properties end_name end_type begin_name props end_name begin_init begin_expr begin_call begin_name get properties end_name begin_argument_list begin_argument begin_expr begin_name replace filter file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name tok end_name begin_init begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name replacefilter end_name end_type begin_name replace filter end_name begin_init begin_expr begin_call begin_name create replacefilter end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name replace filter end_name begin_operator DOT end_operator begin_name set token end_name end_name begin_argument_list begin_argument begin_expr begin_name tok end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name replace filter end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name tok end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name validate attributes end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name property file end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name properties end_name begin_operator EQ end_operator begin_call begin_name get properties end_name begin_argument_list begin_argument begin_expr begin_name property file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name validate replacefilters end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name file count end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name replace count end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name src end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name process file end_name begin_argument_list begin_argument begin_expr begin_name src end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name dir end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds end_name begin_init begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name get directory scanner end_name end_name begin_argument_list begin_argument begin_expr begin_name dir end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name srcs end_name begin_init begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get included files end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name srcs end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name dir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name srcs end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name process file end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if begin_if begin_condition begin_expr begin_name summary end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name replace count end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name file count end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block begin_finally begin_block begin_expr_stmt begin_expr begin_name replacefilters end_name begin_operator EQ end_operator begin_name saved filters end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name properties end_name begin_operator EQ end_operator begin_name saved properties end_name end_expr end_expr_stmt end_block end_finally end_try begin_comment end of finally end_comment end_block 
 begin_comment get the value of verbose return value of verbose end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is verbose end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name verbose end_name end_expr end_return end_block 
 begin_comment write a project level message to the log with the given log level param message the text to log should not be code null code param throwable the exception causing this log may be code null code param msg level the log priority level to use since 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name log end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name message end_name end_decl end_param begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name throwable end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name msg level end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name fire message logged end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_name throwable end_name end_expr end_argument begin_argument begin_expr begin_name msg level end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment reads path matching patterns from a file and adds them to the includes or excludes list as appropriate end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name read patterns end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name patternfile end_name end_decl end_param begin_param begin_decl begin_type begin_name vector end_name end_type begin_name patternlist end_name end_decl end_param begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name buffered reader end_name end_type begin_name pattern reader end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_comment get a file reader end_comment begin_expr_stmt begin_expr begin_name pattern reader end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name buffered reader end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file reader end_name begin_argument_list begin_argument begin_expr begin_name patternfile end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment create one name entry in the appropriate pattern list for each end_comment begin_comment line in the file end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name line end_name begin_init begin_expr begin_call begin_name begin_name pattern reader end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_name line end_name begin_operator UNP end_operator end_expr end_condition begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name replace properties end_name end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add pattern to list end_name begin_argument_list begin_argument begin_expr begin_name patternlist end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set name end_name begin_argument_list begin_argument begin_expr begin_name line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name line end_name begin_operator EQ end_operator begin_call begin_name begin_name pattern reader end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_name patternfile end_name end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name ioe end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_finally begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name pattern reader end_name end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name pattern reader end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_comment ignore exception end_comment end_block end_catch end_try end_block end_then end_if end_block end_finally end_try end_block 
 begin_comment setter method used to specify whether the java source files generated by the ejbc utility should be saved or automatically deleted param keepgenerated boolean which if code true code indicates that java source files generated by ejbc for the stubs and skeletons should be kept end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set keepgenerated end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name keepgenerated end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name keepgenerated end_name end_name begin_operator EQ end_operator begin_name keepgenerated end_name end_expr end_expr_stmt end_block 
 begin_comment returns the list of cmp descriptors referenced in the ejb descriptors return an array of cmp descriptors end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get cmp descriptors end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name list end_name end_type begin_name return list end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name ejb info end_name begin_index end_index end_type begin_name ejbs end_name begin_init begin_expr begin_call begin_name begin_name handler end_name begin_operator DOT end_operator begin_name get ejbs end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name ejbs end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name list end_name end_type begin_name descriptors end_name begin_init begin_expr begin_operator LPAR end_operator begin_name list end_name begin_operator RPAR end_operator begin_name begin_name ejbs end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get cmp descriptors end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name return list end_name begin_operator DOT end_operator begin_name add all end_name end_name begin_argument_list begin_argument begin_expr begin_name descriptors end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_operator LPAR end_operator begin_name begin_name string end_name begin_index end_index end_name begin_operator RPAR end_operator begin_call begin_name begin_name return list end_name begin_operator DOT end_operator begin_name to array end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_call begin_name begin_name return list end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 3 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the haltonerror attribute return the attribute end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get haltonerror end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name halt on error end_name end_expr end_return end_block 
 begin_comment set the classname of the class that the definition must be compatible with either directly or by use of the adapter class param adapt to the name of the adaptto class end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set adapt to end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name adapt to end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name adapt to end_name end_name begin_operator EQ end_operator begin_name adapt to end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get properties end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name put end_name begin_argument_list begin_argument begin_expr begin_name begin_name property file input handler end_name begin_operator DOT end_operator begin_name file name key end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set input handler end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name property file input handler end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment override so that it is not allowed param clazz a code class code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set class end_name begin_parameter_list begin_param begin_decl begin_type begin_name class end_name end_type begin_name clazz end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_comment constructor param task the task to log param outlevel the level to use for standard output param errlevel the level to use for error output end_comment begin_specifier end_specifier begin_name j unit log stream handler end_name begin_parameter_list begin_param begin_decl begin_type begin_name task end_name end_type begin_name task end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name outlevel end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name errlevel end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name j unit log output stream end_name begin_argument_list begin_argument begin_expr begin_name task end_name end_expr end_argument begin_argument begin_expr begin_name outlevel end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name log output stream end_name begin_argument_list begin_argument begin_expr begin_name task end_name end_expr end_argument begin_argument begin_expr begin_name errlevel end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 3 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets additional arguments for idl compile return the idl options end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get idlopts end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name idl opts end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name print parser info end_name begin_parameter_list begin_param begin_decl begin_type begin_name print stream end_name end_type begin_name out end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name parser type end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name parser name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name parser location end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name parser name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name parser name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name parser location end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name parser location end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name parser type end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name parser name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name parser type end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name parser location end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a nested task to predefine attributes and elements on param nested task nested task type to extend end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add task end_name begin_parameter_list begin_param begin_decl begin_type begin_name task end_name end_type begin_name nested task end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name nested task end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_name nested task end_name begin_operator UNP end_operator begin_name unknown element end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name nested task end_name end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name unknown element end_name begin_operator RPAR end_operator begin_name nested task end_name end_expr end_expr_stmt end_block 
 begin_comment handles the start of an element this base implementation just throws an exception param tag the name of the element being started will not be code null code param attrs attributes of the element being started will not be code null code exception sax parse exception if this method is not overridden or in case of error in an overridden version end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name start element end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name tag end_name end_decl end_param begin_param begin_decl begin_type begin_name attribute list end_name end_type begin_name attrs end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name sax parse exception end_name end_expr end_argument end_throws begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name sax parse exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name tag end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name helper impl end_name begin_operator DOT end_operator begin_name locator end_name end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_comment return true if value is fail end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is fail mode end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name fail end_name begin_operator DOT end_operator begin_name equals ignore case end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment construct a new fail fast iterator wrapping the specified iterator and dependent upon the specified parent object param o the parent object param i the wrapped iterator end_comment begin_name fail fast end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name o end_name end_decl end_param begin_param begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name o end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name illegal argument exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name i end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name illegal argument exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name parent end_name begin_operator EQ end_operator begin_name o end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name wrapped end_name begin_operator EQ end_operator begin_name i end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 6 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a fileset param set a file set end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add fileset end_name begin_parameter_list begin_param begin_decl begin_type begin_name file set end_name end_type begin_name set end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add end_name begin_argument_list begin_argument begin_expr begin_name set end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the size of the sysproperties instance this merges all property sets so is not an o 1 operation return the size of the sysproperties instance end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name size end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name properties end_name end_type begin_name p end_name begin_init begin_expr begin_call begin_name merge property sets end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name variables end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test not selected end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test implicit explicit end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect specific build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns the map of tokens which will be replaced return a map string string of token keys to replacement values end_comment begin_type begin_specifier end_specifier begin_name hashtable end_name end_type begin_name get tokens end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name hash end_name end_expr end_return end_block 
 begin_comment update the component definition table with a new or modified definition param def the definition to update or insert end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name update data type definition end_name begin_parameter_list begin_param begin_decl begin_type begin_name ant type definition end_name end_type begin_name def end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_call begin_name begin_name def end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_synchronized begin_expr begin_name ant type table end_name end_expr begin_block begin_expr_stmt begin_expr begin_name rebuild task class definitions end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name rebuild type class definitions end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name ant type definition end_name end_type begin_name old end_name begin_init begin_expr begin_call begin_name begin_name ant type table end_name begin_operator DOT end_operator begin_name get definition end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name old end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name same definition end_name begin_argument_list begin_argument begin_expr begin_name def end_name end_expr end_argument begin_argument begin_expr begin_name old end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name old class end_name begin_init begin_expr begin_call begin_name begin_name ant type table end_name begin_operator DOT end_operator begin_name get exposed class end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name is task end_name begin_init begin_expr begin_operator LPAR end_operator begin_name old class end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name task end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name is assignable from end_name end_name end_name begin_argument_list begin_argument begin_expr begin_name old class end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name is task end_name begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator begin_name name end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name def end_name begin_operator DOT end_operator begin_name similar definition end_name end_name begin_argument_list begin_argument begin_expr begin_name old end_name end_expr end_argument begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator QM end_operator begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name begin_operator DP end_operator begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name def end_name begin_operator DOT end_operator begin_name get class name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ant type table end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name def end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_synchronized end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 3 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the classpath to use when resolving classes for inclusion in the jar param classpath the classpath to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classpath end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name classpath end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name config end_name begin_operator DOT end_operator begin_name classpath end_name end_name begin_operator EQ end_operator begin_name classpath end_name end_expr end_expr_stmt end_block 
 begin_comment set whether recursive token expansion is enabled param recurse code boolean code whether to recurse end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set recurse end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name recurse end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name recurse end_name end_name begin_operator EQ end_operator begin_name recurse end_name end_expr end_expr_stmt end_block 
 begin_comment adds the token and value as first lt replacefilter gt element the token and value are always processed first return a nested code replacefilter code object to be configured end_comment begin_type begin_specifier end_specifier begin_name replacefilter end_name end_type begin_name create primaryfilter end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name replacefilter end_name end_type begin_name filter end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name replacefilter end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name replacefilters end_name begin_operator DOT end_operator begin_name insert element at end_name end_name begin_argument_list begin_argument begin_expr begin_name filter end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name filter end_name end_expr end_return end_block 
 begin_comment gets the classpath return returns a path end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name get classpath end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name classpath end_name end_expr end_return end_block 
 begin_comment set this entry s user name param user name this entry s new user name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set user name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name user name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name user name end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr begin_name user name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a name entry on the exclude list return an name entry object to be configured end_comment begin_type begin_specifier end_specifier begin_name begin_name pattern set end_name begin_operator DOT end_operator begin_name name entry end_name end_name end_type begin_name create exclude end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name used matching task end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name create exclude end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment the exists attribute tells whether a file exists return true if this resource exists end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is exists end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get resource end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name is exists end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment fulfill the resource collection contract return number of elements as int end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name int end_name end_type begin_name size end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name get ref end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name size end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name ensure directory scanner setup end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get included files count end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get included dirs count end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment the file to create required since ant 1 5 param dest file the new destination file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set dest file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name dest file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name zip file end_name end_name begin_operator EQ end_operator begin_name dest file end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test replace string end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name expect file contains end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set iiop end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name iiop end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name iiop end_name end_name begin_operator EQ end_operator begin_name iiop end_name end_expr end_expr_stmt end_block 
 begin_comment sets the vector of regular expressions which must be contained within a line read from the original stream in order for it to match this filter param regexps a vector of regular expressions which must be contained within a line in order for it to match in this filter must not be code null code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set regexps end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name vector end_name end_type begin_name regexps end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name regexps end_name end_name begin_operator EQ end_operator begin_name regexps end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test semantic include end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name do test end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test run fail foe end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name run fatal tests end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment returns i append i attribute return append attribute end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get append end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name append end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment this is just a quick sanity check to run the diagnostic option and make sure that it doesn t throw any funny exceptions end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 11 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test bad no jarfile end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert property unset end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the url to which the weblogic server is listening for t 3 connections required param s the url end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set url end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name server url end_name end_name begin_operator EQ end_operator begin_name s end_name end_expr end_expr_stmt end_block 
 begin_comment show the asof date in the log since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name log as of date end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name as of date end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get as of date end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment list a set of node that match a specific filter the list can be made recursively or not param parent the parent node to search from param filter the filter that children should match param recurse tt true tt if you want the list to be made recursively otherwise tt false tt return the node list that matches the filter end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name node list end_name end_type begin_name list child nodes end_name begin_parameter_list begin_param begin_decl begin_type begin_name node end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name node filter end_name end_type begin_name filter end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name recurse end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name node list impl end_name end_type begin_name matches end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name node list impl end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name node list end_name end_type begin_name children end_name begin_init begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name get child nodes end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name children end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name len end_name begin_init begin_expr begin_call begin_name begin_name children end_name begin_operator DOT end_operator begin_name get length end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name len end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name node end_name end_type begin_name child end_name begin_init begin_expr begin_call begin_name begin_name children end_name begin_operator DOT end_operator begin_name item end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name filter end_name begin_operator DOT end_operator begin_name accept end_name end_name begin_argument_list begin_argument begin_expr begin_name child end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name matches end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name child end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name recurse end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name node list end_name end_type begin_name recmatches end_name begin_init begin_expr begin_call begin_name list child nodes end_name begin_argument_list begin_argument begin_expr begin_name child end_name end_expr end_argument begin_argument begin_expr begin_name filter end_name end_expr end_argument begin_argument begin_expr begin_name recurse end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name reclength end_name begin_init begin_expr begin_call begin_name begin_name recmatches end_name begin_operator DOT end_operator begin_name get length end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name j end_name begin_operator LT end_operator begin_name reclength end_name end_expr end_condition begin_incr begin_expr begin_name j end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name matches end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name recmatches end_name begin_operator DOT end_operator begin_name item end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if end_block end_for end_block end_then end_if begin_return begin_expr begin_name matches end_name end_expr end_return end_block 
 begin_comment return a preconfigured selector with a set reference to project instance return the selector end_comment begin_type begin_specifier end_specifier begin_name base selector end_name end_type begin_name get selector end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name base selector end_name end_type begin_name selector end_name begin_init begin_expr begin_call begin_name get instance end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name selector end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name selector end_name end_expr end_return end_block 
 begin_comment init method sets defaults from properties that way when ant is called with arguments like dant netrexxc verbose verbose 5 one can easily take control of all netrexxc tasks end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name init end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name p end_name end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name p end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name binary end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name to boolean end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment classpath makes no sense end_comment begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name p end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name comments end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name to boolean end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name p end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name compact end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name to boolean end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name p end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name compile end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name to boolean end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name p end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name console end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name to boolean end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name p end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name crossref end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name to boolean end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name p end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name decimal end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name to boolean end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment dest dir end_comment end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name p end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name diag end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name to boolean end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name p end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name explicit end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name to boolean end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name p end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name format end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name to boolean end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name p end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name keep end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name to boolean end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name p end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name logo end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name to boolean end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name p end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name to boolean end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name p end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name savelog end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name to boolean end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment src dir end_comment end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name p end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name sourcedir end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name to boolean end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name p end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name strictargs end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name to boolean end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name p end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name strictassign end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name to boolean end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name p end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name strictcase end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name to boolean end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name p end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name strictimport end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name to boolean end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name p end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name strictprops end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name to boolean end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name p end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name strictsignal end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name to boolean end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name p end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name symbols end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name to boolean end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name p end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name time end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name to boolean end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name p end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set trace end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name p end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name utf 8 end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name to boolean end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name p end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set verbose end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name p end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name suppress method argument not used end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name to boolean end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name p end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name suppress private property not used end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name to boolean end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name p end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name suppress variable not used end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name to boolean end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name p end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name suppress exception not signalled end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name to boolean end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name p end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name suppress deprecation end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name to boolean end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set prop name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name prop name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name prop name end_name end_name begin_operator EQ end_operator begin_name prop name end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name a end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name asi extra field end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name set mode end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name set directory end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name dummy end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name unrecognized extra field end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dummy end_name begin_operator DOT end_operator begin_name set header id end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name zip short end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dummy end_name begin_operator DOT end_operator begin_name set local file data data end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name byte end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dummy end_name begin_operator DOT end_operator begin_name set central directory data end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name byte end_name begin_index end_index end_name begin_block begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name a local end_name begin_operator EQ end_operator begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name get local file data data end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name dummy local end_name begin_init begin_expr begin_call begin_name begin_name dummy end_name begin_operator DOT end_operator begin_name get local file data data end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name data end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_name begin_name byte end_name begin_index begin_expr begin_operator PLUS end_operator begin_name begin_name a local end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name dummy local end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name get header id end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get bytes end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name data end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name a end_name begin_operator DOT end_operator begin_name get local file data length end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get bytes end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name data end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_name a local end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name data end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name a local end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name dummy end_name begin_operator DOT end_operator begin_name get header id end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get bytes end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name data end_name end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name a local end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name dummy end_name begin_operator DOT end_operator begin_name get local file data length end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get bytes end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name data end_name end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name a local end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_name dummy local end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name data end_name end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name a local end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name dummy local end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the maximum memory to be used by the javadoc process param max a string indicating the maximum memory according to the jvm conventions e g 128 m is 128 megabytes end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set maxmemory end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name max end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name max end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment executes the task p builds a command line to execute cleartool and then calls exec s run method to execute the command line throws build exception if the command fails and failonerr is set to true end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name commandline end_name end_type begin_name command line end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name commandline end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name project end_name end_type begin_name a proj end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name result end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment default the viewpath to basedir if it is not specified end_comment begin_if begin_condition begin_expr begin_call begin_name get view path end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set view path end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name a proj end_name begin_operator DOT end_operator begin_name get base dir end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment build the command line from what we got the format is end_comment begin_comment cleartool checkout options viewpath end_comment begin_comment as specified in the cleartool exe help end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name set executable end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get clear tool command end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name command checkout end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name check options end_name begin_argument_list begin_argument begin_expr begin_name command line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment if configured to not care about whether the element is already checked out to the current view then check to see if it is checked out end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name get notco end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name ls checkout end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get view path basename end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name get fail on err end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get view path basename end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name run end_name begin_argument_list begin_argument begin_expr begin_name command line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name execute end_name begin_operator DOT end_operator begin_name is failure end_name end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name get fail on err end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment flag to revert only unchanged files p 4 revert a optional default false param only unchanged if set to true revert only unchanged files end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set revert only unchanged end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name only unchanged end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name only unchanged end_name end_name begin_operator EQ end_operator begin_name only unchanged end_name end_expr end_expr_stmt end_block 
 begin_comment construct an empty attribute end_comment begin_specifier end_specifier begin_name attribute end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment create instance from a number param value the long to store as a zip long since 1 1 end_comment begin_specifier end_specifier begin_name zip long end_name begin_parameter_list begin_param begin_decl begin_type begin_name long end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name value end_name end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block 
 begin_comment remote host either dns name or ip param host the new host value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set host end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name host end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name host end_name end_name begin_operator EQ end_operator begin_name host end_name end_expr end_expr_stmt end_block 
 begin_comment returns the url of a given resource in the given file which may either be a directory or a zip file param file the file directory or jar in which to search for the resource must not be code null code param resource name the name of the resource for which a stream is required must not be code null code return a stream to the required resource or code null code if the resource cannot be found in the given file object end_comment begin_type begin_specifier end_specifier begin_name url end_name end_type begin_name get resource url end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name resource name end_name end_decl end_param end_parameter_list begin_block begin_try begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name resource end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument begin_argument begin_expr begin_name resource name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name resource end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_try begin_block begin_return begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name get file url end_name end_name begin_argument_list begin_argument begin_expr begin_name resource end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name malformed url exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block end_catch end_try end_block end_then end_if end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name zip file end_name end_type begin_name zip file end_name begin_init begin_expr begin_operator LPAR end_operator begin_name zip file end_name begin_operator RPAR end_operator begin_call begin_name begin_name zip files end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name zip file end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name zip file end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name zip file end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name zip files end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument begin_argument begin_expr begin_name zip file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name zip entry end_name end_type begin_name entry end_name begin_init begin_expr begin_call begin_name begin_name zip file end_name begin_operator DOT end_operator begin_name get entry end_name end_name begin_argument_list begin_argument begin_expr begin_name resource name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name entry end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name url end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name get file url end_name end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name entry end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name malformed url exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block end_catch end_try end_block end_then end_if end_block end_else end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name print stack trace end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_return begin_expr end_expr end_return end_block 
 begin_comment set the pattern string for this regular expression substitution param expression the regular expression to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set expression end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name expression end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name expression end_name end_name begin_operator EQ end_operator begin_name expression end_name end_expr end_expr_stmt end_block 
 begin_comment prints the description of a project if there is one to code system out code param project the project to display a description of must not be code null code end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name print description end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get description end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get description end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment add an or selector entry on the selector list param selector the selector to be added end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add or end_name begin_parameter_list begin_param begin_decl begin_type begin_name or selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name used matching task end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name add or end_name end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment a string to wait for from the server a sub task lt read gt tag was found create the object save it in our list and return it return a read telnet sub task end_comment begin_type begin_specifier end_specifier begin_name telnet sub task end_name end_type begin_name create read end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name telnet sub task end_name end_type begin_name task end_name begin_init begin_expr begin_operator LPAR end_operator begin_name telnet sub task end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_call begin_name telnet read end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name telnet tasks end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name task end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name task end_name end_expr end_return end_block 
 begin_comment creates a new code present selector code instance end_comment begin_specifier end_specifier begin_name present selector end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment see bugrep 21724 references not passing through with antcall end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test inherit filterset end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name execute target end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test max memory end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test each condition end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment method for subclasses to override param z out the zip output stream throws io exception on output error throws build exception on other errors end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name init zip output stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name zip output stream end_name end_type begin_name z out end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test istrue end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect property set end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name start remote cp protocol end_name begin_parameter_list begin_param begin_decl begin_type begin_name input stream end_name end_type begin_name in end_name end_decl end_param begin_param begin_decl begin_type begin_name output stream end_name end_type begin_name out end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name local file end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name start file end_name begin_init begin_expr begin_name local file end_name end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr end_expr end_condition begin_block begin_comment c 0644 filesize filename header for a regular file end_comment begin_comment t time 0 time 0 n present if perserve time end_comment begin_comment d directory this is the header for a directory end_comment begin_decl_stmt begin_decl begin_type begin_name byte array output stream end_name end_type begin_name stream end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name byte array output stream end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name read end_name begin_init begin_expr begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name read end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator begin_name read end_name begin_operator EQT end_operator begin_name line feed end_name end_expr end_condition begin_then begin_block begin_break end_break end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name stream end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name read end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name server response end_name begin_init begin_expr begin_call begin_name begin_name stream end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name server response end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name parse and fetch file end_name begin_argument_list begin_argument begin_expr begin_name server response end_name end_expr end_argument begin_argument begin_expr begin_name start file end_name end_expr end_argument begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name server response end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name start file end_name begin_operator EQ end_operator begin_call begin_name parse and create directory end_name begin_argument_list begin_argument begin_expr begin_name server response end_name end_expr end_argument begin_argument begin_expr begin_name start file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name send ack end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name server response end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name start file end_name begin_operator EQ end_operator begin_call begin_name begin_name start file end_name begin_operator DOT end_operator begin_name get parent file end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name send ack end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name server response end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name server response end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment this indicates an error end_comment begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name io exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name server response end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_else end_if end_else end_if end_else end_if end_block end_while end_block 
 begin_comment add default exclusions to the current exclusions set end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name add default excludes end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name excludes length end_name begin_init begin_expr begin_name excludes end_name begin_operator EQT end_operator begin_operator QM end_operator begin_operator DP end_operator begin_name begin_name excludes end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name new excludes end_name end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name new excludes end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_name excludes length end_name begin_operator PLUS end_operator begin_call begin_name begin_name default excludes end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name excludes length end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_name excludes end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name new excludes end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name excludes length end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name default excludes temp end_name begin_init begin_expr begin_call begin_name get default excludes end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name default excludes temp end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name begin_name new excludes end_name begin_index begin_expr begin_name i end_name begin_operator PLUS end_operator begin_name excludes length end_name end_expr end_index end_name begin_operator EQ end_operator begin_name begin_name default excludes temp end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_name excludes end_name begin_operator EQ end_operator begin_name new excludes end_name end_expr end_expr_stmt end_block 
 begin_comment create instance from bytes param bytes the bytes to store as a zip short since 1 1 end_comment begin_specifier end_specifier begin_name zip short end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name bytes end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr begin_name bytes end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test recreate without update additional files end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name test recreate end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the text using inline param value the text to place inline end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add text end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name value end_name end_name begin_operator UNP end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name replace properties end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name loader ref test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment size operator this actually creates the command line so it is not a zero cost operation return number of elements in the command including the executable end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name size end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get commandline end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_name length end_name end_expr end_return end_block 
 begin_comment add an argument to a command line do nothing if the arg is null or empty string param argument the feature to be added to the argument attribute end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add argument end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name argument end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name argument end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name argument end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name command line end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name argument end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment sets the ftp server to send files to param server the remote server name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set server end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name server end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name server end_name end_name begin_operator EQ end_operator begin_name server end_name end_expr end_expr_stmt end_block 
 begin_comment command launching mode java or fork param s the mode to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set mode end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name mode end_name begin_operator EQ end_operator begin_name s end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test duplicate attribute end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test read zero end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name reader input stream end_name end_type begin_name r end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name reader input stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name string reader end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name bytes end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name byte end_name begin_index begin_expr end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_comment first read in zero bytes end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list begin_argument begin_expr begin_name bytes end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment now read in the string end_comment begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name readin end_name begin_init begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list begin_argument begin_expr begin_name bytes end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment make sure that the counts are the same end_comment begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator DOT end_operator begin_call begin_name get bytes end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_name length end_name end_expr end_argument begin_argument begin_expr begin_name readin end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name has next end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment query fail on error flag return the fail fail on error value end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get fail fail on error end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name fail on error end_name end_expr end_return end_block 
 begin_comment get the extension of filenames to compile return the string extension of files to compile end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get file extension end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment whether the compiler text logo is displayed when compiling param logo a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set logo end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name logo end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name logo end_name end_name begin_operator EQ end_operator begin_name logo end_name end_expr end_expr_stmt end_block 
 begin_comment implement clone the set of nested resource collections is shallowly cloned return a cloned instance end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name clone end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name base resource collection container end_name end_type begin_name c end_name begin_init begin_expr begin_operator LPAR end_operator begin_name base resource collection container end_name begin_operator RPAR end_operator begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name c end_name begin_operator DOT end_operator begin_name rc end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list begin_argument begin_expr begin_name rc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name c end_name begin_operator DOT end_operator begin_name coll end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_return begin_expr begin_name c end_name end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name clone not supported exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test constructor net ware style end_name begin_parameter_list end_parameter_list begin_block begin_comment try a netware volume length path see how it is handled end_comment begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name p end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name l end_name begin_init begin_expr begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name is unix style end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name is net ware end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name to lower case end_name begin_argument_list begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if begin_comment try a multi part netware volume length path see how it is handled end_comment begin_expr_stmt begin_expr begin_name p end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name l end_name begin_operator EQ end_operator begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name is unix style end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name is net ware end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name to lower case end_name begin_argument_list begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name to lower case end_name begin_argument_list begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if begin_comment try a netware volume length path w forward slash see how it is handled end_comment begin_expr_stmt begin_expr begin_name p end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name l end_name begin_operator EQ end_operator begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name is unix style end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name is net ware end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name to lower case end_name begin_argument_list begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if begin_comment try a multi part netware volume length path w forward slash see how it is handled end_comment begin_expr_stmt begin_expr begin_name p end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name l end_name begin_operator EQ end_operator begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name is unix style end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name is net ware end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name to lower case end_name begin_argument_list begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name to lower case end_name begin_argument_list begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if begin_comment try a multi part netware volume length path with unix end_comment begin_comment separator this testcase if from an actual bug that was end_comment begin_comment found in available test which uses path tokenizer end_comment begin_expr_stmt begin_expr begin_name p end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name l end_name begin_operator EQ end_operator begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name is unix style end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name is net ware end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name to lower case end_name begin_argument_list begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name to lower case end_name begin_argument_list begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name l end_name begin_index begin_expr end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if end_block 
 begin_comment set the name attribute param name a code string code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set name end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name name end_name end_name begin_operator EQ end_operator begin_name name end_name end_expr end_expr_stmt end_block 
 begin_comment gets this macro s attribute and define list return the nested attributes end_comment begin_type begin_specifier end_specifier begin_name list end_name end_type begin_name get attributes end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name attributes end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set needed end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name needed end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name needed end_name end_name begin_operator EQ end_operator begin_name needed end_name end_expr end_expr_stmt end_block 
 begin_comment constructor for dummy instances see base filter reader base filter reader end_comment begin_specifier end_specifier begin_name class constants end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name eval end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name feature end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name property end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name error both attributes end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name feature end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name property end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name error no attributes end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment pick a value that is good for everything end_comment begin_if begin_condition begin_expr begin_name feature end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name eval feature end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name value end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name error no value end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_return begin_expr begin_call begin_name eval property end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment add a resource comparator to this compare selector if multiple resource comparators are added they will be processed in lifo order param c the resource comparator to add end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name add end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource comparator end_name end_type begin_name c end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name no children allowed end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name comp end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no alias end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name sign jar end_name begin_operator DOT end_operator begin_name error no alias end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test not enough args end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect specific build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no dots end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name checkprop end_name begin_init begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name checkprop end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment apply the nested element to the properties param props the properties to apply the entry on throws build exception if there is an error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute on end_name begin_parameter_list begin_param begin_decl begin_type begin_name properties end_name end_type begin_name props end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name check parameters end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment type may be null because it wasn t set end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name old value end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_if begin_condition begin_expr begin_name type end_name begin_operator EQT end_operator begin_name begin_name type end_name begin_operator DOT end_operator begin_name integer type end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name execute integer end_name begin_argument_list begin_argument begin_expr begin_name old value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name type end_name begin_operator EQT end_operator begin_name begin_name type end_name begin_operator DOT end_operator begin_name date type end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name execute date end_name begin_argument_list begin_argument begin_expr begin_name old value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name type end_name begin_operator EQT end_operator begin_name begin_name type end_name begin_operator DOT end_operator begin_name string type end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name execute string end_name begin_argument_list begin_argument begin_expr begin_name old value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name type end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_else end_if end_else end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name null pointer exception end_name end_type begin_name npe end_name end_decl end_param end_parameter_list begin_block begin_comment default to string type end_comment begin_comment which means do nothing end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name npe end_name begin_operator DOT end_operator begin_name print stack trace end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_if begin_condition begin_expr begin_name new value end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name new value end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_comment insert as a string by default end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument begin_argument begin_expr begin_name new value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment construct a new parser object param task task in which context we are called param emacs mode if true output in emacs mode end_comment begin_specifier end_specifier begin_name jikes output parser end_name begin_parameter_list begin_param begin_decl begin_type begin_name task end_name end_type begin_name task end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name emacs mode end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name task end_name end_name begin_operator EQ end_operator begin_name task end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name emacs mode end_name end_name begin_operator EQ end_operator begin_name emacs mode end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_name liaison end_name begin_operator EQ end_operator begin_call begin_name create liaison end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return a string representation of the selector end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name buf end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name has selectors end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test keeproot end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name do test end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment no args constructor end_comment begin_specifier end_specifier begin_name ant class loader 2 end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_specifier end_specifier begin_name foo end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment access the stream to which the stdout from cvs should go if this stream has already been set it will be returned if the stream has not yet been set if the attribute output has been set the output stream will go to the output file otherwise the output will go to ant s logging system return output stream to which cvs stdout should go to end_comment begin_type begin_specifier end_specifier begin_name output stream end_name end_type begin_name get output stream end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name output stream end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name output end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name set output stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name print stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name buffered output stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file output stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name output end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name append end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name set output stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name log output stream end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_return begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name output stream end_name end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add eleven end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name i end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name read current end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_return begin_expr begin_name eof end_name begin_operator UNP end_operator begin_name current stream end_name begin_operator EQT end_operator begin_operator QM end_operator begin_name eof end_name begin_operator DP end_operator begin_call begin_name begin_name current stream end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute targets end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name target names end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name build exception end_name end_type begin_name thrown exception end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name target names end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name execute target end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name target names end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name is keep going mode end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name thrown exception end_name begin_operator EQ end_operator begin_name ex end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_throw begin_expr begin_name ex end_name end_expr end_throw end_block end_else end_if end_block end_catch end_try end_block end_for begin_if begin_condition begin_expr begin_name thrown exception end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_name thrown exception end_name end_expr end_throw end_block end_then end_if end_block 
 begin_comment add a parameter param name the name of the parameter param value the value of the parameter end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add param end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name params end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment initially opens the file associated with this recorder used by recorder param append indicates if output must be appended to the logfile or that the logfile should be overwritten throws build exception since 1 6 3 end_comment begin_type begin_name void end_name end_type begin_name open file end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name append end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name open file impl end_name begin_argument_list begin_argument begin_expr begin_name append end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment interface test listener p a new test is started param t the test end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name start test end_name begin_parameter_list begin_param begin_decl begin_type begin_name test end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name test name end_name begin_init begin_expr begin_call begin_name begin_name j unit version helper end_name begin_operator DOT end_operator begin_name get test case name end_name end_name begin_argument_list begin_argument begin_expr begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log test listener event end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name test name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment indicate if this analyzer can determine dependent files return true if the analyzer provides dependency file information end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name supports file dependencies end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 5 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment learn whether this name resource selector is case sensitive return boolean case sensitivity flag end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is case sensitive end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name cs end_name end_expr end_return end_block 
 begin_comment parses the parameters to set the tab length end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name initialize end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name parameter end_name begin_index end_index end_type begin_name params end_name begin_init begin_expr begin_call begin_name get parameters end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name params end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name params end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name begin_name params end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name tab length key end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name params end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name tab length end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name integer end_name begin_argument_list begin_argument begin_expr begin_name begin_name params end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name int value end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_block end_then end_if end_block end_then end_if end_block end_for end_block end_then end_if end_block 
 begin_comment execute the command on the remote host exception build exception most likely a network error or bad parameter end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name get host end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name get user info end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name get user info end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get keyfile end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name get user info end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get password end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name command end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name byte array output stream end_name end_type begin_name out end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name byte array output stream end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name tee output stream end_name end_type begin_name tee end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name tee output stream end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name keep alive output stream end_name begin_argument_list begin_argument begin_expr begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name session end_name end_type begin_name session end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_comment execute the command end_comment begin_expr_stmt begin_expr begin_name session end_name begin_operator EQ end_operator begin_call begin_name open session end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name session end_name begin_operator DOT end_operator begin_name set timeout end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name int end_name begin_operator RPAR end_operator begin_name maxwait end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name channel exec end_name end_type begin_name channel end_name begin_init begin_expr begin_operator LPAR end_operator begin_name channel exec end_name begin_operator RPAR end_operator begin_call begin_name begin_name session end_name begin_operator DOT end_operator begin_name open channel end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name channel end_name begin_operator DOT end_operator begin_name set command end_name end_name begin_argument_list begin_argument begin_expr begin_name command end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name channel end_name begin_operator DOT end_operator begin_name set output stream end_name end_name begin_argument_list begin_argument begin_expr begin_name tee end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name channel end_name begin_operator DOT end_operator begin_name set ext output stream end_name end_name begin_argument_list begin_argument begin_expr begin_name tee end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name channel end_name begin_operator DOT end_operator begin_name connect end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment wait for it to finish end_comment begin_expr_stmt begin_expr begin_name thread end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_class begin_super begin_name thread end_name end_super begin_argument_list end_argument_list begin_block begin_function begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name run end_name begin_parameter_list end_parameter_list begin_block begin_while begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name channel end_name begin_operator DOT end_operator begin_name is eof end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_if begin_condition begin_expr begin_name thread end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name sleep end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment ignored end_comment end_block end_catch end_try end_block end_while end_block end_function end_block end_class end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name start end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name join end_name end_name begin_argument_list begin_argument begin_expr begin_name maxwait end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name is alive end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment ran out of time end_comment begin_expr_stmt begin_expr begin_name thread end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name get failonerror end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name timeout message end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name timeout message end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then begin_else begin_block begin_comment completed successfully end_comment begin_if begin_condition begin_expr begin_name output property end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set property end_name begin_argument_list begin_argument begin_expr begin_name output property end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name output file end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name write to file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name append end_name end_expr end_argument begin_argument begin_expr begin_name output file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment this is the wrong test if the remote os is open vms end_comment begin_comment but there doesn t seem to be a way to detect it end_comment begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name ec end_name begin_init begin_expr begin_call begin_name begin_name channel end_name begin_operator DOT end_operator begin_name get exit status end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name ec end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_name ec end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name get failonerror end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if end_block end_else end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_name e end_name end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name j sch exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator GE end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name get failonerror end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name timeout message end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name timeout message end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_call begin_name get failonerror end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_else end_if end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name get failonerror end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_catch begin_finally begin_block begin_if begin_condition begin_expr begin_name session end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name session end_name begin_operator DOT end_operator begin_name is connected end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name session end_name begin_operator DOT end_operator begin_name disconnect end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try end_block 
 begin_type begin_specifier end_specifier begin_name log end_name end_type begin_name get log end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name cat end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name suffix end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name suffix end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name suffix end_name begin_operator EQ end_operator begin_call begin_name begin_name suffix end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name suffix end_name begin_operator EQ end_operator begin_call begin_name begin_name suffix end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name cat end_name begin_operator EQ end_operator begin_name cat end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name suffix end_name end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name print stream end_name end_type begin_name tmp out end_name begin_init begin_expr begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name print stream end_name end_type begin_name tmp err end_name begin_init begin_expr begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name set out end_name end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name set err end_name end_name begin_argument_list begin_argument begin_expr begin_name err end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name initialized end_name end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_name log factory end_name begin_operator EQ end_operator begin_call begin_name begin_name log factory end_name begin_operator DOT end_operator begin_name get factory end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name log configuration exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name print stack trace end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block end_catch end_try end_block end_then end_if begin_expr_stmt begin_expr begin_name initialized end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name log end_name end_type begin_name log end_name begin_init begin_expr begin_call begin_name begin_name log factory end_name begin_operator DOT end_operator begin_name get instance end_name end_name begin_argument_list begin_argument begin_expr begin_name cat end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name set out end_name end_name begin_argument_list begin_argument begin_expr begin_name tmp out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name set err end_name end_name begin_argument_list begin_argument begin_expr begin_name tmp err end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name log end_name end_expr end_return end_block 
 begin_comment set the preferred encoding method param encoding the encoding one of auto mime uu plain end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set encoding end_name begin_parameter_list begin_param begin_decl begin_type begin_name encoding end_name end_type begin_name encoding end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name encoding end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name encoding end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the classpath to use for loading a custom selector by using a reference param r a reference to the classpath end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classpathref end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name create classpath end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set refid end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return the uid for the tar entry end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name get gid end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name tar resource end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get gid end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr begin_name uid end_name end_expr end_return end_block 
 begin_specifier end_specifier begin_name escape unicode test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the destination directory for manipulated images param dest dir the destination directory end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set dest dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name dest dir end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name dest dir end_name end_name begin_operator EQ end_operator begin_name dest dir end_name end_expr end_expr_stmt end_block 
 begin_comment the username for the tar entry this is not the same as the uid param user name the user name for the tar entry end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set user name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name user name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name check tar file set attributes allowed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name user name set end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name user name end_name end_name begin_operator EQ end_operator begin_name user name end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test zip file set condition end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the unicode input grammar option param unicode input a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set unicodeinput end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name unicode input end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name optional attrs end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name unicode input end_name end_expr end_argument begin_argument begin_expr begin_name unicode input end_name begin_operator QM end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name true end_name end_name begin_operator DP end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name false end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_name void end_name end_type begin_name send helo end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name local end_name begin_init begin_expr begin_call begin_name begin_name inet address end_name begin_operator DOT end_operator begin_name get local host end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get host name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name begin_index end_index end_type begin_name ok end_name begin_init begin_expr begin_block begin_expr begin_name ok helo end_name end_expr end_block end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name send end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name local end_name end_expr end_argument begin_argument begin_expr begin_name ok end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name from child end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment fails for the same reason as default mode in do end test 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test unix line separator end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name test unix line separator end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name assertion failed error end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block end_catch end_try end_block 
 begin_comment specifies whether the net rexx compiler should be case sensitive or not param strictcase a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set strictcase end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name strictcase end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name strictcase end_name end_name begin_operator EQ end_operator begin_name strictcase end_name end_expr end_expr_stmt end_block 
 begin_comment constructor for dummy instances see base filter reader base filter reader end_comment begin_specifier end_specifier begin_name escape unicode end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name unicode buf end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the attribute type name param cmd containing the command line string with or without the type name end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name get type command end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name typenm end_name begin_init begin_expr begin_call begin_name get type name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name typenm end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name typenm end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test echo with empty prefix to log end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator begin_name test value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the reference id of this reference return the reference id end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get ref id end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name refid end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name process element end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name current element end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment get the filename of vendor specific descriptor end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name file name with meta end_name begin_init begin_expr begin_name current text end_name end_expr end_init end_decl end_decl_stmt begin_comment trim the meta inf off of the file name end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name file name end_name begin_init begin_expr begin_call begin_name begin_name file name with meta end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name meta dir end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file name with meta end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name descriptor file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name src dir end_name end_expr end_argument begin_argument begin_expr begin_name file name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ejb files end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name file name with meta end_name end_expr end_argument begin_argument begin_expr begin_name descriptor file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment gets iiop flags return iiop end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get iiop end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name iiop end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name ignorable whitespace end_name begin_parameter_list begin_param begin_decl begin_type begin_name char end_name end_type begin_name begin_name ch end_name begin_index end_index end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name start end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name length end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name sax exception end_name end_expr end_argument end_throws begin_block end_block 
 begin_comment get this entry s link name return this entry s link name end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get link name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name link name end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_specifier end_specifier begin_name dummy task private end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment add an arbitary selector param selector the code file selector code to add since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add end_name begin_parameter_list begin_param begin_decl begin_type begin_name file selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name append selector end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the base directory to be scanned this is the directory which is scanned recursively param basedir the base directory for scanning end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set basedir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name basedir end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name basedir end_name end_name begin_operator EQ end_operator begin_name basedir end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test empty end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor param aclient ftp client param remotedir remote directory end_comment begin_specifier end_specifier begin_name ant ftp root file end_name begin_parameter_list begin_param begin_decl begin_type begin_name ftp client end_name end_type begin_name aclient end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name remotedir end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name aclient end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name remotedir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name remotedir end_name end_name begin_operator EQ end_operator begin_name remotedir end_name end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name get client end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name change working directory end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name remotedir end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name set curpwd end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name get client end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name print working directory end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name ioe end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment get the version of the specification return the version of the specification end_comment begin_type begin_specifier end_specifier begin_name dewey decimal end_name end_type begin_name get specification version end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name specification version end_name end_expr end_return end_block 
 begin_comment tells the net rexx compile that assignments must match exactly on type param strictassign a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set strictassign end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name strictassign end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name strictassign end_name end_name begin_operator EQ end_operator begin_name strictassign end_name end_expr end_expr_stmt end_block 
 begin_comment set the date time in milliseconds since 1970 param m the number of millis end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set millis end_name begin_parameter_list begin_param begin_decl begin_type begin_name long end_name end_type begin_name m end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name millis end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name long end_name begin_argument_list begin_argument begin_expr begin_name m end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment indicates that idl output should be generated this defaults to false if not set param idl generate idl output end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set idl end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name idl end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name idl end_name end_name begin_operator EQ end_operator begin_name idl end_name end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name copy test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment class doesn t exist property test null end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 8 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name log starteam version end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name build number end_name begin_operator DOT end_operator begin_name get display string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test ends with no match end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert false end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add configured mapper end_name begin_parameter_list begin_param begin_decl begin_type begin_name mapper end_name end_type begin_name mapper end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name mapper end_name begin_operator DOT end_operator begin_name get implementation end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment if true generate c declarations from the java object file used with old param stubs if true generated c declarations end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set stubs end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name stubs end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name stubs end_name end_name begin_operator EQ end_operator begin_name stubs end_name end_expr end_expr_stmt end_block 
 begin_comment run a target to touch the test file verify the timestamp is as expected param target name param timestamp end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name touch file end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name target name end_name end_decl end_param begin_param begin_decl begin_type begin_name long end_name end_type begin_name timestamp end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr begin_name target name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name time end_name begin_init begin_expr begin_call begin_name get target time end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert times nearly match end_name begin_argument_list begin_argument begin_expr begin_name timestamp end_name end_expr end_argument begin_argument begin_expr begin_name time end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add nested end_name begin_parameter_list begin_param begin_decl begin_type begin_name echo end_name end_type begin_name nested echo end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name nested echo end_name end_name begin_operator EQ end_operator begin_name nested echo end_name end_expr end_expr_stmt end_block 
 begin_comment the heart of the matter this is where the selector gets to decide on the inclusion of a file in a particular fileset param basedir the base directory the scan is being done from param filename is the name of the file to check param file is a java io file object the selector can use return whether the file should be selected or not end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is selected end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name basedir end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name filename end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_comment throw build exception on error end_comment begin_expr_stmt begin_expr begin_call begin_name validate end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment determine file whose existence is to be checked end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name destfiles end_name begin_init begin_expr begin_call begin_name begin_name map end_name begin_operator DOT end_operator begin_name map file name end_name end_name begin_argument_list begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment if filename does not match the to attribute of the mapper end_comment begin_comment then filter it out of the files we are considering end_comment begin_if begin_condition begin_expr begin_name destfiles end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_comment sanity check end_comment begin_if begin_condition begin_expr begin_name begin_name destfiles end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name begin_name destfiles end_name begin_index begin_expr end_expr end_index end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name targetdir end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name filename end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name destname end_name begin_init begin_expr begin_name begin_name destfiles end_name begin_index begin_expr end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name destfile end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name targetdir end_name end_expr end_argument begin_argument begin_expr begin_name destname end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name destfile end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_name destmustexist end_name end_expr end_return end_block 
 begin_comment if specified the open files are associated with the specified pending changelist number otherwise the open files are associated with the default changelist param changelist the change list number throws build exception if trying to set a change list number lt 0 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set changelist end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name changelist end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name changelist end_name begin_operator LE end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name changelist end_name end_name begin_operator EQ end_operator begin_name changelist end_name end_expr end_expr_stmt end_block 
 begin_comment handle output sent to system err param output string of stderr since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name handle error output end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name output end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name get error stream end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name handle error output end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name handle error output end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment prints the definition for the target element end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name print target decl end_name begin_parameter_list begin_param begin_decl begin_type begin_name print writer end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr begin_name tasks end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr begin_name types end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment interface test listener for j unit gt 3 4 p a test failed param test the test param t the assertion end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add failure end_name begin_parameter_list begin_param begin_decl begin_type begin_name test end_name end_type begin_name test end_name end_decl end_param begin_param begin_decl begin_type begin_name assertion failed error end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add failure end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name throwable end_name begin_operator RPAR end_operator begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name extract classname end_name begin_parameter_list begin_param begin_decl begin_type begin_name class end_name end_type begin_name c end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name c end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator DP end_operator begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment adds a resource collection to the implicit build path param rc the resource collection to add since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource collection end_name end_type begin_name rc end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name get buildpath end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name add end_name begin_argument_list begin_argument begin_expr begin_name rc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment merge the contents of the given manifest into this manifest param other the manifest to be merged with this one throws manifest exception if there is a problem merging the manifest according to the manifest spec end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name merge end_name begin_parameter_list begin_param begin_decl begin_type begin_name manifest end_name end_type begin_name other end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name manifest exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name merge end_name begin_argument_list begin_argument begin_expr begin_name other end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test next line character end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name set pattern end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name matches end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return the project name if one has been set return the project name or code null code if it hasn t been set end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name name end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test non forked capture end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert no print end_name begin_argument_list begin_argument begin_expr begin_call begin_name get log end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert no print end_name begin_argument_list begin_argument begin_expr begin_call begin_name get full log end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets the classpath to be used for this compilation return the class path used for compilation end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name get classpath end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name compile classpath end_name end_expr end_return end_block 
 begin_comment check out files recursively defaults to false param recursive the boolean value for recursive end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set recursive end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name recursive end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal recursive end_name end_name begin_argument_list begin_argument begin_expr begin_name recursive end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment flag to create backups optional default false param backups if true create backups end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set backups end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name backups end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name backups end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test preserve last modified end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment invokes parse output throws io exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name start end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name parse output end_name begin_argument_list begin_argument begin_expr begin_name br end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test a mail message with no to or cc lines end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test bcc only end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name server thread end_name end_type begin_name test mail server end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name server thread end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name thread end_name end_type begin_name server end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name thread end_name begin_argument_list begin_argument begin_expr begin_name test mail server end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name server end_name begin_operator DOT end_operator begin_name start end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name client thread end_name end_type begin_name test mail client end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name client thread end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test mail client end_name begin_operator DOT end_operator begin_name from end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test mail client end_name begin_operator DOT end_operator begin_name bcc end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test mail client end_name begin_operator DOT end_operator begin_name set subject end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test mail client end_name begin_operator DOT end_operator begin_name set message end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name thread end_name end_type begin_name client end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name thread end_name begin_argument_list begin_argument begin_expr begin_name test mail client end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name client end_name begin_operator DOT end_operator begin_name start end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name server end_name begin_operator DOT end_operator begin_name join end_name end_name begin_argument_list begin_argument begin_expr begin_operator STAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment 60 s end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name client end_name begin_operator DOT end_operator begin_name join end_name end_name begin_argument_list begin_argument begin_expr begin_operator STAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment a further 30 s end_comment end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name interrupted exception end_name end_type begin_name ie end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name ie end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name test mail server end_name begin_operator DOT end_operator begin_name get result end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name expected result end_name begin_init begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name local end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name local end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name local end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name expected result end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name expected result end_name end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name test mail client end_name begin_operator DOT end_operator begin_name is failed end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name test mail client end_name begin_operator DOT end_operator begin_name get fail message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_specifier end_specifier begin_name abstract file set test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment specified file is actually a directory so it should pass end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 13 b end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get comment string return string containing the comment end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get comment end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m comment end_name end_expr end_return end_block 
 begin_comment constructor for regexp factory end_comment begin_specifier end_specifier begin_name regexp factory end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment get whether a missing eol be added to the final line of the stream return true if a filtered file will always end with an eol end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get fixlast end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name fixlast end_name end_expr end_return end_block 
 begin_comment constructor for the build file test object param name string to pass up to test case constructor end_comment begin_specifier end_specifier begin_name build file test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test only one instance end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name enumeration end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name list end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name class loader end_name end_type begin_name c end_name begin_init begin_expr begin_call begin_name begin_name classpath utils end_name begin_operator DOT end_operator begin_name get unique class loader for path end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name path end_name begin_operator RPAR end_operator end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name enumeration end_name begin_operator EQ end_operator begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name get resources end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name count end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name enumeration end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name list end_name begin_operator EQ end_operator begin_name list end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name enumeration end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name count end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name count end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name list end_name end_expr end_argument begin_argument begin_expr begin_name count end_name begin_operator EQT end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set a single file to convert since ant 1 6 3 param file the file to convert end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name file end_name end_name begin_operator EQ end_operator begin_name file end_name end_expr end_expr_stmt end_block 
 begin_comment set the base directory for the project checking that the given file exists and is a directory param base dir the project base directory must not be code null code exception build exception if the specified file doesn t exist or isn t a directory end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set base dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name base dir end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_name base dir end_name begin_operator EQ end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name normalize end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name base dir end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name base dir end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name base dir end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name base dir end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name base dir end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name base dir end_name end_name begin_operator EQ end_operator begin_name base dir end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set property internal end_name begin_argument_list begin_argument begin_expr begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name project basedir end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name base dir end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name base dir end_name end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name msg verbose end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the user for smtp auth param user the username since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set user end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name user end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name user end_name end_name begin_operator EQ end_operator begin_name user end_name end_expr end_expr_stmt end_block 
 begin_comment set the value to be tested let ant eval it to true false param value the value to test end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set value end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name value end_name end_name begin_operator EQ end_operator begin_name value end_name begin_operator QM end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name true end_name end_name begin_operator DP end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name false end_name end_name end_expr end_expr_stmt end_block 
 begin_comment set the name of the ant run script using the project s value param project the current project throws build exception not clear when it is going to throw an exception but it is the method s signature end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set ant run end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name project end_name end_name begin_operator EQ end_operator begin_name project end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test nested by class name end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment get the fileset and its basedir end_comment begin_decl_stmt begin_decl begin_type begin_name project end_name end_type begin_name p end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file set end_name end_type begin_name fileset end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file set end_name begin_operator RPAR end_operator begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get reference end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name base dir end_name begin_init begin_expr begin_call begin_name begin_name fileset end_name begin_operator DOT end_operator begin_name get dir end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name log end_name begin_init begin_expr begin_call begin_name get log end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name base dir end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment adds the components on the given path which exist to this path components that don t exist aren t added param source source path whose components are examined for existence end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add existing end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name source end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add existing end_name begin_argument_list begin_argument begin_expr begin_name source end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test for kaffe being on the system return true if kaffe is on the current classpath end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name is available end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get rmic class end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_return end_block 
 begin_comment get a list of definitions or null return a string beginning d or null for no definitions throws build exception if there is an error end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get definitions parameter end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name defines end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name def enum end_name begin_init begin_expr begin_call begin_name begin_name definition list end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name first definition end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name def enum end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_comment loop through all definitions end_comment begin_decl_stmt begin_decl begin_type begin_name dotnet define end_name end_type begin_name define end_name begin_init begin_expr begin_operator LPAR end_operator begin_name dotnet define end_name begin_operator RPAR end_operator begin_call begin_name begin_name def enum end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name define end_name begin_operator DOT end_operator begin_name is set end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment add those that are set and a delimiter end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name first definition end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name defines end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get definitions delimiter end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name defines end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name define end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name first definition end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block end_while begin_if begin_condition begin_expr begin_call begin_name begin_name defines end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr begin_operator PLUS end_operator begin_name defines end_name end_expr end_return end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no crash end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test fixlast false mac end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gives the count of the number of selectors in this container return the number of selectors end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name selector count end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name selectors list end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment return the definition s name return the name of the definition end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name name end_name end_expr end_return end_block 
 begin_comment corresponds to code lt ant gt code s code inheritrefs code attribute param b the new value for this boolean flag end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set inheritrefs end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name inherit refs end_name end_name begin_operator EQ end_operator begin_name b end_name end_expr end_expr_stmt end_block 
 begin_comment setter method used to specify the filename suffix for example jar for the jar files to be created param jar suffix the string to use as the jar filename suffix end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set suffix end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name jar suffix end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name jar suffix end_name end_name begin_operator EQ end_operator begin_name jar suffix end_name end_expr end_expr_stmt end_block 
 begin_comment ignore end_comment begin_comment j unit 3 7 introduces test case get name and subsequent versions of j unit remove the old name method this method provides access to the name of a test case via reflection that is supposed to work with version before and after j unit 3 7 p since ant 1 5 1 this method will invoke quot code public string get name code quot on any implementation of test if it exists p p since ant 1 7 also checks for j unit 4 test case facade explicitly this is used by junit framework j unit 4 test adapter p param t the test return the name of the test end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get test case name end_name begin_parameter_list begin_param begin_decl begin_type begin_name test end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name t end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment self describing as of j unit 4 38811 but trim class name end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name paren end_name begin_init begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name last index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name paren end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr begin_name name end_name end_expr end_return end_block end_else end_if end_block end_then end_if begin_if begin_condition begin_expr begin_name t end_name begin_operator UNP end_operator begin_name test case end_name begin_operator UNP end_operator begin_name test case name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name test case name end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_name t end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try end_block end_then begin_else begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name method end_name end_type begin_name get name method end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name get name method end_name begin_operator EQ end_operator begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get method end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name class end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no such method exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name get name method end_name begin_operator EQ end_operator begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get method end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name class end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_if begin_condition begin_expr begin_name get name method end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name get name method end_name begin_operator DOT end_operator begin_name get return type end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_name begin_name string end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name get name method end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr begin_name t end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment ignore end_comment end_block end_catch end_try end_block end_else end_if begin_return begin_expr end_expr end_return end_block 
 begin_comment sets the name pattern param name the pattern string end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name name end_name end_name begin_operator EQ end_operator begin_name name end_name end_expr end_expr_stmt end_block 
 begin_comment return a printable form of this object end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator PLUS end_operator begin_name include list end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name exclude list end_name begin_operator PLUS end_operator end_expr end_return end_block 
 begin_comment father and child pattern test end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test order of include patterns irrelevant end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name login suceeded end_name end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name change remote dir end_name begin_argument_list begin_argument begin_expr begin_name remote tmp dir end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name expected files end_name begin_init begin_expr begin_block begin_expr end_expr begin_expr end_expr end_block end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name expected directories end_name begin_init begin_expr begin_block begin_expr end_expr begin_expr end_expr end_block end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name ftp directory scanner end_name end_name end_type begin_name ds end_name begin_init begin_expr begin_call begin_name begin_name my ftp task end_name begin_operator DOT end_operator begin_name new scanner end_name end_name begin_argument_list begin_argument begin_expr begin_name ftp end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set basedir end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set includes end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name compare files end_name begin_argument_list begin_argument begin_expr begin_name ds end_name end_expr end_argument begin_argument begin_expr begin_name expected files end_name end_expr end_argument begin_argument begin_expr begin_name expected directories end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment redo the test but the 2 include patterns are inverted end_comment begin_expr_stmt begin_expr begin_name ds end_name begin_operator EQ end_operator begin_call begin_name begin_name my ftp task end_name begin_operator DOT end_operator begin_name new scanner end_name end_name begin_argument_list begin_argument begin_expr begin_name ftp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set basedir end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set includes end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name compare files end_name begin_argument_list begin_argument begin_expr begin_name ds end_name end_expr end_argument begin_argument begin_expr begin_name expected files end_name end_expr end_argument begin_argument begin_expr begin_name expected directories end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment tests ordering of sections end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test order 2 end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument begin_argument begin_expr begin_name manifest exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name manifest end_name end_type begin_name manifest end_name begin_init begin_expr begin_call begin_name get manifest end_name begin_argument_list begin_argument begin_expr begin_name expanded manifest end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name manifest end_name begin_operator DOT end_operator begin_name get section names end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name section 1 end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name section 2 end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name section 1 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name section 2 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name manifest end_name begin_operator DOT end_operator begin_name section end_name end_name end_type begin_name section end_name begin_init begin_expr begin_call begin_name begin_name manifest end_name begin_operator DOT end_operator begin_name get section end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name e end_name begin_operator EQ end_operator begin_call begin_name begin_name section end_name begin_operator DOT end_operator begin_name get attribute keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name attr 1 key end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name attr 2 key end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name attr 1 end_name begin_init begin_expr begin_call begin_name begin_name section end_name begin_operator DOT end_operator begin_name get attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name attr 1 key end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name attr 2 end_name begin_init begin_expr begin_call begin_name begin_name section end_name begin_operator DOT end_operator begin_name get attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name attr 2 key end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name attr 1 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name attr 2 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the ordinary flag param ordinary the status to set the flag to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set ordinary end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name ordinary end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m ordinary end_name begin_operator EQ end_operator begin_name ordinary end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name init block end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name magic 0 end_name begin_init begin_expr begin_call begin_name bs get u byte end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name magic 1 end_name begin_init begin_expr begin_call begin_name bs get u byte end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name magic 2 end_name begin_init begin_expr begin_call begin_name bs get u byte end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name magic 3 end_name begin_init begin_expr begin_call begin_name bs get u byte end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name magic 4 end_name begin_init begin_expr begin_call begin_name bs get u byte end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name magic 5 end_name begin_init begin_expr begin_call begin_name bs get u byte end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name magic 0 end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name magic 1 end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name magic 2 end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name magic 3 end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name magic 4 end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name magic 5 end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name complete end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment end of file end_comment end_block end_then begin_else begin_if begin_condition begin_expr begin_name magic 0 end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_comment 1 end_comment begin_name magic 1 end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_comment end_comment begin_name magic 2 end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_comment y end_comment begin_name magic 3 end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_comment end_comment begin_name magic 4 end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_comment s end_comment begin_name magic 5 end_name begin_operator UNP end_operator end_expr begin_comment y end_comment end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name current state end_name end_name begin_operator EQ end_operator begin_name eof end_name end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name io exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name stored block crc end_name end_name begin_operator EQ end_operator begin_call begin_name bs get int end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name block randomised end_name end_name begin_operator EQ end_operator begin_call begin_name bs r end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_expr_stmt begin_comment allocate data here instead in constructor so we do not allocate it if the input file is empty end_comment begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name data end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name data end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name data end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name block size 100 k end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment curr block no end_comment begin_expr_stmt begin_expr begin_call begin_name get and move to front decode end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name crc end_name begin_operator DOT end_operator begin_name initialise crc end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name current state end_name end_name begin_operator EQ end_operator begin_name start block state end_name end_expr end_expr_stmt end_block end_else end_if end_else end_if end_block 
 begin_comment create a depend scanner using the given scanner to provide the basic set of files from which class files come param parent scanner the directory scanner which returns the files from which class files must come end_comment begin_specifier end_specifier begin_name depend scanner end_name begin_parameter_list begin_param begin_decl begin_type begin_name directory scanner end_name end_type begin_name parent scanner end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name parent scanner end_name end_name begin_operator EQ end_operator begin_name parent scanner end_name end_expr end_expr_stmt end_block 
 begin_comment identify a url that hosts the schema param url the url string end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set url end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name url end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name url end_name end_name begin_operator EQ end_operator begin_name url end_name end_expr end_expr_stmt end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add rectangle end_name begin_parameter_list begin_param begin_decl begin_type begin_name rectangle end_name end_type begin_name instr end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name instructions end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name instr end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment is this condition true return true if the condition is true throws org apache tools ant build exception if an error occurs end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name eval end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name init script runner end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name execute script end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment ignore end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name do target end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name target end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name is configured end_name end_expr end_condition begin_then begin_expr_stmt begin_expr begin_call begin_name set up end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_then end_if begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set to end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name to end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment test for searching parents end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test search parents end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test whether the build file treats nested elements without regard to case this should not cause an exception end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test case sensitivity end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment a utility method for this classes and subclasses to run an execute instance an external command param exe instance of the execute class throws io exception in case of problem to attach to the stdin stdout stderr streams of the process end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name run execute end_name begin_parameter_list begin_param begin_decl begin_type begin_name execute end_name end_type begin_name exe end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name return code end_name begin_init begin_expr begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_comment assume the worst end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name spawn end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name return code end_name begin_operator EQ end_operator begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment test for and handle a forced process death end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name killed process end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name fail on error end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name maybe set result property value end_name begin_argument_list begin_argument begin_expr begin_name return code end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name redirector end_name begin_operator DOT end_operator begin_name complete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name execute end_name begin_operator DOT end_operator begin_name is failure end_name end_name begin_argument_list begin_argument begin_expr begin_name return code end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name fail on error end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name get task type end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name return code end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name return code end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name spawn end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment flag optional default false to remove the generated files in the build directory param cbd a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set clean build dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name cbd end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name clean build dir end_name begin_operator EQ end_operator begin_name cbd end_name end_expr end_expr_stmt end_block 
 begin_comment ignored param from ignored end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set from end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name from end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test restart end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name content equals end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_name rec in end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_name rec dir end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment hashcodes are based on entry names return the entry hashcode end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name hash code end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name hash code end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment date to get param date the date to get ant attribute group vdl end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set date end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name date end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal date end_name end_name begin_argument_list begin_argument begin_expr begin_name date end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets i prepend i attribute param prepend new value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set prepend end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name prepend end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name prepend end_name end_name begin_operator EQ end_operator begin_name prepend end_name end_expr end_expr_stmt end_block 
 begin_comment return a string describing this object end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name buf end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name min end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name max end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name buf end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write as array end_name begin_parameter_list begin_param begin_decl begin_type begin_name char end_name end_type begin_name c end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name stream end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name byte end_name begin_index end_index end_name begin_block begin_expr begin_operator LPAR end_operator begin_name byte end_name begin_operator RPAR end_operator begin_name c end_name end_expr end_block end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment a unit test for j unit end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test not a jsp file end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name assert file contains end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name filename end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name contains end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name content end_name begin_init begin_expr begin_call begin_name get file string end_name begin_argument_list begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name filename end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name contains end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name content end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name content end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name contains end_name end_expr end_argument end_argument_list end_call begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test close array end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name write byte array end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name stream end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name stream end_name begin_operator DOT end_operator begin_name assert invoked end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name stream end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment add a nested argument element to hand to the deployment tool optional return a commandline argument object representing the command line argument being passed when the deployment tool is run ie user mark password venture end_comment begin_type begin_specifier end_specifier begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name argument end_name end_name end_type begin_name create arg end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name create arg end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name fire build finished end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name fire build finished end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment setting this to true trusts hosts whose identity is unknown param yes or no if true trust the identity of unknown hosts end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set trust end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name yes or no end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name user info end_name begin_operator DOT end_operator begin_name set trust end_name end_name begin_argument_list begin_argument begin_expr begin_name yes or no end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment param impl the name of the compiler end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set compiler end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name impl end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set implementation end_name end_name begin_argument_list begin_argument begin_expr begin_name impl end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets the destination directory into which the java source files should be compiled return the destination directory end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get destdir end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name dest dir end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 15 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment specify the classpath to use to load the selector nested element return a classpath to be configured end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name path end_name end_type begin_name create classpath end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name no children allowed end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name classpath end_name begin_operator DOT end_operator begin_name create path end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment calculate the intersection of the nested resource collections return a collection of resources end_comment begin_type begin_specifier end_specifier begin_name collection end_name end_type begin_name get collection end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name list end_name end_type begin_name rcs end_name begin_init begin_expr begin_call begin_name get resource collections end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name size end_name begin_init begin_expr begin_call begin_name begin_name rcs end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name size end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name size end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name size end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name array list end_name end_type begin_name al end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name iterator end_name end_type begin_name rc end_name begin_init begin_expr begin_call begin_name begin_name rcs end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name al end_name begin_operator DOT end_operator begin_name add all end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name collect end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name rc end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name rc end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name al end_name begin_operator DOT end_operator begin_name retain all end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name collect end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name rc end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_return begin_expr begin_name al end_name end_expr end_return end_block 
 begin_comment return an iterator over the nested selectors return iterator of resource selectors end_comment begin_type begin_specifier end_specifier begin_name iterator end_name end_type begin_name get selectors end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name resource selector container end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get selectors end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name die on circular reference end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name collections end_name begin_operator DOT end_operator begin_name unmodifiable list end_name end_name begin_argument_list begin_argument begin_expr begin_name v end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment get the uri base value return the value end_comment begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get uribase end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name uriroot end_name end_expr end_return end_block 
 begin_comment set the separator for the multi url option param separator the separator to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set separator end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name separator end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name separator end_name end_name begin_operator EQ end_operator begin_name separator end_name end_expr end_expr_stmt end_block 
 begin_comment the constructor to create package specification object note that every component is allowed to be specified but only the specification title is mandatory param specification title the name of specification param specification version the specification version param specification vendor the specification vendor param implementation title the title of implementation param implementation version the implementation version param implementation vendor the implementation vendor param sections the sections packages that specification applies to end_comment begin_specifier end_specifier begin_name specification end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name specification title end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name specification version end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name specification vendor end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name implementation title end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name implementation version end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name implementation vendor end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name begin_name string end_name begin_index end_index end_name end_type begin_name sections end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name specification title end_name end_name begin_operator EQ end_operator begin_name specification title end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name specification vendor end_name end_name begin_operator EQ end_operator begin_name specification vendor end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name specification version end_name end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name specification version end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name dewey decimal end_name begin_argument_list begin_argument begin_expr begin_name specification version end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name number format exception end_name end_type begin_name nfe end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name error end_name begin_init begin_expr begin_operator PLUS end_operator begin_name specification version end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name specification title end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name nfe end_name begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name illegal argument exception end_name begin_argument_list begin_argument begin_expr begin_name error end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name implementation title end_name end_name begin_operator EQ end_operator begin_name implementation title end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name implementation vendor end_name end_name begin_operator EQ end_operator begin_name implementation vendor end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name implementation version end_name end_name begin_operator EQ end_operator begin_name implementation version end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator EQT end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name specification title end_name end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name null pointer exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name copy end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name sections end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name copy end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_name begin_name sections end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_name sections end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name copy end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name sections end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name sections end_name end_name begin_operator EQ end_operator begin_name copy end_name end_expr end_expr_stmt end_block 
 begin_comment get the classname attribute return the classname value end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get class name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name class name end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test task error in including end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name starts with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get location end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get location end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name test end_name end_type begin_name suite end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name nested end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no additional white space for empty element end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name document end_name end_type begin_name d end_name begin_init begin_expr begin_call begin_name begin_name dom utils end_name begin_operator DOT end_operator begin_name new document end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name element end_name end_type begin_name root end_name begin_init begin_expr begin_call begin_name begin_name d end_name begin_operator DOT end_operator begin_name create element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dom utils end_name begin_operator DOT end_operator begin_name create child element end_name end_name begin_argument_list begin_argument begin_expr begin_name root end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string writer end_name end_type begin_name sw end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string writer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name dom element writer end_name end_type begin_name w end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name dom element writer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name root end_name end_expr end_argument begin_argument begin_expr begin_name sw end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name begin_comment empty element empty element end_comment begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name sw end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name target finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name check end_name begin_argument_list begin_argument begin_expr begin_name event end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment convenience method which creates a string representation of all the instance variables of an ejb info object return a string representing the ejb info instance end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name s end_name begin_init begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name home end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name remote end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name implementation end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name primary key end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name beantype end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name cmp end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name iiop end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name hasession end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name cmp descriptors end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name s end_name begin_operator UNP end_operator begin_operator PLUS end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_return begin_expr begin_name s end_name end_expr end_return end_block 
 begin_comment add a strip line comments filter param strip line comments a code strip line comments code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add strip line comments end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name strip line comments end_name end_type begin_name strip line comments end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name filter readers end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name strip line comments end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the property to receive the date time string in the given pattern param property name the name of the property end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set property end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name property name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name property name end_name end_name begin_operator EQ end_operator begin_name property name end_name end_expr end_expr_stmt end_block 
 begin_comment if true list the source files being handed off to the compiler param list if true list the source files end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set listfiles end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name list end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name list files end_name begin_operator EQ end_operator begin_name list end_name end_expr end_expr_stmt end_block 
 begin_comment retrieve the value of parameter return the value of parameter end_comment begin_type begin_name string end_name end_type begin_name get value end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name value end_name end_expr end_return end_block 
 begin_comment adds a textual part of the message param text some text to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add text end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name text end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment determine whether the classpath has been specified and whether it shall really be used or be nulled by build sysclasspath return true if the classpath is to be used since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name have classpath end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name full classpath end_name begin_init begin_expr begin_name classpath end_name begin_operator UNP end_operator begin_operator QM end_operator begin_call begin_name begin_name classpath end_name begin_operator DOT end_operator begin_name concat system classpath end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DP end_operator end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_name full classpath end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name full classpath end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name trim end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name flush end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name record end_name begin_operator UNP end_operator begin_name out end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment indicates whether there are any selectors here return true if there are selectors end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name has selectors end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name selectors list end_name begin_operator DOT end_operator begin_name is empty end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment keystore type param storetype type end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set storetype end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name storetype end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name storetype end_name end_name begin_operator EQ end_operator begin_name storetype end_name end_expr end_expr_stmt end_block 
 begin_comment test the pattern attribute end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test good pattern end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment construct a new file resource using the specified basedir and relative name param b the basedir as file param name the relative filename end_comment begin_specifier end_specifier begin_name file resource end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name b end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr begin_name b end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set base dir end_name begin_argument_list begin_argument begin_expr begin_name b end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment examines each of the ejb source classes home remote and implementation and returns the modification timestamp for the oldest class param classpath the classpath to be used to find the source ejb classes if code null code the system classpath is used return the modification timestamp for the oldest ejb source class throws build exception if one of the ejb source classes cannot be found on the classpath end_comment begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name source classes modified end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name build dir end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name latest modified end_name end_decl end_decl_stmt begin_comment the timestamp of the newest class end_comment begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name modified end_name end_decl end_decl_stmt begin_comment timestamp for a given class end_comment begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name remote file end_name end_decl end_decl_stmt begin_comment file for the remote interface class end_comment begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name home file end_name end_decl end_decl_stmt begin_comment file for the home interface class end_comment begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name impl file end_name end_decl end_decl_stmt begin_comment file for the ejb implementation class end_comment begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name pk file end_name end_decl end_decl_stmt begin_comment file for the ejb primary key class end_comment begin_comment check the timestamp on the remote interface end_comment begin_expr_stmt begin_expr begin_name remote file end_name begin_operator EQ end_operator begin_call begin_name begin_name remote end_name begin_operator DOT end_operator begin_name get class file end_name end_name begin_argument_list begin_argument begin_expr begin_name build dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name modified end_name begin_operator EQ end_operator begin_call begin_name begin_name remote file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name modified end_name begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name remote end_name begin_operator DOT end_operator begin_name get qualified class name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_operator MINUS end_operator end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name latest modified end_name begin_operator EQ end_operator begin_name modified end_name end_expr end_expr_stmt begin_comment check the timestamp on the home interface end_comment begin_expr_stmt begin_expr begin_name home file end_name begin_operator EQ end_operator begin_call begin_name begin_name home end_name begin_operator DOT end_operator begin_name get class file end_name end_name begin_argument_list begin_argument begin_expr begin_name build dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name modified end_name begin_operator EQ end_operator begin_call begin_name begin_name home file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name modified end_name begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name home end_name begin_operator DOT end_operator begin_name get qualified class name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_operator MINUS end_operator end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name latest modified end_name begin_operator EQ end_operator begin_call begin_name begin_name math end_name begin_operator DOT end_operator begin_name max end_name end_name begin_argument_list begin_argument begin_expr begin_name latest modified end_name end_expr end_argument begin_argument begin_expr begin_name modified end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment check the timestamp of the primary key class end_comment begin_if begin_condition begin_expr begin_name primary key end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name pk file end_name begin_operator EQ end_operator begin_call begin_name begin_name primary key end_name begin_operator DOT end_operator begin_name get class file end_name end_name begin_argument_list begin_argument begin_expr begin_name build dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name modified end_name begin_operator EQ end_operator begin_call begin_name begin_name pk file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name modified end_name begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name primary key end_name begin_operator DOT end_operator begin_name get qualified class name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_operator MINUS end_operator end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name latest modified end_name begin_operator EQ end_operator begin_call begin_name begin_name math end_name begin_operator DOT end_operator begin_name max end_name end_name begin_argument_list begin_argument begin_expr begin_name latest modified end_name end_expr end_argument begin_argument begin_expr begin_name modified end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name pk file end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_else end_if begin_comment check the timestamp on the ejb implementation class note that if only the implementation class has changed it s not necessary to rebuild the ejb stubs and skeletons for this reason we ensure the file exists using last modified above but we don t compare it s timestamp with the timestamps of the home and remote interfaces because it s irrelevant in determining if ejbc must be run end_comment begin_expr_stmt begin_expr begin_name impl file end_name begin_operator EQ end_operator begin_call begin_name begin_name implementation end_name begin_operator DOT end_operator begin_name get class file end_name end_name begin_argument_list begin_argument begin_expr begin_name build dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name modified end_name begin_operator EQ end_operator begin_call begin_name begin_name impl file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name modified end_name begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name implementation end_name begin_operator DOT end_operator begin_name get qualified class name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_operator MINUS end_operator end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name path to file end_name begin_init begin_expr begin_call begin_name begin_name remote end_name begin_operator DOT end_operator begin_name get qualified class name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name path to file end_name begin_operator EQ end_operator begin_call begin_name begin_name path to file end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ejb files end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name path to file end_name end_expr end_argument begin_argument begin_expr begin_name remote file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name path to file end_name begin_operator EQ end_operator begin_call begin_name begin_name home end_name begin_operator DOT end_operator begin_name get qualified class name end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name path to file end_name begin_operator EQ end_operator begin_call begin_name begin_name path to file end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ejb files end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name path to file end_name end_expr end_argument begin_argument begin_expr begin_name home file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name path to file end_name begin_operator EQ end_operator begin_call begin_name begin_name implementation end_name begin_operator DOT end_operator begin_name get qualified class name end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name path to file end_name begin_operator EQ end_operator begin_call begin_name begin_name path to file end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ejb files end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name path to file end_name end_expr end_argument begin_argument begin_expr begin_name impl file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name pk file end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name path to file end_name begin_operator EQ end_operator begin_call begin_name begin_name primary key end_name begin_operator DOT end_operator begin_name get qualified class name end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name path to file end_name begin_operator EQ end_operator begin_call begin_name begin_name path to file end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ejb files end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name path to file end_name end_expr end_argument begin_argument begin_expr begin_name pk file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name latest modified end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test filename as param end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert file contains end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert file contains end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert file contains end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert file contains end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert file contains end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment configuration end_comment begin_comment overrides base selector verify settings end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name verify settings end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name cache end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set error end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name algorithm end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set error end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name cache end_name begin_operator DOT end_operator begin_name is valid end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set error end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name algorithm end_name begin_operator DOT end_operator begin_name is valid end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set error end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if end_else end_if end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name validate end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name die on circular reference end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name coll end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name coll end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator UNP end_operator begin_call begin_name my collection end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_name coll end_name end_expr end_expr_stmt end_block 
 begin_comment control generation of index param b if true do not generate index end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set noindex end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add arg if end_name begin_argument_list begin_argument begin_expr begin_name b end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add fileset end_name begin_parameter_list begin_param begin_decl begin_type begin_name file set end_name end_type begin_name fileset end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name fileset end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the user id param uid the user id since 1 1 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set user id end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name uid end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name uid end_name end_name begin_operator EQ end_operator begin_name uid end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name have add files end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name have entries end_name begin_argument_list begin_argument begin_expr begin_name addfiles end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment the testsuite started param suite the testsuite end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name start test suite end_name begin_parameter_list begin_param begin_decl begin_type begin_name j unit test end_name end_type begin_name suite end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name new line end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name sb end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name suite end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name new line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get bytes end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioex end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name ioex end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment test that the nested dtd element is used when resolver jar is not present this test should pass either way end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test xml catalog files end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name send file to remote end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name local file end_name end_decl end_param begin_param begin_decl begin_type begin_name input stream end_name end_type begin_name in end_name end_decl end_param begin_param begin_decl begin_type begin_name output stream end_name end_type begin_name out end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_comment send c 0644 filesize filename where filename should not include end_comment begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name filesize end_name begin_init begin_expr begin_call begin_name begin_name local file end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name command end_name begin_init begin_expr begin_operator PLUS end_operator begin_name filesize end_name begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name command end_name begin_operator UNP end_operator begin_call begin_name begin_name local file end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name command end_name begin_operator UNP end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name wait for ack end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment send a content of lfile end_comment begin_decl_stmt begin_decl begin_type begin_name file input stream end_name end_type begin_name fis end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_name local file end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name buf end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name byte end_name begin_index begin_expr begin_name buffer size end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name start time end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name total length end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment only track progress for files larger than 100 kb in verbose mode end_comment begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name track progress end_name begin_init begin_expr begin_call begin_name get verbose end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name filesize end_name begin_operator GT end_operator end_expr end_init end_decl end_decl_stmt begin_comment since filesize keeps on decreasing we have to store the end_comment begin_comment initial filesize end_comment begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name init filesize end_name begin_init begin_expr begin_name filesize end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name percent transmitted end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name get verbose end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name local file end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name local file end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_while begin_condition begin_expr end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name len end_name begin_init begin_expr begin_call begin_name begin_name fis end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list begin_argument begin_expr begin_name buf end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name buf end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name len end_name begin_operator LE end_operator end_expr end_condition begin_then begin_block begin_break end_break end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name buf end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name len end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name total length end_name begin_operator UNP end_operator begin_name len end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name track progress end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name percent transmitted end_name begin_operator EQ end_operator begin_call begin_name track progress end_name begin_argument_list begin_argument begin_expr begin_name init filesize end_name end_expr end_argument begin_argument begin_expr begin_name total length end_name end_expr end_argument begin_argument begin_expr begin_name percent transmitted end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_while begin_expr_stmt begin_expr begin_call begin_name begin_name out end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name send ack end_name begin_argument_list begin_argument begin_expr begin_name out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name wait for ack end_name begin_argument_list begin_argument begin_expr begin_name in end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name get verbose end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name end time end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log stats end_name begin_argument_list begin_argument begin_expr begin_name start time end_name end_expr end_argument begin_argument begin_expr begin_name end time end_name end_expr end_argument begin_argument begin_expr begin_name total length end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name fis end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment return the value of a property if it is set param property name the name of the property may be code null code in which case the return value is also code null code return the property value or code null code for no match or if a code null code name is provided end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get property end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name property name end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name property helper end_name end_type begin_name ph end_name begin_init begin_expr begin_call begin_name begin_name property helper end_name begin_operator DOT end_operator begin_name get property helper end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name ph end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name property name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment fulfill the resource collection contract return number of elements as int end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name int end_name end_type begin_name size end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name path end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name size end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name die on circular reference end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name union end_name begin_operator EQT end_operator begin_operator QM end_operator begin_operator DP end_operator begin_call begin_name assert filesystem only end_name begin_argument_list begin_argument begin_expr begin_name union end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name size end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no ns prefix by default end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name document end_name end_type begin_name d end_name begin_init begin_expr begin_call begin_name begin_name dom utils end_name begin_operator DOT end_operator begin_name new document end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name element end_name end_type begin_name root end_name begin_init begin_expr begin_call begin_name begin_name d end_name begin_operator DOT end_operator begin_name create element ns end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name root end_name begin_operator DOT end_operator begin_name set attribute ns end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string writer end_name end_type begin_name sw end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string writer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name dom element writer end_name end_type begin_name w end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name dom element writer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name w end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name root end_name end_expr end_argument begin_argument begin_expr begin_name sw end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name line sep end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name sw end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name apt test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment check the command line options end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check options end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name cmd end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name get comment end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment c end_comment begin_expr_stmt begin_expr begin_call begin_name get comment command end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_call begin_name get comment file end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment cfile end_comment begin_expr_stmt begin_expr begin_call begin_name get comment file command end_name begin_argument_list begin_argument begin_expr begin_name cmd end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag nocomment end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_else end_if begin_if begin_condition begin_expr begin_call begin_name get no warn end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment nwarn end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag nowarn end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name get preserve time end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment ptime end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag preservetime end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name get keep copy end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment keep end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag keepcopy end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name get identical end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment identical end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name flag identical end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment viewpath end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get view path end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment if true suppress informational messages param q if true suppress informational messages end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set quiet end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name q end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name quiet end_name begin_operator EQ end_operator begin_name q end_name end_expr end_expr_stmt end_block 
 begin_comment control whether class lookup is delegated to the parent loader first or after this loader use with extreme caution setting this to false violates the class loader hierarchy and can lead to linkage errors param parent first if true delegate initial class search to the parent classloader end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set parent first end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name parent first end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name parent first end_name end_name begin_operator EQ end_operator begin_name parent first end_name end_expr end_expr_stmt end_block 
 begin_comment returns an enumerator for accessing the set of selectors return an enumerator for the selectors end_comment begin_type begin_specifier end_specifier begin_name enumeration end_name end_type begin_name selector elements end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name selectors list end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get eol end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name eol str end_name end_expr end_return end_block 
 begin_comment evaluate a comparison result as from comparator compare or comparable compare to param comparison result the result to evaluate return true if the comparison result fell within the parameters of this comparison end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name evaluate end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name comparison result end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name get index end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name int end_name begin_index end_index end_type begin_name i end_name begin_init begin_expr begin_name comparison result end_name begin_operator LT end_operator begin_operator QM end_operator begin_name less index end_name begin_operator DP end_operator begin_name comparison result end_name begin_operator GT end_operator begin_operator QM end_operator begin_name greater index end_name begin_operator DP end_operator begin_name equal index end_name end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name arrays end_name begin_operator DOT end_operator begin_name binary search end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get index end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator GE end_operator end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write byte array end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name stream end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment validate parameter and execute the format param project project to set property in param date date to use as a starting point param location line in file for errors end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param begin_param begin_decl begin_type begin_name date end_name end_type begin_name date end_name end_decl end_param begin_param begin_decl begin_type begin_name location end_name end_type begin_name location end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name property name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name location end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name pattern end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name location end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name simple date format end_name end_type begin_name sdf end_name end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name language end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name sdf end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name simple date format end_name begin_argument_list begin_argument begin_expr begin_name pattern end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name variant end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name sdf end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name simple date format end_name begin_argument_list begin_argument begin_expr begin_name pattern end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name locale end_name begin_argument_list begin_argument begin_expr begin_name language end_name end_expr end_argument begin_argument begin_expr begin_name country end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name sdf end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name simple date format end_name begin_argument_list begin_argument begin_expr begin_name pattern end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name locale end_name begin_argument_list begin_argument begin_expr begin_name language end_name end_expr end_argument begin_argument begin_expr begin_name country end_name end_expr end_argument begin_argument begin_expr begin_name variant end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if begin_if begin_condition begin_expr begin_name offset end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name calendar end_name end_type begin_name calendar end_name begin_init begin_expr begin_call begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name get instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name set time end_name end_name begin_argument_list begin_argument begin_expr begin_name date end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name field end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name date end_name begin_operator EQ end_operator begin_call begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name get time end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name time zone end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sdf end_name begin_operator DOT end_operator begin_name set time zone end_name end_name begin_argument_list begin_argument begin_expr begin_name time zone end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name tstamp end_name begin_operator DOT end_operator begin_name this end_name begin_operator DOT end_operator begin_name set property end_name end_name begin_argument_list begin_argument begin_expr begin_name property name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name sdf end_name begin_operator DOT end_operator begin_name format end_name end_name begin_argument_list begin_argument begin_expr begin_name date end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the resource name of a property file to load param resource resource on classpath end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set resource end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name resource end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert src is java resource end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name java resource end_name begin_operator RPAR end_operator begin_name src end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name set name end_name begin_argument_list begin_argument begin_expr begin_name resource end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment executes the task exception build exception if an error occurs end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name check parameters end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name reset file lists end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment scan source directories and dest directory to build up end_comment begin_comment compile lists end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name list end_name begin_init begin_expr begin_call begin_name begin_name src end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name list end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name src dir end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr begin_name begin_name list end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name src dir end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name src dir end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds end_name begin_init begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name get directory scanner end_name end_name begin_argument_list begin_argument begin_expr begin_name src dir end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name files end_name begin_init begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get included files end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name scan dir end_name begin_argument_list begin_argument begin_expr begin_name src dir end_name end_expr end_argument begin_argument begin_expr begin_name dest dir end_name begin_operator UNP end_operator begin_operator QM end_operator begin_name dest dir end_name begin_operator DP end_operator begin_name src dir end_name end_expr end_argument begin_argument begin_expr begin_name files end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name compile end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 2 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment implement vbc commands param command the command to set arguements on end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add compiler specific options end_name begin_parameter_list begin_param begin_decl begin_type begin_name net command end_name end_type begin_name command end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get remove int checks parameter end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get imports parameter end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get option explicit parameter end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get option strict parameter end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get root namespace parameter end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name command end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get option compare parameter end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the property name return the property name end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name name end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test property end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment get the fileset and its basedir end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name log end_name begin_init begin_expr begin_call begin_name get log end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the merged patterns for this files collection param p project instance return the default patternset merged with the additional sets in a new pattern set instance end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name pattern set end_name end_type begin_name merge patterns end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name get ref end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name merge patterns end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name pattern set end_name end_type begin_name ps end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name pattern set end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ps end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name default patterns end_name end_expr end_argument begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name count end_name begin_init begin_expr begin_call begin_name begin_name additional patterns end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name count end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name o end_name begin_init begin_expr begin_call begin_name begin_name additional patterns end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ps end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name pattern set end_name begin_operator RPAR end_operator begin_name o end_name end_expr end_argument begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_name ps end_name end_expr end_return end_block 
 begin_comment scan a directory for files to check for up to date ness param src dir the directory param files the files to scan for return true if the files are up to date end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name scan dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name src dir end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name files end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name source file scanner end_name end_type begin_name sfs end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name source file scanner end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file name mapper end_name end_type begin_name mapper end_name begin_init begin_expr begin_call begin_name get mapper end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name dir end_name begin_init begin_expr begin_name src dir end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name mapper element end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name dir end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name sfs end_name begin_operator DOT end_operator begin_name restrict end_name end_name begin_argument_list begin_argument begin_expr begin_name files end_name end_expr end_argument begin_argument begin_expr begin_name src dir end_name end_expr end_argument begin_argument begin_expr begin_name dir end_name end_expr end_argument begin_argument begin_expr begin_name mapper end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_name length end_name begin_operator EQT end_operator end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 12 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a present selector entry on the selector list param selector the code present selector code to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add present end_name begin_parameter_list begin_param begin_decl begin_type begin_name present selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name append selector end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a set of target files param fs the file set to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add targetfileset end_name begin_parameter_list begin_param begin_decl begin_type begin_name file set end_name end_type begin_name fs end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name create targets end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name add end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name hide missing basedir end_name begin_argument_list begin_argument begin_expr begin_name fs end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a rotate image operation to the chain param instr the rotate operation to add to the chain see org apache tools ant types optional image rotate end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add rotate end_name begin_parameter_list begin_param begin_decl begin_type begin_name rotate end_name end_type begin_name instr end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name instructions end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name instr end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment handler called on successful file validation param file processed number of files processed end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name on successful validation end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name file processed end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name file processed end_name begin_operator PLUS end_operator begin_name message files validated end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns the target object being proxied return the target proxy object end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name get proxy end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name proxy end_name end_expr end_return end_block 
 begin_comment add an lt not gt condition container param n a not condition since 1 1 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add not end_name begin_parameter_list begin_param begin_decl begin_type begin_name not end_name end_type begin_name n end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name conditions end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name n end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment are we updating an existing archive return true if updating an existing archive end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is in update mode end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name do update end_name end_expr end_return end_block 
 begin_comment sets whether default exclusions should be used or not param use default excludes true on yes when default exclusions should be used false off no when they shouldn t be used end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set defaultexcludes end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name use default excludes end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name use default excludes end_name end_name begin_operator EQ end_operator begin_name use default excludes end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test matches end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name set pattern end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name matches end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name matches end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name matches end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name set pattern end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name matches end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name matches end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name set pattern end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name matches end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name matches end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name set pattern end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name matches end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name matches end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name matches end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name matches end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name set pattern end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name matches end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name matches end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name matches end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name matches end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name set pattern end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name matches end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name matches end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return a lenient date format set to gmt time zone param pattern the pattern used for date time formatting return the configured format for this pattern end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name date format end_name end_type begin_name create date format end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name pattern end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name simple date format end_name end_type begin_name sdf end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name simple date format end_name begin_argument_list begin_argument begin_expr begin_name pattern end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name time zone end_name end_type begin_name gmt end_name begin_init begin_expr begin_call begin_name begin_name time zone end_name begin_operator DOT end_operator begin_name get time zone end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sdf end_name begin_operator DOT end_operator begin_name set time zone end_name end_name begin_argument_list begin_argument begin_expr begin_name gmt end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sdf end_name begin_operator DOT end_operator begin_name set lenient end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name sdf end_name end_expr end_return end_block 
 begin_comment convenience method used to print messages to the user if debugging messages are enabled param msg the string to print to standard output end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name log end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name msg end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name debug output end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment calculate the difference of the nested resource collections return a collection of resources end_comment begin_type begin_specifier end_specifier begin_name collection end_name end_type begin_name get collection end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name list end_name end_type begin_name rc end_name begin_init begin_expr begin_call begin_name get resource collections end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name size end_name begin_init begin_expr begin_call begin_name begin_name rc end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name size end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name size end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name size end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name hash set end_name end_type begin_name hs end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name hash set end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name array list end_name end_type begin_name al end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name rc iter end_name begin_init begin_expr begin_call begin_name begin_name rc end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name rc iter end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name r end_name begin_init begin_expr begin_call begin_name next rc end_name begin_argument_list begin_argument begin_expr begin_name rc iter end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name next end_name begin_init begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name hs end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name next end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name al end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name next end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name al end_name begin_operator DOT end_operator begin_name remove end_name end_name begin_argument_list begin_argument begin_expr begin_name next end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_for end_block end_for begin_return begin_expr begin_name al end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name close end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name string resource end_name begin_operator DOT end_operator begin_name this end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr begin_name encoding end_name begin_operator EQT end_operator begin_operator QM end_operator begin_call begin_name begin_name baos end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_call begin_name begin_name baos end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list begin_argument begin_expr begin_name encoding end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment specifies the value of the force argument optional if set to i yes i all files that exists and are writable are overwritten default i no i causes the files that are writable to be ignored this stops the pvcs command i get i to stop asking questions todo make a boolean setter param f string yes no end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set force end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name f end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name f end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name equals ignore case end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name force end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name force end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test output encoding end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment deactivate this test as imports within targets are not allowed end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name not test import in target with effect end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name expect property set end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get reference end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a prefix lines filter param prefix lines a code prefix lines code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add prefix lines end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name prefix lines end_name end_type begin_name prefix lines end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name filter readers end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name prefix lines end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment fake create an object used by introspection helper and unknown element to see that this is a predefined object param project the current project return this object end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name create end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_name this end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name expect file contains end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name contains end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name content end_name begin_init begin_expr begin_call begin_name get file string end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name contains end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name content end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name content end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name contains end_name end_expr end_argument end_argument_list end_call begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment these are errors specific to extend selector only if there are errors in the custom selector it should throw a build exception when is selected is called end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name verify settings end_name begin_parameter_list end_parameter_list begin_block begin_comment creation is done here rather than in is selected because some end_comment begin_comment containers may do a validation pass before running is selected end_comment begin_comment but we need to check for the existence of the created class end_comment begin_if begin_condition begin_expr begin_name dynselector end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name selector create end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name classname end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name classname end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set error end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name dynselector end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set error end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_name dynselector end_name begin_operator UNP end_operator begin_name extend file selector end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name param vec end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set error end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if end_else end_if end_block 
 begin_comment set the preprocessdir attribute param preprocess dir where to place processor generated source files end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set preprocess dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name preprocess dir end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name preprocess dir end_name end_name begin_operator EQ end_operator begin_name preprocess dir end_name end_expr end_expr_stmt end_block 
 begin_comment support for i seldirs i attribute param seldirs new value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set seldirs end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name seldirs end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name select directories end_name begin_operator EQ end_operator begin_name seldirs end_name end_expr end_expr_stmt end_block 
 begin_comment create a nested input code filter chain code return code filter chain code end_comment begin_type begin_specifier end_specifier begin_name filter chain end_name end_type begin_name create input filter chain end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name no children allowed end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name filter chain end_name end_type begin_name result end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name filter chain end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name input filter chains end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name result end_name end_expr end_return end_block 
 begin_comment constructor to use when the user has specified a classpath param test the test to run param halt on error whether to stop the run if an error is found param filtertrace whether to filter junit stack frames out of exceptions param halt on failure whether to stop the run if failure is found param show output whether to send output to system out err as well as formatters param log test listener events whether to print test listener events param loader the classloader to use running the test since ant 1 7 end_comment begin_specifier end_specifier begin_name j unit test runner end_name begin_parameter_list begin_param begin_decl begin_type begin_name j unit test end_name end_type begin_name test end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name halt on error end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name filtertrace end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name halt on failure end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name show output end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name log test listener events end_name end_decl end_param begin_param begin_decl begin_type begin_name class loader end_name end_type begin_name loader end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name j unit test runner end_name begin_operator DOT end_operator begin_name filtertrace end_name end_name begin_operator EQ end_operator begin_name filtertrace end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name junit test end_name end_name begin_operator EQ end_operator begin_name test end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name halt on error end_name end_name begin_operator EQ end_operator begin_name halt on error end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name halt on failure end_name end_name begin_operator EQ end_operator begin_name halt on failure end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name show output end_name end_name begin_operator EQ end_operator begin_name show output end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name log test listener events end_name end_name begin_operator EQ end_operator begin_name log test listener events end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name loader end_name end_name begin_operator EQ end_operator begin_name loader end_name end_expr end_expr_stmt end_block 
 begin_comment test filter chain and filter readers end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test filter chain end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment gets the utf 8 outpu parameter attribute of the c sharp object return the utf 8 outpu parameter value end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get utf 8 output parameter end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name utf 8 output end_name begin_operator QM end_operator begin_operator DP end_operator end_expr end_return end_block 
 begin_comment adds a reference to a classpath defined elsewhere param r a reference to a path object to be used as the depend classpath end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set classpath ref end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name create classpath end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set refid end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test text end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test get executable windows end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name java home end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name normalize end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name j end_name begin_init begin_expr begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name get jre executable end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name j end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_name j end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name j end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name is absolute end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_name j end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name j end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr begin_name java home end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name assertion failed error end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment java home is bogus end_comment begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name j end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_name j end_name begin_operator EQ end_operator begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name get jdk executable end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name j end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_name j end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name j end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name is absolute end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name java home parent end_name begin_init begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name normalize end_name end_name begin_argument_list begin_argument begin_expr begin_name java home end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_name j end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name j end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr begin_name java home parent end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_name j end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name j end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr begin_name java home end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name assertion failed error end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment java home is bogus end_comment begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name j end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name get jre executable end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name get jdk executable end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name main end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name args end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment here is a comment with an embedded tab end_comment begin_if begin_condition begin_expr begin_name mybool end_name end_expr end_condition begin_then begin_block begin_comment here is a multi line with embedded tab comment end_comment begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name mychar end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment tab end_comment end_block end_then end_if begin_comment end of if mybool end_comment end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name r 1 end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name r 1 end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block end_catch end_try end_block end_then end_if begin_if begin_condition begin_expr begin_name r 2 end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name r 2 end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block end_catch end_try end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment top level invocation for a slow scan a slow scan builds up a full list of excluded included files directories whereas a fast scan will only have full results for included files as it ignores directories which can t possibly hold any included files directories p returns immediately if a slow scan has already been completed end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name slow scan end_name begin_parameter_list end_parameter_list begin_block begin_synchronized begin_expr begin_name slow scan lock end_name end_expr begin_block begin_if begin_condition begin_expr begin_name have slow results end_name end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name slow scanning end_name end_expr end_condition begin_then begin_block begin_while begin_condition begin_expr begin_name slow scanning end_name end_expr end_condition begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name slow scan lock end_name begin_operator DOT end_operator begin_name wait end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name interrupted exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment empty end_comment end_block end_catch end_try end_block end_while begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name slow scanning end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_synchronized begin_try begin_block begin_synchronized begin_expr begin_name this end_name end_expr begin_block begin_comment set in excludes to reasonable defaults if needed end_comment begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name null includes end_name begin_init begin_expr begin_operator LPAR end_operator begin_name includes end_name begin_operator EQT end_operator begin_operator RPAR end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name includes end_name begin_operator EQ end_operator begin_name null includes end_name begin_operator QM end_operator begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr end_block begin_operator DP end_operator begin_name includes end_name end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name null excludes end_name begin_init begin_expr begin_operator LPAR end_operator begin_name excludes end_name begin_operator EQT end_operator begin_operator RPAR end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name excludes end_name begin_operator EQ end_operator begin_name null excludes end_name begin_operator QM end_operator begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr end_expr end_index end_name begin_operator DP end_operator begin_name excludes end_name end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name excl end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_call begin_name begin_name dirs excluded end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dirs excluded end_name begin_operator DOT end_operator begin_name copy into end_name end_name begin_argument_list begin_argument begin_expr begin_name excl end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name not incl end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr begin_call begin_name begin_name dirs not included end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dirs not included end_name begin_operator DOT end_operator begin_name copy into end_name end_name begin_argument_list begin_argument begin_expr begin_name not incl end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name process slow scan end_name begin_argument_list begin_argument begin_expr begin_name excl end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name process slow scan end_name begin_argument_list begin_argument begin_expr begin_name not incl end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name clear caches end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name includes end_name begin_operator EQ end_operator begin_name null includes end_name begin_operator QM end_operator begin_operator DP end_operator begin_name includes end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name excludes end_name begin_operator EQ end_operator begin_name null excludes end_name begin_operator QM end_operator begin_operator DP end_operator begin_name excludes end_name end_expr end_expr_stmt end_block end_synchronized end_block begin_finally begin_block begin_synchronized begin_expr begin_name slow scan lock end_name end_expr begin_block begin_expr_stmt begin_expr begin_name have slow results end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name slow scanning end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name slow scan lock end_name begin_operator DOT end_operator begin_name notify all end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_synchronized end_block end_finally end_try end_block 
 begin_comment a unit test for j unit end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test csc references end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns the commandline used to create a subprocess return the commandline used to create a subprocess end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get commandline end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name cmdl end_name end_expr end_return end_block 
 begin_comment returns the container target of this task return the target containing this task or code null code if this task is a top level task end_comment begin_type begin_specifier end_specifier begin_name target end_name end_type begin_name get owning target end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name target end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test prefix only end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name glob pattern mapper end_name end_type begin_name m end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name glob pattern mapper end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name set from end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name set to end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert null end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name map file name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name map file name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name result end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name result end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment try a silly case end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name set to end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name map file name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name result end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a regular expression selector entry on the selector list param selector the selector to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add contains regexp end_name begin_parameter_list begin_param begin_decl begin_type begin_name contains regexp selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name fileset end_name begin_operator DOT end_operator begin_name add contains regexp end_name end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test empty assertions end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment handle error output send it the the new project if is present otherwise call the super class param output the string to output see task handle error flush string since ant 1 5 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name handle error flush end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name output end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name callee end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name callee end_name begin_operator DOT end_operator begin_name handle error flush end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name handle error flush end_name end_name begin_argument_list begin_argument begin_expr begin_name output end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment set the files to which standard error is to be redirected param error the file to which error is to be written end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set error end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name file end_name begin_index end_index end_name end_type begin_name error end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name error end_name end_name begin_operator EQ end_operator begin_name error end_name end_expr end_expr_stmt end_block 
 begin_comment get a enumeration over the elements return an enumeration end_comment begin_type begin_specifier end_specifier begin_name enumeration end_name end_type begin_name elements end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name init all end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test nested a end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment create an ant class loader end_comment begin_specifier end_specifier begin_name ant class loader end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set parent end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the changelist number for the operation param change an existing changelist number to assign files to optional but strongly recommended end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set change end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name change end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name change end_name end_name begin_operator EQ end_operator begin_name change end_name end_expr end_expr_stmt end_block 
 begin_comment carry out the transfer throws io exception on i o errors throws j sch exception on errors detected by scp end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument begin_argument begin_expr begin_name j sch exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name directory list end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name do multiple transfer end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name local file end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name do single transfer end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name fire target started end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name fire target started end_name end_name begin_argument_list begin_argument begin_expr begin_name target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add files under web inf classes param fs the zip file set to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add classes end_name begin_parameter_list begin_param begin_decl begin_type begin_name zip file set end_name end_type begin_name fs end_name end_decl end_param end_parameter_list begin_block begin_comment we just set the prefix for this fileset and pass it up end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name set prefix end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name add fileset end_name end_name begin_argument_list begin_argument begin_expr begin_name fs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the default target of the project param default target the name of the default target for this project may be code null code indicating that there is no default target deprecated since 1 5 x use set default see set default string end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set default target end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name default target end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name default target end_name end_name begin_operator EQ end_operator begin_name default target end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test has been set end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name facade task helper end_name end_type begin_name fth end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name facade task helper end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name fth end_name begin_operator DOT end_operator begin_name has been set end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fth end_name begin_operator DOT end_operator begin_name set magic value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name fth end_name begin_operator DOT end_operator begin_name has been set end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fth end_name begin_operator DOT end_operator begin_name set magic value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name fth end_name begin_operator DOT end_operator begin_name has been set end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fth end_name begin_operator DOT end_operator begin_name set magic value end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name fth end_name begin_operator DOT end_operator begin_name has been set end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fth end_name begin_operator DOT end_operator begin_name set implementation end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name fth end_name begin_operator DOT end_operator begin_name has been set end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment flag to treat attributes as nested elements optional default false param collapse attributes if true treat attributes as nested elements end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set collapse attributes end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name collapse attributes end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name collapse attributes end_name end_name begin_operator EQ end_operator begin_name collapse attributes end_name end_expr end_expr_stmt end_block 
 begin_comment end_comment begin_specifier end_specifier begin_name echo test logger end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name set message output level end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name set output print stream end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name print stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name byte array output stream end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name set error print stream end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name print stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name byte array output stream end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test localhost end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment return the default value null if not set end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get default end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name default value end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name log flush end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name queued line end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name process line end_name end_name begin_argument_list begin_argument begin_expr begin_name queued line end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name queued line end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment add a strip java commands filter param strip java comments a code strip java comments code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add strip java comments end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name strip java comments end_name end_type begin_name strip java comments end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name filter readers end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name strip java comments end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment equivalent to flushing the stream exception io exception if there is a problem closing the stream see flush end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name close end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name flush end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name remove buffer end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set whether or not include and exclude patterns are matched in a case sensitive way param is case sensitive whether or not the file system should be regarded as a case sensitive one end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set case sensitive end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name is case sensitive end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name is case sensitive end_name end_name begin_operator EQ end_operator begin_name is case sensitive end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name build started end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment get the atleast attribute return the atleast attribute end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get at least end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name at least end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name char end_name end_type begin_name bs get u byte end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name char end_name begin_operator RPAR end_operator begin_call begin_name bs r end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment set whether to bypass timestamp comparisons for target files param b whether to bypass timestamp comparisons since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set force end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name force end_name begin_operator EQ end_operator begin_name b end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name task started end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment test for being an rmi stub param affected class class being tested param class name possible origin of the rmi stub return whether the class affected class is a rmi stub end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is rmi stub end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name affected class end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name class name end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name is stub end_name begin_argument_list begin_argument begin_expr begin_name affected class end_name end_expr end_argument begin_argument begin_expr begin_name class name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name default rmic adapter end_name begin_operator DOT end_operator begin_name rmi stub suffix end_name end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name is stub end_name begin_argument_list begin_argument begin_expr begin_name affected class end_name end_expr end_argument begin_argument begin_expr begin_name class name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name default rmic adapter end_name begin_operator DOT end_operator begin_name rmi skel suffix end_name end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name is stub end_name begin_argument_list begin_argument begin_expr begin_name affected class end_name end_expr end_argument begin_argument begin_expr begin_name class name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name wl rmic end_name begin_operator DOT end_operator begin_name rmi stub suffix end_name end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name is stub end_name begin_argument_list begin_argument begin_expr begin_name affected class end_name end_expr end_argument begin_argument begin_expr begin_name class name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name wl rmic end_name begin_operator DOT end_operator begin_name rmi skel suffix end_name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment return the class of the component name param component name the name of the component if the component is in a namespace the name is prefixed with the namespace uri and return the class if found or null if not end_comment begin_type begin_specifier end_specifier begin_name class end_name end_type begin_name get component class end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name component name end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name ant type definition end_name end_type begin_name def end_name begin_init begin_expr begin_call begin_name get definition end_name begin_argument_list begin_argument begin_expr begin_name component name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_operator LPAR end_operator begin_name def end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator DP end_operator begin_call begin_name begin_name def end_name begin_operator DOT end_operator begin_name get exposed class end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_specifier end_specifier begin_name multi reader end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource collection end_name end_type begin_name c end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name i end_name begin_operator EQ end_operator begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment convert string to index param oper the string to convert return the index end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name int end_name end_type begin_name to operation end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name oper end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name oper end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name increment oper end_name end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name oper end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name decrement oper end_name end_expr end_return end_block end_then end_if end_else end_if begin_return begin_expr begin_name equals oper end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test disable end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets path from a code list code of code string code s param path stack code list code of code string code s to be concated as a path param separator char code char code to be used as separator between names in path return code string code never code null code since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get path end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name list end_name end_type begin_name path stack end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name char end_name end_type begin_name separator char end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string buffer end_name end_type begin_name buffer end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name iterator end_name end_type begin_name iter end_name begin_init begin_expr begin_call begin_name begin_name path stack end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_while begin_condition begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name separator char end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_return begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment load links from properties files included in one or more file sets p this method is only invoked when the action attribute is set to quot recreate quot the filesets passed in are assumed to specify the names of the property files with the link information and the subdirectories in which to look for them param v the code file set code s for this task return the links to be made end_comment begin_type begin_specifier end_specifier begin_name properties end_name end_type begin_name load links end_name begin_parameter_list begin_param begin_decl begin_type begin_name vector end_name end_type begin_name v end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name properties end_name end_type begin_name final list end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name properties end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment loop through the supplied file sets end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file set end_name end_type begin_name fs end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file set end_name begin_operator RPAR end_operator begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name directory scanner end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name setup directory scanner end_name end_name begin_argument_list begin_argument begin_expr begin_name ds end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set follow symlinks end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name incs end_name begin_init begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get included files end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name dir end_name begin_init begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name get dir end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment load included files as properties files end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name j end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name j end_name begin_operator LT end_operator begin_name begin_name incs end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name j end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name inc end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name dir end_name end_expr end_argument begin_argument begin_expr begin_name begin_name incs end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name pf end_name begin_init begin_expr begin_call begin_name begin_name inc end_name begin_operator DOT end_operator begin_name get parent file end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name properties end_name end_type begin_name lnks end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name properties end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name lnks end_name begin_operator DOT end_operator begin_name load end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name buffered input stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_name inc end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name pf end_name begin_operator EQ end_operator begin_call begin_name begin_name pf end_name begin_operator DOT end_operator begin_name get canonical file end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name file not found exception end_name end_type begin_name fnfe end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name handle error end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name incs end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_continue end_continue end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name handle error end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name incs end_name begin_index begin_expr begin_name j end_name end_expr end_index end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_continue end_continue end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name begin_name lnks end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name print stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name log output stream end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment write the contents to our master list of links end_comment begin_comment this method assumes that all links are defined in end_comment begin_comment terms of absolute paths or paths relative to the end_comment begin_comment working directory end_comment begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name kitr end_name begin_init begin_expr begin_call begin_name begin_name lnks end_name begin_operator DOT end_operator begin_name key set end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name kitr end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name key end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name kitr end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name final list end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name pf end_name end_expr end_argument begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get absolute path end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name lnks end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_for end_block end_for begin_return begin_expr begin_name final list end_name end_expr end_return end_block 
 begin_comment equality method param obj an code object code value return a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name equals end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name obj end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name obj end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name obj end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name get class end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name attribute end_name end_type begin_name other end_name begin_init begin_expr begin_operator LPAR end_operator begin_name attribute end_name begin_operator RPAR end_operator begin_name obj end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name begin_name other end_name begin_operator DOT end_operator begin_name name end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name other end_name begin_operator DOT end_operator begin_name name end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_else end_if begin_if begin_condition begin_expr begin_name default value end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name begin_name other end_name begin_operator DOT end_operator begin_name default value end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name default value end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name other end_name begin_operator DOT end_operator begin_name default value end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if end_else end_if begin_return begin_expr end_expr end_return end_block 
 begin_comment sets the attribute param uri the uri of the attribute param name the localname of the attribute param q name the qualified name of the attribute param value the value of the attribute end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set dynamic attribute end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name uri end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name q name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name uri end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name set attribute ns end_name end_name begin_argument_list begin_argument begin_expr begin_name uri end_name end_expr end_argument begin_argument begin_expr begin_name q name end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment creates a stream that will eventually write to the file with the given name and optionally append to instead of replacing it param name the filename param append if true append rather than replace end_comment begin_specifier end_specifier begin_name lazy file output stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name append end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name append end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment called to validate that the tool parameters have been configured throws build exception if there is an error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name validate configured end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name validate configured end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name toplink descriptor end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment read from the telnet session until the string we are waiting for is found or the timeout has been reached param s the string to wait on param timeout the maximum number of seconds to wait end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name wait for string end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param begin_param begin_decl begin_type begin_name integer end_name end_type begin_name timeout end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name is end_name begin_init begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name sb end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name timeout end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name timeout end_name begin_operator DOT end_operator begin_name int value end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_while begin_condition begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name char end_name begin_operator RPAR end_operator begin_call begin_name begin_name is end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name calendar end_name end_type begin_name end time end_name begin_init begin_expr begin_call begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name get instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name end time end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name second end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name timeout end_name begin_operator DOT end_operator begin_name int value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_block begin_while begin_condition begin_expr begin_call begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name get instance end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name before end_name begin_argument_list begin_argument begin_expr begin_name end time end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name is end_name begin_operator DOT end_operator begin_name available end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name sleep end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_if begin_condition begin_expr begin_call begin_name begin_name is end_name begin_operator DOT end_operator begin_name available end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name s end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name char end_name begin_operator RPAR end_operator begin_call begin_name begin_name is end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_name be end_name end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment enforce string immutability param s the new name value for this string resource end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name get name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name immutable resource exception end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test bugzilla report 14619 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name set pattern end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name v end_name begin_init begin_expr begin_call begin_name begin_name reg end_name begin_operator DOT end_operator begin_name get groups end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name target finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name action performed end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the execute object param to execute the command line to use param streamhandler the stream handler to use return the execute object since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name execute end_name end_type begin_name get execute end_name begin_parameter_list begin_param begin_decl begin_type begin_name commandline end_name end_type begin_name to execute end_name end_decl end_param begin_param begin_decl begin_type begin_name execute stream handler end_name end_type begin_name streamhandler end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name execute end_name end_type begin_name exe end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name execute end_name begin_argument_list begin_argument begin_expr begin_name streamhandler end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set ant run end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name top dir end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name top dir end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set working directory end_name end_name begin_argument_list begin_argument begin_expr begin_name top dir end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exe end_name begin_operator DOT end_operator begin_name set commandline end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name to execute end_name begin_operator DOT end_operator begin_name get commandline end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name exe end_name end_expr end_return end_block 
 begin_comment writes bytes to zip entry param b the byte array to write param offset the start position to write from param length the number of bytes to write throws io exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name b end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name offset end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name length end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get method end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_name deflated end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name length end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name def end_name begin_operator DOT end_operator begin_name finished end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name def end_name begin_operator DOT end_operator begin_name set input end_name end_name begin_argument_list begin_argument begin_expr begin_name b end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name length end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_while begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name def end_name begin_operator DOT end_operator begin_name needs input end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name deflate end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block end_then end_if end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name write out end_name begin_argument_list begin_argument begin_expr begin_name b end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name length end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name written end_name begin_operator UNP end_operator begin_name length end_name end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name crc end_name begin_operator DOT end_operator begin_name update end_name end_name begin_argument_list begin_argument begin_expr begin_name b end_name end_expr end_argument begin_argument begin_expr begin_name offset end_name end_expr end_argument begin_argument begin_expr begin_name length end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment default constructor end_comment begin_specifier end_specifier begin_name and selector end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment ignore exception end_comment begin_type begin_specifier end_specifier begin_name output stream end_name end_type begin_name fold files end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name file end_name begin_index end_index end_name end_type begin_name file end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name log head end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name loglevel end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name output stream end_name end_type begin_name result end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name lazy file output stream end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name append end_name end_expr end_argument begin_argument begin_expr begin_name create empty files end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name managing task end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_name log head end_name begin_operator PLUS end_operator begin_name begin_name file end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name loglevel end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name char end_name begin_index end_index end_type begin_name c end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name char end_name begin_index begin_expr begin_call begin_name begin_name log head end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name arrays end_name begin_operator DOT end_operator begin_name fill end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name indent end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name output stream end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name tee output stream end_name begin_argument_list begin_argument begin_expr begin_name output stream end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name lazy file output stream end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name append end_name end_expr end_argument begin_argument begin_expr begin_name create empty files end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name managing task end_name begin_operator DOT end_operator begin_name log end_name end_name begin_argument_list begin_argument begin_expr begin_name indent end_name begin_operator PLUS end_operator begin_name begin_name file end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name loglevel end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_name result end_name end_expr end_return end_block 
 begin_comment constructor for the parallel test object param name name of the test end_comment begin_specifier end_specifier begin_name parallel test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment optional classpath to wl 6 0 weblogic 6 0 will give a warning if the home and remote interfaces of a bean are on the system classpath used to run weblogic ejbc in that case the standard weblogic classes should be set with this attribute or equivalent nested element and the home and remote interfaces located with the standard classpath attribute param wl classpath the path to be used end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set wl classpath end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name wl classpath end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name wl classpath end_name end_name begin_operator EQ end_operator begin_name wl classpath end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test get with selector retryable 2 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name add task definition end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name two failure ftp end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name bx end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment run through the test cases of expansion end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test property expansion end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert expands to end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert expands to end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert expands to end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert expands to end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name set property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert expands to end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert expands to end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert expands to end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert expands to end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert expands to end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert expands to end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a different selector entry on the selector list param selector the code different selector code to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add different end_name begin_parameter_list begin_param begin_decl begin_type begin_name different selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name append selector end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add a timeout observer param to the timeout observer to add end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add timeout observer end_name begin_parameter_list begin_param begin_decl begin_type begin_name timeout observer end_name end_type begin_name to end_name end_decl end_param end_parameter_list begin_block begin_comment no need to synchronize as vector is always synchronized end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name observers end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name to end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment this routine is actually checking all the include patterns in order to avoid scanning everything under base dir since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name check include patterns end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name map end_name end_type begin_name newroots end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name hash map end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment put in the newroots map the include patterns without end_comment begin_comment wildcard tokens end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name includes end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name is absolute path end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name includes end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment skip abs paths not under basedir if set end_comment begin_if begin_condition begin_expr begin_name basedir end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name selector utils end_name begin_operator DOT end_operator begin_name match pattern start end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name includes end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name basedir end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name is case sensitive end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_name basedir end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment skip non abs paths if basedir null end_comment begin_continue end_continue end_block end_then end_if end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name newroots end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name selector utils end_name begin_operator DOT end_operator begin_name rtrim wildcard tokens end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name includes end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name includes end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_if begin_condition begin_expr begin_call begin_name begin_name newroots end_name begin_operator DOT end_operator begin_name contains key end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_name basedir end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment we are going to scan everything anyway end_comment begin_expr_stmt begin_expr begin_call begin_name scandir end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment only scan directories that can include matched files or end_comment begin_comment directories end_comment begin_decl_stmt begin_decl begin_type begin_name iterator end_name end_type begin_name it end_name begin_init begin_expr begin_call begin_name begin_name newroots end_name begin_operator DOT end_operator begin_name entry set end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name canon base end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name basedir end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_name canon base end_name begin_operator EQ end_operator begin_call begin_name begin_name basedir end_name begin_operator DOT end_operator begin_name get canonical file end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name ex end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_then end_if begin_while begin_condition begin_expr begin_call begin_name begin_name it end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name map end_name begin_operator DOT end_operator begin_name entry end_name end_name end_type begin_name entry end_name begin_init begin_expr begin_operator LPAR end_operator begin_name begin_name map end_name begin_operator DOT end_operator begin_name entry end_name end_name begin_operator RPAR end_operator begin_call begin_name begin_name it end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name currentelement end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get key end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name basedir end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name is absolute path end_name end_name begin_argument_list begin_argument begin_expr begin_name currentelement end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name originalpattern end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name myfile end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr begin_name currentelement end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name myfile end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment may be on a case insensitive file system we want end_comment begin_comment the results to show what s really on the disk so end_comment begin_comment we need to double check end_comment begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name path end_name begin_init begin_expr begin_operator LPAR end_operator begin_name basedir end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_call begin_name begin_name myfile end_name begin_operator DOT end_operator begin_name get canonical path end_name end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name remove leading path end_name end_name begin_argument_list begin_argument begin_expr begin_name canon base end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name myfile end_name begin_operator DOT end_operator begin_name get canonical file end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name path end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name currentelement end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_name on vms end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name myfile end_name begin_operator EQ end_operator begin_call begin_name find file end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr begin_name currentelement end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name myfile end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name basedir end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name currentelement end_name begin_operator EQ end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name remove leading path end_name end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr begin_name myfile end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name ex end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name myfile end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name myfile end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name is case sensitive end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_call begin_name find file end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr begin_name currentelement end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name f end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment adapt currentelement to the case we ve end_comment begin_comment actually found end_comment begin_expr_stmt begin_expr begin_name currentelement end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name basedir end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name remove leading path end_name end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name myfile end_name begin_operator EQ end_operator begin_name f end_name end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_if begin_condition begin_expr begin_name myfile end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name myfile end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name follow symlinks end_name begin_operator UNP end_operator begin_call begin_name is symlink end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr begin_name currentelement end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name myfile end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name is included end_name begin_argument_list begin_argument begin_expr begin_name currentelement end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name currentelement end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name account for included dir end_name begin_argument_list begin_argument begin_expr begin_name currentelement end_name end_expr end_argument begin_argument begin_expr begin_name myfile end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name currentelement end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name currentelement end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name currentelement end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name currentelement end_name begin_operator EQ end_operator begin_name currentelement end_name begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name scandir end_name begin_argument_list begin_argument begin_expr begin_name myfile end_name end_expr end_argument begin_argument begin_expr begin_name currentelement end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name included end_name begin_init begin_expr begin_call begin_name is case sensitive end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_call begin_name begin_name originalpattern end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name currentelement end_name end_expr end_argument end_argument_list end_call begin_operator DP end_operator begin_call begin_name begin_name originalpattern end_name begin_operator DOT end_operator begin_name equals ignore case end_name end_name begin_argument_list begin_argument begin_expr begin_name currentelement end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name included end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name account for included file end_name begin_argument_list begin_argument begin_expr begin_name currentelement end_name end_expr end_argument begin_argument begin_expr begin_name myfile end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if end_block end_then end_if end_block end_while end_block end_else end_if end_block 
 begin_comment format a date time into a specific pattern param date the date to format expressed in milliseconds param pattern the pattern to use to format the date return the formatted date end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name format end_name begin_parameter_list begin_param begin_decl begin_type begin_name date end_name end_type begin_name date end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name pattern end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name date format end_name end_type begin_name df end_name begin_init begin_expr begin_call begin_name create date format end_name begin_argument_list begin_argument begin_expr begin_name pattern end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_call begin_name begin_name df end_name begin_operator DOT end_operator begin_name format end_name end_name begin_argument_list begin_argument begin_expr begin_name date end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment validation routine throws build exception if anything is invalid end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name validate end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name zip file end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name zip file end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name get src resource end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment create a boot classpath param p the project to use to create the path return a path to be configured since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name path end_name end_type begin_name create bootclasspath end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name bootclasspath end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name bootclasspath end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name bootclasspath end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test find jar name no classpath end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name jar end_name begin_operator DOT end_operator begin_name find jar name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name jar end_name begin_operator DOT end_operator begin_name find jar name end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment handles the end of an element any required clean up is performed by the finished method and then the original handler is restored to the parser param name the name of the element which is ending will not be code null code exception sax exception in case of error not thrown in this implementation end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name end element end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name sax exception end_name end_expr end_argument end_throws begin_block begin_comment let parent resume handling sax events end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name helper impl end_name begin_operator DOT end_operator begin_name parser end_name begin_operator DOT end_operator begin_name set document handler end_name end_name begin_argument_list begin_argument begin_expr begin_name parent handler end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment creates a new watchdog with a given timeout param timeout the timeout for the process in milliseconds it must be greater than 0 end_comment begin_specifier end_specifier begin_name execute watchdog end_name begin_parameter_list begin_param begin_decl begin_type begin_name long end_name end_type begin_name timeout end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name watchdog end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name watchdog end_name begin_argument_list begin_argument begin_expr begin_name timeout end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name watchdog end_name begin_operator DOT end_operator begin_name add timeout observer end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment unify the contained resources return a collection of resources end_comment begin_type begin_specifier end_specifier begin_name collection end_name end_type begin_name get collection end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get collection end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment parses the ejb descriptors and returns a list of ej bs which may need to be compiled return an array of objects which describe the ej bs to be processed throws io exception if the parser encounters a problem reading the xml files throws sax exception if the parser encounters a problem processing the xml descriptor it may wrap another exception end_comment begin_type begin_specifier end_specifier begin_name ejb info end_name begin_index end_index end_type begin_name get ejbs end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument begin_argument begin_expr begin_name sax exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name ejb info end_name begin_index end_index end_type begin_name ejbs end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment the ejb information is gathered from the standard xml ejb descriptor and the i as specific xml ejb descriptor using a sax parser end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name parser end_name begin_operator DOT end_operator begin_name parse end_name end_name begin_argument_list begin_argument begin_expr begin_name std descriptor end_name end_expr end_argument begin_argument begin_expr begin_name handler end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name parser end_name begin_operator DOT end_operator begin_name parse end_name end_name begin_argument_list begin_argument begin_expr begin_name ias descriptor end_name end_expr end_argument begin_argument begin_expr begin_name handler end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name ejbs end_name begin_operator EQ end_operator begin_call begin_name begin_name handler end_name begin_operator DOT end_operator begin_name get ejbs end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name ejbs end_name end_expr end_return end_block 
 begin_comment add a name entry on the include files list return an name entry object to be configured end_comment begin_type begin_specifier end_specifier begin_name begin_name pattern set end_name begin_operator DOT end_operator begin_name name entry end_name end_name end_type begin_name create excludes file end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name used matching task end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name create excludes file end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment get log file return string containing the path to the log file end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get log end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m log end_name end_expr end_return end_block 
 begin_type begin_name void end_name end_type begin_name store end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name child end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name invocation target exception end_name end_expr end_argument begin_argument begin_expr begin_name illegal access exception end_name end_expr end_argument begin_argument begin_expr begin_name instantiation exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name get method end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name ends with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name get method end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name invoke end_name begin_argument_list begin_argument begin_expr begin_name parent end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_name real object end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment a unit test for j unit end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test csc end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set whether files copied from directory trees will be flattened into a single directory if there are multiple files with the same name in the source directory tree only the first file will be copied into the flattened directory unless the forceoverwrite attribute is true param flatten if true flatten the destination directory default is false end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set flatten end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name flatten end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name flatten end_name end_name begin_operator EQ end_operator begin_name flatten end_name end_expr end_expr_stmt end_block 
 begin_comment prints the stack trace for this exception and any nested exception to code system err code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name print stack trace end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name print stack trace end_name begin_argument_list begin_argument begin_expr begin_name begin_name system end_name begin_operator DOT end_operator begin_name err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment cleans up any resources held by this recorder entry at the end of a subbuild if it has been created for the subbuild s project instance param event the build finished event since ant 1 6 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name sub build finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name event end_name begin_operator DOT end_operator begin_name get project end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_name project end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name cleanup end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment called to validate that the tool parameters have been configured throws build exception if the deployment tool s configuration isn t valid since ant 1 6 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name validate configured end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block end_block 
 begin_comment the groupname for the tar entry optional default this is not the same as the gid param group name the group name string end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set group end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name group name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name check tar file set attributes allowed end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name group name set end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name group name end_name end_name begin_operator EQ end_operator begin_name group name end_name end_expr end_expr_stmt end_block 
 begin_comment override of parent validates configuration before initializing the output stream param z out the zip output stream throws io exception on output error throws build exception if invalid configuration end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name init zip output stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name zip output stream end_name end_type begin_name z out end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name init zip output stream end_name end_name begin_argument_list begin_argument begin_expr begin_name z out end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name build finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment we are forced to fork antlr since there is a call end_comment begin_comment to system exit and there is nothing we can do end_comment begin_comment right now to avoid this s ba end_comment begin_comment i m not removing this method to keep backward compatibility end_comment begin_comment ant attribute ignore true param s a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set fork end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_comment this fork s end_comment end_block 
 begin_comment test that the logo gif file has not been corrupted throws io exception end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name assert logo uncorrupted end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name content equals end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name resolve file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 6 end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name timer end_name end_type begin_name timer end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name timer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name timer end_name begin_operator DOT end_operator begin_name stop end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name trace end_name end_expr end_condition begin_then begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name timer end_name begin_operator DOT end_operator begin_name time end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_then end_if begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name timer end_name begin_operator DOT end_operator begin_name time end_name end_name begin_argument_list end_argument_list end_call begin_operator LT end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment construct a new file resource iterator over the specified filenames relative to the specified base directory param f the base directory of this instance param s the string of filenames end_comment begin_specifier end_specifier begin_name file resource iterator end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name f end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add files end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the path to use by reference param r a reference to an existing path end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set path ref end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name create path end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set refid end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name mock build listener end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name project end_name end_name begin_operator EQ end_operator begin_name project end_name end_expr end_expr_stmt end_block 
 begin_comment name of resource file to include param file name path to the file can be relative absolute whatever end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set resource file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name file name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name resource file end_name begin_operator EQ end_operator begin_name file name end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name object end_name begin_index end_index end_type begin_name create four end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment send a quot subbuild started quot event to the build listeners for this project since ant 1 6 2 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name fire sub build started end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name build event end_name end_type begin_name event end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name build event end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name iterator end_name end_type begin_name iter end_name begin_init begin_expr begin_call begin_name begin_name listeners end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name listener end_name begin_init begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name listener end_name begin_operator UNP end_operator begin_name sub build listener end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name sub build listener end_name begin_operator RPAR end_operator begin_name listener end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name sub build started end_name begin_argument_list begin_argument begin_expr begin_name event end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_while end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test uri end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name exec p 4 add end_name begin_parameter_list begin_param begin_decl begin_type begin_name string buffer end_name end_type begin_name list end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name p 4 cmd opts end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name add cmd end_name begin_operator PLUS end_operator begin_name list end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name exec p 4 command end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name p 4 cmd opts end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name add cmd end_name begin_operator PLUS end_operator begin_name list end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name simple p 4 output handler end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the property in the project to the value if the task was give a file resource or env attribute here is where it is loaded throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name illegal state exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name value end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name ref end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_name url end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name file end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name resource end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name env end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_else end_if begin_if begin_condition begin_expr begin_name url end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name file end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name resource end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name prefix end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name name end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name value end_name begin_operator UNP end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name add property end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name file end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name load file end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name url end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name load url end_name begin_argument_list begin_argument begin_expr begin_name url end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name resource end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name load resource end_name begin_argument_list begin_argument begin_expr begin_name resource end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name env end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name load environment end_name begin_argument_list begin_argument begin_expr begin_name env end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name name end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name ref end_name begin_operator UNP end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name add property end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name ref end_name begin_operator DOT end_operator begin_name get referenced object end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name be end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name fallback end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name add property end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name ref end_name begin_operator DOT end_operator begin_name get referenced object end_name end_name begin_argument_list begin_argument begin_expr begin_name fallback end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_throw begin_expr begin_name be end_name end_expr end_throw end_block end_else end_if end_block end_catch end_try end_block end_then end_if end_block 
 begin_comment method used to encapsulate the writing of the jar file iterates over the filenames java io files in the hashtable stored on the instance variable ejb files param base name the base name param jar file the jar file to populate param files the hash table of files to write param public id the id to use throws build exception if there is a problem end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write jar end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name base name end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name jar file end_name end_decl end_param begin_param begin_decl begin_type begin_name hashtable end_name end_type begin_name files end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name public id end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_comment need to create a generic jar first end_comment begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name generic jar file end_name begin_init begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name get vendor output jar file end_name end_name begin_argument_list begin_argument begin_expr begin_name base name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name write jar end_name end_name begin_argument_list begin_argument begin_expr begin_name base name end_name end_expr end_argument begin_argument begin_expr begin_name generic jar file end_name end_expr end_argument begin_argument begin_expr begin_name files end_name end_expr end_argument begin_argument begin_expr begin_name public id end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name always rebuild end_name begin_operator UNP end_operator begin_call begin_name is rebuild required end_name begin_argument_list begin_argument begin_expr begin_name generic jar file end_name end_expr end_argument begin_argument begin_expr begin_name jar file end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name build weblogic jar end_name begin_argument_list begin_argument begin_expr begin_name generic jar file end_name end_expr end_argument begin_argument begin_expr begin_name jar file end_name end_expr end_argument begin_argument begin_expr begin_name public id end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name keep generic end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name generic jar file end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name generic jar file end_name begin_operator DOT end_operator begin_name delete end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name scan dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name from end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name to end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name files end_name end_decl end_param end_parameter_list begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name filename end_name begin_init begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name src file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name from end_name end_expr end_argument begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name dest file end_name end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name flatten end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name dest file end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name to end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name dest file end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name to end_name end_expr end_argument begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_name force overwrite end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name src file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_call begin_name begin_name dest file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name filecopy list end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name src file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name dest file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for end_block 
 begin_comment return the values as an array of strings end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get values end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr begin_name file end_name end_expr begin_operator UNP end_operator begin_expr begin_name dir end_name end_expr end_block end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test parent level 1 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert property equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test clear works end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment check to see whether any data type we hold references to is included in the stack which holds all data type instances that directly or indirectly reference this instance including this instance itself p if one is included throw a build exception created by link circular reference circular reference p p this implementation is appropriate only for a data type that cannot hold other data types as children p p the general contract of this method is that it shouldn t do anything if link checked code checked code is true and set it to true on exit p param stack the stack of references to check param project the project to use to dereference the references throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name die on circular reference end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name stack end_name end_type begin_name stack end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name checked end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name o end_name begin_init begin_expr begin_call begin_name begin_name ref end_name begin_operator DOT end_operator begin_name get referenced object end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name o end_name begin_operator UNP end_operator begin_name data type end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name identity stack end_name end_type begin_name id end_name begin_init begin_expr begin_call begin_name begin_name identity stack end_name begin_operator DOT end_operator begin_name get instance end_name end_name begin_argument_list begin_argument begin_expr begin_name stack end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name id end_name begin_operator DOT end_operator begin_name contains end_name end_name begin_argument_list begin_argument begin_expr begin_name o end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name circular reference end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name id end_name begin_operator DOT end_operator begin_name push end_name end_name begin_argument_list begin_argument begin_expr begin_name o end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name data type end_name begin_operator RPAR end_operator begin_name o end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name die on circular reference end_name begin_argument_list begin_argument begin_expr begin_name id end_name end_expr end_argument begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name id end_name begin_operator DOT end_operator begin_name pop end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_expr_stmt begin_expr begin_name checked end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block 
 begin_comment validates the passed in attributes p the rules are ol li if action is deploy or update the application and source attributes must be supplied li if action is delete or undeploy the application attribute must be supplied exception org apache tools ant build exception if the attributes are invalid or incomplete end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name validate attributes end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name validate attributes end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name action end_name begin_init begin_expr begin_call begin_name get task end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get action end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment check that the password has been set end_comment begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_call begin_name get password end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment check for missing application on deploy update end_comment begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name action end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name action deploy end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name action end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name action update end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_name application end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name action end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment check for missing source on deploy update end_comment begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name action end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name action deploy end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name action end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name action update end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_call begin_name get task end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get source end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name action end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_comment check for missing application on delete undeploy end_comment begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name action end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name action delete end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name action end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name action undeploy end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_name application end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name action end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_comment sets rmic attributes param attributes the rmic attributes end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set rmic end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name rmic end_name end_type begin_name attributes end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name attributes end_name end_name begin_operator EQ end_operator begin_name attributes end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name mapper end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name rmic file name mapper end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment param rhs the object to check for equality see java lang object equals return true if the key and values are the same end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name equals end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name rhs end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name rhs end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name rhs end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name get class end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name rhs end_name begin_operator EQT end_operator begin_name this end_name end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name attribute end_name end_type begin_name rhs attribute end_name begin_init begin_expr begin_operator LPAR end_operator begin_name attribute end_name begin_operator RPAR end_operator begin_name rhs end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name lhs key end_name begin_init begin_expr begin_call begin_name get key end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name rhs key end_name begin_init begin_expr begin_call begin_name begin_name rhs attribute end_name begin_operator DOT end_operator begin_name get key end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name lhs key end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name rhs key end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name lhs key end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name rhs key end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name lhs key end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name rhs key end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name values end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name rhs attribute end_name begin_operator DOT end_operator begin_name values end_name end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test blank target end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the j unit setup method end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr begin_name test build file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name has event message end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name event prefix end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name get full log end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr begin_name event prefix end_name end_expr end_argument end_argument_list end_call begin_operator GE end_operator end_expr end_return end_block 
 begin_specifier end_specifier begin_name immutable test end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment ignore end_comment begin_comment test an example that is similar to the one given in the api if this testcase takes 90 s to complete it is very likely that the two threads are blocked waiting for each other and thread join timed out end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test api example end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name server thread end_name end_type begin_name test mail server end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name server thread end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name thread end_name end_type begin_name server end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name thread end_name begin_argument_list begin_argument begin_expr begin_name test mail server end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name server end_name begin_operator DOT end_operator begin_name start end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name client thread end_name end_type begin_name test mail client end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name client thread end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test mail client end_name begin_operator DOT end_operator begin_name from end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test mail client end_name begin_operator DOT end_operator begin_name to end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test mail client end_name begin_operator DOT end_operator begin_name cc end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test mail client end_name begin_operator DOT end_operator begin_name cc end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test mail client end_name begin_operator DOT end_operator begin_name bcc end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test mail client end_name begin_operator DOT end_operator begin_name set subject end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test mail client end_name begin_operator DOT end_operator begin_name set message end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name thread end_name end_type begin_name client end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name thread end_name begin_argument_list begin_argument begin_expr begin_name test mail client end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name client end_name begin_operator DOT end_operator begin_name start end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name server end_name begin_operator DOT end_operator begin_name join end_name end_name begin_argument_list begin_argument begin_expr begin_operator STAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment 60 s end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name client end_name begin_operator DOT end_operator begin_name join end_name end_name begin_argument_list begin_argument begin_expr begin_operator STAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment a further 30 s end_comment end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name interrupted exception end_name end_type begin_name ie end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name ie end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name test mail server end_name begin_operator DOT end_operator begin_name get result end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name expected result end_name begin_init begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name local end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name local end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name local end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name icounter end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name icounter end_name begin_operator LT end_operator begin_call begin_name begin_name expected result end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name icounter end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name icounter end_name begin_operator LT end_operator begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name expected result end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name icounter end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name icounter end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name icounter end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name expected result end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name icounter end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr begin_name icounter end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block end_for begin_if begin_condition begin_expr begin_call begin_name begin_name expected result end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name expected result end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name expected result end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator LT end_operator begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name expected result end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name expected result end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name expected result end_name end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment order of headers cannot be guaranteed end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name test mail client end_name begin_operator DOT end_operator begin_name is failed end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name test mail client end_name begin_operator DOT end_operator begin_name get fail message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set project end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name project end_name end_name begin_operator EQ end_operator begin_name project end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set sixteen end_name begin_parameter_list begin_param begin_decl begin_type begin_name character end_name end_type begin_name c end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name char value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get a string representation of the regexp pattern return the pattern throws build exception on error end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get pattern end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name pattern end_name end_expr end_return end_block 
 begin_comment sets the creator of the element to be configured used to store the element in the parent param creator the creator object end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set creator end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name introspection helper end_name begin_operator DOT end_operator begin_name creator end_name end_name end_type begin_name creator end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name creator end_name end_name begin_operator EQ end_operator begin_name creator end_name end_expr end_expr_stmt end_block 
 begin_comment returns the exception that was thrown if any this field will only be set for message logged task finished target finished and build finished events return the exception associated with this exception or code null code if no exception has been set see build listener message logged build event see build listener task finished build event see build listener target finished build event see build listener build finished build event end_comment begin_type begin_specifier end_specifier begin_name throwable end_name end_type begin_name get exception end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name exception end_name end_expr end_return end_block 
 begin_comment add a new fileset containing the xml results to aggregate param fs the new fileset of xml results end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add file set end_name begin_parameter_list begin_param begin_decl begin_type begin_name file set end_name end_type begin_name fs end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name filesets end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name fs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment tests an exit condition end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test exit end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name perms end_name begin_operator DOT end_operator begin_name set security manager end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name exit end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exit exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get status end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name perms end_name begin_operator DOT end_operator begin_name restore security manager end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test filesmatch different onemissing end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect property unset end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment public void test direct throws exception property file pf new property file pf set project project pf set file new file system get property root test props file path property file entry entry pf create entry entry set key date entry set value 123 property file entry type type new property file entry type type set value date entry set type type entry set pattern yyyy mm dd property file entry operation operation new property file entry operation operation set value pf execute properties props get test properties assert equals yeehaw props get property date end_comment begin_type begin_specifier end_specifier begin_name properties end_name end_type begin_name get test properties end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name properties end_name end_type begin_name test props end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name properties end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file input stream end_name end_type begin_name props file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file input stream end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name test props file path end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test props end_name begin_operator DOT end_operator begin_name load end_name end_name begin_argument_list begin_argument begin_expr begin_name props file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name props file end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name test props end_name end_expr end_return end_block 
 begin_comment sets the unless attribute this attribute and the if attribute are used to validate the name based in the existence of the property param cond a property name if this property is present the name is invalid end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set unless end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name cond end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name unless cond end_name begin_operator EQ end_operator begin_name cond end_name end_expr end_expr_stmt end_block 
 begin_comment set whether the specified property will be set if the result is the empty string param setonempty true or false since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set setonempty end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name setonempty end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name setonempty end_name end_name begin_operator EQ end_operator begin_name setonempty end_name end_expr end_expr_stmt end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get values end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_return end_block 
 begin_comment set the buildpath to be used to find sub projects param s an ant path object containing the buildpath end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set buildpath end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name get buildpath end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment configures the project with the contents of the specified xml file param project the project to configure must not be code null code param build file an xml file giving the project s configuration must not be code null code exception build exception if the configuration is invalid or cannot be read end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name configure project end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param begin_param begin_decl begin_type begin_name file end_name end_type begin_name build file end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name project helper end_name end_type begin_name helper end_name begin_init begin_expr begin_call begin_name begin_name project helper end_name begin_operator DOT end_operator begin_name get project helper end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr begin_name projecthelper reference end_name end_expr end_argument begin_argument begin_expr begin_name helper end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name parse end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr begin_name build file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment should the nowarn option be used return true if the nowarn option should be used end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get nowarn end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name nowarn end_name end_expr end_return end_block 
 begin_comment optional methods end_comment begin_comment you can override those methods if you want to optimize or end_comment begin_comment do advanced things like support a special syntax end_comment begin_comment the methods do not chain you should use them when embedding ant end_comment begin_comment by replacing the main helper end_comment begin_comment parses a string containing code xxx code style property references into two lists the first list is a collection of text fragments while the other is a set of string property names code null code entries in the first list indicate a property reference from the second list it can be overridden with a more efficient or customized version param value text to parse must not be code null code param fragments list to add text fragments to must not be code null code param property refs list to add property names to must not be code null code exception build exception if the string contains an opening code code without a closing code code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name parse property string end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param begin_param begin_decl begin_type begin_name vector end_name end_type begin_name fragments end_name end_decl end_param begin_param begin_decl begin_type begin_name vector end_name end_type begin_name property refs end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name parse property string default end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument begin_argument begin_expr begin_name fragments end_name end_expr end_argument begin_argument begin_expr begin_name property refs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test resource collection end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name io exception end_name end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name test logo extraction end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment factory method to create a property processor users can provide their own or replace it using ant property helper reference user tasks can also add themselves to the chain and provide dynamic properties param project the project fro which the property helper is required return the project s property helper end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_specifier end_specifier begin_name property helper end_name end_type begin_name get property helper end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name project end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name property helper end_name end_type begin_name helper end_name begin_init begin_expr begin_operator LPAR end_operator begin_name property helper end_name begin_operator RPAR end_operator begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get reference end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name refid property helper end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name helper end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_name helper end_name end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name helper end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name property helper end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name helper end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name add reference end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name magic names end_name begin_operator DOT end_operator begin_name refid property helper end_name end_name end_expr end_argument begin_argument begin_expr begin_name helper end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name helper end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test circular reference end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name build exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the number of resources to be included param i the count as code int count end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set count end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name i end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name count end_name begin_operator EQ end_operator begin_name i end_name end_expr end_expr_stmt end_block 
 begin_comment get the error stream for the redirector return the redirector s error stream or null if no output has been configured end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name output stream end_name end_type begin_name get error stream end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name error stream end_name end_expr end_return end_block 
 begin_comment get the assigment string this is not ready for insertion into a property file without following the escaping rules of the properties class return a string of the form key value throws build exception if key or value are unassigned end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get content end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name validate end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name sb end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name key end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment validates url end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name validate end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator EQT end_operator begin_name url end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name message end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_operator EQT end_operator begin_name destdir end_name begin_operator UNP end_operator begin_operator EQT end_operator begin_name destfile end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name message end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name destdir end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name destfile end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name message end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test read bad file fail end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment create a new scanner return the created scanner end_comment begin_type begin_specifier end_specifier begin_name archive scanner end_name end_type begin_name new archive scanner end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name tar scanner end_name end_type begin_name zs end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name tar scanner end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_name zs end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment g get the target type or null for no argument needed return the target type parameter value end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get target type parameter end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name not empty end_name begin_argument_list begin_argument begin_expr begin_name target type end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name target type end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name target type end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr end_expr end_return end_block end_else end_if end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test test count fired end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr begin_name pass test target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name has event message end_name begin_argument_list begin_argument begin_expr begin_name begin_name j unit task end_name begin_operator DOT end_operator begin_name testlistener prefix end_name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment delete a directory if empty from the remote host param ftp ftp client param dirname directory to delete throws io exception in unknown circumstances throws build exception if skip failed transfers is set to false and the deletion could not be done end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name rm dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name ftp client end_name end_type begin_name ftp end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name dirname end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name verbose end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name dirname end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name remove directory end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr begin_name dirname end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name s end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name get reply string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name skip failed transfers end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name skipped end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name dirname end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name server end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name transferred end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test copy no remove selectors end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name d end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert file is present end_name begin_argument_list begin_argument begin_expr begin_name d end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name f end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert file is present end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name get full log end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the extension of filenames to compile return the string extension of files to compile end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get file extension end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment when using this as a custom selector this method will be called it translates each parameter into the appropriate set xxx call param parameters the complete set of parameters for this selector end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set parameters end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name parameter end_name begin_index end_index end_name end_type begin_name parameters end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set parameters end_name end_name begin_argument_list begin_argument begin_expr begin_name parameters end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name parameters end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name parameters end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name paramname end_name begin_init begin_expr begin_name begin_name parameters end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name min key end_name begin_operator DOT end_operator begin_name equals ignore case end_name end_name begin_argument_list begin_argument begin_expr begin_name paramname end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name set min end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name integer end_name begin_operator DOT end_operator begin_name parse int end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name parameters end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name number format exception end_name end_type begin_name nfe 1 end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set error end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name parameters end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name max key end_name begin_operator DOT end_operator begin_name equals ignore case end_name end_name begin_argument_list begin_argument begin_expr begin_name paramname end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name set max end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name integer end_name begin_operator DOT end_operator begin_name parse int end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name parameters end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name number format exception end_name end_type begin_name nfe 1 end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set error end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name parameters end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name set error end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name paramname end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if end_block end_for end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no pattern at all end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name glob pattern mapper end_name end_type begin_name m end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name glob pattern mapper end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name set from end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name set to end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert null end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name map file name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name map file name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert not null end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name result end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name result end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets an instance of the required driver uses the ant class loader and the optionally the provided classpath return driver throws build exception end_comment begin_type begin_specifier end_specifier begin_name driver end_name end_type begin_name get driver end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name driver end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name driver end_name end_type begin_name driver instance end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name dc end_name end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name classpath end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment check first that it is not already loaded otherwise end_comment begin_comment consecutive runs seems to end into an out of memory error end_comment begin_comment or it fails when there is a native library to load end_comment begin_comment several times end_comment begin_comment this is far from being perfect but should work end_comment begin_comment in most cases end_comment begin_synchronized begin_expr begin_name loader map end_name end_expr begin_block begin_if begin_condition begin_expr begin_name caching end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name loader end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name ant class loader end_name begin_operator RPAR end_operator begin_call begin_name begin_name loader map end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name driver end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name loader end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name driver end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name classpath end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name loader end_name begin_operator EQ end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name create class loader end_name begin_argument_list begin_argument begin_expr begin_name classpath end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name caching end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name loader map end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name driver end_name end_expr end_argument begin_argument begin_expr begin_name loader end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name driver end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_synchronized begin_expr_stmt begin_expr begin_name dc end_name begin_operator EQ end_operator begin_call begin_name begin_name loader end_name begin_operator DOT end_operator begin_name load class end_name end_name begin_argument_list begin_argument begin_expr begin_name driver end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name driver end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name dc end_name begin_operator EQ end_operator begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name driver end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_name driver instance end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name driver end_name begin_operator RPAR end_operator begin_call begin_name begin_name dc end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name driver end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal access exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name driver end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name instantiation exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name driver end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_return begin_expr begin_name driver instance end_name end_expr end_return end_block 
 begin_comment returns the set of selectors as an array param p the current project return an array of selectors in this container end_comment begin_type begin_specifier end_specifier begin_name file selector end_name begin_index end_index end_type begin_name get selectors end_name begin_parameter_list begin_param begin_decl begin_type begin_name project end_name end_type begin_name p end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name fileset end_name begin_operator DOT end_operator begin_name get selectors end_name end_name begin_argument_list begin_argument begin_expr begin_name p end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment convenience constructor param rc the resource collection to add end_comment begin_specifier end_specifier begin_name union end_name begin_parameter_list begin_param begin_decl begin_type begin_name resource collection end_name end_type begin_name rc end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add end_name begin_argument_list begin_argument begin_expr begin_name rc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets the patterns from the exclude filter rather that duplicate the details of ant star tean check out s filtering here refer to these links return a string of filter patterns separated by spaces see set excludes string excludes see set includes string includes see get includes end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get excludes end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name excludes end_name end_expr end_return end_block 
 begin_comment parse the output of a jikes compiler param reader reader used to read jikes s output throws io exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name parse output end_name begin_parameter_list begin_param begin_decl begin_type begin_name buffered reader end_name end_type begin_name reader end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name emacs mode end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name parse emacs output end_name begin_argument_list begin_argument begin_expr begin_name reader end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name parse standard output end_name begin_argument_list begin_argument begin_expr begin_name reader end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment only property specified fail end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 2 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name to string end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name test end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name test case end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test create pattern end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the server name server port project name and project folder in one shot optional but the server connection must be specified somehow param url a code string code of the form servername portnum project view see set servername string see set serverport string see set projectname string see set viewname string end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set url end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name url end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string tokenizer end_name end_type begin_name t end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string tokenizer end_name begin_argument_list begin_argument begin_expr begin_name url end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name has more tokens end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name unpw end_name begin_init begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name pos end_name begin_init begin_expr begin_call begin_name begin_name unpw end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name pos end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name servername end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name unpw end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name pos end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name serverport end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name unpw end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name pos end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name has more tokens end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name projectname end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name has more tokens end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name viewname end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block end_then end_if end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name compare files end_name begin_parameter_list begin_param begin_decl begin_type begin_name directory scanner end_name end_type begin_name ds end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name expected files end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name expected directories end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name begin_name included files end_name begin_index end_index end_name begin_init begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get included files end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name begin_name included directories end_name begin_index end_index end_name begin_init begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name get included directories end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name expected files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name included files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name expected directories end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name included directories end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name tree set end_name end_type begin_name files end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name tree set end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name counter end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name counter end_name begin_operator LT end_operator begin_name begin_name included files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name counter end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name included files end_name begin_index begin_expr begin_name counter end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_decl_stmt begin_decl begin_type begin_name tree set end_name end_type begin_name directories end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name tree set end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name counter end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name counter end_name begin_operator LT end_operator begin_name begin_name included directories end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name counter end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name directories end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name included directories end_name begin_index begin_expr begin_name counter end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name replace end_name begin_argument_list begin_argument begin_expr begin_name begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name currentfile end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name counter end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name currentfile end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name expected files end_name begin_index begin_expr begin_name counter end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name currentfile end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name counter end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_while begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name currentdirectory end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name iterator end_name end_type begin_name dirit end_name begin_init begin_expr begin_call begin_name begin_name directories end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name counter end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name dirit end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name currentdirectory end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name dirit end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name begin_name expected directories end_name begin_index begin_expr begin_name counter end_name end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name currentdirectory end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name counter end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_while end_block 
 begin_comment set the location of the extensions directories param path the string version of the path deprecated since 1 5 x use the link set extdirs path version end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set extdirs end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name path end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name perms end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name permissions end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name permissions end_name begin_operator DOT end_operator begin_name permission end_name end_name end_type begin_name perm end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name permissions end_name begin_operator DOT end_operator begin_name permission end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment grant extra permissions to read and write the user properties and read to the end_comment begin_comment java home property end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name perm end_name begin_operator DOT end_operator begin_name set actions end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name perm end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name perm end_name begin_operator DOT end_operator begin_name set class end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name perms end_name begin_operator DOT end_operator begin_name add configured grant end_name end_name begin_argument_list begin_argument begin_expr begin_name perm end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name perm end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name begin_name permissions end_name begin_operator DOT end_operator begin_name permission end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name perm end_name begin_operator DOT end_operator begin_name set actions end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name perm end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name perm end_name begin_operator DOT end_operator begin_name set class end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name perms end_name begin_operator DOT end_operator begin_name add configured grant end_name end_name begin_argument_list begin_argument begin_expr begin_name perm end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name perm end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name begin_name permissions end_name begin_operator DOT end_operator begin_name permission end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name perm end_name begin_operator DOT end_operator begin_name set actions end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name perm end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name perm end_name begin_operator DOT end_operator begin_name set class end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name perms end_name begin_operator DOT end_operator begin_name add configured grant end_name end_name begin_argument_list begin_argument begin_expr begin_name perm end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment revoke permission to write user home granted above via user still able to read though end_comment begin_comment and the default granted permission to read os name end_comment begin_expr_stmt begin_expr begin_name perm end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name begin_name permissions end_name begin_operator DOT end_operator begin_name permission end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name perm end_name begin_operator DOT end_operator begin_name set actions end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name perm end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name perm end_name begin_operator DOT end_operator begin_name set class end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name perms end_name begin_operator DOT end_operator begin_name add configured revoke end_name end_name begin_argument_list begin_argument begin_expr begin_name perm end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name perm end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name begin_name permissions end_name begin_operator DOT end_operator begin_name permission end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name perm end_name begin_operator DOT end_operator begin_name set actions end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name perm end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name perm end_name begin_operator DOT end_operator begin_name set class end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name perms end_name begin_operator DOT end_operator begin_name add configured revoke end_name end_name begin_argument_list begin_argument begin_expr begin_name perm end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment select the in output pattern via a well know format name param e an code enumerated code value since 1 7 0 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set format end_name begin_parameter_list begin_param begin_decl begin_type begin_name format element end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name format end_name begin_operator EQ end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get format end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment creates the javah adapter based on the user choice and potentially the vm vendor param choice the user choice if any param log a project component instance used to access ant s logging system return the adapter to use throws build exception if there is an error end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name javah adapter end_name end_type begin_name get adapter end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name choice end_name end_decl end_param begin_param begin_decl begin_type begin_name project component end_name end_type begin_name log end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name java env utils end_name begin_operator DOT end_operator begin_name is kaffe end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name choice end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_call begin_name begin_name kaffeh end_name begin_operator DOT end_operator begin_name implementation name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name choice end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name kaffeh end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name sun javah end_name begin_operator DOT end_operator begin_name implementation name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name choice end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name sun javah end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_name choice end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name resolve class name end_name begin_argument_list begin_argument begin_expr begin_name choice end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if end_else end_if end_else end_if begin_comment this default has been good enough until ant 1 6 3 so stick end_comment begin_comment with it end_comment begin_return begin_expr begin_operator UNP end_operator begin_call begin_name sun javah end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment creates a new cvs tag entry param filename the filename to add param revision the revision param prev revision the previous revision end_comment begin_specifier end_specifier begin_name cvs tag entry end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name filename end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name revision end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name prev revision end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name filename end_name end_name begin_operator EQ end_operator begin_name filename end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name revision end_name end_name begin_operator EQ end_operator begin_name revision end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name prev revision end_name end_name begin_operator EQ end_operator begin_name prev revision end_name end_expr end_expr_stmt end_block 
 begin_comment generate stubs skeleton for each home found into the dd add all the generate class file into the ejb files param ithomes iterator on home class end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name build borland stubs end_name begin_parameter_list begin_param begin_decl begin_type begin_name iterator end_name end_type begin_name ithomes end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name execute end_name end_type begin_name exec task end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name exec task end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name execute end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name project end_name end_type begin_name project end_name begin_init begin_expr begin_call begin_name get task end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exec task end_name begin_operator DOT end_operator begin_name set ant run end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exec task end_name begin_operator DOT end_operator begin_name set working directory end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get base dir end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name commandline end_name end_type begin_name commandline end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name commandline end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name set executable end_name end_name begin_argument_list begin_argument begin_expr begin_name java 2 iiop end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment debug end_comment begin_if begin_condition begin_expr begin_name java 2 iiopdebug end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment set the classpath end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get combined classpath end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment list file end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment no tie classes end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name java 2 iioparams end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name java 2 iioparams end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name java 2 iioparams end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment root dir end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name get config end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name begin_name src dir end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment compiling order end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment add the home class end_comment begin_while begin_condition begin_expr begin_call begin_name begin_name ithomes end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name create argument end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ithomes end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name describe command end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name exec task end_name begin_operator DOT end_operator begin_name set commandline end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name commandline end_name begin_operator DOT end_operator begin_name get commandline end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name exec task end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name execute end_name begin_operator DOT end_operator begin_name is failure end_name end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_name result end_name begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get task end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name io exception end_name end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg err end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get task end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment p quick way to use a standard formatter p at the moment there are three supported standard formatters ul li the code xml code type uses a code xmlj unit result formatter code li the code brief code type uses a code brief j unit result formatter code li the code plain code type the default uses a code plain j unit result formatter code ul p sets code classname code attribute so you can t use that attribute if you use this one param type the enumerated value to use end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set type end_name begin_parameter_list begin_param begin_decl begin_type begin_name type attribute end_name end_type begin_name type end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name type end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set classname end_name begin_argument_list begin_argument begin_expr begin_name xml formatter class name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name type end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set classname end_name begin_argument_list begin_argument begin_expr begin_name brief formatter class name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment must be plain ensured by type attribute end_comment begin_expr_stmt begin_expr begin_call begin_name set classname end_name begin_argument_list begin_argument begin_expr begin_name plain formatter class name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_else end_if end_block 
 begin_comment test inspired by bug report 37085 end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test jar with manifest in dir with space end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name mainjarstring end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name extjarstring end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get property end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name my path end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name path end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name my path end_name begin_operator DOT end_operator begin_name set location end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name mainjarstring end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set user property end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name ant class loader end_name end_type begin_name my loader end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name create class loader end_name begin_argument_list begin_argument begin_expr begin_name my path end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name path end_name begin_init begin_expr begin_call begin_name begin_name my loader end_name begin_operator DOT end_operator begin_name get classpath end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr begin_name mainjarstring end_name begin_operator PLUS end_operator begin_name begin_name file end_name begin_operator DOT end_operator begin_name path separator end_name end_name begin_operator PLUS end_operator begin_name extjarstring end_name end_expr end_argument begin_argument begin_expr begin_name path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test date iso end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name time zone end_name end_type begin_name time zone end_name begin_init begin_expr begin_call begin_name begin_name time zone end_name begin_operator DOT end_operator begin_name get time zone end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name calendar end_name end_type begin_name cal end_name begin_init begin_expr begin_call begin_name begin_name calendar end_name begin_operator DOT end_operator begin_name get instance end_name end_name begin_argument_list begin_argument begin_expr begin_name time zone end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cal end_name begin_operator DOT end_operator begin_name set end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name text end_name begin_init begin_expr begin_call begin_name begin_name date utils end_name begin_operator DOT end_operator begin_name format end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name cal end_name begin_operator DOT end_operator begin_name get time end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name date utils end_name begin_operator DOT end_operator begin_name iso 8601 date pattern end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment mark timeout as having occurred param w the responsible watchdog since ant 1 5 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name timeout occured end_name begin_parameter_list begin_param begin_decl begin_type begin_name watchdog end_name end_type begin_name w end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name thread end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name timed out end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name interrupt end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name notify all end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get an enumeration on the outputproperties return the outputproperties end_comment begin_type begin_specifier end_specifier begin_name enumeration end_name end_type begin_name get output properties end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name output properties end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment returns the next character in the filtered stream one line is read from the original input and the prefix added the resulting line is then used until it ends at which point the next original line is read etc return the next character in the resulting stream or 1 if the end of the resulting stream has been reached exception io exception if the underlying stream throws an io exception during reading end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name read end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name get initialized end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name initialize end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set initialized end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name ch end_name begin_init begin_expr begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name queued data end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name queued data end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name queued data end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name queued data end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name ch end_name begin_operator EQ end_operator begin_call begin_name begin_name queued data end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name queued data end_name begin_operator EQ end_operator begin_call begin_name begin_name queued data end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name queued data end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name queued data end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name queued data end_name begin_operator EQ end_operator begin_call begin_name read line end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name queued data end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name ch end_name begin_operator EQ end_operator begin_operator MINUS end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_name prefix end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name queued data end_name begin_operator EQ end_operator begin_name prefix end_name begin_operator PLUS end_operator begin_name queued data end_name end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name read end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_else end_if end_block end_else end_if begin_return begin_expr begin_name ch end_name end_expr end_return end_block 
 begin_comment creates the chain of filters to operate param input buffer code string buffer code containing the input for the first filter return code string buffer code containing the output of the last filter end_comment begin_type begin_specifier end_specifier begin_name string buffer end_name end_type begin_name build filter chain end_name begin_parameter_list begin_param begin_decl begin_type begin_name string buffer end_name end_type begin_name input buffer end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string buffer end_name end_type begin_name buf end_name begin_init begin_expr begin_name input buffer end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name replacefilters end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name replacefilter end_name end_type begin_name filter end_name begin_init begin_expr begin_operator LPAR end_operator begin_name replacefilter end_name begin_operator RPAR end_operator begin_call begin_name begin_name replacefilters end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name filter end_name begin_operator DOT end_operator begin_name set input buffer end_name end_name begin_argument_list begin_argument begin_expr begin_name buf end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name buf end_name begin_operator EQ end_operator begin_call begin_name begin_name filter end_name begin_operator DOT end_operator begin_name get output buffer end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_name buf end_name end_expr end_return end_block 
 begin_comment validation code throws build exception if validation failed end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name validate end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name output file end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name output file end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name get executable end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test resourcesmatch one end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test recreate end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name first target end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name second target end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr begin_name first target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name sleeptime end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name get file timestamp granularity end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name sleep end_name end_name begin_argument_list begin_argument begin_expr begin_name sleeptime end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name interrupted exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block end_catch end_try begin_comment end of try catch end_comment begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name jar file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name temp jar end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name jar modified date end_name begin_init begin_expr begin_call begin_name begin_name jar file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr begin_name second target end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name jar file end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name temp jar end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name second target end_name end_expr end_argument begin_argument begin_expr begin_name jar modified date end_name begin_operator LT end_operator begin_call begin_name begin_name jar file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment determine if the given entry is a descendant of this entry descendancy is determined by the name of the descendant starting with this entry s name param desc entry to be checked as a descendent of this return true if entry is a descendant of this end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is descendent end_name begin_parameter_list begin_param begin_decl begin_type begin_name tar entry end_name end_type begin_name desc end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name desc end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name starts with end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment return the document fragment that corresponds to the nested structure end_comment begin_type begin_specifier end_specifier begin_name document fragment end_name end_type begin_name get fragment end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name fragment end_name end_expr end_return end_block 
 begin_comment interface test listener for j unit gt 3 4 p a test failed param test not used param t not used end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add failure end_name begin_parameter_list begin_param begin_decl begin_type begin_name test end_name end_type begin_name test end_name end_decl end_param begin_param begin_decl begin_type begin_name assertion failed error end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name add failure end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name throwable end_name begin_operator RPAR end_operator begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the name of the factory param name the name of the factory end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name name end_name end_name begin_operator EQ end_operator begin_name name end_name end_expr end_expr_stmt end_block 
 begin_comment return the transformer factory associated to this liaison return the transformer factory associated to this liaison throws build exception thrown if there is a problem creating the factory see set factory string since ant 1 5 2 end_comment begin_type begin_specifier end_specifier begin_name transformer factory end_name end_type begin_name get factory end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name tfactory end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_name tfactory end_name end_expr end_return end_block end_then end_if begin_comment not initialized yet so create the factory end_comment begin_if begin_condition begin_expr begin_name factory name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name tfactory end_name begin_operator EQ end_operator begin_call begin_name begin_name transformer factory end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name class end_name end_type begin_name clazz end_name begin_init begin_expr begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name factory name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name tfactory end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name transformer factory end_name begin_operator RPAR end_operator begin_call begin_name begin_name clazz end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name tfactory end_name begin_operator DOT end_operator begin_name set error listener end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment specific attributes for the transformer end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name object end_name begin_index end_index end_type begin_name pair end_name begin_init begin_expr begin_operator LPAR end_operator begin_name begin_name object end_name begin_index end_index end_name begin_operator RPAR end_operator begin_call begin_name begin_name attributes end_name begin_operator DOT end_operator begin_name element at end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tfactory end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_name begin_name pair end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument begin_argument begin_expr begin_name begin_name pair end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_if begin_condition begin_expr begin_name uri resolver end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name tfactory end_name begin_operator DOT end_operator begin_name set uri resolver end_name end_name begin_argument_list begin_argument begin_expr begin_name uri resolver end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name tfactory end_name end_expr end_return end_block 
 begin_comment check style visibility modifier on end_comment begin_comment constructor inits everything and set up the search pattern end_comment begin_specifier end_specifier begin_name c sharp end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name clear end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment delete an attribute not for the faint of heart param name the name of the attribute to be removed end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name remove attribute end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name attribute names end_name begin_operator DOT end_operator begin_name remove end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name attribute map end_name begin_operator DOT end_operator begin_name remove end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test works end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert property contains end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert property contains end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 2 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets filesets root namespace param namespace string root namespace end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set namespace end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name namespace end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name namespace end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name namespace end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name namespace end_name end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_call begin_name begin_name namespace end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name namespace end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator QM end_operator begin_name namespace end_name begin_operator DP end_operator begin_name namespace end_name begin_operator PLUS end_operator begin_operator RPAR end_operator end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment returns the project this filter is part of return the project this filter is part of end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name project end_name end_type begin_name get project end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name project end_name end_expr end_return end_block 
 begin_comment makes this instance in effect a reference to another file list instance p you must not set another attribute or nest elements inside this element if you make it a reference p param r the reference to another filelist exception build exception if an error occurs end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set refid end_name begin_parameter_list begin_param begin_decl begin_type begin_name reference end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name dir end_name begin_operator UNP end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name filenames end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set refid end_name end_name begin_argument_list begin_argument begin_expr begin_name r end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the parameters for this filter return a code parameter code value end_comment begin_type begin_specifier end_specifier begin_name parameter end_name begin_index end_index end_type begin_name get params end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name parameter end_name begin_index end_index end_type begin_name params end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name parameter end_name begin_index begin_expr begin_call begin_name begin_name parameters end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name parameters end_name begin_operator DOT end_operator begin_name copy into end_name end_name begin_argument_list begin_argument begin_expr begin_name params end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name params end_name end_expr end_return end_block 
 begin_comment writes bytes to the current tar archive entry this method is aware of the current entry and will throw an exception if you attempt to write bytes past the length specified for the current entry the method is also painfully aware of the record buffering required by tar buffer and manages buffers that are not a multiple of recordsize in length including assembling records from small buffers param w buf the buffer to write to the archive param w offset the offset in the buffer from which to get bytes param num to write the number of bytes to write throws io exception on error end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name write end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name w buf end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name w offset end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name num to write end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr bytes end_name end_name begin_operator PLUS end_operator begin_name num to write end_name begin_operator RPAR end_operator begin_operator GT end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr size end_name end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name io exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name num to write end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr size end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name curr name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw begin_comment end_comment begin_comment we have to deal with assembly end_comment begin_comment the programmer can be writing little 32 byte chunks for all end_comment begin_comment we know and we must assemble complete records for writing end_comment begin_comment review maybe this should be in tar buffer could that help to end_comment begin_comment eliminate some of the buffer copying end_comment begin_comment end_comment end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name assem len end_name end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name assem len end_name end_name begin_operator PLUS end_operator begin_name num to write end_name begin_operator RPAR end_operator begin_operator GE end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name record buf end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name a len end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name record buf end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator MINUS end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name assem len end_name end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name assem buf end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name record buf end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name assem len end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_name w buf end_name end_expr end_argument begin_argument begin_expr begin_name w offset end_name end_expr end_argument begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name record buf end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name assem len end_name end_name end_expr end_argument begin_argument begin_expr begin_name a len end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name buffer end_name begin_operator DOT end_operator begin_name write record end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name record buf end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr bytes end_name end_name begin_operator UNP end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name record buf end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name w offset end_name begin_operator UNP end_operator begin_name a len end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name num to write end_name begin_operator UNP end_operator begin_name a len end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name assem len end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_name w buf end_name end_expr end_argument begin_argument begin_expr begin_name w offset end_name end_expr end_argument begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name assem buf end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name assem len end_name end_name end_expr end_argument begin_argument begin_expr begin_name num to write end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name w offset end_name begin_operator UNP end_operator begin_name num to write end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name assem len end_name end_name begin_operator UNP end_operator begin_name num to write end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name num to write end_name begin_operator UNP end_operator begin_name num to write end_name end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_comment end_comment begin_comment when we get here we have either end_comment begin_comment o an empty assemble buffer end_comment begin_comment o no bytes to write num to write 0 end_comment begin_comment end_comment begin_while begin_condition begin_expr begin_name num to write end_name begin_operator GT end_operator end_expr end_condition begin_block begin_if begin_condition begin_expr begin_name num to write end_name begin_operator LT end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name record buf end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_name w buf end_name end_expr end_argument begin_argument begin_expr begin_name w offset end_name end_expr end_argument begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name assem buf end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name assem len end_name end_name end_expr end_argument begin_argument begin_expr begin_name num to write end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name assem len end_name end_name begin_operator UNP end_operator begin_name num to write end_name end_expr end_expr_stmt begin_break end_break end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name buffer end_name begin_operator DOT end_operator begin_name write record end_name end_name begin_argument_list begin_argument begin_expr begin_name w buf end_name end_expr end_argument begin_argument begin_expr begin_name w offset end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name num end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name record buf end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name curr bytes end_name end_name begin_operator UNP end_operator begin_name num end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name num to write end_name begin_operator UNP end_operator begin_name num end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name w offset end_name begin_operator UNP end_operator begin_name num end_name end_expr end_expr_stmt end_block end_while end_block 
 begin_comment set the classpath used to find the doclet class param doclet path the doclet classpath end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set doclet path end_name begin_parameter_list begin_param begin_decl begin_type begin_name path end_name end_type begin_name doclet path end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name doclet end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name doclet end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name doclet info end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name doclet end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name doclet end_name begin_operator DOT end_operator begin_name set path end_name end_name begin_argument_list begin_argument begin_expr begin_name doclet path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get type name string return string containing the type name end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get type name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name m type name end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name list end_name begin_parameter_list end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_comment get the vendor id of the extensions implementation return the vendor id of the extensions implementation end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get implementation vendor id end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name implementation vendor id end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add fourteen end_name begin_parameter_list begin_param begin_decl begin_type begin_name string buffer end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name null pointer exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block 
 begin_comment get network name of the pvcs repository return string end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get repository end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name repository end_name end_expr end_return end_block 
 begin_comment determine the dependencies between classes class dependencies are determined by examining the class references in a class file to other classes this method sets up the following fields ul li affected class map the list of classes each class affects li li class file info map information about each class li li classpath dependencies the list of jars and classes from the classpath that each class depends upon li ul if required the dependencies are written to the cache exception io exception if either the dependencies cache or the class files cannot be read or written end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name determine dependencies end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_name affected class map end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name class file info map end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name cache dirty end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name hashtable end_name end_type begin_name dependency map end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name cache file end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name cache file exists end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name cache last modified end_name begin_init begin_expr begin_name begin_name long end_name begin_operator DOT end_operator begin_name max value end_name end_name end_expr end_init end_decl end_decl_stmt begin_comment read the dependency cache from the disk end_comment begin_if begin_condition begin_expr begin_name cache end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name cache file end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name cache end_name end_expr end_argument begin_argument begin_expr begin_name cache file name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name cache file exists end_name begin_operator EQ end_operator begin_call begin_name begin_name cache file end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name cache last modified end_name begin_operator EQ end_operator begin_call begin_name begin_name cache file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name cache file exists end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name dependency map end_name begin_operator EQ end_operator begin_call begin_name read cached dependencies end_name begin_argument_list begin_argument begin_expr begin_name cache file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name classfile enum end_name begin_init begin_expr begin_call begin_name get class files end_name begin_argument_list begin_argument begin_expr begin_name dest path end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name elements end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name classfile enum end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name class file info end_name end_type begin_name info end_name begin_init begin_expr begin_operator LPAR end_operator begin_name class file info end_name begin_operator RPAR end_operator begin_call begin_name begin_name classfile enum end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name info end_name begin_operator DOT end_operator begin_name class name end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name class file info map end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name info end_name begin_operator DOT end_operator begin_name class name end_name end_name end_expr end_argument begin_argument begin_expr begin_name info end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name dependency list end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name cache end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment try to read the dependency info from the map if it is end_comment begin_comment not out of date end_comment begin_if begin_condition begin_expr begin_name cache file exists end_name begin_operator UNP end_operator begin_name cache last modified end_name begin_operator GT end_operator begin_call begin_name begin_name info end_name begin_operator DOT end_operator begin_name absolute file end_name begin_operator DOT end_operator begin_name last modified end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment dep file exists and is newer than the class file end_comment begin_comment need to get dependency list from the map end_comment begin_expr_stmt begin_expr begin_name dependency list end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name vector end_name begin_operator RPAR end_operator begin_call begin_name begin_name dependency map end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name info end_name begin_operator DOT end_operator begin_name class name end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_if begin_condition begin_expr begin_name dependency list end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment not cached so need to read directly from the class file end_comment begin_decl_stmt begin_decl begin_type begin_name dependency analyzer end_name end_type begin_name analyzer end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name ant analyzer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name analyzer end_name begin_operator DOT end_operator begin_name add root class end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name info end_name begin_operator DOT end_operator begin_name class name end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name analyzer end_name begin_operator DOT end_operator begin_name add class path end_name end_name begin_argument_list begin_argument begin_expr begin_name dest path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name analyzer end_name begin_operator DOT end_operator begin_name set closure end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name dependency list end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name vector end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name dep enum end_name begin_init begin_expr begin_call begin_name begin_name analyzer end_name begin_operator DOT end_operator begin_name get class dependencies end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name dep enum end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name dependency list end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name dep enum end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_name cache dirty end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dependency map end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name info end_name begin_operator DOT end_operator begin_name class name end_name end_name end_expr end_argument begin_argument begin_expr begin_name dependency list end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment this class depends on each class in the dependency list for each end_comment begin_comment one of those add this class into their affected classes list end_comment begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name dep enum end_name begin_init begin_expr begin_call begin_name begin_name dependency list end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name dep enum end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name dependent class end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name dep enum end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name hashtable end_name end_type begin_name affected classes end_name begin_init begin_expr begin_operator LPAR end_operator begin_name hashtable end_name begin_operator RPAR end_operator begin_call begin_name begin_name affected class map end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name dependent class end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name affected classes end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name affected classes end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name affected class map end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name dependent class end_name end_expr end_argument begin_argument begin_expr begin_name affected classes end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name affected classes end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name info end_name begin_operator DOT end_operator begin_name class name end_name end_name end_expr end_argument begin_argument begin_expr begin_name info end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block end_while begin_expr_stmt begin_expr begin_name classpath dependencies end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name path end_name end_type begin_name check path end_name begin_init begin_expr begin_call begin_name get check class path end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name check path end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment now determine which jars each class depends upon end_comment begin_expr_stmt begin_expr begin_name classpath dependencies end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name ant class loader end_name end_type begin_name loader end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name create class loader end_name begin_argument_list begin_argument begin_expr begin_name check path end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name hashtable end_name end_type begin_name classpath file cache end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name null file marker end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name object end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name dependency map end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name class name end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name vector end_name end_type begin_name dependency list end_name begin_init begin_expr begin_operator LPAR end_operator begin_name vector end_name begin_operator RPAR end_operator begin_call begin_name begin_name dependency map end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name class name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name hashtable end_name end_type begin_name dependencies end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name hashtable end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name classpath dependencies end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name class name end_name end_expr end_argument begin_argument begin_expr begin_name dependencies end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e 2 end_name begin_init begin_expr begin_call begin_name begin_name dependency list end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e 2 end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name dependency end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name e 2 end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name classpath file object end_name begin_init begin_expr begin_call begin_name begin_name classpath file cache end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name dependency end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name classpath file object end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name classpath file object end_name begin_operator EQ end_operator begin_name null file marker end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name dependency end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name dependency end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name url end_name end_type begin_name class url end_name begin_init begin_expr begin_call begin_name begin_name loader end_name begin_operator DOT end_operator begin_name get resource end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name dependency end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name class url end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name class url end_name begin_operator DOT end_operator begin_name get protocol end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name jar file path end_name begin_init begin_expr begin_call begin_name begin_name class url end_name begin_operator DOT end_operator begin_name get file end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name class marker end_name begin_init begin_expr begin_call begin_name begin_name jar file path end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name jar file path end_name begin_operator EQ end_operator begin_call begin_name begin_name jar file path end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name class marker end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name jar file path end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name classpath file object end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name get file utils end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name from uri end_name begin_argument_list begin_argument begin_expr begin_name jar file path end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name io exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name jar file path end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name class url end_name begin_operator DOT end_operator begin_name get protocol end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name classpath file object end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file utils end_name begin_operator DOT end_operator begin_name get file utils end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name from uri end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name class url end_name begin_operator DOT end_operator begin_name to external form end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name class name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name classpath file object end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name dependency end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name classpath file cache end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name dependency end_name end_expr end_argument begin_argument begin_expr begin_name classpath file object end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name classpath file object end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name classpath file object end_name begin_operator UNP end_operator begin_name null file marker end_name end_expr end_condition begin_then begin_block begin_comment we need to add this jar to the list for this class end_comment begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name jar file end_name begin_init begin_expr begin_operator LPAR end_operator begin_name file end_name begin_operator RPAR end_operator begin_name classpath file object end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dependencies end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name jar file end_name end_expr end_argument begin_argument begin_expr begin_name jar file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_while end_block end_for end_block end_then end_if begin_comment write the dependency cache to the disk end_comment begin_if begin_condition begin_expr begin_name cache end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name cache dirty end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name write cached dependencies end_name begin_argument_list begin_argument begin_expr begin_name dependency map end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment constructor end_comment begin_specifier end_specifier begin_name on error end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test with space include end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name expect log end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name assertion failed error end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name get full log end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment main application method for the i planet application server ejbc utility if the application is run with no commandline arguments a usage statement is printed for the user param args the commandline arguments passed to the application end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name main end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name args end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name std descriptor end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name ias descriptor end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name dest directory end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name classpath end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name sax parser end_name end_type begin_name parser end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name debug end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name retain source end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name i planet ejbc end_name end_type begin_name ejbc end_name end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name begin_name args end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator LT end_operator begin_name min num args end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name begin_name args end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator begin_name max num args end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name usage end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name std descriptor end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name begin_name args end_name begin_index begin_expr begin_name begin_name args end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator MINUS end_operator end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name ias descriptor end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name begin_name args end_name begin_index begin_expr begin_name begin_name args end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator MINUS end_operator end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name args end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator MINUS end_operator end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name begin_name args end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name classpath end_name begin_operator EQ end_operator begin_name begin_name args end_name begin_index begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_index end_name end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name begin_name args end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name dest directory end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name begin_name args end_name begin_index begin_expr begin_operator PPLUS end_operator begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name begin_name args end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name debug end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name begin_name args end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name retain source end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name usage end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_else end_if end_else end_if end_else end_if end_else end_if end_block end_for begin_comment if the classpath flag isn t specified use the system classpath end_comment begin_if begin_condition begin_expr begin_name classpath end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name properties end_name end_type begin_name props end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get properties end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name classpath end_name begin_operator EQ end_operator begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment if the d flag isn t specified use the working directory as the destination directory end_comment begin_if begin_condition begin_expr begin_name dest directory end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name properties end_name end_type begin_name props end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get properties end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name dest directory end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment construct a sax parser used to process the descriptors end_comment begin_decl_stmt begin_decl begin_type begin_name sax parser factory end_name end_type begin_name parser factory end_name begin_init begin_expr begin_call begin_name begin_name sax parser factory end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name parser factory end_name begin_operator DOT end_operator begin_name set validating end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name parser end_name begin_operator EQ end_operator begin_call begin_name begin_name parser factory end_name begin_operator DOT end_operator begin_name new sax parser end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment sax exception or parser configuration exception may be thrown end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name print stack trace end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_catch end_try begin_comment build and populate an instance of the ejbc utility end_comment begin_expr_stmt begin_expr begin_name ejbc end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name i planet ejbc end_name begin_argument_list begin_argument begin_expr begin_name std descriptor end_name end_expr end_argument begin_argument begin_expr begin_name ias descriptor end_name end_expr end_argument begin_argument begin_expr begin_name dest directory end_name end_expr end_argument begin_argument begin_expr begin_name classpath end_name end_expr end_argument begin_argument begin_expr begin_name parser end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ejbc end_name begin_operator DOT end_operator begin_name set debug output end_name end_name begin_argument_list begin_argument begin_expr begin_name debug end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ejbc end_name begin_operator DOT end_operator begin_name set retain source end_name end_name begin_argument_list begin_argument begin_expr begin_name retain source end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment execute the ejbc utility stubs skeletons are rebuilt if needed end_comment begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ejbc end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name sax exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name begin_name i planet ejbc end_name begin_operator DOT end_operator begin_name ejbc exception end_name end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_catch end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute operation end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_for begin_init begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name entries end_name begin_operator DOT end_operator begin_name elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name entry end_name end_type begin_name entry end_name begin_init begin_expr begin_operator LPAR end_operator begin_name entry end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name execute on end_name end_name begin_argument_list begin_argument begin_expr begin_name properties end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_comment logic end_comment begin_comment this algorithm supports only md 5 and sha return i true i if all is ok otherwise i false i end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is valid end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator DOT end_operator begin_call begin_name equals ignore case end_name begin_argument_list begin_argument begin_expr begin_name algorithm end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator DOT end_operator begin_call begin_name equals ignore case end_name begin_argument_list begin_argument begin_expr begin_name algorithm end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 3 end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name timer end_name end_type begin_name timer end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name timer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name timer end_name begin_operator DOT end_operator begin_name stop end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name trace end_name end_expr end_condition begin_then begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name timer end_name begin_operator DOT end_operator begin_name time end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_then end_if begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name timer end_name begin_operator DOT end_operator begin_name time end_name end_name begin_argument_list end_argument_list end_call begin_operator GE end_operator begin_operator LPAR end_operator begin_operator MINUS end_operator begin_name error range end_name begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment assert that a file doesnt exist relative to the project param message message if there is no mpatch param filename filename to resolve against the project end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name assert file missing end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name message end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name filename end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name resolve file end_name begin_argument_list begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name exists end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment print out an individual entry in changelog param doc document used to create elements param entry the entry to print param output writer to which to send output end_comment begin_type begin_name void end_name end_type begin_name print entry end_name begin_parameter_list begin_param begin_decl begin_type begin_name document end_name end_type begin_name doc end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name print writer end_name end_type begin_name output end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name cvs entry end_name end_type begin_name entry end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name element end_name end_type begin_name ent end_name begin_init begin_expr begin_call begin_name begin_name doc end_name begin_operator DOT end_operator begin_name create element end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dom utils end_name begin_operator DOT end_operator begin_name append text element end_name end_name begin_argument_list begin_argument begin_expr begin_name ent end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name output date end_name begin_operator DOT end_operator begin_name format end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get date end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dom utils end_name begin_operator DOT end_operator begin_name append text element end_name end_name begin_argument_list begin_argument begin_expr begin_name ent end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name output time end_name begin_operator DOT end_operator begin_name format end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get date end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dom utils end_name begin_operator DOT end_operator begin_name append cdata element end_name end_name begin_argument_list begin_argument begin_expr begin_name ent end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get author end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name enumeration end_name end_type begin_name enumeration end_name begin_init begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get files end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name elements end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name enumeration end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name rcs file end_name end_type begin_name file end_name begin_init begin_expr begin_operator LPAR end_operator begin_name rcs file end_name begin_operator RPAR end_operator begin_call begin_name begin_name enumeration end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name element end_name end_type begin_name f end_name begin_init begin_expr begin_call begin_name begin_name dom utils end_name begin_operator DOT end_operator begin_name create child element end_name end_name begin_argument_list begin_argument begin_expr begin_name ent end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dom utils end_name begin_operator DOT end_operator begin_name append cdata element end_name end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dom utils end_name begin_operator DOT end_operator begin_name append text element end_name end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get revision end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name previous revision end_name begin_init begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get previous revision end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name previous revision end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name dom utils end_name begin_operator DOT end_operator begin_name append text element end_name end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name previous revision end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_while begin_expr_stmt begin_expr begin_call begin_name begin_name dom utils end_name begin_operator DOT end_operator begin_name append cdata element end_name end_name begin_argument_list begin_argument begin_expr begin_name ent end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get comment end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name dom writer end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name ent end_name end_expr end_argument begin_argument begin_expr begin_name output end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment do the work throws build exception if an error occurs during the execution of the perforce command and fail on error is set to true end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name execute end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name p 4 view end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name sync cmd end_name begin_operator EQ end_operator begin_name p 4 view end_name end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name label end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name label end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name sync cmd end_name begin_operator EQ end_operator begin_name sync cmd end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name label end_name end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name p 4 cmd opts end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name sync cmd end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name exec p 4 command end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name p 4 cmd opts end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name sync cmd end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name simple p 4 output handler end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment when using this as a custom selector this method will be called it translates each parameter into the appropriate set xxx call param parameters the complete set of parameters for this selector end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set parameters end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name parameter end_name begin_index end_index end_name end_type begin_name parameters end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set parameters end_name end_name begin_argument_list begin_argument begin_expr begin_name parameters end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name parameters end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name parameters end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name paramname end_name begin_init begin_expr begin_name begin_name parameters end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name size key end_name begin_operator DOT end_operator begin_name equals ignore case end_name end_name begin_argument_list begin_argument begin_expr begin_name paramname end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name long end_name begin_argument_list begin_argument begin_expr begin_name begin_name parameters end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name long value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name number format exception end_name end_type begin_name nfe end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set error end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name begin_name parameters end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name units key end_name begin_operator DOT end_operator begin_name equals ignore case end_name end_name begin_argument_list begin_argument begin_expr begin_name paramname end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name byte units end_name end_type begin_name units end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name byte units end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name units end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name parameters end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set units end_name begin_argument_list begin_argument begin_expr begin_name units end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name when key end_name begin_operator DOT end_operator begin_name equals ignore case end_name end_name begin_argument_list begin_argument begin_expr begin_name paramname end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name size comparisons end_name end_type begin_name scmp end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name size comparisons end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name scmp end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name parameters end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set when end_name begin_argument_list begin_argument begin_expr begin_name scmp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name set error end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name paramname end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if end_else end_if end_block end_for end_block end_then end_if end_block 
 begin_comment shorthand to set the from address element param address the address to send mail from end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set from end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name address end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name from end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name from end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name email address end_name begin_argument_list begin_argument begin_expr begin_name address end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment write this string to the rexec session param s the string to write param echo string if true log the string sent end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name send string end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name echo string end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name output stream end_name end_type begin_name os end_name begin_init begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name get output stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name s end_name begin_operator PLUS end_operator begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get bytes end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name echo string end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg info end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test custom algorithm 2 end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name algo end_name begin_init begin_expr begin_call begin_name get algo name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert true end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name algo end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name algo end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment sets the text bnf documentation option param plain text a code boolean code value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set text end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name plain text end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name optional attrs end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument begin_argument begin_expr begin_name plain text end_name begin_operator QM end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name true end_name end_name begin_operator DP end_operator begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name false end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name plain text end_name end_name begin_operator EQ end_operator begin_name plain text end_name end_expr end_expr_stmt end_block 
 begin_comment adds characters from pcdata areas to the wrapped element param buf a character array of the text within the element must not be code null code param start the start element in the array param count the number of characters to read from the array end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name add text end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name char end_name begin_index end_index end_name end_type begin_name buf end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name start end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name count end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name count end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name characters end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name characters end_name begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_operator UNP end_operator begin_call begin_name string buffer end_name begin_argument_list begin_argument begin_expr begin_name count end_name end_expr end_argument end_argument_list end_call begin_operator DP end_operator begin_name characters end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name buf end_name end_expr end_argument begin_argument begin_expr begin_name start end_name end_expr end_argument begin_argument begin_expr begin_name count end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment get the value of this property resource return the value of the specified property end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get value end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name project end_name end_type begin_name p end_name begin_init begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_name p end_name begin_operator EQT end_operator begin_operator QM end_operator begin_operator DP end_operator begin_call begin_name begin_name p end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment the changelist to move files to required param to change new change list number throws build exception if the change parameter is null or empty end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set to change end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name to change end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name to change end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name to change end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name to change end_name end_name begin_operator EQ end_operator begin_name to change end_name end_expr end_expr_stmt end_block 
 begin_comment test the resource collection end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test resource collection end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name touch file end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 1 end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the name of the attribute param name the name of the attribute end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set name end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name is valid name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name name end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name to lower case end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment gets the error message recorded by the perforce handler return error message end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get error message end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name error message end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test parent differs in case scanning insensitive end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name login suceeded end_name end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name change remote dir end_name begin_argument_list begin_argument begin_expr begin_name remote tmp dir end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name begin_name ftp end_name begin_operator DOT end_operator begin_name ftp directory scanner end_name end_name end_type begin_name ds end_name begin_init begin_expr begin_call begin_name begin_name my ftp task end_name begin_operator DOT end_operator begin_name new scanner end_name end_name begin_argument_list begin_argument begin_expr begin_name ftp end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set basedir end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set includes end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name set case sensitive end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ds end_name begin_operator DOT end_operator begin_name scan end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name compare files end_name begin_argument_list begin_argument begin_expr begin_name ds end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index end_index end_name begin_block begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr begin_operator UNP end_operator begin_expr end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment creates a stream that will eventually write to the file with the given name and replace it param name the filename end_comment begin_specifier end_specifier begin_name lazy file output stream end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name this end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the name of the aggregegated results file it must be relative from the tt todir tt attribute if not set it will use link default filename param value the name of the file see set todir file end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set tofile end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name to file end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block 
 begin_comment get the dependencies collected by this visitor return a enumeration of classnames being the classes upon which the visited classes depend end_comment begin_type begin_specifier end_specifier begin_name enumeration end_name end_type begin_name get dependencies end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name dependencies end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name begin_name j unit task mirror end_name begin_operator DOT end_operator begin_name summary j unit result formatter mirror end_name end_name end_type begin_name new summary j unit result formatter end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_call begin_name summary j unit result formatter end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment reads and assembles the constants declared in a class file return the next character in the list of constants or 1 if the end of the resulting stream has been reached exception io exception if the underlying stream throws an io exception during reading or if the constants for the specified class cannot be read for example due to the class not being found end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name read end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name ch end_name begin_init begin_expr begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name queued data end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name queued data end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name queued data end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name queued data end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name ch end_name begin_operator EQ end_operator begin_call begin_name begin_name queued data end_name begin_operator DOT end_operator begin_name char at end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name queued data end_name begin_operator EQ end_operator begin_call begin_name begin_name queued data end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name queued data end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name queued data end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name clazz end_name begin_init begin_expr begin_call begin_name read fully end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name clazz end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name ch end_name begin_operator EQ end_operator begin_operator MINUS end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name byte end_name begin_index end_index end_type begin_name bytes end_name begin_init begin_expr begin_call begin_name begin_name clazz end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name class end_name end_type begin_name java class helper end_name begin_init begin_expr begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name java class helper end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name java class helper end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name class end_name begin_index end_index end_type begin_name params end_name begin_init begin_expr begin_block begin_expr begin_name begin_name byte end_name begin_index end_index end_name begin_operator DOT end_operator begin_name class end_name end_expr end_block end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name method end_name end_type begin_name get constants end_name begin_init begin_expr begin_call begin_name begin_name java class helper end_name begin_operator DOT end_operator begin_name get method end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name params end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name object end_name begin_index end_index end_type begin_name args end_name begin_init begin_expr begin_block begin_expr begin_name bytes end_name end_expr end_block end_expr end_init end_decl end_decl_stmt begin_comment get constants is a static method no need to end_comment begin_comment pass in the object end_comment begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string buffer end_name end_type begin_name sb end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string buffer end_name begin_operator RPAR end_operator begin_call begin_name begin_name get constants end_name begin_operator DOT end_operator begin_name invoke end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name args end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name queued data end_name begin_operator EQ end_operator begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name read end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no class def found error end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_name ex end_name end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name runtime exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_name ex end_name end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name invocation target exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name throwable end_name end_type begin_name t end_name begin_init begin_expr begin_call begin_name begin_name ex end_name begin_operator DOT end_operator begin_name get target exception end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name t end_name begin_operator UNP end_operator begin_name no class def found error end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator LPAR end_operator begin_name no class def found error end_name begin_operator RPAR end_operator begin_name t end_name end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name t end_name begin_operator UNP end_operator begin_name runtime exception end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator LPAR end_operator begin_name runtime exception end_name begin_operator RPAR end_operator begin_name t end_name end_expr end_throw end_block end_then end_if begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name ex end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block end_else end_if end_block end_else end_if begin_return begin_expr begin_name ch end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name handle missing file end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name message end_name end_decl end_param end_parameter_list begin_block begin_switch begin_condition begin_expr begin_call begin_name begin_name on missing filters file end_name begin_operator DOT end_operator begin_name get index end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_case begin_expr begin_name begin_name on missing end_name begin_operator DOT end_operator begin_name ignore index end_name end_name end_expr begin_return end_return end_case begin_case begin_expr begin_name begin_name on missing end_name begin_operator DOT end_operator begin_name fail index end_name end_name end_expr begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_case begin_case begin_expr begin_name begin_name on missing end_name begin_operator DOT end_operator begin_name warn index end_name end_name end_expr begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_name message end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg warn end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_case begin_default begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_default end_block end_switch end_block 
 begin_comment returns a read only map of nested elements supported by the introspected class return a nested element name to nested element code class code unmodifiable map can be empty but never code null code since ant 1 6 3 end_comment begin_type begin_specifier end_specifier begin_name map end_name end_type begin_name get nested element map end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name nested types end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator LT end_operator begin_operator RPAR end_operator begin_operator QM end_operator begin_name empty map end_name begin_operator DP end_operator begin_call begin_name begin_name collections end_name begin_operator DOT end_operator begin_name unmodifiable map end_name end_name begin_argument_list begin_argument begin_expr begin_name nested types end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment b deprecated b defines the location of weblogic dtd in the weblogic class hierarchy should not be needed and the nested lt dtd gt element is recommended when it is param in string the string to use as the dtd location end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set w ldtd end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name in string end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name weblogic dtd end_name end_name begin_operator EQ end_operator begin_name in string end_name end_expr end_expr_stmt end_block 
 begin_comment set is the name location of where to create the tar file since ant 1 5 param dest file the output of the tar end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set dest file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name dest file end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name tar file end_name end_name begin_operator EQ end_operator begin_name dest file end_name end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name mock cache end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_name void end_name end_type begin_name send from end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name from end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name begin_index end_index end_type begin_name ok end_name begin_init begin_expr begin_block begin_expr begin_name ok from end_name end_expr end_block end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name send end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name sanitize address end_name begin_argument_list begin_argument begin_expr begin_name from end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name ok end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment the comment to apply to all files being labelled param comment the new comment value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set comment end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name comment end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name set internal comment end_name end_name begin_argument_list begin_argument begin_expr begin_name comment end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name tear down end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test no file end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test windows line separator end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name test windows line separator end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name fail end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name assertion failed error end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block end_catch end_try end_block 
 begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name count end_name begin_parameter_list begin_param begin_decl begin_type begin_name long end_name end_type begin_name len end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name total length end_name begin_operator UNP end_operator begin_name len end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name percent transmitted end_name begin_operator EQ end_operator begin_call begin_name track progress end_name begin_argument_list begin_argument begin_expr begin_name init file size end_name end_expr end_argument begin_argument begin_expr begin_name total length end_name end_expr end_argument begin_argument begin_expr begin_name percent transmitted end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block 
 begin_comment add a new filter made from the given token and value param token the token for the new filter param value the value for the new filter end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name add filter end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name token end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name no children allowed end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name add filter end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name filter end_name begin_argument_list begin_argument begin_expr begin_name token end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test macro end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment getter method that returns the value of the lt ejb name gt element return the ejb name end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get ejb name end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name ejb name end_name end_expr end_return end_block 
 begin_comment since ant 1 5 return true if the substring is within the string exception build exception if the attributes are not set correctly end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name eval end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_name string end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name sub string end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_return begin_expr begin_name case sensitive end_name begin_operator QM end_operator begin_call begin_name begin_name string end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name sub string end_name end_expr end_argument end_argument_list end_call begin_operator GT end_operator begin_operator MINUS end_operator begin_operator DP end_operator begin_call begin_name begin_name string end_name begin_operator DOT end_operator begin_name to lower case end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name index of end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name sub string end_name begin_operator DOT end_operator begin_name to lower case end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_return end_block 
 begin_comment create an instance that is helping another task project owning target task name and description are all pulled out param owner task that we belong to end_comment begin_specifier end_specifier begin_name exec task end_name begin_parameter_list begin_param begin_decl begin_type begin_name task end_name end_type begin_name owner end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name bind to owner end_name begin_argument_list begin_argument begin_expr begin_name owner end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment constructor for a tar buffer on an output stream param out stream the output stream to use param block size the block size to use param record size the record size to use end_comment begin_specifier end_specifier begin_name tar buffer end_name begin_parameter_list begin_param begin_decl begin_type begin_name output stream end_name end_type begin_name out stream end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name block size end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name record size end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name in stream end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name out stream end_name end_name begin_operator EQ end_operator begin_name out stream end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name initialize end_name end_name begin_argument_list begin_argument begin_expr begin_name block size end_name end_expr end_argument begin_argument begin_expr begin_name record size end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment set the file which should have its access attributes modified param src the file to modify end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set file end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name src end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name file set end_name end_type begin_name fs end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file set end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name fs end_name begin_operator DOT end_operator begin_name set file end_name end_name begin_argument_list begin_argument begin_expr begin_name src end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add fileset end_name begin_argument_list begin_argument begin_expr begin_name fs end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name remove ns definitions end_name begin_parameter_list begin_param begin_decl begin_type begin_name element end_name end_type begin_name element end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name array list end_name end_type begin_name al end_name begin_init begin_expr begin_operator LPAR end_operator begin_name array list end_name begin_operator RPAR end_operator begin_call begin_name begin_name ns uri by element end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name element end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name al end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name iterator end_name end_type begin_name iter end_name begin_init begin_expr begin_call begin_name begin_name al end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ns prefix map end_name begin_operator DOT end_operator begin_name remove end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_call begin_name begin_name ns uri by element end_name begin_operator DOT end_operator begin_name remove end_name end_name begin_argument_list begin_argument begin_expr begin_name element end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment set a file to store the property output if this is never specified then the output will be sent to the ant log param destfile file to store the property output end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set destfile end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name destfile end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name destfile end_name end_name begin_operator EQ end_operator begin_name destfile end_name end_expr end_expr_stmt end_block 
 begin_comment file is not found in specified filepath end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test search in path not there end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name execute target end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert null end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name unknown element end_name end_type begin_name copy end_name begin_parameter_list begin_param begin_decl begin_type begin_name unknown element end_name end_type begin_name ue end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name unknown element end_name end_type begin_name ret end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name unknown element end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ue end_name begin_operator DOT end_operator begin_name get tag end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ret end_name begin_operator DOT end_operator begin_name set namespace end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ue end_name begin_operator DOT end_operator begin_name get namespace end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ret end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ret end_name begin_operator DOT end_operator begin_name set q name end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ue end_name begin_operator DOT end_operator begin_name get q name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ret end_name begin_operator DOT end_operator begin_name set task type end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ue end_name begin_operator DOT end_operator begin_name get task type end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ret end_name begin_operator DOT end_operator begin_name set task name end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ue end_name begin_operator DOT end_operator begin_name get task name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ret end_name begin_operator DOT end_operator begin_name set location end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name macro def end_name begin_operator DOT end_operator begin_name get back trace end_name end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_call begin_name begin_name ue end_name begin_operator DOT end_operator begin_name get location end_name end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name get owning target end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name target end_name end_type begin_name t end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name target end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name t end_name begin_operator DOT end_operator begin_name set project end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ret end_name begin_operator DOT end_operator begin_name set owning target end_name end_name begin_argument_list begin_argument begin_expr begin_name t end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ret end_name begin_operator DOT end_operator begin_name set owning target end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get owning target end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_decl_stmt begin_decl begin_type begin_name runtime configurable end_name end_type begin_name rc end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name runtime configurable end_name begin_argument_list begin_argument begin_expr begin_name ret end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name ue end_name begin_operator DOT end_operator begin_name get task name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name rc end_name begin_operator DOT end_operator begin_name set poly type end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ue end_name begin_operator DOT end_operator begin_name get wrapper end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get poly type end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name map end_name end_type begin_name m end_name begin_init begin_expr begin_call begin_name begin_name ue end_name begin_operator DOT end_operator begin_name get wrapper end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get attribute map end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name m end_name begin_operator DOT end_operator begin_name entry set end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name map end_name begin_operator DOT end_operator begin_name entry end_name end_name end_type begin_name entry end_name begin_init begin_expr begin_operator LPAR end_operator begin_name begin_name map end_name begin_operator DOT end_operator begin_name entry end_name end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name rc end_name begin_operator DOT end_operator begin_name set attribute end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get key end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name macro subs end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name local attributes end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name rc end_name begin_operator DOT end_operator begin_name add text end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name macro subs end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ue end_name begin_operator DOT end_operator begin_name get wrapper end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get text end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name local attributes end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name enumeration end_name end_type begin_name e end_name begin_init begin_expr begin_call begin_name begin_name ue end_name begin_operator DOT end_operator begin_name get wrapper end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get children end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name runtime configurable end_name end_type begin_name r end_name begin_init begin_expr begin_operator LPAR end_operator begin_name runtime configurable end_name begin_operator RPAR end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name unknown element end_name end_type begin_name unknown element end_name begin_init begin_expr begin_operator LPAR end_operator begin_name unknown element end_name begin_operator RPAR end_operator begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name get proxy end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name tag end_name begin_init begin_expr begin_call begin_name begin_name unknown element end_name begin_operator DOT end_operator begin_name get task type end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name tag end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name tag end_name begin_operator EQ end_operator begin_call begin_name begin_name tag end_name begin_operator DOT end_operator begin_name to lower case end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name locale end_name begin_operator DOT end_operator begin_name us end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name begin_name macro def end_name begin_operator DOT end_operator begin_name template element end_name end_name end_type begin_name template element end_name begin_init begin_expr begin_operator LPAR end_operator begin_name begin_name macro def end_name begin_operator DOT end_operator begin_name template element end_name end_name begin_operator RPAR end_operator begin_call begin_name get ns elements end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get end_name begin_argument_list begin_argument begin_expr begin_name tag end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name template element end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name unknown element end_name end_type begin_name child end_name begin_init begin_expr begin_call begin_name copy end_name begin_argument_list begin_argument begin_expr begin_name unknown element end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name rc end_name begin_operator DOT end_operator begin_name add child end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name child end_name begin_operator DOT end_operator begin_name get wrapper end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ret end_name begin_operator DOT end_operator begin_name add child end_name end_name begin_argument_list begin_argument begin_expr begin_name child end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name template element end_name begin_operator DOT end_operator begin_name is implicit end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name unknown elements end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name template element end_name begin_operator DOT end_operator begin_name is optional end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name template element end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name unknown elements end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name unknown element end_name end_type begin_name child end_name begin_init begin_expr begin_call begin_name copy end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name unknown element end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name rc end_name begin_operator DOT end_operator begin_name add child end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name child end_name begin_operator DOT end_operator begin_name get wrapper end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ret end_name begin_operator DOT end_operator begin_name add child end_name end_name begin_argument_list begin_argument begin_expr begin_name child end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name unknown element end_name end_type begin_name present element end_name begin_init begin_expr begin_operator LPAR end_operator begin_name unknown element end_name begin_operator RPAR end_operator begin_call begin_name begin_name present elements end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name tag end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name present element end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name template element end_name begin_operator DOT end_operator begin_name is optional end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name template element end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_continue end_continue end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name present text end_name begin_init begin_expr begin_call begin_name begin_name present element end_name begin_operator DOT end_operator begin_name get wrapper end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get text end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name present text end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name rc end_name begin_operator DOT end_operator begin_name add text end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name macro subs end_name begin_argument_list begin_argument begin_expr begin_name present text end_name end_expr end_argument begin_argument begin_expr begin_name local attributes end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name list end_name end_type begin_name list end_name begin_init begin_expr begin_call begin_name begin_name present element end_name begin_operator DOT end_operator begin_name get children end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name list end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name iterator end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name list end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name unknown element end_name end_type begin_name child end_name begin_init begin_expr begin_call begin_name copy end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name unknown element end_name begin_operator RPAR end_operator begin_call begin_name begin_name i end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name rc end_name begin_operator DOT end_operator begin_name add child end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name child end_name begin_operator DOT end_operator begin_name get wrapper end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name ret end_name begin_operator DOT end_operator begin_name add child end_name end_name begin_argument_list begin_argument begin_expr begin_name child end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if end_block end_else end_if end_else end_if end_block end_while begin_return begin_expr begin_name ret end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test contains end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect property set end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment prevent the use of the addsourcefile atribute ant attribute ignore true param b a user supplied boolean we won t accept end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set addsourcefile end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name get task type end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get location end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_comment not significant for the class loader end_comment begin_comment empty implementation to satisfy the build listener interface param event the target finished event end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name target finished end_name begin_parameter_list begin_param begin_decl begin_type begin_name build event end_name end_type begin_name event end_name end_decl end_param end_parameter_list begin_block begin_comment not significant for the class loader end_comment end_block 
 begin_comment resolve this constant pool entry with respect to its dependents in the constant pool param constant pool the constant pool of which this entry is a member and against which this entry is to be resolved end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name resolve end_name begin_parameter_list begin_param begin_decl begin_type begin_name constant pool end_name end_type begin_name constant pool end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name name end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name utf 8 cp info end_name begin_operator RPAR end_operator begin_call begin_name begin_name constant pool end_name begin_operator DOT end_operator begin_name get entry end_name end_name begin_argument_list begin_argument begin_expr begin_name name index end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name type end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name utf 8 cp info end_name begin_operator RPAR end_operator begin_call begin_name begin_name constant pool end_name begin_operator DOT end_operator begin_name get entry end_name end_name begin_argument_list begin_argument begin_expr begin_name descriptor index end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name resolve end_name end_name begin_argument_list begin_argument begin_expr begin_name constant pool end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment add the input file mapper param input mapper code mapper code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add configured input mapper end_name begin_parameter_list begin_param begin_decl begin_type begin_name mapper end_name end_type begin_name input mapper end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name no children allowed end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name input mapper end_name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name using input end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name input mapper end_name end_name begin_operator EQ end_operator begin_name input mapper end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name file end_name end_type begin_name get generated file end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name generated file name end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name buffered reader end_name end_type begin_name in end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name buffered reader end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file reader end_name begin_argument_list begin_argument begin_expr begin_name target file end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name line end_name end_decl end_decl_stmt begin_while begin_condition begin_expr begin_operator LPAR end_operator begin_name line end_name begin_operator EQ end_operator begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name read line end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name extends index end_name begin_init begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_name extends index end_name begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name generated file name end_name begin_operator EQ end_operator begin_call begin_name begin_name line end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name extends index end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name trim end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_break end_break end_block end_then end_if end_block end_while begin_expr_stmt begin_expr begin_call begin_name begin_name in end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_if begin_condition begin_expr begin_name generated file name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_return begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_name output directory end_name end_expr end_argument begin_argument begin_expr begin_name generated file name end_name begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name html end_name begin_operator QM end_operator begin_operator DP end_operator begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment fulfill the resource collection contract return number of elements as int since ant 1 7 end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name size end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name dir set end_name begin_operator RPAR end_operator begin_call begin_name get ref end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name size end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr begin_call begin_name get directory scanner end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get included dirs count end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment add a depth selector entry on the selector list param selector the selector to be added end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add depth end_name begin_parameter_list begin_param begin_decl begin_type begin_name depth selector end_name end_type begin_name selector end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name used matching task end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name add depth end_name end_name begin_argument_list begin_argument begin_expr begin_name selector end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment override of the base class init it can be much simpler since the action to be taken is simply to delete the local files no further interaction with the repository is necessary param local folder the local folder from which the mappings will be made param remote folder not used in this implementation end_comment begin_type begin_name unmatched file map end_name end_type begin_name init end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name end_type begin_name local folder end_name end_decl end_param begin_param begin_decl begin_type begin_name folder end_name end_type begin_name remote folder end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name local folder end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name this end_name end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name local files end_name begin_init begin_expr begin_call begin_name begin_name local folder end_name begin_operator DOT end_operator begin_name list end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment pr 31965 says that it can return null end_comment begin_if begin_condition begin_expr begin_name local files end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_name this end_name end_expr end_return end_block end_then end_if begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name local files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name end_type begin_name local file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name begin_argument_list begin_argument begin_expr begin_name local folder end_name end_expr end_argument begin_argument begin_expr begin_name begin_name local files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get absolute file end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name local file end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name local file end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name local file end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name local file end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_for begin_return begin_expr begin_name this end_name end_expr end_return end_block 
 begin_comment the base directory to use param base dir the base directory to use if null use the project s basedir end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set base dir end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name base dir end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name base dir end_name end_name begin_operator EQ end_operator begin_name base dir end_name end_expr end_expr_stmt end_block 
 begin_comment set the timeout value in milliseconds p if the operation is running for more than this value the jdepend will be canceled works only when in fork mode p param value the maximum time in milliseconds allowed before declaring the test as timed out see set fork boolean end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set timeout end_name begin_parameter_list begin_param begin_decl begin_type begin_name long end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name timeout end_name begin_operator EQ end_operator begin_name value end_name end_expr end_expr_stmt end_block 
 begin_comment set the string to use as input param input string the string which is used as the input source end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set input string end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name input string end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_throw begin_expr begin_call begin_name too many attributes end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name using input end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name build exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name input string end_name end_name begin_operator EQ end_operator begin_name input string end_name end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set up end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name configure project end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment create the default compiler for this platform return the default compiler end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name compiler end_name end_type begin_name create default compiler end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name compiler end_name end_type begin_name c end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name compiler end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name compiler name end_name end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name compiler name end_name begin_operator EQ end_operator begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name is family end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator QM end_operator begin_name compiler ms end_name begin_operator DP end_operator begin_name compiler mono end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name set value end_name end_name begin_argument_list begin_argument begin_expr begin_name compiler name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name c end_name end_expr end_return end_block 
 begin_comment get any exception that got thrown during execution return an exception or null for no exception not yet finished end_comment begin_type begin_specifier end_specifier begin_name throwable end_name end_type begin_name get exception end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name exception end_name end_expr end_return end_block 
 begin_comment see directory scanner get not included directories end_comment begin_comment inherit doc end_comment begin_type begin_specifier end_specifier begin_name string end_name begin_index end_index end_type begin_name get not included directories end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block 
 begin_comment xxx jon skeet the comment if it hasn t been done already may end_comment begin_comment not be strictly true wrapper maybe configure won t configure the same end_comment begin_comment attributes text more than once but it may well add the children again end_comment begin_comment unless i ve missed something end_comment begin_comment configures this task if it hasn t been done already if the task has been invalidated it is replaced with an unknown element task which uses the new definition in the project exception build exception if the task cannot be configured end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name maybe configure end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name build exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name invalid end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name wrapper end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name wrapper end_name begin_operator DOT end_operator begin_name maybe configure end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name get replacement end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment returns a file object that defines the root of the local checkout tree depending on the value of target folder absolute this will be either the target folder exactly as set by the user or the path formed by appending the default folder onto the specified target folder param v view from which the file is checked out supplies the default folder param root source folder root folder of the checkout operation in star team return an object referencing the local file see get target folder absolute end_comment begin_type begin_specifier end_specifier begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name end_type begin_name calc target folder end_name begin_parameter_list begin_param begin_decl begin_type begin_name view end_name end_type begin_name v end_name end_decl end_param begin_param begin_decl begin_type begin_name folder end_name end_type begin_name root source folder end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name end_type begin_name root end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get target folder end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name get target folder absolute end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment create a variable dir that contains the name of end_comment begin_comment the star team folder that is the root folder in this view end_comment begin_comment get the default path to the current view end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name default path end_name begin_init begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name get default path end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment convert whatever separator char is in starteam to that of the target system end_comment begin_expr_stmt begin_expr begin_name default path end_name begin_operator EQ end_operator begin_call begin_name begin_name default path end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name default path end_name begin_operator EQ end_operator begin_call begin_name begin_name default path end_name begin_operator DOT end_operator begin_name replace end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name begin_operator DOT end_operator begin_name separator char end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name end_type begin_name dir end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name begin_argument_list begin_argument begin_expr begin_name default path end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name dir name end_name begin_init begin_expr begin_call begin_name begin_name dir end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment if it ends with separator then strip it off end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name dir name end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr begin_name delim end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name dir name end_name begin_operator EQ end_operator begin_call begin_name begin_name dir name end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name dir name end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment replace the project name in the file s absolute path to the view name end_comment begin_comment this makes the root target of a checkout operation equal to end_comment begin_comment target folder dir name end_comment begin_decl_stmt begin_decl begin_type begin_name string tokenizer end_name end_type begin_name path tokenizer end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string tokenizer end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name root source folder end_name begin_operator DOT end_operator begin_name get folder hierarchy end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name delim end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name current token end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name found root end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name path tokenizer end_name begin_operator DOT end_operator begin_name has more tokens end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name current token end_name begin_operator EQ end_operator begin_call begin_name begin_name path tokenizer end_name begin_operator DOT end_operator begin_name next token end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name current token end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get project name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_name found root end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name current token end_name begin_operator EQ end_operator begin_name dir name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name found root end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_comment only want to do this the first time end_comment end_block end_then end_if begin_expr_stmt begin_expr begin_name root end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name end_name begin_argument_list begin_argument begin_expr begin_name root end_name end_expr end_argument begin_argument begin_expr begin_name current token end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block end_then end_if begin_return begin_expr begin_name root end_name end_expr end_return end_block 
 begin_comment sets the pathname to be locked param pname pathname to be locked end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set pname end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name pname end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m pname end_name begin_operator EQ end_operator begin_name pname end_name end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name monitored build end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name build file end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name target end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name my build file end_name begin_operator EQ end_operator begin_name build file end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name target end_name end_name begin_operator EQ end_operator begin_name target end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name project end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name project end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name project end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name project end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name init end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project end_name begin_operator DOT end_operator begin_name set user property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name my build file end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name project helper end_name begin_operator DOT end_operator begin_name configure project end_name end_name begin_argument_list begin_argument begin_expr begin_name project end_name end_expr end_argument begin_argument begin_expr begin_name my build file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment if true do not checkout element after creation param co the status to set the flag to end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set no checkout end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name co end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name m noco end_name begin_operator EQ end_operator begin_name co end_name end_expr end_expr_stmt end_block 
 begin_comment query the debug flag return true if debug is turned on end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name get debug end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name debug end_name end_expr end_return end_block 
 begin_comment get the modification time in milliseconds since 01 01 1970 return 0 if the resource does not exist end_comment begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name get last modified end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name is reference end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name resource end_name begin_operator RPAR end_operator begin_call begin_name get checked ref end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get last modified end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_call begin_name get not null file end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name last modified end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment search for the given resource and add the directory or archive that contains it to the classpath p doesn t work for archives in jdk 1 1 as the url returned by get resource doesn t contain the name of the archive p param resource the resource name to search for end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add classpath entry end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name resource end_name end_decl end_param end_parameter_list begin_block begin_comment pre ant 1 6 this method used to call get class get resource while ant 1 6 will call class loader get resource the difference is that class get resource expects a leading slash for absolute resources and will strip it before delegating to class loader get resource so we now have to emulate class s behavior end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name resource end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name resource end_name begin_operator EQ end_operator begin_call begin_name begin_name resource end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name resource end_name begin_operator EQ end_operator begin_operator PLUS end_operator begin_name resource end_name end_expr end_expr_stmt end_block end_else end_if begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name f end_name begin_init begin_expr begin_call begin_name begin_name loader utils end_name begin_operator DOT end_operator begin_name get resource source end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get class end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get class loader end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name resource end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name f end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg debug end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name create classpath end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set location end_name begin_argument_list begin_argument begin_expr begin_name f end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name log end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name resource end_name end_expr end_argument begin_argument begin_expr begin_name begin_name project end_name begin_operator DOT end_operator begin_name msg verbose end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test bad no class path end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name expect build exception containing end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert property unset end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
