 begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name boolean end_name end_type begin_name equals end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name o end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name o end_name begin_operator UNP end_operator begin_name sample end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name compare to end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name sample end_name begin_operator RPAR end_operator begin_name o end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment this method is used to do some low cost defensive programming it is called when a condition that the program logic should prevent from happening occurs i hope this will help early detection of logical bugs in property value handling throws error always throws an error end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name should never happen end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name msg end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name error end_name end_expr end_argument end_throws begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name error end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_comment the password can be defined as a property this dialogue is provided to allow it to be entered at run time however this does not gain much as the dialogue does not yet support hidden input end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get password end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name password end_name begin_init begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name defaultpw end_name end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator EQT end_operator begin_name password end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name gui package end_name end_type begin_name gui instance end_name begin_init begin_expr begin_call begin_name begin_name gui package end_name begin_operator DOT end_operator begin_name get instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name gui instance end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_synchronized begin_expr begin_name this end_name end_expr begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name defaultpw end_name end_name begin_operator EQ end_operator begin_call begin_name begin_name j option pane end_name begin_operator DOT end_operator begin_name show input dialog end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name gui instance end_name begin_operator DOT end_operator begin_name get main frame end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name j meter utils end_name begin_operator DOT end_operator begin_name get res string end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_comment non nls 1 end_comment begin_argument begin_expr begin_call begin_name begin_name j meter utils end_name begin_operator DOT end_operator begin_name get res string end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_comment non nls 1 end_comment begin_argument begin_expr begin_name begin_name j option pane end_name begin_operator DOT end_operator begin_name question message end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name set property end_name end_name begin_argument_list begin_argument begin_expr begin_name key store password end_name end_expr end_argument begin_argument begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name defaultpw end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name password end_name begin_operator EQ end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name defaultpw end_name end_name end_expr end_expr_stmt end_block end_synchronized end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_return begin_expr begin_name password end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name boolean end_name end_type begin_name is expression end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name text end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name text end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator MINUS end_operator end_expr end_return begin_comment non nls 1 end_comment end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name begin_name collection end_name begin_argument_list begin_argument begin_name object end_name end_argument end_argument_list end_name end_type begin_name get objects end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name class end_name begin_argument_list begin_argument begin_name end_name end_argument end_argument_list end_name end_type begin_name extends class end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name ex name end_name begin_init begin_expr begin_call begin_name begin_name extends class end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name my this end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name iterator end_name begin_argument_list begin_argument begin_name string end_name end_argument end_argument_list end_name end_type begin_name classes end_name begin_init begin_expr begin_call begin_name begin_name class finder end_name begin_operator DOT end_operator begin_name find classes that extend end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name j meter utils end_name begin_operator DOT end_operator begin_name get search paths end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name class end_name begin_index end_index end_name begin_block begin_expr begin_name extends class end_name end_expr end_block end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name list end_name begin_argument_list begin_argument begin_name object end_name end_argument end_argument_list end_name end_type begin_name objects end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name linked list end_name begin_argument_list begin_argument begin_name object end_name end_argument end_argument_list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name n end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name caught error end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name throwable end_name end_type begin_name caught end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_while begin_condition begin_expr begin_call begin_name begin_name classes end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_name n end_name begin_operator EQ end_operator begin_call begin_name begin_name classes end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name n end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue begin_comment don t try to instantiate remote server end_comment end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name begin_name class end_name begin_argument_list begin_argument begin_name end_name end_argument end_argument_list end_name end_type begin_name c end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name c end_name begin_operator EQ end_operator begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name n end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_comment try with a parameter less constructor first end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name objects end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name instantiation exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name caught end_name begin_operator EQ end_operator begin_name e end_name end_expr end_expr_stmt begin_comment system out println e to string end_comment begin_try begin_block begin_comment events often have this constructor end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name objects end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name get constructor end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name class end_name begin_index end_index end_name begin_block begin_expr begin_name begin_name object end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_block end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name new instance end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index end_index end_name begin_block begin_expr begin_name my this end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no such method exception end_name end_type begin_name f end_name end_decl end_param end_parameter_list begin_block begin_comment no luck ignore this class end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name ex name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name n end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_catch end_try end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no class def found error end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment no luck ignore this class end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name ex name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name n end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal access exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name caught end_name begin_operator EQ end_operator begin_name e end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name ex name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name n end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment we won t test restricted access classes end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name headless exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name caught end_name begin_operator EQ end_operator begin_name e end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name n end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name caught end_name begin_operator EQ end_operator begin_name e end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name e end_name begin_operator UNP end_operator begin_name remote exception end_name end_expr end_condition begin_then begin_block begin_comment not thrown so need to check here end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name n end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name n end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_block end_catch end_try end_block end_while begin_expr_stmt begin_expr begin_name caught error end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block begin_finally begin_block begin_if begin_condition begin_expr begin_name caught error end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name n end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name objects end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name caught end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try begin_if begin_condition begin_expr begin_call begin_name begin_name objects end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name ex name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name begin_name ss end_name begin_index end_index end_name begin_init begin_expr begin_call begin_name begin_name j meter utils end_name begin_operator DOT end_operator begin_name get search paths end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name ss end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name ss end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name class path shown end_name end_expr end_condition begin_then begin_block begin_comment only dump it once end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name cp end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name begin_name cpe end_name begin_index end_index end_name begin_init begin_expr begin_call begin_name begin_name j orphan utils end_name begin_operator DOT end_operator begin_name split end_name end_name begin_argument_list begin_argument begin_expr begin_name cp end_name end_expr end_argument begin_argument begin_expr begin_name begin_name java end_name begin_operator DOT end_operator begin_name io end_name begin_operator DOT end_operator begin_name file end_name begin_operator DOT end_operator begin_name path separator end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name cpe end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name cpe end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_name class path shown end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_return begin_expr begin_name objects end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name report tree node end_name end_type begin_name add component end_name begin_parameter_list begin_param begin_decl begin_type begin_name test element end_name end_type begin_name component end_name end_decl end_param begin_param begin_decl begin_type begin_name report tree node end_name end_type begin_name node end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name illegal user action exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name node end_name begin_operator DOT end_operator begin_name get user object end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name abstract config gui end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name illegal user action exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name report gui package end_name begin_operator DOT end_operator begin_name get instance end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name update current node end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name j meter gui component end_name end_type begin_name guicomp end_name begin_init begin_expr begin_call begin_name begin_name report gui package end_name begin_operator DOT end_operator begin_name get instance end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get gui end_name begin_argument_list begin_argument begin_expr begin_name component end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name guicomp end_name begin_operator DOT end_operator begin_name configure end_name end_name begin_argument_list begin_argument begin_expr begin_name component end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name guicomp end_name begin_operator DOT end_operator begin_name modify test element end_name end_name begin_argument_list begin_argument begin_expr begin_name component end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name report gui package end_name begin_operator DOT end_operator begin_name get instance end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get current gui end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment put the gui object back end_comment begin_comment to the way it was end_comment begin_decl_stmt begin_decl begin_type begin_name report tree node end_name end_type begin_name new node end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name report tree node end_name begin_argument_list begin_argument begin_expr begin_name component end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment this check the state of the test element and if returns false it end_comment begin_comment disable the loaded node end_comment begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name new node end_name begin_operator DOT end_operator begin_name set enabled end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name component end_name begin_operator DOT end_operator begin_name is enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name new node end_name begin_operator DOT end_operator begin_name set enabled end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name insert node into end_name end_name begin_argument_list begin_argument begin_expr begin_name new node end_name end_expr end_argument begin_argument begin_expr begin_name node end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name node end_name begin_operator DOT end_operator begin_name get child count end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name new node end_name end_expr end_return end_block 
 begin_comment end_comment begin_comment deprecated values in a multipart form data are not urlencoded end_comment begin_comment so it does not make sense to add a value as a encoded value end_comment begin_comment end_comment begin_comment public void add encoded argument string name string value end_comment begin_comment arguments my args get arguments end_comment begin_comment http argument arg new http argument name value true end_comment begin_comment if arg get name equals arg get encoded name arg get value equals arg get encoded value end_comment begin_comment arg set always encoded false end_comment begin_comment end_comment begin_comment my args add argument arg end_comment begin_comment end_comment begin_comment add a value that is not url encoded and make sure it appears in the gui that it will not be encoded when the request is sent param name param value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add non encoded argument end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name arguments end_name end_type begin_name my args end_name begin_init begin_expr begin_call begin_name get arguments end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment the value is not encoded end_comment begin_decl_stmt begin_decl begin_type begin_name http argument end_name end_type begin_name arg end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name http argument end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment let the gui show that it will not be encoded end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name set always encoded end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name my args end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr begin_name arg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name subtract node end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name http sample result end_name end_type begin_name sample end_name begin_parameter_list begin_param begin_decl begin_type begin_name url end_name end_type begin_name url end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name method end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name are following redirect end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name frame depth end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name url str end_name begin_init begin_expr begin_call begin_name begin_name url end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name url str end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name post method end_name end_type begin_name http method end_name end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name http method end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name post method end_name begin_argument_list begin_argument begin_expr begin_name url str end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name http sample result end_name end_type begin_name res end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name http sample result end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set monitor end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set sample label end_name end_name begin_argument_list begin_argument begin_expr begin_name url str end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set http method end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name post end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set url end_name end_name begin_argument_list begin_argument begin_expr begin_name url end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name sample start end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment count the retries as well in the time end_comment begin_decl_stmt begin_decl begin_type begin_name http client end_name end_type begin_name client end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name instream end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name content len end_name begin_init begin_expr begin_call begin_name set post headers end_name begin_argument_list begin_argument begin_expr begin_name http method end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name client end_name begin_operator EQ end_operator begin_call begin_name setup connection end_name begin_argument_list begin_argument begin_expr begin_name url end_name end_expr end_argument begin_argument begin_expr begin_name http method end_name end_expr end_argument begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set saved client end_name begin_argument_list begin_argument begin_expr begin_name client end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set query string end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name send post data end_name begin_argument_list begin_argument begin_expr begin_name http method end_name end_expr end_argument begin_argument begin_expr begin_name content len end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name status code end_name begin_init begin_expr begin_call begin_name begin_name client end_name begin_operator DOT end_operator begin_name execute method end_name end_name begin_argument_list begin_argument begin_expr begin_name http method end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment some headers are set by execute method end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set request headers end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get connection headers end_name begin_argument_list begin_argument begin_expr begin_name http method end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment request sent now get the response end_comment begin_expr_stmt begin_expr begin_name instream end_name begin_operator EQ end_operator begin_call begin_name begin_name http method end_name begin_operator DOT end_operator begin_name get response body as stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name instream end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment will be null for head end_comment begin_decl_stmt begin_decl begin_type begin_name begin_name org end_name begin_operator DOT end_operator begin_name apache end_name begin_operator DOT end_operator begin_name commons end_name begin_operator DOT end_operator begin_name httpclient end_name begin_operator DOT end_operator begin_name header end_name end_name end_type begin_name response header end_name begin_init begin_expr begin_call begin_name begin_name http method end_name begin_operator DOT end_operator begin_name get response header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content encoding end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name response header end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name encoding gzip end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name response header end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name instream end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name gzip input stream end_name begin_argument_list begin_argument begin_expr begin_name instream end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment int content length http method get response content length not visible end_comment begin_comment todo size ouststream according to actual content length end_comment begin_decl_stmt begin_decl begin_type begin_name byte array output stream end_name end_type begin_name outstream end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name byte array output stream end_name begin_argument_list begin_argument begin_expr begin_operator STAR end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment content length 0 content length default initial buffer size end_comment begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name buffer end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name byte end_name begin_index begin_expr end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name len end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name first end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment first response end_comment begin_while begin_condition begin_expr begin_operator LPAR end_operator begin_name len end_name begin_operator EQ end_operator begin_call begin_name begin_name instream end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator GT end_operator end_expr end_condition begin_block begin_if begin_condition begin_expr begin_name first end_name end_expr end_condition begin_then begin_block begin_comment save the latency end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name latency end end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name first end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name outstream end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name len end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set response data end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name outstream end_name begin_operator DOT end_operator begin_name to byte array end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name outstream end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name sample end end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment done with the sampling proper end_comment begin_comment now collect the results into the http sample result end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set sample label end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name http method end_name begin_operator DOT end_operator begin_name get uri end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment pick up actual path after redirects end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set response code end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name integer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list begin_argument begin_expr begin_name status code end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set successful end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name is success code end_name begin_argument_list begin_argument begin_expr begin_name status code end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set response message end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name http method end_name begin_operator DOT end_operator begin_name get status text end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment set up the defaults may be overridden below end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set data encoding end_name end_name begin_argument_list begin_argument begin_expr begin_name encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set content type end_name end_name begin_argument_list begin_argument begin_expr begin_name default content type end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name ct end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name org end_name begin_operator DOT end_operator begin_name apache end_name begin_operator DOT end_operator begin_name commons end_name begin_operator DOT end_operator begin_name httpclient end_name begin_operator DOT end_operator begin_name header end_name end_name end_type begin_name h end_name begin_init begin_expr begin_call begin_name begin_name http method end_name begin_operator DOT end_operator begin_name get response header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name h end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_comment can be missing e g on redirect end_comment begin_block begin_expr_stmt begin_expr begin_name ct end_name begin_operator EQ end_operator begin_call begin_name begin_name h end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set content type end_name end_name begin_argument_list begin_argument begin_expr begin_name ct end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment e g text html charset iso 8859 1 end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set encoding and type end_name end_name begin_argument_list begin_argument begin_expr begin_name ct end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set response headers end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get response headers end_name begin_argument_list begin_argument begin_expr begin_name http method end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name is redirect end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set redirect location end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name http method end_name begin_operator DOT end_operator begin_name get response header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header location end_name end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment if we redirected automatically the url may have changed end_comment begin_if begin_condition begin_expr begin_call begin_name get auto redirects end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set url end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name url end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name http method end_name begin_operator DOT end_operator begin_name get uri end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment store any cookies received in the cookie manager end_comment begin_expr_stmt begin_expr begin_call begin_name save connection cookies end_name begin_argument_list begin_argument begin_expr begin_name http method end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name get url end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get cookie manager end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment save cache information end_comment begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name cache manager end_name end_type begin_name cache manager end_name begin_init begin_expr begin_call begin_name get cache manager end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name cache manager end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cache manager end_name begin_operator DOT end_operator begin_name save details end_name end_name begin_argument_list begin_argument begin_expr begin_name http method end_name end_expr end_argument begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment follow redirects and download page resources if appropriate end_comment begin_expr_stmt begin_expr begin_name res end_name begin_operator EQ end_operator begin_call begin_name result processing end_name begin_argument_list begin_argument begin_expr begin_name are following redirect end_name end_expr end_argument begin_argument begin_expr begin_name frame depth end_name end_expr end_argument begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name http method end_name begin_operator DOT end_operator begin_name release connection end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name res end_name end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal argument exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_comment e g some kinds of invalid url end_comment begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name sample end end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name error result end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name res end_name end_expr end_return end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name sample end end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name error result end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name res end_name end_expr end_return end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name j orphan utils end_name begin_operator DOT end_operator begin_name close quietly end_name end_name begin_argument_list begin_argument begin_expr begin_name instream end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set saved client end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name http method end_name begin_operator DOT end_operator begin_name release connection end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment main processing method for the proxy object end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name run end_name begin_parameter_list end_parameter_list begin_block begin_comment check which http sampler class we should use end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name http sampler name end_name begin_init begin_expr begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name get sampler type name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name http request hdr end_name end_type begin_name request end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name http request hdr end_name begin_argument_list begin_argument begin_expr begin_name http sampler name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name sample result end_name end_type begin_name result end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name header manager end_name end_type begin_name headers end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name http sampler base end_name end_type begin_name sampler end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_comment now parse initial request in case it is a connect request end_comment begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name ba end_name begin_init begin_expr begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name parse end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name buffered input stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name client socket end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name begin_name ba end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name j meter exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_name ba end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name out stream client end_name begin_operator EQ end_operator begin_call begin_name begin_name client socket end_name begin_operator DOT end_operator begin_name get output stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name get method end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name starts with end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name connect end_name end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name out stream client end_name begin_operator UNP end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment write a ok reponse to browser to engage ssl exchange end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name out stream client end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get bytes end_name begin_argument_list begin_argument begin_expr begin_name begin_name sample result end_name begin_operator DOT end_operator begin_name default http encoding end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name out stream client end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment with ssl request url is host port without https or path end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name param end_name begin_init begin_expr begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name get url end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name split end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment non nls 1 end_comment begin_if begin_condition begin_expr begin_name begin_name param end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name param end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name client socket end_name begin_operator EQ end_operator begin_call begin_name start ssl end_name begin_argument_list begin_argument begin_expr begin_name client socket end_name end_expr end_argument begin_argument begin_expr begin_name begin_name param end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment should not happen but if it does we don t want to continue end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name get url end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name j meter exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_else end_if begin_comment re parse now it s the http request over ssl end_comment begin_try begin_block begin_expr_stmt begin_expr begin_name ba end_name begin_operator EQ end_operator begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name parse end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name buffered input stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name client socket end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_comment most likely this is because of a certificate error end_comment begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name url end_name begin_init begin_expr begin_name begin_name param end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator begin_operator QM end_operator begin_operator PLUS end_operator begin_name begin_name param end_name begin_index begin_expr end_expr end_index end_name begin_operator PLUS end_operator begin_operator DP end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name url end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name ioe end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment won t work write error to client http reply hdr form internal error end_comment begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name generate error result end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name ioe end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment generate result if nec and populate it end_comment begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name j meter exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_name ba end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name ba end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name get url end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name j meter exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name sampler creator end_name end_type begin_name sampler creator end_name begin_init begin_expr begin_call begin_name begin_name samplerfactory end_name begin_operator DOT end_operator begin_name get sampler creator end_name end_name begin_argument_list begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name page encodings end_name end_expr end_argument begin_argument begin_expr begin_name form encodings end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name sampler end_name begin_operator EQ end_operator begin_call begin_name begin_name sampler creator end_name begin_operator DOT end_operator begin_name create and populate sampler end_name end_name begin_argument_list begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name page encodings end_name end_expr end_argument begin_argument begin_expr begin_name form encodings end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment create a header manager to ensure that the browsers headers are captured and sent to the server end_comment begin_expr_stmt begin_expr begin_name headers end_name begin_operator EQ end_operator begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name get header manager end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name set header manager end_name end_name begin_argument_list begin_argument begin_expr begin_name headers end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name thread started end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment needed for http sampler 2 end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name get method end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name get url end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name sample end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment find the page encoding and possibly encodings for forms in the page end_comment begin_comment in the response from the web server end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name page encoding end_name begin_init begin_expr begin_call begin_name add page encoding end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name add form encodings end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_name page encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write to client end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name buffered output stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name client socket end_name begin_operator DOT end_operator begin_name get output stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sampler creator end_name begin_operator DOT end_operator begin_name post process sampler end_name end_name begin_argument_list begin_argument begin_expr begin_name sampler end_name end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name j meter exception end_name end_type begin_name jme end_name end_decl end_param end_parameter_list begin_block begin_comment ignored already processed end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name unknown host exception end_name end_type begin_name uhe end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name uhe end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write error to client end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name http reply hdr end_name begin_operator DOT end_operator begin_name form server not found end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name generate error result end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name uhe end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment generate result if nec and populate it end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal argument exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write error to client end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name http reply hdr end_name begin_operator DOT end_operator begin_name form not implemented end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name generate error result end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment generate result if nec and populate it end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write error to client end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name http reply hdr end_name begin_operator DOT end_operator begin_name form internal error end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name generate error result end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment generate result if nec and populate it end_comment end_block end_catch begin_finally begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name sampler end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_comment we don t want to store any cookies in the generated test plan end_comment begin_if begin_condition begin_expr begin_name headers end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name headers end_name begin_operator DOT end_operator begin_name remove header named end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header cookie end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment always remove cookies end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name headers end_name begin_operator DOT end_operator begin_name remove header named end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header authorization end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment always remove authorization end_comment begin_comment remove additional headers end_comment begin_for begin_init begin_decl begin_type begin_name string end_name end_type begin_name hdr end_name begin_range begin_expr begin_name headers to remove end_name end_expr end_range end_decl end_init begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name headers end_name begin_operator DOT end_operator begin_name remove header named end_name end_name begin_argument_list begin_argument begin_expr begin_name hdr end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if begin_if begin_condition begin_expr begin_name result end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_comment deliver sampler allows sampler to be null but result must not be null end_comment begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name deliver sampler end_name end_name begin_argument_list begin_argument begin_expr begin_name sampler end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name test element end_name begin_index end_index end_name begin_block begin_expr begin_name capture http headers end_name begin_operator QM end_operator begin_name headers end_name begin_operator DP end_operator end_expr end_block end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name client socket end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_if begin_condition begin_expr begin_name sampler end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name thread finished end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment needed for http sampler 2 end_comment end_block end_then end_if end_block end_finally end_try end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_specifier end_specifier begin_name long end_name end_type begin_name get test start time end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name test start end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_specifier end_specifier begin_name long end_name end_type begin_name get test start time end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name test start end_name end_expr end_return end_block 
 begin_comment see java beans property editor get value see org apache jmeter testelement property j meter property end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name object end_name end_type begin_name get value end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name text end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name gui editor end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name value end_name end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name text end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name accepts null end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name should never happen end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name value end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_name accepts expressions end_name begin_operator UNP end_operator begin_call begin_name is expression end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name value end_name begin_operator EQ end_operator begin_name text end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment not an expression isn t or can t be not null end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name accepts other end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name is a tag end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name should never happen end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_try begin_block begin_comment bug 44314 number field does not seem to accept end_comment begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name type editor end_name begin_operator DOT end_operator begin_name set as text end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name number format exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name text end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_comment non nls 1 end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name type editor end_name begin_operator DOT end_operator begin_name set as text end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name should never happen end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_catch end_try end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal argument exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name should never happen end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_name value end_name begin_operator EQ end_operator begin_call begin_name begin_name type editor end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_else end_if begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name value end_name begin_operator UNP end_operator begin_operator QM end_operator begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name value end_name end_expr end_return end_block 
 begin_comment add a subresult and adjust the parent byte count and end time param sub result end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add sub result end_name begin_parameter_list begin_param begin_decl begin_type begin_name sample result end_name end_type begin_name sub result end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name tn end_name begin_init begin_expr begin_call begin_name get thread name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name tn end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name tn end_name begin_operator EQ end_operator begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name current thread end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name set thread name end_name end_name begin_argument_list begin_argument begin_expr begin_name tn end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name sub result end_name begin_operator DOT end_operator begin_name set thread name end_name end_name begin_argument_list begin_argument begin_expr begin_name tn end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment extend the time to the end of the added sample end_comment begin_expr_stmt begin_expr begin_call begin_name set end time end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name math end_name begin_operator DOT end_operator begin_name max end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get end time end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name sub result end_name begin_operator DOT end_operator begin_name get end time end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_name nano time offset end_name begin_operator MINUS end_operator begin_name begin_name sub result end_name begin_operator DOT end_operator begin_name nano time offset end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment bug 51855 end_comment begin_comment include the byte count for the added sample end_comment begin_expr_stmt begin_expr begin_call begin_name set bytes end_name begin_argument_list begin_argument begin_expr begin_call begin_name get bytes end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_call begin_name begin_name sub result end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set headers size end_name begin_argument_list begin_argument begin_expr begin_call begin_name get headers size end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_call begin_name begin_name sub result end_name begin_operator DOT end_operator begin_name get headers size end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set body size end_name begin_argument_list begin_argument begin_expr begin_call begin_name get body size end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_call begin_name begin_name sub result end_name begin_operator DOT end_operator begin_name get body size end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name add raw sub result end_name begin_argument_list begin_argument begin_expr begin_name sub result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment this method is used to do some low cost defensive programming it is called when a condition that the program logic should prevent from happening occurs i hope this will help early detection of logical bugs in property value handling throws error always throws an error end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name should never happen end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name msg end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name error end_name end_expr end_argument end_throws begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name error end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test 1 end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block end_block 
 begin_comment from the code http url connection code store all the set cookie key pair values in the cookie manager of the code url config code param conn code http url connection code which represents the url request param u code url code of the url request param cookie manager the code cookie manager code containing all the cookies for this code url config code end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name save connection cookies end_name begin_parameter_list begin_param begin_decl begin_type begin_name http url connection end_name end_type begin_name conn end_name end_decl end_param begin_param begin_decl begin_type begin_name url end_name end_type begin_name u end_name end_decl end_param begin_param begin_decl begin_type begin_name cookie manager end_name end_type begin_name cookie manager end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name cookie manager end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name conn end_name begin_operator DOT end_operator begin_name get header field key end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name conn end_name begin_operator DOT end_operator begin_name get header field key end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals ignore case end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header set cookie end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cookie manager end_name begin_operator DOT end_operator begin_name add cookie from header end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name conn end_name begin_operator DOT end_operator begin_name get header field end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name u end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for end_block end_then end_if end_block 
 begin_comment compile a general string into a list of elements for a compound variable calls link make function string reader if it detects an unescaped removes escapes from and param value string containing the function variable references if any return list of strings or objects representing functions end_comment begin_type begin_name begin_name linked list end_name begin_argument_list begin_argument begin_name object end_name end_argument end_argument_list end_name end_type begin_name compile string end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name invalid variable exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string reader end_name end_type begin_name reader end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string reader end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name linked list end_name begin_argument_list begin_argument begin_name object end_name end_argument end_argument_list end_name end_type begin_name result end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name linked list end_name begin_argument_list begin_argument begin_name object end_name end_argument end_argument_list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string builder end_name end_type begin_name buffer end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string builder end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name previous end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name char end_name begin_index end_index end_type begin_name current end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name char end_name begin_index begin_expr end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_while begin_condition begin_expr begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list begin_argument begin_expr begin_name current end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_block begin_if begin_condition begin_expr begin_name begin_name current end_name begin_index begin_expr end_expr end_index end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment handle escapes end_comment begin_expr_stmt begin_expr begin_name previous end_name begin_operator EQ end_operator begin_name begin_name current end_name begin_index begin_expr end_expr end_index end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list begin_argument begin_expr begin_name current end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_break end_break end_block end_then end_if begin_comment keep the unless it is one of the escapable chars or end_comment begin_comment n b this method is used to parse function parameters so must treat as special end_comment begin_if begin_condition begin_expr begin_name begin_name current end_name begin_index begin_expr end_expr end_index end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name begin_name current end_name begin_index begin_expr end_expr end_index end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name begin_name current end_name begin_index begin_expr end_expr end_index end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name previous end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment i e end_comment end_block end_then end_if begin_expr_stmt begin_expr begin_name previous end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name current end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_continue end_continue end_block end_then begin_else begin_if begin_condition begin_expr begin_name begin_name current end_name begin_index begin_expr end_expr end_index end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name previous end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment found end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name delete char at end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_comment save leading text end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name set length end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name make function end_name begin_argument_list begin_argument begin_expr begin_name reader end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name previous end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name current end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name previous end_name begin_operator EQ end_operator begin_name begin_name current end_name begin_index begin_expr end_expr end_index end_name end_expr end_expr_stmt end_block end_else end_if end_else end_if end_block end_while begin_if begin_condition begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name value end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name clear end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_if begin_condition begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name result end_name end_expr end_return end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name sample stopped end_name begin_parameter_list begin_param begin_decl begin_type begin_name sample event end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name subtract node end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment performs a test sample param entry the entry for this sample return test sample result end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name sample result end_name end_type begin_name sample end_name begin_parameter_list begin_param begin_decl begin_type begin_name entry end_name end_type begin_name entry end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name sample result end_name end_type begin_name results end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name sample result end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set data type end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name sample result end_name begin_operator DOT end_operator begin_name text end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set sample label end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name command end_name begin_init begin_expr begin_call begin_name get command end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name arguments end_name end_type begin_name args end_name begin_init begin_expr begin_call begin_name get arguments end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name arguments end_name end_type begin_name environment end_name begin_init begin_expr begin_call begin_name get environment variables end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name check return code end_name begin_init begin_expr begin_call begin_name get check return code end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name expected return code end_name begin_init begin_expr begin_call begin_name get expected return code end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name list end_name begin_argument_list begin_argument begin_name string end_name end_argument end_argument_list end_name end_type begin_name cmds end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name array list end_name begin_argument_list begin_argument begin_name string end_name end_argument end_argument_list end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name get argument count end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string builder end_name end_type begin_name cmd line end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string builder end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_operator EQT end_operator begin_name command end_name begin_operator RPAR end_operator begin_operator QM end_operator begin_operator DP end_operator begin_name command end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmds end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name command end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name get argument count end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name argument end_name end_type begin_name arg end_name begin_init begin_expr begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name get argument end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmds end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get property as string end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name argument end_name begin_operator DOT end_operator begin_name value end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd line end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd line end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name cmds end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_decl_stmt begin_decl begin_type begin_name begin_name map end_name begin_argument_list begin_argument begin_name string end_name end_argument begin_argument begin_name string end_name end_argument end_argument_list end_name end_type begin_name env end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name hash map end_name begin_argument_list begin_argument begin_name string end_name end_argument begin_argument begin_name string end_name end_argument end_argument_list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name environment end_name begin_operator DOT end_operator begin_name get argument count end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name argument end_name end_type begin_name arg end_name begin_init begin_expr begin_call begin_name begin_name environment end_name begin_operator DOT end_operator begin_name get argument end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name env end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get property as string end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name argument end_name begin_operator DOT end_operator begin_name value end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name directory end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name is empty end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get directory end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name directory end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file server end_name begin_operator DOT end_operator begin_name get default base end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name directory end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name directory end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get directory end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name directory end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name cmd line end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name directory end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name env end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set sampler data end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name directory end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name env end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name cmd line end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name system command end_name end_type begin_name native command end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name native command end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name system command end_name begin_argument_list begin_argument begin_expr begin_name directory end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get timeout end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name poll interval end_name end_expr end_argument begin_argument begin_expr begin_name env end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get stdin end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get stdout end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get stderr end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name sample start end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name return code end_name begin_init begin_expr begin_call begin_name begin_name native command end_name begin_operator DOT end_operator begin_name run end_name end_name begin_argument_list begin_argument begin_expr begin_name cmds end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name sample end end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set response code end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name integer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list begin_argument begin_expr begin_name return code end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name cmd line end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name directory end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name native command end_name begin_operator DOT end_operator begin_name get execution environment end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name return code end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name check return code end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_name return code end_name begin_operator UNP end_operator begin_name expected return code end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set successful end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set response message end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name expected return code end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name return code end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set successful end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set response message end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name sample end end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set successful end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set response message end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name ioe end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name interrupted exception end_name end_type begin_name ie end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name sample end end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set successful end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set response message end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name ie end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_if begin_condition begin_expr begin_name native command end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set response data end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name native command end_name begin_operator DOT end_operator begin_name get out result end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get bytes end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment default charset is deliberate here end_comment end_block end_then end_if begin_return begin_expr begin_name results end_name end_expr end_return end_block 
 begin_comment finds a string in an array of strings and returns the param array array of strings param value string to compare to array values return index of value in array or 1 if not in array end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name int end_name end_type begin_name find in array end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name array end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name count end_name begin_init begin_expr begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name index end_name begin_init begin_expr begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name array end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name value end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_while begin_condition begin_expr begin_operator PPLUS end_operator begin_name count end_name begin_operator LT end_operator begin_name begin_name array end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_block begin_if begin_condition begin_expr begin_name begin_name array end_name begin_index begin_expr begin_name count end_name end_expr end_index end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name begin_name array end_name begin_index begin_expr begin_name count end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name index end_name begin_operator EQ end_operator begin_name count end_name end_expr end_expr_stmt begin_break end_break end_block end_then end_if end_block end_while end_block end_then end_if begin_return begin_expr begin_name index end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_specifier end_specifier begin_name long end_name end_type begin_name get test start time end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name test start end_name end_expr end_return end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name sample started end_name begin_parameter_list begin_param begin_decl begin_type begin_name sample event end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name sample stopped end_name begin_parameter_list begin_param begin_decl begin_type begin_name sample event end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment create a test element for a gui or test bean class p this is a utility method to help actions do with one single string parameter param obj class the fully qualified class name of the gui component or of the test bean subclass for which a test bean gui is wanted return the test element corresponding to the specified gui class end_comment begin_type begin_specifier end_specifier begin_name test element end_name end_type begin_name create test element end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name obj class end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name j meter gui component end_name end_type begin_name comp end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name class end_name begin_argument_list begin_argument begin_name end_name end_argument end_argument_list end_name end_type begin_name c end_name end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name c end_name begin_operator EQ end_operator begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name obj class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name test bean end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name is assignable from end_name end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_call begin_name get gui from cache end_name begin_argument_list begin_argument begin_expr begin_name begin_name test bean gui end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_call begin_name get gui from cache end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name comp end_name begin_operator DOT end_operator begin_name clear gui end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name test element end_name end_type begin_name node end_name begin_init begin_expr begin_call begin_name begin_name comp end_name begin_operator DOT end_operator begin_name create test element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name nodes to gui end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name node end_name end_expr end_argument begin_argument begin_expr begin_name comp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name node end_name end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no class def found error end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name j option pane end_name begin_operator DOT end_operator begin_name show message dialog end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name j option pane end_name begin_operator DOT end_operator begin_name error message end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw begin_comment probably a missing jar end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name instantiation exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal access exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name assertion result end_name end_type begin_name get assertion result end_name begin_parameter_list begin_param begin_decl begin_type begin_name configuration end_name end_type begin_name config end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name assertion result end_name end_type begin_name result end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name assertion result end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set error end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name config end_name begin_operator DOT end_operator begin_name get attribute as boolean end_name end_name begin_argument_list begin_argument begin_expr begin_name error end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set failure end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name config end_name begin_operator DOT end_operator begin_name get attribute as boolean end_name end_name begin_argument_list begin_argument begin_expr begin_name failure end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set failure message end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name config end_name begin_operator DOT end_operator begin_name get attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name failure message end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name result end_name end_expr end_return end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name sample started end_name begin_parameter_list begin_param begin_decl begin_type begin_name sample event end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment same as should never happen but provide a source exception param e the exception that helped identify the problem throws error always throws one end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name should never happen end_name begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name error end_name end_expr end_argument end_throws begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name error end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_comment the test started test ended methods are called at the start and end of a test however when a test is run on multiple nodes there is no guarantee that all the test started methods will be called before all the thread start or sample occurred methods for other threads nor that test ended will only be called after all sample occurred calls the ordering is only guaranteed within a single test end_comment begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name test started end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name test started end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment send post data from code entry code to the open connection param connection code url connection code where post data should be sent return a string show what was posted will not contain actual file upload content exception io exception if an i o exception occurs end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name send post data end_name begin_parameter_list begin_param begin_decl begin_type begin_name post method end_name end_type begin_name post end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_comment buffer to hold the post body except file content end_comment begin_decl_stmt begin_decl begin_type begin_name string builder end_name end_type begin_name posted body end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string builder end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name http file arg end_name end_type begin_name begin_name files end_name begin_index end_index end_name begin_init begin_expr begin_call begin_name get http files end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment check if we should do a multipart form data or an end_comment begin_comment application x www form urlencoded post request end_comment begin_if begin_condition begin_expr begin_call begin_name get use multipart for post end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment if a content encoding is specified we use that as the end_comment begin_comment encoding of any parameter values end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name content encoding end_name begin_init begin_expr begin_call begin_name get content encoding end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name is null or empty trimmed end_name begin_argument_list begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name content encoding end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name browser compatible end_name begin_init begin_expr begin_call begin_name get do browser compatible multipart end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment we don t know how many entries will be skipped end_comment begin_decl_stmt begin_decl begin_type begin_name begin_name array list end_name begin_argument_list begin_argument begin_name part base end_name end_argument end_argument_list end_name end_type begin_name partlist end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name array list end_name begin_argument_list begin_argument begin_name part base end_name end_argument end_argument_list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment create the parts end_comment begin_comment add any parameters end_comment begin_decl_stmt begin_decl begin_type begin_name property iterator end_name end_type begin_name args end_name begin_init begin_expr begin_call begin_name get arguments end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name http argument end_name end_type begin_name arg end_name begin_init begin_expr begin_operator LPAR end_operator begin_name http argument end_name begin_operator RPAR end_operator begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get object value end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name parameter name end_name begin_init begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name is skippable end_name end_name begin_argument_list begin_argument begin_expr begin_name parameter name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string part end_name end_type begin_name part end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string part end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name browser compatible end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name part end_name begin_operator DOT end_operator begin_name set transfer encoding end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name part end_name begin_operator DOT end_operator begin_name set content type end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name partlist end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name part end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_comment add any files end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name http file arg end_name end_type begin_name file end_name begin_init begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name input file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment we do not know the char set of the file to be uploaded so we set it to null end_comment begin_decl_stmt begin_decl begin_type begin_name viewable file part end_name end_type begin_name file part end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name viewable file part end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get param name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name input file end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name file part end_name begin_operator DOT end_operator begin_name set char set end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment we do not know what the char set of the file is end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name partlist end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name file part end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_comment set the multipart for the post end_comment begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name part no end_name begin_init begin_expr begin_call begin_name begin_name partlist end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name part end_name begin_index end_index end_type begin_name parts end_name begin_init begin_expr begin_call begin_name begin_name partlist end_name begin_operator DOT end_operator begin_name to array end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name part end_name begin_index begin_expr begin_name part no end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name multipart request entity end_name end_type begin_name multi part end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name multipart request entity end_name begin_argument_list begin_argument begin_expr begin_name parts end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name get params end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set request entity end_name end_name begin_argument_list begin_argument begin_expr begin_name multi part end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment set the content type end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name multi part content type end_name begin_init begin_expr begin_call begin_name begin_name multi part end_name begin_operator DOT end_operator begin_name get content type end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set request header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_name multi part content type end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment if the multipart is repeatable we can send it first to end_comment begin_comment our own stream without the actual file content so we can return it end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name multi part end_name begin_operator DOT end_operator begin_name is repeatable end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment for all the file multiparts we must tell it to not include end_comment begin_comment the actual file content end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name part no end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator UNP end_operator begin_name viewable file part end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name viewable file part end_name begin_operator RPAR end_operator begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name set hide file data end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment send multipart without file content bos end_comment end_block end_then end_if end_block end_for begin_comment write the request to our own stream end_comment begin_decl_stmt begin_decl begin_type begin_name byte array output stream end_name end_type begin_name bos end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name byte array output stream end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name multi part end_name begin_operator DOT end_operator begin_name write request end_name end_name begin_argument_list begin_argument begin_expr begin_name bos end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment we get the posted bytes using the encoding used to create it end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name to byte array end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name content encoding end_name begin_operator EQT end_operator begin_operator QM end_operator begin_comment non nls 1 this is the default used by http client end_comment begin_operator DP end_operator begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment for all the file multiparts we must revert the hiding of end_comment begin_comment the actual file content end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name part no end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator UNP end_operator begin_name viewable file part end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name viewable file part end_name begin_operator RPAR end_operator begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name set hide file data end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment end_block end_else end_if end_block end_then begin_else begin_block begin_comment check if the header manager had a content type header end_comment begin_comment this allows the user to specify his own content type for a post request end_comment begin_decl_stmt begin_decl begin_type begin_name header end_name end_type begin_name content type header end_name begin_init begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name get request header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name has content type header end_name begin_init begin_expr begin_name content type header end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name content type header end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name content type header end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_init end_decl end_decl_stmt begin_comment if there are no arguments we can send a file as the body of the request end_comment begin_comment todo needs a multiple file upload scenerio end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name has arguments end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name get send file as post body end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment if get send file as post body returned true it s sure that file is not null end_comment begin_decl_stmt begin_decl begin_type begin_name http file arg end_name end_type begin_name file end_name begin_init begin_expr begin_name begin_name files end_name begin_index begin_expr end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name has content type header end_name end_expr end_condition begin_then begin_block begin_comment allow the mimetype of the file to control the content type end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set request header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set request header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name application x www form urlencoded end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file request entity end_name end_type begin_name file request entity end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file request entity end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set request entity end_name end_name begin_argument_list begin_argument begin_expr begin_name file request entity end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment we just add placeholder text for file content end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment in a post request which is not multipart we only support end_comment begin_comment parameters no file upload is allowed end_comment begin_comment if a content encoding is specified we set it as http parameter so that end_comment begin_comment the post body will be encoded in the specified content encoding end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name content encoding end_name begin_init begin_expr begin_call begin_name get content encoding end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name have content encoding end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name is null or empty trimmed end_name begin_argument_list begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name content encoding end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name get params end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set content charset end_name begin_argument_list begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name have content encoding end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_else end_if begin_comment if none of the arguments have a name specified we end_comment begin_comment just send all the values as the post body end_comment begin_if begin_condition begin_expr begin_call begin_name get send parameter values as post body end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment allow the mimetype of the file to control the content type end_comment begin_comment this is not obvious in gui if you are not uploading any files end_comment begin_comment but just sending the content of nameless parameters end_comment begin_comment todo needs a multiple file upload scenerio end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name has content type header end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name http file arg end_name end_type begin_name file end_name begin_init begin_expr begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator begin_operator QM end_operator begin_name begin_name files end_name begin_index begin_expr end_expr end_index end_name begin_operator DP end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name file end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set request header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set request header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name application x www form urlencoded end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_comment just append all the parameter values and use that as the post body end_comment begin_decl_stmt begin_decl begin_type begin_name string builder end_name end_type begin_name post body end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string builder end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name property iterator end_name end_type begin_name args end_name begin_init begin_expr begin_call begin_name get arguments end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name http argument end_name end_type begin_name arg end_name begin_init begin_expr begin_operator LPAR end_operator begin_name http argument end_name begin_operator RPAR end_operator begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get object value end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name have content encoding end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name value end_name begin_operator EQ end_operator begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get encoded value end_name end_name begin_argument_list begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name value end_name begin_operator EQ end_operator begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get encoded value end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name post body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_decl_stmt begin_decl begin_type begin_name string request entity end_name end_type begin_name request entity end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string request entity end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name post body end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name get request header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set request entity end_name end_name begin_argument_list begin_argument begin_expr begin_name request entity end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment it is a normal post request with parameter names and values end_comment begin_comment set the content type end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name has content type header end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set request header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name application x www form urlencoded end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment add the parameters end_comment begin_decl_stmt begin_decl begin_type begin_name property iterator end_name end_type begin_name args end_name begin_init begin_expr begin_call begin_name get arguments end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name http argument end_name end_type begin_name arg end_name begin_init begin_expr begin_operator LPAR end_operator begin_name http argument end_name begin_operator RPAR end_operator begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get object value end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment the http client always urlencodes both name and value end_comment begin_comment so if the argument is already encoded we have to decode end_comment begin_comment it before adding it to the post request end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name parameter name end_name begin_init begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name is skippable end_name end_name begin_argument_list begin_argument begin_expr begin_name parameter name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name parameter value end_name begin_init begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name is always encoded end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment the value is already encoded by the user end_comment begin_comment must decode the value now so that when the end_comment begin_comment httpclient encodes it we end up with the same value end_comment begin_comment as the user had entered end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name url content encoding end_name begin_init begin_expr begin_name content encoding end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name url content encoding end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name url content encoding end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment use the default encoding for urls end_comment begin_expr_stmt begin_expr begin_name url content encoding end_name begin_operator EQ end_operator begin_name begin_name encoder cache end_name begin_operator DOT end_operator begin_name url argument encoding end_name end_name end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name parameter name end_name begin_operator EQ end_operator begin_call begin_name begin_name url decoder end_name begin_operator DOT end_operator begin_name decode end_name end_name begin_argument_list begin_argument begin_expr begin_name parameter name end_name end_expr end_argument begin_argument begin_expr begin_name url content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name parameter value end_name begin_operator EQ end_operator begin_call begin_name begin_name url decoder end_name begin_operator DOT end_operator begin_name decode end_name end_name begin_argument_list begin_argument begin_expr begin_name parameter value end_name end_expr end_argument begin_argument begin_expr begin_name url content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment add the parameter httpclient will urlencode it end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name add parameter end_name end_name begin_argument_list begin_argument begin_expr begin_name parameter name end_name end_expr end_argument begin_argument begin_expr begin_name parameter value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_comment alternative implementation to make sure that http sampler and http sampler 2 sends the same post body only include the content char set in the content type header if it is not an application x www form urlencoded content type string content char set null if post get request header header content type get value equals application x www form urlencoded content char set post get request char set string request entity request entity new string request entity get query string content encoding post get request header header content type get value content char set post set request entity request entity end_comment end_block end_else end_if begin_comment if the request entity is repeatable we can send it first to end_comment begin_comment our own stream so we can return it end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name get request entity end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name is repeatable end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name byte array output stream end_name end_type begin_name bos end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name byte array output stream end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name get request entity end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name write request end_name begin_argument_list begin_argument begin_expr begin_name bos end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment we get the posted bytes using the encoding used to create it end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name to byte array end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name get request char set end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_else end_if end_block end_else end_if begin_comment set the content length end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set request header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content length end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name long end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name get request entity end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get content length end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name sample stopped end_name begin_parameter_list begin_param begin_decl begin_type begin_name sample event end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get filename end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get property as string end_name begin_argument_list begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment register a gui class so that it can later be retrieved via link get gui class the key should match the fully qualified class name for the class used as the parameter when retrieving the gui param key the name which can be used to retrieve this gui later param gui class the class object for the gui component param test class the class of the objects edited by this gui throws instantiation exception if an instance of the gui class can not be instantiated throws illegal access exception if access rights do not permit an instance of the gui class to be created end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name register gui end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name key end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name class end_name begin_argument_list begin_argument begin_name end_name end_argument end_argument_list end_name end_type begin_name gui class end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name class end_name begin_argument_list begin_argument begin_name end_name end_argument end_argument_list end_name end_type begin_name test class end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name instantiation exception end_name end_expr end_argument begin_argument begin_expr begin_name illegal access exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name j meter gui component end_name end_type begin_name gui end_name end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name gui class end_name begin_operator EQT end_operator begin_name begin_name test bean gui end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name gui end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name test bean gui end_name begin_argument_list begin_argument begin_expr begin_name test class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name gui end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name j meter gui component end_name begin_operator RPAR end_operator begin_call begin_name begin_name gui class end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name gui map end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument begin_argument begin_expr begin_name gui end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment for now the method isn t implemented i still need to decide how it should be implemented end_comment begin_type begin_annotation begin_name suppress warnings end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_annotation begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name string end_name begin_index end_index begin_index end_index end_type begin_name get table data end_name begin_parameter_list begin_param begin_decl begin_type begin_name list end_name end_type begin_name data end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr end_expr end_index begin_index begin_expr end_expr end_index end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_specifier end_specifier begin_name long end_name end_type begin_name get test start time end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name test start end_name end_expr end_return end_block 
 begin_comment remove a cookie end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name remove end_name begin_parameter_list begin_param begin_decl begin_type begin_name int end_name end_type begin_name index end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name get cookies end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name remove end_name begin_argument_list begin_argument begin_expr begin_name index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name sample started end_name begin_parameter_list begin_param begin_decl begin_type begin_name sample event end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment noop end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name start proxy end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name init key store end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name general security exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name io exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment make sure we log the error end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_name e end_name end_expr end_throw end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name notify test listeners of start end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name server end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name daemon end_name begin_argument_list begin_argument begin_expr begin_call begin_name get port end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name server end_name begin_operator DOT end_operator begin_name start end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name gui package end_name begin_operator DOT end_operator begin_name get instance end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name register end_name begin_argument_list begin_argument begin_expr begin_name server end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_name e end_name end_expr end_throw end_block end_catch end_try end_block 
 begin_comment ensures the link replaceable controller is loaded param item link test element return link replaceable controller loaded end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name replaceable controller end_name end_type begin_name ensure replaceable controller is loaded end_name begin_parameter_list begin_param begin_decl begin_type begin_name test element end_name end_type begin_name item end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name replaceable controller end_name end_type begin_name rc end_name end_decl end_decl_stmt begin_comment todo this bit of code needs to be tidied up end_comment begin_comment unfortunately module controller is in components not core end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name item end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment bug 47165 end_comment begin_expr_stmt begin_expr begin_name rc end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name replaceable controller end_name begin_operator RPAR end_operator begin_name item end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name rc end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name replaceable controller end_name begin_operator RPAR end_operator begin_call begin_name begin_name item end_name begin_operator DOT end_operator begin_name clone end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_return begin_expr begin_name rc end_name end_expr end_return end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name sample stopped end_name begin_parameter_list begin_param begin_decl begin_type begin_name sample event end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_specifier end_specifier begin_name long end_name end_type begin_name get test start time end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_name test start end_name end_expr end_return end_block 
 begin_comment create a test element for a gui or test bean class p this is a utility method to help actions do with one single string parameter param obj class the fully qualified class name of the gui component or of the test bean subclass for which a test bean gui is wanted return the test element corresponding to the specified gui class end_comment begin_type begin_specifier end_specifier begin_name test element end_name end_type begin_name create test element end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name obj class end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name j meter gui component end_name end_type begin_name comp end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name class end_name begin_argument_list begin_argument begin_name end_name end_argument end_argument_list end_name end_type begin_name c end_name end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name c end_name begin_operator EQ end_operator begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name obj class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name test bean end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name is assignable from end_name end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_call begin_name get gui from cache end_name begin_argument_list begin_argument begin_expr begin_name begin_name test bean gui end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_call begin_name get gui from cache end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name comp end_name begin_operator DOT end_operator begin_name clear gui end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name test element end_name end_type begin_name node end_name begin_init begin_expr begin_call begin_name begin_name comp end_name begin_operator DOT end_operator begin_name create test element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name nodes to gui end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name node end_name end_expr end_argument begin_argument begin_expr begin_name comp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name node end_name end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no class def found error end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name j option pane end_name begin_operator DOT end_operator begin_name show message dialog end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name j option pane end_name begin_operator DOT end_operator begin_name error message end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw begin_comment probably a missing jar end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name instantiation exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal access exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment sample method will check which client it should use and call the appropriate client specific sample method return the appropriate sample result end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name sample result end_name end_type begin_name sample end_name begin_parameter_list end_parameter_list begin_block begin_comment run thread started only if destination setup on each sample end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name is destination static end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name thread started end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name sample result end_name end_type begin_name result end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name sample result end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set data type end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name sample result end_name begin_operator DOT end_operator begin_name text end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set sample label end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name sample start end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name exception during init end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name sample end end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set successful end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set response code end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set response message end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name exception during init end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name result end_name end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name stop between samples end_name end_expr end_condition begin_then begin_block begin_comment if so we need to start collection here end_comment begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name subscriber end_name begin_operator DOT end_operator begin_name start end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name jms exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string builder end_name end_type begin_name buffer end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string builder end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string builder end_name end_type begin_name prop buffer end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string builder end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name loop end_name begin_init begin_expr begin_call begin_name get iteration count end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name read end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name until end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name now end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name timeout end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name until end_name begin_operator EQ end_operator begin_name timeout end_name begin_operator PLUS end_operator begin_name now end_name end_expr end_expr_stmt end_block end_then end_if begin_while begin_condition begin_expr begin_operator UNP end_operator begin_name interrupted end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_name until end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name now end_name begin_operator LT end_operator begin_name until end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_name read end_name begin_operator LT end_operator begin_name loop end_name end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name message end_name end_type begin_name msg end_name end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name msg end_name begin_operator EQ end_operator begin_call begin_name begin_name subscriber end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name calculate wait end_name begin_argument_list begin_argument begin_expr begin_name until end_name end_expr end_argument begin_argument begin_expr begin_name now end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name msg end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name read end_name begin_operator PPLUS end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name extract content end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument begin_argument begin_expr begin_name prop buffer end_name end_expr end_argument begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name read end_name begin_operator EQT end_operator begin_name loop end_name begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name jms exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_name now end_name begin_operator EQ end_operator begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name sample end end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set response message end_name end_name begin_argument_list begin_argument begin_expr begin_name read end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name get read response as boolean end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set response data end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get bytes end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment todo charset end_comment end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set bytes end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get bytes end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_name length end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment todo charset end_comment end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set response headers end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name prop buffer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name read end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set response code end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment not found end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set successful end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set response code ok end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set successful end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set response message end_name end_name begin_argument_list begin_argument begin_expr begin_name read end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set sampler data end_name end_name begin_argument_list begin_argument begin_expr begin_name loop end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set sample count end_name end_name begin_argument_list begin_argument begin_expr begin_name read end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name stop between samples end_name end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name subscriber end_name begin_operator DOT end_operator begin_name stop end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name jms exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_then end_if begin_comment run thread finished only if destination setup on each sample stop listen queue end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name is destination static end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name thread finished end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name result end_name end_expr end_return end_block 
 begin_comment construct a bean info for the given class end_comment begin_specifier end_specifier begin_name bean info support end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name class end_name begin_argument_list begin_argument begin_name end_name begin_extends begin_name test bean end_name end_extends end_argument end_argument_list end_name end_type begin_name bean class end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name bean class end_name end_name begin_operator EQ end_operator begin_name bean class end_name end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name root bean info end_name begin_operator EQ end_operator begin_call begin_name begin_name introspector end_name begin_operator DOT end_operator begin_name get bean info end_name end_name begin_argument_list begin_argument begin_expr begin_name bean class end_name end_expr end_argument begin_argument begin_expr begin_name begin_name introspector end_name begin_operator DOT end_operator begin_name ignore immediate beaninfo end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name introspection exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name error end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name bean class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_comment n b jv ms other than sun may return different instances each time end_comment begin_comment so we cache the value here and avoid having to fetch it every time end_comment begin_expr_stmt begin_expr begin_name bean descriptor end_name begin_operator EQ end_operator begin_call begin_name begin_name root bean info end_name begin_operator DOT end_operator begin_name get bean descriptor end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name resource bundle end_name end_type begin_name resource bundle end_name begin_init begin_expr begin_call begin_name begin_name resource bundle end_name begin_operator DOT end_operator begin_name get bundle end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name bean class end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_comment non nls 1 end_comment begin_argument begin_expr begin_call begin_name begin_name j meter utils end_name begin_operator DOT end_operator begin_name get locale end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment store the resource bundle as an attribute of the bean descriptor end_comment begin_expr_stmt begin_expr begin_call begin_name get bean descriptor end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name resource bundle end_name end_expr end_argument begin_argument begin_expr begin_name resource bundle end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment localize the bean name end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name resource bundle end_name begin_operator DOT end_operator begin_name contains key end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment non nls 1 end_comment begin_expr_stmt begin_expr begin_call begin_name get bean descriptor end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set display name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name resource bundle end_name begin_operator DOT end_operator begin_name get string end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name bean class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_comment localize the property names and descriptions end_comment begin_decl_stmt begin_decl begin_type begin_name property descriptor end_name begin_index end_index end_type begin_name properties end_name begin_init begin_expr begin_call begin_name get property descriptors end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name property descriptor end_name end_type begin_name property end_name begin_range begin_expr begin_name properties end_name end_expr end_range end_decl end_init begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_call begin_name begin_name property end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name property end_name begin_operator DOT end_operator begin_name set display name end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name resource bundle end_name begin_operator DOT end_operator begin_name get string end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name missing resource exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name bean class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name property end_name begin_operator DOT end_operator begin_name set short description end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name resource bundle end_name begin_operator DOT end_operator begin_name get string end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name missing resource exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name bean class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_for end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name missing resource exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name bean class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name bean class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment not thread safe must be called from a synchronized method param file param xpath string return the next row from the file container end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get x path string end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name file end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name xpath string end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name map end_name begin_argument_list begin_argument begin_name string end_name end_argument begin_argument begin_name x path file container end_name end_argument end_argument_list end_name end_type begin_name my end_name begin_init begin_expr begin_call begin_name begin_name file packs end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name key end_name begin_init begin_expr begin_name file end_name begin_operator PLUS end_operator begin_name xpath string end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name x path file container end_name end_type begin_name xpfc end_name begin_init begin_expr begin_call begin_name begin_name my end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name xpfc end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_comment we don t have a local copy end_comment begin_block begin_synchronized begin_expr begin_name file containers end_name end_expr begin_block begin_expr_stmt begin_expr begin_name xpfc end_name begin_operator EQ end_operator begin_call begin_name begin_name file containers end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name xpfc end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment there s no global copy either end_comment begin_expr_stmt begin_expr begin_name xpfc end_name begin_operator EQ end_operator begin_call begin_name open end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument begin_argument begin_expr begin_name xpath string end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name xpfc end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file containers end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument begin_argument begin_expr begin_name xpfc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment save the global copy end_comment end_block end_then end_if end_block end_synchronized begin_if begin_condition begin_expr begin_name xpfc end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return begin_comment non nls 1 end_comment end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name my end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument begin_argument begin_expr begin_name xpfc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment save our local copy end_comment end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name xpfc end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name file end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name xpath string end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return begin_comment non nls 1 end_comment end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name current row end_name begin_init begin_expr begin_call begin_name begin_name xpfc end_name begin_operator DOT end_operator begin_name next row end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name current row end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name xpfc end_name begin_operator DOT end_operator begin_name get x path string end_name end_name begin_argument_list begin_argument begin_expr begin_name current row end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment this method is used to do some low cost defensive programming it is called when a condition that the program logic should prevent from happening occurs i hope this will help early detection of logical bugs in property value handling throws error always throws an error end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name should never happen end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name msg end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name error end_name end_expr end_argument end_throws begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name error end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name sample stopped end_name begin_parameter_list begin_param begin_decl begin_type begin_name sample event end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block 
