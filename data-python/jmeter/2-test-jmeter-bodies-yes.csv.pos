 begin_comment download the resources of an html page param res result of the initial request must contain an html response param container for storing the results if any param frame depth depth of this target in the frame structure used only to prevent infinite recursion return res if no resources exist otherwise the container result with one subsample per request issued end_comment begin_type begin_specifier end_specifier begin_name http sample result end_name end_type begin_name download page resources end_name begin_parameter_list begin_param begin_decl begin_type begin_name http sample result end_name end_type begin_name res end_name end_decl end_param begin_param begin_decl begin_type begin_name http sample result end_name end_type begin_name container end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name frame depth end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name iterator end_name begin_argument_list begin_argument begin_name url end_name end_argument end_argument_list end_name end_type begin_name urls end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name byte end_name begin_index end_index end_type begin_name response data end_name begin_init begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name get response data end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name begin_name response data end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_comment bug 39205 end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name parser name end_name begin_init begin_expr begin_call begin_name get parser class end_name begin_argument_list begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name parser name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name html parser end_name end_type begin_name parser end_name begin_init begin_expr begin_call begin_name begin_name parser name end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_operator QM end_operator begin_comment we have a name end_comment begin_call begin_name begin_name html parser end_name begin_operator DOT end_operator begin_name get parser end_name end_name begin_argument_list begin_argument begin_expr begin_name parser name end_name end_expr end_argument end_argument_list end_call begin_operator DP end_operator begin_call begin_name begin_name html parser end_name begin_operator DOT end_operator begin_name get parser end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment we don t use the default parser end_comment begin_expr_stmt begin_expr begin_name urls end_name begin_operator EQ end_operator begin_call begin_name begin_name parser end_name begin_operator DOT end_operator begin_name get embedded resource ur ls end_name end_name begin_argument_list begin_argument begin_expr begin_name response data end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name get url end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name get data encoding with default end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name html parse exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment don t break the world just because this failed end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name add sub result end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name error result end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name http sample result end_name begin_argument_list begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set parent sample success end_name begin_argument_list begin_argument begin_expr begin_name res end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_comment iterate through the ur ls and download each image end_comment begin_if begin_condition begin_expr begin_name urls end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name urls end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name container end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment todo needed here because currently done on sample completion in j meter thread end_comment begin_comment but that only catches top level samples end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set thread name end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name current thread end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name container end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name http sample result end_name begin_argument_list begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name container end_name begin_operator DOT end_operator begin_name add raw sub result end_name end_name begin_argument_list begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name res end_name begin_operator EQ end_operator begin_name container end_name end_expr end_expr_stmt begin_comment get the url matcher end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name re end_name begin_init begin_expr begin_call begin_name get embedded url re end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name perl 5 matcher end_name end_type begin_name local matcher end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name pattern end_name end_type begin_name pattern end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name re end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_name pattern end_name begin_operator EQ end_operator begin_call begin_name begin_name j meter utils end_name begin_operator DOT end_operator begin_name get pattern end_name end_name begin_argument_list begin_argument begin_expr begin_name re end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name local matcher end_name begin_operator EQ end_operator begin_call begin_name begin_name j meter utils end_name begin_operator DOT end_operator begin_name get matcher end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment don t fetch unless pattern compiles end_comment end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name malformed cache pattern exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_then end_if begin_comment for concurrent get resources end_comment begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name begin_name list end_name begin_argument_list begin_argument begin_name begin_name callable end_name begin_argument_list begin_argument begin_name asyn sampler result holder end_name end_argument end_argument_list end_name end_argument end_argument_list end_name end_type begin_name liste end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name array list end_name begin_argument_list begin_argument begin_name begin_name callable end_name begin_argument_list begin_argument begin_name asyn sampler result holder end_name end_argument end_argument_list end_name end_argument end_argument_list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name urls end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name bin url end_name begin_init begin_expr begin_call begin_name begin_name urls end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment see catch clause below end_comment begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name url end_name end_type begin_name url end_name begin_init begin_expr begin_operator LPAR end_operator begin_name url end_name begin_operator RPAR end_operator begin_name bin url end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name url end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name urlstr end_name begin_init begin_expr begin_call begin_name begin_name url end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name url str enc end_name begin_init begin_expr begin_call begin_name encode spaces end_name begin_argument_list begin_argument begin_expr begin_name urlstr end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name urlstr end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name url str enc end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment there were some spaces in the url end_comment begin_try begin_block begin_expr_stmt begin_expr begin_name url end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name url end_name begin_argument_list begin_argument begin_expr begin_name url str enc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name malformed url exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name add sub result end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name error result end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name exception end_name begin_argument_list begin_argument begin_expr begin_name url str enc end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name http sample result end_name begin_argument_list begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set parent sample success end_name begin_argument_list begin_argument begin_expr begin_name res end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_continue end_continue end_block end_catch end_try end_block end_then end_if begin_comment i don t think local matcher can be null here but check just in case end_comment begin_if begin_condition begin_expr begin_name pattern end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name local matcher end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name local matcher end_name begin_operator DOT end_operator begin_name matches end_name end_name begin_argument_list begin_argument begin_expr begin_name url str enc end_name end_expr end_argument begin_argument begin_expr begin_name pattern end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue begin_comment we have a pattern and the url does not match so skip it end_comment end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name is concurrent dwn end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment if concurrent download emb resources add to a list for async gets later end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name liste end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name a sync sample end_name begin_argument_list begin_argument begin_expr begin_name url end_name end_expr end_argument begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name get end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name frame depth end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_call begin_name get cookie manager end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment default serial download embedded resources end_comment begin_decl_stmt begin_decl begin_type begin_name http sample result end_name end_type begin_name bin res end_name begin_init begin_expr begin_call begin_name sample end_name begin_argument_list begin_argument begin_expr begin_name url end_name end_expr end_argument begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name get end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name frame depth end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name add sub result end_name end_name begin_argument_list begin_argument begin_expr begin_name bin res end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set parent sample success end_name begin_argument_list begin_argument begin_expr begin_name res end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name is successful end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name bin res end_name begin_operator DOT end_operator begin_name is successful end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_else end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class cast exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name add sub result end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name error result end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name exception end_name begin_argument_list begin_argument begin_expr begin_name bin url end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name http sample result end_name begin_argument_list begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set parent sample success end_name begin_argument_list begin_argument begin_expr begin_name res end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_continue end_continue end_block end_catch end_try end_block end_while begin_comment if for download concurrent embedded resources end_comment begin_if begin_condition begin_expr begin_call begin_name is concurrent dwn end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name pool size end_name begin_init begin_expr begin_name concurrent pool size end_name end_expr end_init end_decl end_decl_stmt begin_comment init with default value end_comment begin_try begin_block begin_expr_stmt begin_expr begin_name pool size end_name begin_operator EQ end_operator begin_call begin_name begin_name integer end_name begin_operator DOT end_operator begin_name parse int end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get concurrent pool end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name number format exception end_name end_type begin_name nfe end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_comment non nls 1 end_comment begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment end_block end_catch end_try begin_comment thread pool executor to get resources end_comment begin_comment use a linked blocking queue note max pool size doesn t effect end_comment begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name thread pool executor end_name end_type begin_name exec end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name thread pool executor end_name begin_argument_list begin_argument begin_expr begin_name pool size end_name end_expr end_argument begin_argument begin_expr begin_name pool size end_name end_expr end_argument begin_argument begin_expr begin_name keepalivetime end_name end_expr end_argument begin_argument begin_expr begin_name begin_name time unit end_name begin_operator DOT end_operator begin_name seconds end_name end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name linked blocking queue end_name begin_argument_list begin_argument begin_name runnable end_name end_argument end_argument_list end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_class begin_super begin_name thread factory end_name end_super begin_argument_list end_argument_list begin_block begin_function begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name thread end_name end_type begin_name new thread end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name runnable end_name end_type begin_name r end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name thread end_name end_type begin_name t end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name cleaner thread end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_class begin_super begin_name runnable end_name end_super begin_argument_list end_argument_list begin_block begin_function begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name run end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name r end_name begin_operator DOT end_operator begin_name run end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_finally begin_block begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name cleaner thread end_name begin_operator RPAR end_operator begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name current thread end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name notify thread end end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block end_function end_block end_class end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_name t end_name end_expr end_return end_block end_function end_block end_class end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name tasks completed end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_comment sample all resources with threadpool end_comment begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name begin_name list end_name begin_argument_list begin_argument begin_name begin_name future end_name begin_argument_list begin_argument begin_name asyn sampler result holder end_name end_argument end_argument_list end_name end_argument end_argument_list end_name end_type begin_name ret exec end_name begin_init begin_expr begin_call begin_name begin_name exec end_name begin_operator DOT end_operator begin_name invoke all end_name end_name begin_argument_list begin_argument begin_expr begin_name liste end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment call normal shutdown wait ending all tasks end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name exec end_name begin_operator DOT end_operator begin_name shutdown end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment put a timeout if tasks couldn t terminate end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name exec end_name begin_operator DOT end_operator begin_name await termination end_name end_name begin_argument_list begin_argument begin_expr begin_name await termination timeout end_name end_expr end_argument begin_argument begin_expr begin_name begin_name time unit end_name begin_operator DOT end_operator begin_name seconds end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name cookie manager end_name end_type begin_name cookie manager end_name begin_init begin_expr begin_call begin_name get cookie manager end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment add result to main sample result end_comment begin_for begin_init begin_decl begin_type begin_name begin_name future end_name begin_argument_list begin_argument begin_name asyn sampler result holder end_name end_argument end_argument_list end_name end_type begin_name future end_name begin_range begin_expr begin_name ret exec end_name end_expr end_range end_decl end_init begin_block begin_decl_stmt begin_decl begin_type begin_name asyn sampler result holder end_name end_type begin_name bin res end_name end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name bin res end_name begin_operator EQ end_operator begin_call begin_name begin_name future end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name time unit end_name begin_operator DOT end_operator begin_name milliseconds end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name cookie manager end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name collection property end_name end_type begin_name cookies end_name begin_init begin_expr begin_call begin_name begin_name bin res end_name begin_operator DOT end_operator begin_name get cookies end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name property iterator end_name end_type begin_name iter end_name begin_init begin_expr begin_call begin_name begin_name cookies end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name cookie end_name end_type begin_name cookie end_name begin_init begin_expr begin_operator LPAR end_operator begin_name cookie end_name begin_operator RPAR end_operator begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get object value end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cookie manager end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name cookie end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name add sub result end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name bin res end_name begin_operator DOT end_operator begin_name get result end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set parent sample success end_name begin_argument_list begin_argument begin_expr begin_name res end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name is successful end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name bin res end_name begin_operator DOT end_operator begin_name get result end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name is successful end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name timeout exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name error result end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_for begin_expr_stmt begin_expr begin_name tasks completed end_name begin_operator EQ end_operator begin_call begin_name begin_name exec end_name begin_operator DOT end_operator begin_name await termination end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name time unit end_name begin_operator DOT end_operator begin_name milliseconds end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment did all the tasks finish end_comment end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name interrupted exception end_name end_type begin_name ie end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name ie end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name execution exception end_name end_type begin_name ee end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name ee end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment end_block end_catch begin_finally begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name tasks completed end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name exec end_name begin_operator DOT end_operator begin_name shutdown now end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment kill any remaining tasks end_comment end_block end_then end_if end_block end_finally end_try end_block end_then end_if end_block end_then end_if begin_return begin_expr begin_name res end_name end_expr end_return end_block 
 begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name test ended end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name string end_name end_type begin_name execute end_name begin_parameter_list begin_param begin_decl begin_type begin_name sample result end_name end_type begin_name previous result end_name end_decl end_param begin_param begin_decl begin_type begin_name sampler end_name end_type begin_name current sampler end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name compiled components end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name compiled components end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return begin_comment non nls 1 end_comment end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name test dynamic end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string builder end_name end_type begin_name results end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string builder end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name object end_name end_type begin_name item end_name begin_range begin_expr begin_name compiled components end_name end_expr end_range end_decl end_init begin_block begin_if begin_condition begin_expr begin_name item end_name begin_operator UNP end_operator begin_name function end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name test dynamic end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name function end_name begin_operator RPAR end_operator begin_name item end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name execute end_name begin_argument_list begin_argument begin_expr begin_name previous result end_name end_expr end_argument begin_argument begin_expr begin_name current sampler end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name invalid variable exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name item end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_catch end_try end_block end_then begin_else begin_if begin_condition begin_expr begin_name item end_name begin_operator UNP end_operator begin_name simple variable end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name test dynamic end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name simple variable end_name begin_operator RPAR end_operator begin_name item end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name item end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if end_block end_for begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name test dynamic end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name is dynamic end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name permanent results end_name begin_operator EQ end_operator begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment end_comment begin_comment deprecated values in a multipart form data are not urlencoded end_comment begin_comment so it does not make sense to add a value as a encoded value end_comment begin_comment end_comment begin_comment public void add encoded argument string name string value end_comment begin_comment arguments my args get arguments end_comment begin_comment http argument arg new http argument name value true end_comment begin_comment if arg get name equals arg get encoded name arg get value equals arg get encoded value end_comment begin_comment arg set always encoded false end_comment begin_comment end_comment begin_comment my args add argument arg end_comment begin_comment end_comment begin_comment add a value that is not url encoded and make sure it appears in the gui that it will not be encoded when the request is sent param name param value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add non encoded argument end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name arguments end_name end_type begin_name my args end_name begin_init begin_expr begin_call begin_name get arguments end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment the value is not encoded end_comment begin_decl_stmt begin_decl begin_type begin_name http argument end_name end_type begin_name arg end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name http argument end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment let the gui show that it will not be encoded end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name set always encoded end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name my args end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr begin_name arg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_specifier end_specifier begin_name multipart url config gui end_name begin_parameter_list begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name show sampler fields end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name show sampler fields end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name init end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name marshal end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name arg 0 end_name end_decl end_param begin_param begin_decl begin_type begin_name hierarchical stream writer end_name end_type begin_name writer end_name end_decl end_param begin_param begin_decl begin_type begin_name marshalling context end_name end_type begin_name context end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name test element property end_name end_type begin_name prop end_name begin_init begin_expr begin_operator LPAR end_operator begin_name test element property end_name begin_operator RPAR end_operator begin_name arg 0 end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name writer end_name begin_operator DOT end_operator begin_name add attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name conversion help end_name begin_operator DOT end_operator begin_name att name end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name conversion help end_name begin_operator DOT end_operator begin_name encode end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name prop end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name class end_name begin_argument_list begin_argument begin_name end_name end_argument end_argument_list end_name end_type begin_name clazz end_name begin_init begin_expr begin_call begin_name begin_name prop end_name begin_operator DOT end_operator begin_name get object value end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get class end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name writer end_name begin_operator DOT end_operator begin_name add attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name conversion help end_name begin_operator DOT end_operator begin_name att element type end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name save service end_name begin_operator DOT end_operator begin_name is testplan format 22 end_name end_name begin_operator QM end_operator begin_call begin_name mapper end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name serialized class end_name begin_argument_list begin_argument begin_expr begin_name clazz end_name end_expr end_argument end_argument_list end_call begin_operator DP end_operator begin_call begin_name begin_name clazz end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name begin_name save service end_name begin_operator DOT end_operator begin_name is testplan format 22 end_name end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name test element end_name end_type begin_name te end_name begin_init begin_expr begin_operator LPAR end_operator begin_name test element end_name begin_operator RPAR end_operator begin_call begin_name begin_name prop end_name begin_operator DOT end_operator begin_name get object value end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name conversion help end_name begin_operator DOT end_operator begin_name save special properties end_name end_name begin_argument_list begin_argument begin_expr begin_name te end_name end_expr end_argument begin_argument begin_expr begin_name writer end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name property iterator end_name end_type begin_name iter end_name begin_init begin_expr begin_call begin_name begin_name prop end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name j meter property end_name end_type begin_name jmp end_name begin_init begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment skip special properties if required end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name begin_name save service end_name begin_operator DOT end_operator begin_name is testplan format 22 end_name end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name conversion help end_name begin_operator DOT end_operator begin_name is special property end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name jmp end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment don t save empty comments end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name test element end_name begin_operator DOT end_operator begin_name comments end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name jmp end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name jmp end_name begin_operator DOT end_operator begin_name get string value end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name write item end_name begin_argument_list begin_argument begin_expr begin_name jmp end_name end_expr end_argument begin_argument begin_expr begin_name context end_name end_expr end_argument begin_argument begin_expr begin_name writer end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block end_while end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name sample stopped end_name begin_parameter_list begin_param begin_decl begin_type begin_name sample event end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name sample stopped end_name begin_parameter_list begin_param begin_decl begin_type begin_name sample event end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name sample stopped end_name begin_parameter_list begin_param begin_decl begin_type begin_name sample event end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment get an instance of the specified j meter gui component class if an instance of the gui class has previously been created and it is not marked as an link unshared component that shared instance will be returned otherwise a new instance of the component will be created and shared components will be cached for future retrieval param gui class the fully qualified class name of the gui component this class must implement j meter gui component param test class the fully qualified class name of the test elements edited by this gui component this class must implement test element return an instance of the specified class throws instantiation exception if an instance of the object cannot be created throws illegal access exception if access rights do not allow the default constructor to be called throws class not found exception if the specified gui class cannot be found end_comment begin_type begin_specifier end_specifier begin_name j meter gui component end_name end_type begin_name get gui from cache end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name class end_name begin_argument_list begin_argument begin_name end_name end_argument end_argument_list end_name end_type begin_name gui class end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name class end_name begin_argument_list begin_argument begin_name end_name end_argument end_argument_list end_name end_type begin_name test class end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name instantiation exception end_name end_expr end_argument begin_argument begin_expr begin_name illegal access exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name j meter gui component end_name end_type begin_name comp end_name end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name gui class end_name begin_operator EQT end_operator begin_name begin_name test bean gui end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_call begin_name begin_name test bean gu is end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name test class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name comp end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name test bean gui end_name begin_argument_list begin_argument begin_expr begin_name test class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test bean gu is end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name test class end_name end_expr end_argument begin_argument begin_expr begin_name comp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_call begin_name begin_name guis end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name gui class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name comp end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name j meter gui component end_name begin_operator RPAR end_operator begin_call begin_name begin_name gui class end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_name comp end_name begin_operator UNP end_operator begin_name unshared component end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name guis end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name gui class end_name end_expr end_argument begin_argument begin_expr begin_name comp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block end_else end_if begin_return begin_expr begin_name comp end_name end_expr end_return end_block 
 begin_comment processed by the rmi server code acts as test started throws object stream exception end_comment begin_type begin_specifier end_specifier begin_name object end_name end_type begin_name read resolve end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name object stream exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name info end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment server log file end_comment begin_expr_stmt begin_expr begin_name single executor end_name begin_operator EQ end_operator begin_call begin_name begin_name executors end_name begin_operator DOT end_operator begin_name new single thread executor end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name temporary file end_name begin_operator EQ end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name create temp file end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name temporary file end_name begin_operator DOT end_operator begin_name delete on exit end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name single executor end_name begin_operator DOT end_operator begin_name submit end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_class begin_super begin_name runnable end_name end_super begin_argument_list end_argument_list begin_block begin_function begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name run end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name output stream end_name end_type begin_name an output stream end_name end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name an output stream end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file output stream end_name begin_argument_list begin_argument begin_expr begin_name temporary file end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name oos end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name object output stream end_name begin_argument_list begin_argument begin_expr begin_name an output stream end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_function end_block end_class end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_return begin_expr begin_name this end_name end_expr end_return end_block 
 begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name add iteration listener end_name begin_parameter_list begin_param begin_decl begin_type begin_name loop iteration listener end_name end_type begin_name lis end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name iteration listeners end_name begin_operator DOT end_operator begin_name add first end_name end_name begin_argument_list begin_argument begin_expr begin_name lis end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment show a dialog indicating that j meter threads are stopping on a particular host param host the host where j meter threads are stopping end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name show stopping message end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name host end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name stopping message end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name stopping message end_name begin_operator DOT end_operator begin_name dispose end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name stopping message end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name escape dialog end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name j meter utils end_name begin_operator DOT end_operator begin_name get res string end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name label end_name begin_init begin_expr begin_call begin_name begin_name j meter utils end_name begin_operator DOT end_operator begin_name get res string end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment non nls 1 end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name is empty end_name end_name begin_argument_list begin_argument begin_expr begin_name host end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name label end_name begin_operator EQ end_operator begin_name label end_name begin_operator PLUS end_operator begin_call begin_name begin_name j meter utils end_name begin_operator DOT end_operator begin_name get res string end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name host end_name end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name j label end_name end_type begin_name stop label end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name j label end_name begin_argument_list begin_argument begin_expr begin_name label end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment non nls 1 non nls 2 end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name stop label end_name begin_operator DOT end_operator begin_name set border end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name border factory end_name begin_operator DOT end_operator begin_name create empty border end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name stopping message end_name begin_operator DOT end_operator begin_name get content pane end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name add end_name begin_argument_list begin_argument begin_expr begin_name stop label end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name stopping message end_name begin_operator DOT end_operator begin_name pack end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name component util end_name begin_operator DOT end_operator begin_name center component in component end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_name stopping message end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name swing utilities end_name begin_operator DOT end_operator begin_name invoke later end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_class begin_super begin_name runnable end_name end_super begin_argument_list end_argument_list begin_block begin_function begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name run end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name stopping message end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name stopping message end_name begin_operator DOT end_operator begin_name set visible end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_function end_block end_class end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name sample stopped end_name begin_parameter_list begin_param begin_decl begin_type begin_name sample event end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get filename end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get property as string end_name begin_argument_list begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set basedir end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name b end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name set property end_name begin_argument_list begin_argument begin_expr begin_name basedir end_name end_expr end_argument begin_argument begin_expr begin_name b end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name boolean end_name end_type begin_name equals end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name o end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name o end_name begin_operator UNP end_operator begin_name table sample end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name compare to end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name table sample end_name begin_operator RPAR end_operator begin_name o end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set parameters end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name collection end_name begin_argument_list begin_argument begin_name compound variable end_name end_argument end_argument_list end_name end_type begin_name parameters end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name invalid variable exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name parameters end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name values end_name begin_operator EQ end_operator begin_call begin_name begin_name parameters end_name begin_operator DOT end_operator begin_name to array end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name parameters end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name compound variable end_name begin_operator RPAR end_operator begin_name begin_name values end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name execute end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name check parameter count end_name begin_argument_list begin_argument begin_expr begin_name parameters end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment need to reset the containers for repeated runs about the only way for functions to detect that a run is starting seems to be the set parameters call end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name x path wrapper end_name begin_operator DOT end_operator begin_name clear all end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name set value end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_name value end_name begin_operator UNP end_operator begin_name double end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set text end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name double end_name end_type begin_name rate end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name double end_name begin_operator RPAR end_operator begin_name value end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name double value end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name rate end_name begin_operator EQT end_operator begin_name begin_name double end_name begin_operator DOT end_operator begin_name max value end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set text end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name unit end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name rate end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name rate end_name begin_operator UNP end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name unit end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name rate end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name rate end_name begin_operator UNP end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name unit end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name set text end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name formatter end_name begin_operator DOT end_operator begin_name format end_name end_name begin_argument_list begin_argument begin_expr begin_name rate end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name unit end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name fire iteration start end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name loop iteration event end_name end_type begin_name event end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name loop iteration event end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get iter count end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name loop iteration listener end_name end_type begin_name item end_name begin_range begin_expr begin_name iteration listeners end_name end_expr end_range end_decl end_init begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name item end_name begin_operator DOT end_operator begin_name iteration start end_name end_name begin_argument_list begin_argument begin_expr begin_name event end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block 
 begin_comment performs a test sample param entry the entry for this sample return test sample result end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name sample result end_name end_type begin_name sample end_name begin_parameter_list begin_param begin_decl begin_type begin_name entry end_name end_type begin_name entry end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name sample result end_name end_type begin_name results end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name sample result end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set data type end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name sample result end_name begin_operator DOT end_operator begin_name text end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set sample label end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name command end_name begin_init begin_expr begin_call begin_name get command end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name arguments end_name end_type begin_name args end_name begin_init begin_expr begin_call begin_name get arguments end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name arguments end_name end_type begin_name environment end_name begin_init begin_expr begin_call begin_name get environment variables end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name check return code end_name begin_init begin_expr begin_call begin_name get check return code end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name expected return code end_name begin_init begin_expr begin_call begin_name get expected return code end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name list end_name begin_argument_list begin_argument begin_name string end_name end_argument end_argument_list end_name end_type begin_name cmds end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name array list end_name begin_argument_list begin_argument begin_name string end_name end_argument end_argument_list end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name get argument count end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string builder end_name end_type begin_name cmd line end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string builder end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_operator EQT end_operator begin_name command end_name begin_operator RPAR end_operator begin_operator QM end_operator begin_operator DP end_operator begin_name command end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmds end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name command end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name get argument count end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name argument end_name end_type begin_name arg end_name begin_init begin_expr begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name get argument end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmds end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get property as string end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name argument end_name begin_operator DOT end_operator begin_name value end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd line end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd line end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name cmds end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_decl_stmt begin_decl begin_type begin_name begin_name map end_name begin_argument_list begin_argument begin_name string end_name end_argument begin_argument begin_name string end_name end_argument end_argument_list end_name end_type begin_name env end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name hash map end_name begin_argument_list begin_argument begin_name string end_name end_argument begin_argument begin_name string end_name end_argument end_argument_list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name environment end_name begin_operator DOT end_operator begin_name get argument count end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name argument end_name end_type begin_name arg end_name begin_init begin_expr begin_call begin_name begin_name environment end_name begin_operator DOT end_operator begin_name get argument end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name env end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get property as string end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name argument end_name begin_operator DOT end_operator begin_name value end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name directory end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name is empty end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get directory end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name directory end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file server end_name begin_operator DOT end_operator begin_name get default base end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name directory end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name directory end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get directory end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name directory end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name cmd line end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name directory end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name env end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set sampler data end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name directory end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name env end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name cmd line end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name system command end_name end_type begin_name native command end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name native command end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name system command end_name begin_argument_list begin_argument begin_expr begin_name directory end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get timeout end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name poll interval end_name end_expr end_argument begin_argument begin_expr begin_name env end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get stdin end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get stdout end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get stderr end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name sample start end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name return code end_name begin_init begin_expr begin_call begin_name begin_name native command end_name begin_operator DOT end_operator begin_name run end_name end_name begin_argument_list begin_argument begin_expr begin_name cmds end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name sample end end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set response code end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name integer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list begin_argument begin_expr begin_name return code end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name cmd line end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name directory end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name native command end_name begin_operator DOT end_operator begin_name get execution environment end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name return code end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name check return code end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_name return code end_name begin_operator UNP end_operator begin_name expected return code end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set successful end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set response message end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name expected return code end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name return code end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set successful end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set response message end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name sample end end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set successful end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set response message end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name ioe end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name interrupted exception end_name end_type begin_name ie end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name sample end end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set successful end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set response message end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name ie end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_if begin_condition begin_expr begin_name native command end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set response data end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name native command end_name begin_operator DOT end_operator begin_name get out result end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get bytes end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment default charset is deliberate here end_comment end_block end_then end_if begin_return begin_expr begin_name results end_name end_expr end_return end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name string end_name end_type begin_name execute end_name begin_parameter_list begin_param begin_decl begin_type begin_name sample result end_name end_type begin_name previous result end_name end_decl end_param begin_param begin_decl begin_type begin_name sampler end_name end_type begin_name current sampler end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name compiled components end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name compiled components end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return begin_comment non nls 1 end_comment end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name test dynamic end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string builder end_name end_type begin_name results end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string builder end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name object end_name end_type begin_name item end_name begin_range begin_expr begin_name compiled components end_name end_expr end_range end_decl end_init begin_block begin_if begin_condition begin_expr begin_name item end_name begin_operator UNP end_operator begin_name function end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name test dynamic end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name function end_name begin_operator RPAR end_operator begin_name item end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name execute end_name begin_argument_list begin_argument begin_expr begin_name previous result end_name end_expr end_argument begin_argument begin_expr begin_name current sampler end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name invalid variable exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name item end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_catch end_try end_block end_then begin_else begin_if begin_condition begin_expr begin_name item end_name begin_operator UNP end_operator begin_name simple variable end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name test dynamic end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name simple variable end_name begin_operator RPAR end_operator begin_name item end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name item end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if end_block end_for begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name test dynamic end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name is dynamic end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name permanent results end_name begin_operator EQ end_operator begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment send post data from code entry code to the open connection param connection code url connection code where post data should be sent return a string show what was posted will not contain actual file upload content exception io exception if an i o exception occurs end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name send post data end_name begin_parameter_list begin_param begin_decl begin_type begin_name post method end_name end_type begin_name post end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_comment buffer to hold the post body except file content end_comment begin_decl_stmt begin_decl begin_type begin_name string builder end_name end_type begin_name posted body end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string builder end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name http file arg end_name end_type begin_name begin_name files end_name begin_index end_index end_name begin_init begin_expr begin_call begin_name get http files end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment check if we should do a multipart form data or an end_comment begin_comment application x www form urlencoded post request end_comment begin_if begin_condition begin_expr begin_call begin_name get use multipart for post end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment if a content encoding is specified we use that as the end_comment begin_comment encoding of any parameter values end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name content encoding end_name begin_init begin_expr begin_call begin_name get content encoding end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name is null or empty trimmed end_name begin_argument_list begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name content encoding end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name browser compatible end_name begin_init begin_expr begin_call begin_name get do browser compatible multipart end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment we don t know how many entries will be skipped end_comment begin_decl_stmt begin_decl begin_type begin_name begin_name array list end_name begin_argument_list begin_argument begin_name part base end_name end_argument end_argument_list end_name end_type begin_name partlist end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name array list end_name begin_argument_list begin_argument begin_name part base end_name end_argument end_argument_list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment create the parts end_comment begin_comment add any parameters end_comment begin_decl_stmt begin_decl begin_type begin_name property iterator end_name end_type begin_name args end_name begin_init begin_expr begin_call begin_name get arguments end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name http argument end_name end_type begin_name arg end_name begin_init begin_expr begin_operator LPAR end_operator begin_name http argument end_name begin_operator RPAR end_operator begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get object value end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name parameter name end_name begin_init begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name is skippable end_name end_name begin_argument_list begin_argument begin_expr begin_name parameter name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string part end_name end_type begin_name part end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string part end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name browser compatible end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name part end_name begin_operator DOT end_operator begin_name set transfer encoding end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name part end_name begin_operator DOT end_operator begin_name set content type end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name partlist end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name part end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_comment add any files end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name http file arg end_name end_type begin_name file end_name begin_init begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name input file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment we do not know the char set of the file to be uploaded so we set it to null end_comment begin_decl_stmt begin_decl begin_type begin_name viewable file part end_name end_type begin_name file part end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name viewable file part end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get param name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name input file end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name file part end_name begin_operator DOT end_operator begin_name set char set end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment we do not know what the char set of the file is end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name partlist end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name file part end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_comment set the multipart for the post end_comment begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name part no end_name begin_init begin_expr begin_call begin_name begin_name partlist end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name part end_name begin_index end_index end_type begin_name parts end_name begin_init begin_expr begin_call begin_name begin_name partlist end_name begin_operator DOT end_operator begin_name to array end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name part end_name begin_index begin_expr begin_name part no end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name multipart request entity end_name end_type begin_name multi part end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name multipart request entity end_name begin_argument_list begin_argument begin_expr begin_name parts end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name get params end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set request entity end_name end_name begin_argument_list begin_argument begin_expr begin_name multi part end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment set the content type end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name multi part content type end_name begin_init begin_expr begin_call begin_name begin_name multi part end_name begin_operator DOT end_operator begin_name get content type end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set request header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_name multi part content type end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment if the multipart is repeatable we can send it first to end_comment begin_comment our own stream without the actual file content so we can return it end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name multi part end_name begin_operator DOT end_operator begin_name is repeatable end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment for all the file multiparts we must tell it to not include end_comment begin_comment the actual file content end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name part no end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator UNP end_operator begin_name viewable file part end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name viewable file part end_name begin_operator RPAR end_operator begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name set hide file data end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment send multipart without file content bos end_comment end_block end_then end_if end_block end_for begin_comment write the request to our own stream end_comment begin_decl_stmt begin_decl begin_type begin_name byte array output stream end_name end_type begin_name bos end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name byte array output stream end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name multi part end_name begin_operator DOT end_operator begin_name write request end_name end_name begin_argument_list begin_argument begin_expr begin_name bos end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment we get the posted bytes using the encoding used to create it end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name to byte array end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name content encoding end_name begin_operator EQT end_operator begin_operator QM end_operator begin_comment non nls 1 this is the default used by http client end_comment begin_operator DP end_operator begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment for all the file multiparts we must revert the hiding of end_comment begin_comment the actual file content end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name part no end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator UNP end_operator begin_name viewable file part end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name viewable file part end_name begin_operator RPAR end_operator begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name set hide file data end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment end_block end_else end_if end_block end_then begin_else begin_block begin_comment check if the header manager had a content type header end_comment begin_comment this allows the user to specify his own content type for a post request end_comment begin_decl_stmt begin_decl begin_type begin_name header end_name end_type begin_name content type header end_name begin_init begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name get request header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name has content type header end_name begin_init begin_expr begin_name content type header end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name content type header end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name content type header end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_init end_decl end_decl_stmt begin_comment if there are no arguments we can send a file as the body of the request end_comment begin_comment todo needs a multiple file upload scenerio end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name has arguments end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name get send file as post body end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment if get send file as post body returned true it s sure that file is not null end_comment begin_decl_stmt begin_decl begin_type begin_name http file arg end_name end_type begin_name file end_name begin_init begin_expr begin_name begin_name files end_name begin_index begin_expr end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name has content type header end_name end_expr end_condition begin_then begin_block begin_comment allow the mimetype of the file to control the content type end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set request header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set request header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name application x www form urlencoded end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file request entity end_name end_type begin_name file request entity end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file request entity end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set request entity end_name end_name begin_argument_list begin_argument begin_expr begin_name file request entity end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment we just add placeholder text for file content end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment in a post request which is not multipart we only support end_comment begin_comment parameters no file upload is allowed end_comment begin_comment if a content encoding is specified we set it as http parameter so that end_comment begin_comment the post body will be encoded in the specified content encoding end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name content encoding end_name begin_init begin_expr begin_call begin_name get content encoding end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name have content encoding end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name is null or empty trimmed end_name begin_argument_list begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name content encoding end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name get params end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set content charset end_name begin_argument_list begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name have content encoding end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_else end_if begin_comment if none of the arguments have a name specified we end_comment begin_comment just send all the values as the post body end_comment begin_if begin_condition begin_expr begin_call begin_name get send parameter values as post body end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment allow the mimetype of the file to control the content type end_comment begin_comment this is not obvious in gui if you are not uploading any files end_comment begin_comment but just sending the content of nameless parameters end_comment begin_comment todo needs a multiple file upload scenerio end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name has content type header end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name http file arg end_name end_type begin_name file end_name begin_init begin_expr begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator begin_operator QM end_operator begin_name begin_name files end_name begin_index begin_expr end_expr end_index end_name begin_operator DP end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name file end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set request header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set request header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name application x www form urlencoded end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_comment just append all the parameter values and use that as the post body end_comment begin_decl_stmt begin_decl begin_type begin_name string builder end_name end_type begin_name post body end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string builder end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name property iterator end_name end_type begin_name args end_name begin_init begin_expr begin_call begin_name get arguments end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name http argument end_name end_type begin_name arg end_name begin_init begin_expr begin_operator LPAR end_operator begin_name http argument end_name begin_operator RPAR end_operator begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get object value end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name have content encoding end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name value end_name begin_operator EQ end_operator begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get encoded value end_name end_name begin_argument_list begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name value end_name begin_operator EQ end_operator begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get encoded value end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name post body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_decl_stmt begin_decl begin_type begin_name string request entity end_name end_type begin_name request entity end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string request entity end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name post body end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name get request header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set request entity end_name end_name begin_argument_list begin_argument begin_expr begin_name request entity end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment it is a normal post request with parameter names and values end_comment begin_comment set the content type end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name has content type header end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set request header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name application x www form urlencoded end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment add the parameters end_comment begin_decl_stmt begin_decl begin_type begin_name property iterator end_name end_type begin_name args end_name begin_init begin_expr begin_call begin_name get arguments end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name http argument end_name end_type begin_name arg end_name begin_init begin_expr begin_operator LPAR end_operator begin_name http argument end_name begin_operator RPAR end_operator begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get object value end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment the http client always urlencodes both name and value end_comment begin_comment so if the argument is already encoded we have to decode end_comment begin_comment it before adding it to the post request end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name parameter name end_name begin_init begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name is skippable end_name end_name begin_argument_list begin_argument begin_expr begin_name parameter name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name parameter value end_name begin_init begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name is always encoded end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment the value is already encoded by the user end_comment begin_comment must decode the value now so that when the end_comment begin_comment httpclient encodes it we end up with the same value end_comment begin_comment as the user had entered end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name url content encoding end_name begin_init begin_expr begin_name content encoding end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name url content encoding end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name url content encoding end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment use the default encoding for urls end_comment begin_expr_stmt begin_expr begin_name url content encoding end_name begin_operator EQ end_operator begin_name begin_name encoder cache end_name begin_operator DOT end_operator begin_name url argument encoding end_name end_name end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name parameter name end_name begin_operator EQ end_operator begin_call begin_name begin_name url decoder end_name begin_operator DOT end_operator begin_name decode end_name end_name begin_argument_list begin_argument begin_expr begin_name parameter name end_name end_expr end_argument begin_argument begin_expr begin_name url content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name parameter value end_name begin_operator EQ end_operator begin_call begin_name begin_name url decoder end_name begin_operator DOT end_operator begin_name decode end_name end_name begin_argument_list begin_argument begin_expr begin_name parameter value end_name end_expr end_argument begin_argument begin_expr begin_name url content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment add the parameter httpclient will urlencode it end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name add parameter end_name end_name begin_argument_list begin_argument begin_expr begin_name parameter name end_name end_expr end_argument begin_argument begin_expr begin_name parameter value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_comment alternative implementation to make sure that http sampler and http sampler 2 sends the same post body only include the content char set in the content type header if it is not an application x www form urlencoded content type string content char set null if post get request header header content type get value equals application x www form urlencoded content char set post get request char set string request entity request entity new string request entity get query string content encoding post get request header header content type get value content char set post set request entity request entity end_comment end_block end_else end_if begin_comment if the request entity is repeatable we can send it first to end_comment begin_comment our own stream so we can return it end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name get request entity end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name is repeatable end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name byte array output stream end_name end_type begin_name bos end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name byte array output stream end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name get request entity end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name write request end_name begin_argument_list begin_argument begin_expr begin_name bos end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment we get the posted bytes using the encoding used to create it end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name to byte array end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name get request char set end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_else end_if end_block end_else end_if begin_comment set the content length end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set request header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content length end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name long end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name get request entity end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get content length end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name object end_name end_type begin_name unmarshal end_name begin_parameter_list begin_param begin_decl begin_type begin_name hierarchical stream reader end_name end_type begin_name reader end_name end_decl end_param begin_param begin_decl begin_type begin_name unmarshalling context end_name end_type begin_name context end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name sample event end_name end_type begin_name evt end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name sample event end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_return begin_expr begin_name evt end_name end_expr end_return end_block 
 begin_comment same as should never happen but provide a source exception param e the exception that helped identify the problem throws error always throws one end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name should never happen end_name begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name error end_name end_expr end_argument end_throws begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name error end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_comment for now the method isn t implemented i still need to decide how it should be implemented end_comment begin_type begin_annotation begin_name suppress warnings end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_annotation begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name string end_name begin_index end_index begin_index end_index end_type begin_name get table data end_name begin_parameter_list begin_param begin_decl begin_type begin_name list end_name end_type begin_name data end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator UNP end_operator begin_name begin_name string end_name begin_index begin_expr end_expr end_index begin_index begin_expr end_expr end_index end_name end_expr end_return end_block 
 begin_comment main processing method for the proxy object end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name run end_name begin_parameter_list end_parameter_list begin_block begin_comment check which http sampler class we should use end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name http sampler name end_name begin_init begin_expr begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name get sampler type name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name http request hdr end_name end_type begin_name request end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name http request hdr end_name begin_argument_list begin_argument begin_expr begin_name http sampler name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name sample result end_name end_type begin_name result end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name header manager end_name end_type begin_name headers end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name http sampler base end_name end_type begin_name sampler end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_comment now parse initial request in case it is a connect request end_comment begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name ba end_name begin_init begin_expr begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name parse end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name buffered input stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name client socket end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name begin_name ba end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name j meter exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_name ba end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name out stream client end_name begin_operator EQ end_operator begin_call begin_name begin_name client socket end_name begin_operator DOT end_operator begin_name get output stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name get method end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name starts with end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name connect end_name end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name out stream client end_name begin_operator UNP end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment write a ok reponse to browser to engage ssl exchange end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name out stream client end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get bytes end_name begin_argument_list begin_argument begin_expr begin_name begin_name sample result end_name begin_operator DOT end_operator begin_name default http encoding end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name out stream client end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment with ssl request url is host port without https or path end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name param end_name begin_init begin_expr begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name get url end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name split end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment non nls 1 end_comment begin_if begin_condition begin_expr begin_name begin_name param end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name param end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name client socket end_name begin_operator EQ end_operator begin_call begin_name start ssl end_name begin_argument_list begin_argument begin_expr begin_name client socket end_name end_expr end_argument begin_argument begin_expr begin_name begin_name param end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment should not happen but if it does we don t want to continue end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name get url end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name j meter exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_else end_if begin_comment re parse now it s the http request over ssl end_comment begin_try begin_block begin_expr_stmt begin_expr begin_name ba end_name begin_operator EQ end_operator begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name parse end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name buffered input stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name client socket end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_comment most likely this is because of a certificate error end_comment begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name url end_name begin_init begin_expr begin_name begin_name param end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator begin_operator QM end_operator begin_operator PLUS end_operator begin_name begin_name param end_name begin_index begin_expr end_expr end_index end_name begin_operator PLUS end_operator begin_operator DP end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name url end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name ioe end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment won t work write error to client http reply hdr form internal error end_comment begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name generate error result end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name ioe end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment generate result if nec and populate it end_comment begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name j meter exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_name ba end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name ba end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name get url end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name j meter exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name sampler creator end_name end_type begin_name sampler creator end_name begin_init begin_expr begin_call begin_name begin_name samplerfactory end_name begin_operator DOT end_operator begin_name get sampler creator end_name end_name begin_argument_list begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name page encodings end_name end_expr end_argument begin_argument begin_expr begin_name form encodings end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name sampler end_name begin_operator EQ end_operator begin_call begin_name begin_name sampler creator end_name begin_operator DOT end_operator begin_name create and populate sampler end_name end_name begin_argument_list begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name page encodings end_name end_expr end_argument begin_argument begin_expr begin_name form encodings end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment create a header manager to ensure that the browsers headers are captured and sent to the server end_comment begin_expr_stmt begin_expr begin_name headers end_name begin_operator EQ end_operator begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name get header manager end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name set header manager end_name end_name begin_argument_list begin_argument begin_expr begin_name headers end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name thread started end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment needed for http sampler 2 end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name get method end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name get url end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name sample end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment find the page encoding and possibly encodings for forms in the page end_comment begin_comment in the response from the web server end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name page encoding end_name begin_init begin_expr begin_call begin_name add page encoding end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name add form encodings end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_name page encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write to client end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name buffered output stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name client socket end_name begin_operator DOT end_operator begin_name get output stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sampler creator end_name begin_operator DOT end_operator begin_name post process sampler end_name end_name begin_argument_list begin_argument begin_expr begin_name sampler end_name end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name j meter exception end_name end_type begin_name jme end_name end_decl end_param end_parameter_list begin_block begin_comment ignored already processed end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name unknown host exception end_name end_type begin_name uhe end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name uhe end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write error to client end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name http reply hdr end_name begin_operator DOT end_operator begin_name form server not found end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name generate error result end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name uhe end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment generate result if nec and populate it end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal argument exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write error to client end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name http reply hdr end_name begin_operator DOT end_operator begin_name form not implemented end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name generate error result end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment generate result if nec and populate it end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write error to client end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name http reply hdr end_name begin_operator DOT end_operator begin_name form internal error end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name generate error result end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment generate result if nec and populate it end_comment end_block end_catch begin_finally begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name sampler end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_comment we don t want to store any cookies in the generated test plan end_comment begin_if begin_condition begin_expr begin_name headers end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name headers end_name begin_operator DOT end_operator begin_name remove header named end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header cookie end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment always remove cookies end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name headers end_name begin_operator DOT end_operator begin_name remove header named end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header authorization end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment always remove authorization end_comment begin_comment remove additional headers end_comment begin_for begin_init begin_decl begin_type begin_name string end_name end_type begin_name hdr end_name begin_range begin_expr begin_name headers to remove end_name end_expr end_range end_decl end_init begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name headers end_name begin_operator DOT end_operator begin_name remove header named end_name end_name begin_argument_list begin_argument begin_expr begin_name hdr end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if begin_if begin_condition begin_expr begin_name result end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_comment deliver sampler allows sampler to be null but result must not be null end_comment begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name deliver sampler end_name end_name begin_argument_list begin_argument begin_expr begin_name sampler end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name test element end_name begin_index end_index end_name begin_block begin_expr begin_name capture http headers end_name begin_operator QM end_operator begin_name headers end_name begin_operator DP end_operator end_expr end_block end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name client socket end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_if begin_condition begin_expr begin_name sampler end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name thread finished end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment needed for http sampler 2 end_comment end_block end_then end_if end_block end_finally end_try end_block 
 begin_comment get an instance of the specified j meter gui component class if an instance of the gui class has previously been created and it is not marked as an link unshared component that shared instance will be returned otherwise a new instance of the component will be created and shared components will be cached for future retrieval param gui class the fully qualified class name of the gui component this class must implement j meter gui component param test class the fully qualified class name of the test elements edited by this gui component this class must implement test element return an instance of the specified class throws instantiation exception if an instance of the object cannot be created throws illegal access exception if access rights do not allow the default constructor to be called throws class not found exception if the specified gui class cannot be found end_comment begin_type begin_specifier end_specifier begin_name j meter gui component end_name end_type begin_name get gui from cache end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name class end_name begin_argument_list begin_argument begin_name end_name end_argument end_argument_list end_name end_type begin_name gui class end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name class end_name begin_argument_list begin_argument begin_name end_name end_argument end_argument_list end_name end_type begin_name test class end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name instantiation exception end_name end_expr end_argument begin_argument begin_expr begin_name illegal access exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name j meter gui component end_name end_type begin_name comp end_name end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name gui class end_name begin_operator EQT end_operator begin_name begin_name test bean gui end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_call begin_name begin_name test bean gu is end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name test class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name comp end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name test bean gui end_name begin_argument_list begin_argument begin_expr begin_name test class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test bean gu is end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name test class end_name end_expr end_argument begin_argument begin_expr begin_name comp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_call begin_name begin_name guis end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name gui class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name comp end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name j meter gui component end_name begin_operator RPAR end_operator begin_call begin_name begin_name gui class end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_name comp end_name begin_operator UNP end_operator begin_name unshared component end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name guis end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name gui class end_name end_expr end_argument begin_argument begin_expr begin_name comp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block end_else end_if begin_return begin_expr begin_name comp end_name end_expr end_return end_block 
 begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name do action end_name begin_parameter_list begin_param begin_decl begin_type begin_name action event end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name is confirm end_name begin_init begin_expr begin_name skip confirm end_name begin_operator QM end_operator begin_name begin_name j option pane end_name begin_operator DOT end_operator begin_name yes option end_name end_name begin_operator DP end_operator begin_call begin_name begin_name j option pane end_name begin_operator DOT end_operator begin_name show confirm dialog end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name gui package end_name begin_operator DOT end_operator begin_name get instance end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get main frame end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name j meter utils end_name begin_operator DOT end_operator begin_name get res string end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_comment non nls 1 end_comment begin_argument begin_expr begin_call begin_name begin_name j meter utils end_name begin_operator DOT end_operator begin_name get res string end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_comment non nls 1 end_comment begin_argument begin_expr begin_name begin_name j option pane end_name begin_operator DOT end_operator begin_name yes no option end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name j option pane end_name begin_operator DOT end_operator begin_name question message end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name is confirm end_name begin_operator EQT end_operator begin_name begin_name j option pane end_name begin_operator DOT end_operator begin_name yes option end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name action router end_name begin_operator DOT end_operator begin_name get instance end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name action performed end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name action event end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get source end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get id end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name action names end_name begin_operator DOT end_operator begin_name check remove end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name gui package end_name end_type begin_name gui package end_name begin_init begin_expr begin_call begin_name begin_name gui package end_name begin_operator DOT end_operator begin_name get instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name j meter tree node end_name begin_index end_index end_type begin_name nodes end_name begin_init begin_expr begin_call begin_name begin_name gui package end_name begin_operator DOT end_operator begin_name get tree listener end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get selected nodes end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name tree path end_name end_type begin_name new tree path end_name begin_init begin_comment save parent node for later end_comment begin_expr begin_call begin_name begin_name gui package end_name begin_operator DOT end_operator begin_name get tree listener end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name removed selected node end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr begin_name begin_name nodes end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator MINUS end_operator end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator GE end_operator end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator MMINUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name remove node end_name begin_argument_list begin_argument begin_expr begin_name begin_name nodes end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name gui package end_name begin_operator DOT end_operator begin_name get tree listener end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get j tree end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set selection path end_name begin_argument_list begin_argument begin_expr begin_name new tree path end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name gui package end_name begin_operator DOT end_operator begin_name update current gui end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name sample started end_name begin_parameter_list begin_param begin_decl begin_type begin_name sample event end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name sample stopped end_name begin_parameter_list begin_param begin_decl begin_type begin_name sample event end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name sample stopped end_name begin_parameter_list begin_param begin_decl begin_type begin_name sample event end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name j meter tree node end_name end_type begin_name add component end_name begin_parameter_list begin_param begin_decl begin_type begin_name test element end_name end_type begin_name component end_name end_decl end_param begin_param begin_decl begin_type begin_name j meter tree node end_name end_type begin_name node end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name illegal user action exception end_name end_expr end_argument end_throws begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name node end_name begin_operator DOT end_operator begin_name get user object end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name abstract config gui end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name illegal user action exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name gui package end_name end_type begin_name gui package end_name begin_init begin_expr begin_call begin_name begin_name gui package end_name begin_operator DOT end_operator begin_name get instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name gui package end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment the node can be added in non gui mode at startup end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name gui package end_name begin_operator DOT end_operator begin_name update current node end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name j meter gui component end_name end_type begin_name guicomp end_name begin_init begin_expr begin_call begin_name begin_name gui package end_name begin_operator DOT end_operator begin_name get gui end_name end_name begin_argument_list begin_argument begin_expr begin_name component end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name guicomp end_name begin_operator DOT end_operator begin_name configure end_name end_name begin_argument_list begin_argument begin_expr begin_name component end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name guicomp end_name begin_operator DOT end_operator begin_name modify test element end_name end_name begin_argument_list begin_argument begin_expr begin_name component end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name gui package end_name begin_operator DOT end_operator begin_name get current gui end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment put the gui object back end_comment begin_comment to the way it was end_comment end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name j meter tree node end_name end_type begin_name new node end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name j meter tree node end_name begin_argument_list begin_argument begin_expr begin_name component end_name end_expr end_argument begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment this check the state of the test element and if returns false it end_comment begin_comment disable the loaded node end_comment begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name new node end_name begin_operator DOT end_operator begin_name set enabled end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name component end_name begin_operator DOT end_operator begin_name is enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name new node end_name begin_operator DOT end_operator begin_name set enabled end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name insert node into end_name end_name begin_argument_list begin_argument begin_expr begin_name new node end_name end_expr end_argument begin_argument begin_expr begin_name node end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name node end_name begin_operator DOT end_operator begin_name get child count end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name new node end_name end_expr end_return end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name sample stopped end_name begin_parameter_list begin_param begin_decl begin_type begin_name sample event end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment samples the url passed in and stores the result in code http sample result code following redirects and downloading page resources as appropriate p when getting a redirect target redirects are not followed and resources are not downloaded the caller will take care of this param url url to sample param method http method get post param are following redirect whether we re getting a redirect target param frame depth depth of this target in the frame structure used only to prevent infinite recursion return results of the sampling end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name http sample result end_name end_type begin_name sample end_name begin_parameter_list begin_param begin_decl begin_type begin_name url end_name end_type begin_name url end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name method end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name are following redirect end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name frame depth end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name url str end_name begin_init begin_expr begin_call begin_name begin_name url end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name url str end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name method end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name http method base end_name end_type begin_name http method end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name http sample result end_name end_type begin_name res end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name http sample result end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set monitor end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name is monitor end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set sample label end_name end_name begin_argument_list begin_argument begin_expr begin_name url str end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set http method end_name end_name begin_argument_list begin_argument begin_expr begin_name method end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set url end_name end_name begin_argument_list begin_argument begin_expr begin_name url end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name sample start end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment count the retries as well in the time end_comment begin_try begin_block begin_comment may generate illegal argument exception end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name method end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name post end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name http method end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name post method end_name begin_argument_list begin_argument begin_expr begin_name url str end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name method end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name put end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name http method end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name put method end_name begin_argument_list begin_argument begin_expr begin_name url str end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name method end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name head end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name http method end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name head method end_name begin_argument_list begin_argument begin_expr begin_name url str end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name method end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name trace end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name http method end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name trace method end_name begin_argument_list begin_argument begin_expr begin_name url str end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name method end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name options end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name http method end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name options method end_name begin_argument_list begin_argument begin_expr begin_name url str end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name method end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name delete end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name http method end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_class begin_super begin_name entity enclosing method end_name end_super begin_argument_list begin_argument begin_expr begin_name url str end_name end_expr end_argument end_argument_list begin_block begin_function begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name string end_name end_type begin_name get name end_name begin_parameter_list end_parameter_list begin_block begin_comment hc 3 1 does not have the method end_comment begin_return begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name delete end_name end_name end_expr end_return end_block end_function end_block end_class end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name method end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name get end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name http method end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name get method end_name begin_argument_list begin_argument begin_expr begin_name url str end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name method end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name patch end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name http method end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_class begin_super begin_name entity enclosing method end_name end_super begin_argument_list begin_argument begin_expr begin_name url str end_name end_expr end_argument end_argument_list begin_block begin_function begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name string end_name end_type begin_name get name end_name begin_parameter_list end_parameter_list begin_block begin_comment hc 3 1 does not have the method end_comment begin_return begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name patch end_name end_name end_expr end_return end_block end_function end_block end_class end_expr end_expr_stmt end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name illegal argument exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name method end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name cache manager end_name end_type begin_name cache manager end_name begin_init begin_expr begin_call begin_name get cache manager end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name cache manager end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name get end_name begin_operator DOT end_operator begin_name equals ignore case end_name end_name begin_argument_list begin_argument begin_expr begin_name method end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name cache manager end_name begin_operator DOT end_operator begin_name in cache end_name end_name begin_argument_list begin_argument begin_expr begin_name url end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name sample end end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set response no content end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set successful end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name res end_name end_expr end_return end_block end_then end_if end_block end_then end_if begin_comment set any default request headers end_comment begin_expr_stmt begin_expr begin_call begin_name set default request headers end_name begin_argument_list begin_argument begin_expr begin_name http method end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment setup connection end_comment begin_decl_stmt begin_decl begin_type begin_name http client end_name end_type begin_name client end_name begin_init begin_expr begin_call begin_name setup connection end_name begin_argument_list begin_argument begin_expr begin_name url end_name end_expr end_argument begin_argument begin_expr begin_name http method end_name end_expr end_argument begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name saved client end_name begin_operator EQ end_operator begin_name client end_name end_expr end_expr_stmt begin_comment handle the various methods end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name method end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name post end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name post body end_name begin_init begin_expr begin_call begin_name send post data end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name post method end_name begin_operator RPAR end_operator begin_name http method end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set query string end_name end_name begin_argument_list begin_argument begin_expr begin_name post body end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name method end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name put end_name end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name method end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name patch end_name end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name method end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name delete end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name put body end_name begin_init begin_expr begin_call begin_name send entity data end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name entity enclosing method end_name begin_operator RPAR end_operator begin_name http method end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set query string end_name end_name begin_argument_list begin_argument begin_expr begin_name put body end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name status code end_name begin_init begin_expr begin_call begin_name begin_name client end_name begin_operator DOT end_operator begin_name execute method end_name end_name begin_argument_list begin_argument begin_expr begin_name http method end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment we ve finished with the request so we can add the local address to it for display end_comment begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name inet address end_name end_type begin_name local addr end_name begin_init begin_expr begin_call begin_name begin_name client end_name begin_operator DOT end_operator begin_name get host configuration end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get local address end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name local addr end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name http method end_name begin_operator DOT end_operator begin_name add request header end_name end_name begin_argument_list begin_argument begin_expr begin_name header local address end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name local addr end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment needs to be done after execute to pick up all the headers end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set request headers end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get connection headers end_name begin_argument_list begin_argument begin_expr begin_name http method end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment request sent now get the response end_comment begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name instream end_name begin_init begin_expr begin_call begin_name begin_name http method end_name begin_operator DOT end_operator begin_name get response body as stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name instream end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment will be null for head end_comment begin_expr_stmt begin_expr begin_name instream end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name counting input stream end_name begin_argument_list begin_argument begin_expr begin_name instream end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name header end_name end_type begin_name response header end_name begin_init begin_expr begin_call begin_name begin_name http method end_name begin_operator DOT end_operator begin_name get response header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content encoding end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name response header end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name encoding gzip end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name response header end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name tmp input end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name gzip input stream end_name begin_argument_list begin_argument begin_expr begin_name instream end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment tmp inputstream needs to have a good counting end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set response data end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name read response end_name begin_argument_list begin_argument begin_expr begin_name res end_name end_expr end_argument begin_argument begin_expr begin_name tmp input end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name int end_name begin_operator RPAR end_operator begin_call begin_name begin_name http method end_name begin_operator DOT end_operator begin_name get response content length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set response data end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name read response end_name begin_argument_list begin_argument begin_expr begin_name res end_name end_expr end_argument begin_argument begin_expr begin_name instream end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name int end_name begin_operator RPAR end_operator begin_call begin_name begin_name http method end_name begin_operator DOT end_operator begin_name get response content length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name j orphan utils end_name begin_operator DOT end_operator begin_name close quietly end_name end_name begin_argument_list begin_argument begin_expr begin_name instream end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name sample end end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment done with the sampling proper end_comment begin_comment now collect the results into the http sample result end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set sample label end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name http method end_name begin_operator DOT end_operator begin_name get uri end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment pick up actual path after redirects end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set response code end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name integer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list begin_argument begin_expr begin_name status code end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set successful end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name is success code end_name begin_argument_list begin_argument begin_expr begin_name status code end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set response message end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name http method end_name begin_operator DOT end_operator begin_name get status text end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name ct end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name header end_name end_type begin_name h end_name begin_init begin_expr begin_call begin_name begin_name http method end_name begin_operator DOT end_operator begin_name get response header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name h end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_comment can be missing e g on redirect end_comment begin_block begin_expr_stmt begin_expr begin_name ct end_name begin_operator EQ end_operator begin_call begin_name begin_name h end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set content type end_name end_name begin_argument_list begin_argument begin_expr begin_name ct end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment e g text html charset iso 8859 1 end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set encoding and type end_name end_name begin_argument_list begin_argument begin_expr begin_name ct end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set response headers end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get response headers end_name begin_argument_list begin_argument begin_expr begin_name http method end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name is redirect end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name header end_name end_type begin_name header location end_name begin_init begin_expr begin_call begin_name begin_name http method end_name begin_operator DOT end_operator begin_name get response header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header location end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name header location end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment http protocol violation but avoids npe end_comment begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name illegal argument exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set redirect location end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name conversion utils end_name begin_operator DOT end_operator begin_name sanitize url end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name url end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name header location end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name header location end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_then end_if begin_comment record some sizes to allow http sample result get bytes with different options end_comment begin_if begin_condition begin_expr begin_name instream end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set body size end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name counting input stream end_name begin_operator RPAR end_operator begin_name instream end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get count end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set headers size end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name calculate headers size end_name begin_argument_list begin_argument begin_expr begin_name http method end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name get headers size end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name get body size end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator LPAR end_operator begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name get headers size end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name get body size end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment if we redirected automatically the url may have changed end_comment begin_if begin_condition begin_expr begin_call begin_name get auto redirects end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set url end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name url end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name http method end_name begin_operator DOT end_operator begin_name get uri end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment store any cookies received in the cookie manager end_comment begin_expr_stmt begin_expr begin_call begin_name save connection cookies end_name begin_argument_list begin_argument begin_expr begin_name http method end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name get url end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get cookie manager end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment save cache information end_comment begin_if begin_condition begin_expr begin_name cache manager end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cache manager end_name begin_operator DOT end_operator begin_name save details end_name end_name begin_argument_list begin_argument begin_expr begin_name http method end_name end_expr end_argument begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment follow redirects and download page resources if appropriate end_comment begin_expr_stmt begin_expr begin_name res end_name begin_operator EQ end_operator begin_call begin_name result processing end_name begin_argument_list begin_argument begin_expr begin_name are following redirect end_name end_expr end_argument begin_argument begin_expr begin_name frame depth end_name end_expr end_argument begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name res end_name end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal argument exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment e g some kinds of invalid url end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name sample end end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment pick up headers if failed to execute the request end_comment begin_comment http method can be null if method is unexpected end_comment begin_if begin_condition begin_expr begin_name http method end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set request headers end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get connection headers end_name begin_argument_list begin_argument begin_expr begin_name http method end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name error result end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name res end_name end_expr end_return end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name sample end end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment pick up headers if failed to execute the request end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set request headers end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get connection headers end_name begin_argument_list begin_argument begin_expr begin_name http method end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name error result end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name res end_name end_expr end_return end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_name saved client end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name http method end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name http method end_name begin_operator DOT end_operator begin_name release connection end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name initialize menus end_name begin_parameter_list end_parameter_list begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name list end_name begin_argument_list begin_argument begin_name string end_name end_argument end_argument_list end_name end_type begin_name gui classes end_name begin_init begin_expr begin_call begin_name begin_name class finder end_name begin_operator DOT end_operator begin_name find classes that extend end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name j meter utils end_name begin_operator DOT end_operator begin_name get search paths end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name class end_name begin_index end_index end_name begin_block begin_expr begin_name begin_name j meter gui component end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr begin_expr begin_name begin_name test bean end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_block end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name collections end_name begin_operator DOT end_operator begin_name sort end_name end_name begin_argument_list begin_argument begin_expr begin_name gui classes end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_range begin_expr begin_name gui classes end_name end_expr end_range end_decl end_init begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_comment non nls 1 end_comment begin_operator UNP end_operator begin_call begin_name begin_name name end_name begin_operator DOT end_operator begin_name ends with end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment non nls 1 end_comment begin_continue end_continue begin_comment don t try to instantiate these end_comment end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name elements to skip end_name begin_operator DOT end_operator begin_name contains end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment no point instantiating class end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name info end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_continue end_continue end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name hide bean end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name j meter gui component end_name end_type begin_name item end_name end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name class end_name begin_argument_list begin_argument begin_name end_name end_argument end_argument_list end_name end_type begin_name c end_name begin_init begin_expr begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name test bean end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name is assignable from end_name end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name test bean gui end_name end_type begin_name tbgui end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name test bean gui end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name hide bean end_name begin_operator EQ end_operator begin_call begin_name begin_name tbgui end_name begin_operator DOT end_operator begin_name is hidden end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name tbgui end_name begin_operator DOT end_operator begin_name is expert end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name j meter utils end_name begin_operator DOT end_operator begin_name is expert mode end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name item end_name begin_operator EQ end_operator begin_name tbgui end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name item end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name j meter gui component end_name begin_operator RPAR end_operator begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no class def found error end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_continue end_continue end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name throwable end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name e end_name begin_operator UNP end_operator begin_name error end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator LPAR end_operator begin_name error end_name begin_operator RPAR end_operator begin_name e end_name end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name e end_name begin_operator UNP end_operator begin_name runtime exception end_name end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_name e end_name begin_operator UNP end_operator begin_name headless exception end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_comment allow headless testing end_comment begin_throw begin_expr begin_operator LPAR end_operator begin_name runtime exception end_name begin_operator RPAR end_operator begin_name e end_name end_expr end_throw end_block end_then end_if end_block end_then end_if begin_continue end_continue end_block end_catch end_try begin_if begin_condition begin_expr begin_name hide bean end_name begin_operator UNP end_operator begin_call begin_name begin_name elements to skip end_name begin_operator DOT end_operator begin_name contains end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name item end_name begin_operator DOT end_operator begin_name get static label end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name info end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_continue end_continue end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name elements to skip end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment don t add it again end_comment end_block end_else end_if begin_decl_stmt begin_decl begin_type begin_name begin_name collection end_name begin_argument_list begin_argument begin_name string end_name end_argument end_argument_list end_name end_type begin_name categories end_name begin_init begin_expr begin_call begin_name begin_name item end_name begin_operator DOT end_operator begin_name get menu categories end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name categories end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_continue end_continue end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name categories end_name begin_operator DOT end_operator begin_name contains end_name end_name begin_argument_list begin_argument begin_expr begin_name threads end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name threads end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name menu info end_name begin_argument_list begin_argument begin_expr begin_name item end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name categories end_name begin_operator DOT end_operator begin_name contains end_name end_name begin_argument_list begin_argument begin_expr begin_name fragments end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name fragments end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name menu info end_name begin_argument_list begin_argument begin_expr begin_name item end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name categories end_name begin_operator DOT end_operator begin_name contains end_name end_name begin_argument_list begin_argument begin_expr begin_name timers end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name timers end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name menu info end_name begin_argument_list begin_argument begin_expr begin_name item end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name categories end_name begin_operator DOT end_operator begin_name contains end_name end_name begin_argument_list begin_argument begin_expr begin_name post processors end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post processors end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name menu info end_name begin_argument_list begin_argument begin_expr begin_name item end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name categories end_name begin_operator DOT end_operator begin_name contains end_name end_name begin_argument_list begin_argument begin_expr begin_name pre processors end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name pre processors end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name menu info end_name begin_argument_list begin_argument begin_expr begin_name item end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name categories end_name begin_operator DOT end_operator begin_name contains end_name end_name begin_argument_list begin_argument begin_expr begin_name controllers end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name controllers end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name menu info end_name begin_argument_list begin_argument begin_expr begin_name item end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name categories end_name begin_operator DOT end_operator begin_name contains end_name end_name begin_argument_list begin_argument begin_expr begin_name samplers end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name samplers end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name menu info end_name begin_argument_list begin_argument begin_expr begin_name item end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name categories end_name begin_operator DOT end_operator begin_name contains end_name end_name begin_argument_list begin_argument begin_expr begin_name non test elements end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name non test elements end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name menu info end_name begin_argument_list begin_argument begin_expr begin_name item end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name categories end_name begin_operator DOT end_operator begin_name contains end_name end_name begin_argument_list begin_argument begin_expr begin_name listeners end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name listeners end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name menu info end_name begin_argument_list begin_argument begin_expr begin_name item end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name categories end_name begin_operator DOT end_operator begin_name contains end_name end_name begin_argument_list begin_argument begin_expr begin_name config elements end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name config elements end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name menu info end_name begin_argument_list begin_argument begin_expr begin_name item end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name categories end_name begin_operator DOT end_operator begin_name contains end_name end_name begin_argument_list begin_argument begin_expr begin_name assertions end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name assertions end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name menu info end_name begin_argument_list begin_argument begin_expr begin_name item end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment the purpose of the method is to make it convienant to pass a list of the ur ls and return a list of the sampling stat calculators if no ur ls match the list is empty todo this method seems to be wrong it does not agree with the javadoc the sampling stat calculators will be returned in the same sequence as the url list param urls return array list of non null entries may be empty end_comment begin_type begin_annotation begin_name suppress warnings end_name begin_argument_list begin_argument begin_expr begin_block begin_expr end_expr begin_operator UNP end_operator begin_argument begin_expr end_expr end_argument end_block end_expr end_argument end_argument_list end_annotation begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name list end_name end_type begin_name get stats end_name begin_parameter_list begin_param begin_decl begin_type begin_name list end_name end_type begin_name urls end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name array list end_name end_type begin_name items end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name array list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name iterator end_name end_type begin_name itr end_name begin_init begin_expr begin_call begin_name begin_name urls end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name itr end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name sampling stat calculator end_name end_type begin_name row end_name begin_init begin_expr begin_operator LPAR end_operator begin_name sampling stat calculator end_name begin_operator RPAR end_operator begin_call begin_name begin_name itr end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name row end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name items end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name row end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_return begin_expr begin_name items end_name end_expr end_return end_block 
 begin_comment this method is used to do some low cost defensive programming it is called when a condition that the program logic should prevent from happening occurs i hope this will help early detection of logical bugs in property value handling throws error always throws an error end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name should never happen end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name msg end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name error end_name end_expr end_argument end_throws begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name error end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name set background color end_name begin_parameter_list begin_param begin_decl begin_type begin_name color end_name end_type begin_name back ground end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name back ground end_name end_name begin_operator EQ end_operator begin_name back ground end_name end_expr end_expr_stmt end_block 
 begin_comment this set daemon true end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name run end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name x end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_while begin_condition begin_expr begin_operator LPAR end_operator begin_name x end_name begin_operator EQ end_operator begin_call begin_name begin_name is end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator GT end_operator begin_operator MINUS end_operator end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name c end_name begin_init begin_expr begin_operator LPAR end_operator begin_name char end_name begin_operator RPAR end_operator begin_name x end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name print end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name is end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name is end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block end_catch end_try end_block end_then end_if end_block end_finally end_try end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name sample started end_name begin_parameter_list begin_param begin_decl begin_type begin_name sample event end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment get an instance of the specified j meter gui component class if an instance of the gui class has previously been created and it is not marked as an link unshared component that shared instance will be returned otherwise a new instance of the component will be created and shared components will be cached for future retrieval param gui class the fully qualified class name of the gui component this class must implement j meter gui component param test class the fully qualified class name of the test elements edited by this gui component this class must implement test element return an instance of the specified class throws instantiation exception if an instance of the object cannot be created throws illegal access exception if access rights do not allow the default constructor to be called throws class not found exception if the specified gui class cannot be found end_comment begin_type begin_specifier end_specifier begin_name j meter gui component end_name end_type begin_name get gui from cache end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name class end_name begin_argument_list begin_argument begin_name end_name end_argument end_argument_list end_name end_type begin_name gui class end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name class end_name begin_argument_list begin_argument begin_name end_name end_argument end_argument_list end_name end_type begin_name test class end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name instantiation exception end_name end_expr end_argument begin_argument begin_expr begin_name illegal access exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name j meter gui component end_name end_type begin_name comp end_name end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name gui class end_name begin_operator EQT end_operator begin_name begin_name test bean gui end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_call begin_name begin_name test bean gu is end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name test class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name comp end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name test bean gui end_name begin_argument_list begin_argument begin_expr begin_name test class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test bean gu is end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name test class end_name end_expr end_argument begin_argument begin_expr begin_name comp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_call begin_name begin_name guis end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name gui class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name comp end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name j meter gui component end_name begin_operator RPAR end_operator begin_call begin_name begin_name gui class end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_name comp end_name begin_operator UNP end_operator begin_name unshared component end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name guis end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name gui class end_name end_expr end_argument begin_argument begin_expr begin_name comp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block end_else end_if begin_return begin_expr begin_name comp end_name end_expr end_return end_block 
 begin_comment compile a string into a function or simple variable called by link compile string string when that has detected calls link compound variable get named function string if it detects start of parameter list end of function call param reader points to input after the return the function or variable object or a string end_comment begin_type begin_name object end_name end_type begin_name make function end_name begin_parameter_list begin_param begin_decl begin_type begin_name string reader end_name end_type begin_name reader end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name invalid variable exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name char end_name begin_index end_index end_type begin_name current end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name char end_name begin_index begin_expr end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name previous end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string builder end_name end_type begin_name buffer end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string builder end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name function end_name end_decl end_decl_stmt begin_try begin_block begin_while begin_condition begin_expr begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list begin_argument begin_expr begin_name current end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_block begin_if begin_condition begin_expr begin_name begin_name current end_name begin_index begin_expr end_expr end_index end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list begin_argument begin_expr begin_name current end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_break end_break end_block end_then end_if begin_expr_stmt begin_expr begin_name previous end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name current end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_continue end_continue end_block end_then begin_else begin_if begin_condition begin_expr begin_name begin_name current end_name begin_index begin_expr end_expr end_index end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name previous end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name func name end_name begin_init begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name function end_name begin_operator EQ end_operator begin_call begin_name begin_name compound variable end_name begin_operator DOT end_operator begin_name get named function end_name end_name begin_argument_list begin_argument begin_expr begin_name func name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name function end_name begin_operator UNP end_operator begin_name function end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name function end_name begin_operator RPAR end_operator begin_name function end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name set parameters end_name begin_argument_list begin_argument begin_expr begin_call begin_name parse params end_name begin_argument_list begin_argument begin_expr begin_name reader end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list begin_argument begin_expr begin_name current end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_operator UNP end_operator begin_name begin_name current end_name begin_index begin_expr end_expr end_index end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name reset end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment set to start of string end_comment begin_decl_stmt begin_decl begin_type begin_name char end_name begin_index end_index end_type begin_name cb end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name char end_name begin_index begin_expr end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name nb read end_name begin_init begin_expr begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list begin_argument begin_expr begin_name cb end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name invalid variable exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name func name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_name cb end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name nb read end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_name function end_name begin_operator UNP end_operator begin_name test state listener end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name standard j meter engine end_name begin_operator DOT end_operator begin_name register end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name test state listener end_name begin_operator RPAR end_operator begin_name function end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name function end_name end_expr end_return end_block end_then begin_else begin_block begin_comment function does not exist so treat as per missing variable end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name current end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_continue end_continue end_block end_then begin_else begin_if begin_condition begin_expr begin_name begin_name current end_name begin_index begin_expr end_expr end_index end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment variable or function with no parameter list end_comment begin_expr_stmt begin_expr begin_name function end_name begin_operator EQ end_operator begin_call begin_name begin_name compound variable end_name begin_operator DOT end_operator begin_name get named function end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name function end_name begin_operator UNP end_operator begin_name function end_name end_expr end_condition begin_then begin_block begin_comment ensure that set parameters is called end_comment begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name function end_name begin_operator RPAR end_operator begin_name function end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name set parameters end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name begin_name linked list end_name begin_argument_list begin_argument begin_name compound variable end_name end_argument end_argument_list end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name set length end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name function end_name end_expr end_return end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name current end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name previous end_name begin_operator EQ end_operator begin_name begin_name current end_name begin_index begin_expr end_expr end_index end_name end_expr end_expr_stmt end_block end_else end_if end_else end_if end_else end_if end_block end_while end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name process path end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment main processing method for the proxy object end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name run end_name begin_parameter_list end_parameter_list begin_block begin_comment check which http sampler class we should use end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name http sampler name end_name begin_init begin_expr begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name get sampler type name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name http request hdr end_name end_type begin_name request end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name http request hdr end_name begin_argument_list begin_argument begin_expr begin_name http sampler name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name sample result end_name end_type begin_name result end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name header manager end_name end_type begin_name headers end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name http sampler base end_name end_type begin_name sampler end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_comment now parse initial request in case it is a connect request end_comment begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name ba end_name begin_init begin_expr begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name parse end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name buffered input stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name client socket end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name begin_name ba end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name j meter exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_name ba end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name out stream client end_name begin_operator EQ end_operator begin_call begin_name begin_name client socket end_name begin_operator DOT end_operator begin_name get output stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name get method end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name starts with end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name connect end_name end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name out stream client end_name begin_operator UNP end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment write a ok reponse to browser to engage ssl exchange end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name out stream client end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get bytes end_name begin_argument_list begin_argument begin_expr begin_name begin_name sample result end_name begin_operator DOT end_operator begin_name default http encoding end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name out stream client end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment with ssl request url is host port without https or path end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name param end_name begin_init begin_expr begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name get url end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name split end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment non nls 1 end_comment begin_if begin_condition begin_expr begin_name begin_name param end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name param end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name client socket end_name begin_operator EQ end_operator begin_call begin_name start ssl end_name begin_argument_list begin_argument begin_expr begin_name client socket end_name end_expr end_argument begin_argument begin_expr begin_name begin_name param end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment should not happen but if it does we don t want to continue end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name get url end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name j meter exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_else end_if begin_comment re parse now it s the http request over ssl end_comment begin_try begin_block begin_expr_stmt begin_expr begin_name ba end_name begin_operator EQ end_operator begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name parse end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name buffered input stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name client socket end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_comment most likely this is because of a certificate error end_comment begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name url end_name begin_init begin_expr begin_name begin_name param end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator begin_operator QM end_operator begin_operator PLUS end_operator begin_name begin_name param end_name begin_index begin_expr end_expr end_index end_name begin_operator PLUS end_operator begin_operator DP end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name url end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name ioe end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment won t work write error to client http reply hdr form internal error end_comment begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name generate error result end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name ioe end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment generate result if nec and populate it end_comment begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name j meter exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_name ba end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name ba end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name get url end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name j meter exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name sampler creator end_name end_type begin_name sampler creator end_name begin_init begin_expr begin_call begin_name begin_name samplerfactory end_name begin_operator DOT end_operator begin_name get sampler creator end_name end_name begin_argument_list begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name page encodings end_name end_expr end_argument begin_argument begin_expr begin_name form encodings end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name sampler end_name begin_operator EQ end_operator begin_call begin_name begin_name sampler creator end_name begin_operator DOT end_operator begin_name create and populate sampler end_name end_name begin_argument_list begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name page encodings end_name end_expr end_argument begin_argument begin_expr begin_name form encodings end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment create a header manager to ensure that the browsers headers are captured and sent to the server end_comment begin_expr_stmt begin_expr begin_name headers end_name begin_operator EQ end_operator begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name get header manager end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name set header manager end_name end_name begin_argument_list begin_argument begin_expr begin_name headers end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name thread started end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment needed for http sampler 2 end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name get method end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name get url end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name sample end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment find the page encoding and possibly encodings for forms in the page end_comment begin_comment in the response from the web server end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name page encoding end_name begin_init begin_expr begin_call begin_name add page encoding end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name add form encodings end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_name page encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write to client end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name buffered output stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name client socket end_name begin_operator DOT end_operator begin_name get output stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sampler creator end_name begin_operator DOT end_operator begin_name post process sampler end_name end_name begin_argument_list begin_argument begin_expr begin_name sampler end_name end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name j meter exception end_name end_type begin_name jme end_name end_decl end_param end_parameter_list begin_block begin_comment ignored already processed end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name unknown host exception end_name end_type begin_name uhe end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name uhe end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write error to client end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name http reply hdr end_name begin_operator DOT end_operator begin_name form server not found end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name generate error result end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name uhe end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment generate result if nec and populate it end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal argument exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write error to client end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name http reply hdr end_name begin_operator DOT end_operator begin_name form not implemented end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name generate error result end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment generate result if nec and populate it end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write error to client end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name http reply hdr end_name begin_operator DOT end_operator begin_name form internal error end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name generate error result end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment generate result if nec and populate it end_comment end_block end_catch begin_finally begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name sampler end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_comment we don t want to store any cookies in the generated test plan end_comment begin_if begin_condition begin_expr begin_name headers end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name headers end_name begin_operator DOT end_operator begin_name remove header named end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header cookie end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment always remove cookies end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name headers end_name begin_operator DOT end_operator begin_name remove header named end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header authorization end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment always remove authorization end_comment begin_comment remove additional headers end_comment begin_for begin_init begin_decl begin_type begin_name string end_name end_type begin_name hdr end_name begin_range begin_expr begin_name headers to remove end_name end_expr end_range end_decl end_init begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name headers end_name begin_operator DOT end_operator begin_name remove header named end_name end_name begin_argument_list begin_argument begin_expr begin_name hdr end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if begin_if begin_condition begin_expr begin_name result end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_comment deliver sampler allows sampler to be null but result must not be null end_comment begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name deliver sampler end_name end_name begin_argument_list begin_argument begin_expr begin_name sampler end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name test element end_name begin_index end_index end_name begin_block begin_expr begin_name capture http headers end_name begin_operator QM end_operator begin_name headers end_name begin_operator DP end_operator end_expr end_block end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name client socket end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_if begin_condition begin_expr begin_name sampler end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name thread finished end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment needed for http sampler 2 end_comment end_block end_then end_if end_block end_finally end_try end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name sample stopped end_name begin_parameter_list begin_param begin_decl begin_type begin_name sample event end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name subtract node end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name get local host details end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name inet address end_name end_type begin_name local host end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name local host end_name begin_operator EQ end_operator begin_call begin_name begin_name inet address end_name begin_operator DOT end_operator begin_name get local host end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name unknown host exception end_name end_type begin_name e 1 end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_catch end_try begin_expr_stmt begin_expr begin_name local host ip end_name begin_operator EQ end_operator begin_call begin_name begin_name local host end_name begin_operator DOT end_operator begin_name get host address end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name local host name end_name begin_operator EQ end_operator begin_call begin_name begin_name local host end_name begin_operator DOT end_operator begin_name get host name end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name local host full name end_name begin_operator EQ end_operator begin_call begin_name begin_name local host end_name begin_operator DOT end_operator begin_name get canonical host name end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
