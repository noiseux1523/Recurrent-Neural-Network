 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name sample started end_name begin_parameter_list begin_param begin_decl begin_type begin_name sample event end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment process the current sampler handling transaction samplers param current sampler param parent sampler param thread context return sample result if a transaction was processed end_comment begin_type begin_annotation begin_name suppress warnings end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_annotation begin_comment ok to call test bean helper prepare end_comment begin_specifier end_specifier begin_name sample result end_name end_type begin_name process sampler end_name begin_parameter_list begin_param begin_decl begin_type begin_name sampler end_name end_type begin_name current end_name end_decl end_param begin_param begin_decl begin_type begin_name sampler end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name j meter context end_name end_type begin_name thread context end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name sample result end_name end_type begin_name transaction result end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_comment check if we are running a transaction end_comment begin_decl_stmt begin_decl begin_type begin_name transaction sampler end_name end_type begin_name transaction sampler end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name current end_name begin_operator UNP end_operator begin_name transaction sampler end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name transaction sampler end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name transaction sampler end_name begin_operator RPAR end_operator begin_name current end_name end_expr end_expr_stmt end_block end_then end_if begin_comment find the package for the transaction end_comment begin_decl_stmt begin_decl begin_type begin_name sample package end_name end_type begin_name transaction pack end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name transaction sampler end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name transaction pack end_name begin_operator EQ end_operator begin_call begin_name begin_name compiler end_name begin_operator DOT end_operator begin_name configure transaction sampler end_name end_name begin_argument_list begin_argument begin_expr begin_name transaction sampler end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment check if the transaction is done end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name transaction sampler end_name begin_operator DOT end_operator begin_name is transaction done end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment get the transaction sample result end_comment begin_expr_stmt begin_expr begin_name transaction result end_name begin_operator EQ end_operator begin_call begin_name begin_name transaction sampler end_name begin_operator DOT end_operator begin_name get transaction result end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name transaction result end_name begin_operator DOT end_operator begin_name set thread name end_name end_name begin_argument_list begin_argument begin_expr begin_name thread name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name transaction result end_name begin_operator DOT end_operator begin_name set group threads end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name thread group end_name begin_operator DOT end_operator begin_name get number of threads end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name transaction result end_name begin_operator DOT end_operator begin_name set all threads end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name j meter context service end_name begin_operator DOT end_operator begin_name get number of threads end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment check assertions for the transaction sample end_comment begin_expr_stmt begin_expr begin_call begin_name check assertions end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name transaction pack end_name begin_operator DOT end_operator begin_name get assertions end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name transaction result end_name end_expr end_argument begin_argument begin_expr begin_name thread context end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment notify listeners with the transaction sample result end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_name parent end_name begin_operator UNP end_operator begin_name transaction sampler end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name notify listeners end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name transaction pack end_name begin_operator DOT end_operator begin_name get sample listeners end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name transaction result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name compiler end_name begin_operator DOT end_operator begin_name done end_name end_name begin_argument_list begin_argument begin_expr begin_name transaction pack end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment transaction is done we do not have a sampler to sample end_comment begin_expr_stmt begin_expr begin_name current end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name sampler end_name end_type begin_name prev end_name begin_init begin_expr begin_name current end_name end_expr end_init end_decl end_decl_stmt begin_comment it is the sub sampler of the transaction that will be sampled end_comment begin_expr_stmt begin_expr begin_name current end_name begin_operator EQ end_operator begin_call begin_name begin_name transaction sampler end_name begin_operator DOT end_operator begin_name get sub sampler end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name current end_name begin_operator UNP end_operator begin_name transaction sampler end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name sample result end_name end_type begin_name res end_name begin_init begin_expr begin_call begin_name process sampler end_name begin_argument_list begin_argument begin_expr begin_name current end_name end_expr end_argument begin_argument begin_expr begin_name prev end_name end_expr end_argument begin_argument begin_expr begin_name thread context end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment recursive call end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name thread context end_name begin_operator DOT end_operator begin_name set current sampler end_name end_name begin_argument_list begin_argument begin_expr begin_name prev end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name current end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name res end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name transaction sampler end_name begin_operator DOT end_operator begin_name add sub sampler result end_name end_name begin_argument_list begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block end_else end_if end_block end_then end_if begin_comment check if we have a sampler to sample end_comment begin_if begin_condition begin_expr begin_name current end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name thread context end_name begin_operator DOT end_operator begin_name set current sampler end_name end_name begin_argument_list begin_argument begin_expr begin_name current end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment get the sampler ready to sample end_comment begin_decl_stmt begin_decl begin_type begin_name sample package end_name end_type begin_name pack end_name begin_init begin_expr begin_call begin_name begin_name compiler end_name begin_operator DOT end_operator begin_name configure sampler end_name end_name begin_argument_list begin_argument begin_expr begin_name current end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name run pre processors end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name pack end_name begin_operator DOT end_operator begin_name get pre processors end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name thread vars end_name begin_operator DOT end_operator begin_name put object end_name end_name begin_argument_list begin_argument begin_expr begin_name package object end_name end_expr end_argument begin_argument begin_expr begin_name pack end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name delay end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name pack end_name begin_operator DOT end_operator begin_name get timers end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name sampler end_name end_type begin_name sampler end_name begin_init begin_expr begin_call begin_name begin_name pack end_name begin_operator DOT end_operator begin_name get sampler end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name set thread context end_name end_name begin_argument_list begin_argument begin_expr begin_name thread context end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment todo should this set the thread names for all the subsamples end_comment begin_comment might be more efficient than fetching the name elsewehere end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name set thread name end_name end_name begin_argument_list begin_argument begin_expr begin_name thread name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test bean helper end_name begin_operator DOT end_operator begin_name prepare end_name end_name begin_argument_list begin_argument begin_expr begin_name sampler end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment perform the actual sample end_comment begin_expr_stmt begin_expr begin_name current sampler end_name begin_operator EQ end_operator begin_name sampler end_name end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name sample result end_name end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name sample end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name current sampler end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_comment if we got any results then perform processing on the result end_comment begin_if begin_condition begin_expr begin_name result end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set group threads end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name thread group end_name begin_operator DOT end_operator begin_name get number of threads end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set all threads end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name j meter context service end_name begin_operator DOT end_operator begin_name get number of threads end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set thread name end_name end_name begin_argument_list begin_argument begin_expr begin_name thread name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name thread context end_name begin_operator DOT end_operator begin_name set previous result end_name end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name run post processors end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name pack end_name begin_operator DOT end_operator begin_name get post processors end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name check assertions end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name pack end_name begin_operator DOT end_operator begin_name get assertions end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_name thread context end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment do not send subsamples to listeners which receive the transaction sample end_comment begin_decl_stmt begin_decl begin_type begin_name begin_name list end_name begin_argument_list begin_argument begin_name sample listener end_name end_argument end_argument_list end_name end_type begin_name sample listeners end_name begin_init begin_expr begin_call begin_name get sample listeners end_name begin_argument_list begin_argument begin_expr begin_name pack end_name end_expr end_argument begin_argument begin_expr begin_name transaction pack end_name end_expr end_argument begin_argument begin_expr begin_name transaction sampler end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name notify listeners end_name begin_argument_list begin_argument begin_expr begin_name sample listeners end_name end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name compiler end_name begin_operator DOT end_operator begin_name done end_name end_name begin_argument_list begin_argument begin_expr begin_name pack end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment add the result as subsample of transaction if we are in a transaction end_comment begin_if begin_condition begin_expr begin_name transaction sampler end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name transaction sampler end_name begin_operator DOT end_operator begin_name add sub sampler result end_name end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment check if thread or test should be stopped end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name is stop thread end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name is successful end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name on error stop thread end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name stop thread end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name is stop test end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name is successful end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name on error stop test end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name stop test end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name is stop test now end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name is successful end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name on error stop test now end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name stop test now end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name is start next thread loop end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name thread context end_name begin_operator DOT end_operator begin_name set restart next loop end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name compiler end_name begin_operator DOT end_operator begin_name done end_name end_name begin_argument_list begin_argument begin_expr begin_name pack end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment finish up end_comment end_block end_else end_if end_block end_then end_if begin_if begin_condition begin_expr begin_name scheduler end_name end_expr end_condition begin_then begin_block begin_comment checks the scheduler to stop the iteration end_comment begin_expr_stmt begin_expr begin_call begin_name stop scheduler end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name j meter stop test exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name info end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name stop test end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name j meter stop thread exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name info end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name stop thread end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name current end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name current end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_catch end_try begin_return begin_expr begin_name transaction result end_name end_expr end_return end_block 
 begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name run end_name begin_parameter_list end_parameter_list begin_block begin_if begin_condition begin_expr begin_name stopping message end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name stopping message end_name begin_operator DOT end_operator begin_name set visible end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name sample stopped end_name begin_parameter_list begin_param begin_decl begin_type begin_name sample event end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment create a test element for a gui or test bean class p this is a utility method to help actions do with one single string parameter param obj class the fully qualified class name of the gui component or of the test bean subclass for which a test bean gui is wanted return the test element corresponding to the specified gui class end_comment begin_type begin_specifier end_specifier begin_name test element end_name end_type begin_name create test element end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name obj class end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name j meter gui component end_name end_type begin_name comp end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name class end_name begin_argument_list begin_argument begin_name end_name end_argument end_argument_list end_name end_type begin_name c end_name end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name c end_name begin_operator EQ end_operator begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name obj class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name test bean end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name is assignable from end_name end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_call begin_name get gui from cache end_name begin_argument_list begin_argument begin_expr begin_name begin_name test bean gui end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_call begin_name get gui from cache end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name comp end_name begin_operator DOT end_operator begin_name clear gui end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name test element end_name end_type begin_name node end_name begin_init begin_expr begin_call begin_name begin_name comp end_name begin_operator DOT end_operator begin_name create test element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name nodes to gui end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name node end_name end_expr end_argument begin_argument begin_expr begin_name comp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name node end_name end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no class def found error end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name j option pane end_name begin_operator DOT end_operator begin_name show message dialog end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name j option pane end_name begin_operator DOT end_operator begin_name error message end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw begin_comment probably a missing jar end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name instantiation exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal access exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name set value end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_name value end_name begin_operator UNP end_operator begin_name double end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set text end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name double end_name end_type begin_name rate end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name double end_name begin_operator RPAR end_operator begin_name value end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name double value end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name rate end_name begin_operator EQT end_operator begin_name begin_name double end_name begin_operator DOT end_operator begin_name max value end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set text end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name unit end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name rate end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name rate end_name begin_operator UNP end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name unit end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name rate end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name rate end_name begin_operator UNP end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name unit end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name set text end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name formatter end_name begin_operator DOT end_operator begin_name format end_name end_name begin_argument_list begin_argument begin_expr begin_name rate end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name unit end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment this method is used to do some low cost defensive programming it is called when a condition that the program logic should prevent from happening occurs i hope this will help early detection of logical bugs in property value handling throws error always throws an error end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name should never happen end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name msg end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name error end_name end_expr end_argument end_throws begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name error end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_comment main processing method for the proxy object end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name run end_name begin_parameter_list end_parameter_list begin_block begin_comment check which http sampler class we should use end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name http sampler name end_name begin_init begin_expr begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name get sampler type name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name http request hdr end_name end_type begin_name request end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name http request hdr end_name begin_argument_list begin_argument begin_expr begin_name http sampler name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name sample result end_name end_type begin_name result end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name header manager end_name end_type begin_name headers end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name http sampler base end_name end_type begin_name sampler end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_comment now parse initial request in case it is a connect request end_comment begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name ba end_name begin_init begin_expr begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name parse end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name buffered input stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name client socket end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name begin_name ba end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name j meter exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_name ba end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name out stream client end_name begin_operator EQ end_operator begin_call begin_name begin_name client socket end_name begin_operator DOT end_operator begin_name get output stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name get method end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name starts with end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name connect end_name end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name out stream client end_name begin_operator UNP end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment write a ok reponse to browser to engage ssl exchange end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name out stream client end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get bytes end_name begin_argument_list begin_argument begin_expr begin_name begin_name sample result end_name begin_operator DOT end_operator begin_name default http encoding end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name out stream client end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment with ssl request url is host port without https or path end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name param end_name begin_init begin_expr begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name get url end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name split end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment non nls 1 end_comment begin_if begin_condition begin_expr begin_name begin_name param end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name param end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name client socket end_name begin_operator EQ end_operator begin_call begin_name start ssl end_name begin_argument_list begin_argument begin_expr begin_name client socket end_name end_expr end_argument begin_argument begin_expr begin_name begin_name param end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment should not happen but if it does we don t want to continue end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name get url end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name j meter exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_else end_if begin_comment re parse now it s the http request over ssl end_comment begin_try begin_block begin_expr_stmt begin_expr begin_name ba end_name begin_operator EQ end_operator begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name parse end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name buffered input stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name client socket end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_comment most likely this is because of a certificate error end_comment begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name url end_name begin_init begin_expr begin_name begin_name param end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator begin_operator QM end_operator begin_operator PLUS end_operator begin_name begin_name param end_name begin_index begin_expr end_expr end_index end_name begin_operator PLUS end_operator begin_operator DP end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name url end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name ioe end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment won t work write error to client http reply hdr form internal error end_comment begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name generate error result end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name ioe end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment generate result if nec and populate it end_comment begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name j meter exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_name ba end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name ba end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name get url end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name j meter exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name sampler creator end_name end_type begin_name sampler creator end_name begin_init begin_expr begin_call begin_name begin_name samplerfactory end_name begin_operator DOT end_operator begin_name get sampler creator end_name end_name begin_argument_list begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name page encodings end_name end_expr end_argument begin_argument begin_expr begin_name form encodings end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name sampler end_name begin_operator EQ end_operator begin_call begin_name begin_name sampler creator end_name begin_operator DOT end_operator begin_name create and populate sampler end_name end_name begin_argument_list begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name page encodings end_name end_expr end_argument begin_argument begin_expr begin_name form encodings end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment create a header manager to ensure that the browsers headers are captured and sent to the server end_comment begin_expr_stmt begin_expr begin_name headers end_name begin_operator EQ end_operator begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name get header manager end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name set header manager end_name end_name begin_argument_list begin_argument begin_expr begin_name headers end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name thread started end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment needed for http sampler 2 end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name get method end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name get url end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name sample end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment find the page encoding and possibly encodings for forms in the page end_comment begin_comment in the response from the web server end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name page encoding end_name begin_init begin_expr begin_call begin_name add page encoding end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name add form encodings end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_name page encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write to client end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name buffered output stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name client socket end_name begin_operator DOT end_operator begin_name get output stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sampler creator end_name begin_operator DOT end_operator begin_name post process sampler end_name end_name begin_argument_list begin_argument begin_expr begin_name sampler end_name end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name j meter exception end_name end_type begin_name jme end_name end_decl end_param end_parameter_list begin_block begin_comment ignored already processed end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name unknown host exception end_name end_type begin_name uhe end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name uhe end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write error to client end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name http reply hdr end_name begin_operator DOT end_operator begin_name form server not found end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name generate error result end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name uhe end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment generate result if nec and populate it end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal argument exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write error to client end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name http reply hdr end_name begin_operator DOT end_operator begin_name form not implemented end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name generate error result end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment generate result if nec and populate it end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write error to client end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name http reply hdr end_name begin_operator DOT end_operator begin_name form internal error end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name generate error result end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment generate result if nec and populate it end_comment end_block end_catch begin_finally begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name sampler end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_comment we don t want to store any cookies in the generated test plan end_comment begin_if begin_condition begin_expr begin_name headers end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name headers end_name begin_operator DOT end_operator begin_name remove header named end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header cookie end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment always remove cookies end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name headers end_name begin_operator DOT end_operator begin_name remove header named end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header authorization end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment always remove authorization end_comment begin_comment remove additional headers end_comment begin_for begin_init begin_decl begin_type begin_name string end_name end_type begin_name hdr end_name begin_range begin_expr begin_name headers to remove end_name end_expr end_range end_decl end_init begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name headers end_name begin_operator DOT end_operator begin_name remove header named end_name end_name begin_argument_list begin_argument begin_expr begin_name hdr end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if begin_if begin_condition begin_expr begin_name result end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_comment deliver sampler allows sampler to be null but result must not be null end_comment begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name deliver sampler end_name end_name begin_argument_list begin_argument begin_expr begin_name sampler end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name test element end_name begin_index end_index end_name begin_block begin_expr begin_name capture http headers end_name begin_operator QM end_operator begin_name headers end_name begin_operator DP end_operator end_expr end_block end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name client socket end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_if begin_condition begin_expr begin_name sampler end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name thread finished end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment needed for http sampler 2 end_comment end_block end_then end_if end_block end_finally end_try end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name subtract node end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name object end_name end_type begin_name get end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name key end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name client map end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment performs a test sample param entry the entry for this sample return test sample result end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name sample result end_name end_type begin_name sample end_name begin_parameter_list begin_param begin_decl begin_type begin_name entry end_name end_type begin_name entry end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name sample result end_name end_type begin_name results end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name sample result end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set data type end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name sample result end_name begin_operator DOT end_operator begin_name text end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set sample label end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name command end_name begin_init begin_expr begin_call begin_name get command end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name arguments end_name end_type begin_name args end_name begin_init begin_expr begin_call begin_name get arguments end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name arguments end_name end_type begin_name environment end_name begin_init begin_expr begin_call begin_name get environment variables end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name check return code end_name begin_init begin_expr begin_call begin_name get check return code end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name expected return code end_name begin_init begin_expr begin_call begin_name get expected return code end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name list end_name begin_argument_list begin_argument begin_name string end_name end_argument end_argument_list end_name end_type begin_name cmds end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name array list end_name begin_argument_list begin_argument begin_name string end_name end_argument end_argument_list end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name get argument count end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string builder end_name end_type begin_name cmd line end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string builder end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_operator EQT end_operator begin_name command end_name begin_operator RPAR end_operator begin_operator QM end_operator begin_operator DP end_operator begin_name command end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmds end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name command end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name get argument count end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name argument end_name end_type begin_name arg end_name begin_init begin_expr begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name get argument end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmds end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get property as string end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name argument end_name begin_operator DOT end_operator begin_name value end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd line end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd line end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name cmds end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_decl_stmt begin_decl begin_type begin_name begin_name map end_name begin_argument_list begin_argument begin_name string end_name end_argument begin_argument begin_name string end_name end_argument end_argument_list end_name end_type begin_name env end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name hash map end_name begin_argument_list begin_argument begin_name string end_name end_argument begin_argument begin_name string end_name end_argument end_argument_list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name environment end_name begin_operator DOT end_operator begin_name get argument count end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name argument end_name end_type begin_name arg end_name begin_init begin_expr begin_call begin_name begin_name environment end_name begin_operator DOT end_operator begin_name get argument end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name env end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get property as string end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name argument end_name begin_operator DOT end_operator begin_name value end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name directory end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name is empty end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get directory end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name directory end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file server end_name begin_operator DOT end_operator begin_name get default base end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name directory end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name directory end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get directory end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name directory end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name cmd line end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name directory end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name env end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set sampler data end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name directory end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name env end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name cmd line end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name system command end_name end_type begin_name native command end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name native command end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name system command end_name begin_argument_list begin_argument begin_expr begin_name directory end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get timeout end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name poll interval end_name end_expr end_argument begin_argument begin_expr begin_name env end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get stdin end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get stdout end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get stderr end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name sample start end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name return code end_name begin_init begin_expr begin_call begin_name begin_name native command end_name begin_operator DOT end_operator begin_name run end_name end_name begin_argument_list begin_argument begin_expr begin_name cmds end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name sample end end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set response code end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name integer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list begin_argument begin_expr begin_name return code end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name cmd line end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name directory end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name native command end_name begin_operator DOT end_operator begin_name get execution environment end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name return code end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name check return code end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_name return code end_name begin_operator UNP end_operator begin_name expected return code end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set successful end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set response message end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name expected return code end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name return code end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set successful end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set response message end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name sample end end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set successful end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set response message end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name ioe end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name interrupted exception end_name end_type begin_name ie end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name sample end end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set successful end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set response message end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name ie end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_if begin_condition begin_expr begin_name native command end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set response data end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name native command end_name begin_operator DOT end_operator begin_name get out result end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get bytes end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment default charset is deliberate here end_comment end_block end_then end_if begin_return begin_expr begin_name results end_name end_expr end_return end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name sample started end_name begin_parameter_list begin_param begin_decl begin_type begin_name sample event end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment performs a test sample param entry the entry for this sample return test sample result end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name sample result end_name end_type begin_name sample end_name begin_parameter_list begin_param begin_decl begin_type begin_name entry end_name end_type begin_name entry end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name sample result end_name end_type begin_name results end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name sample result end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set data type end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name sample result end_name begin_operator DOT end_operator begin_name text end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set sample label end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name command end_name begin_init begin_expr begin_call begin_name get command end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name arguments end_name end_type begin_name args end_name begin_init begin_expr begin_call begin_name get arguments end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name arguments end_name end_type begin_name environment end_name begin_init begin_expr begin_call begin_name get environment variables end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name check return code end_name begin_init begin_expr begin_call begin_name get check return code end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name expected return code end_name begin_init begin_expr begin_call begin_name get expected return code end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name list end_name begin_argument_list begin_argument begin_name string end_name end_argument end_argument_list end_name end_type begin_name cmds end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name array list end_name begin_argument_list begin_argument begin_name string end_name end_argument end_argument_list end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name get argument count end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string builder end_name end_type begin_name cmd line end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string builder end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_operator EQT end_operator begin_name command end_name begin_operator RPAR end_operator begin_operator QM end_operator begin_operator DP end_operator begin_name command end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmds end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name command end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name get argument count end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name argument end_name end_type begin_name arg end_name begin_init begin_expr begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name get argument end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmds end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get property as string end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name argument end_name begin_operator DOT end_operator begin_name value end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd line end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cmd line end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name cmds end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_decl_stmt begin_decl begin_type begin_name begin_name map end_name begin_argument_list begin_argument begin_name string end_name end_argument begin_argument begin_name string end_name end_argument end_argument_list end_name end_type begin_name env end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name hash map end_name begin_argument_list begin_argument begin_name string end_name end_argument begin_argument begin_name string end_name end_argument end_argument_list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name environment end_name begin_operator DOT end_operator begin_name get argument count end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name argument end_name end_type begin_name arg end_name begin_init begin_expr begin_call begin_name begin_name environment end_name begin_operator DOT end_operator begin_name get argument end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name env end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get property as string end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name argument end_name begin_operator DOT end_operator begin_name value end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name directory end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name is empty end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get directory end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name directory end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file server end_name begin_operator DOT end_operator begin_name get default base end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name directory end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name directory end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get directory end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name directory end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name cmd line end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name directory end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name env end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set sampler data end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name directory end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name env end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name cmd line end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name system command end_name end_type begin_name native command end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name native command end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name system command end_name begin_argument_list begin_argument begin_expr begin_name directory end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get timeout end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name poll interval end_name end_expr end_argument begin_argument begin_expr begin_name env end_name end_expr end_argument begin_argument begin_expr begin_call begin_name get stdin end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get stdout end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get stderr end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name sample start end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name return code end_name begin_init begin_expr begin_call begin_name begin_name native command end_name begin_operator DOT end_operator begin_name run end_name end_name begin_argument_list begin_argument begin_expr begin_name cmds end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name sample end end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set response code end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name integer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list begin_argument begin_expr begin_name return code end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name cmd line end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name directory end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name native command end_name begin_operator DOT end_operator begin_name get execution environment end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name return code end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name check return code end_name begin_operator UNP end_operator begin_operator LPAR end_operator begin_name return code end_name begin_operator UNP end_operator begin_name expected return code end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set successful end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set response message end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name expected return code end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name return code end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set successful end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set response message end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name sample end end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set successful end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set response message end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name ioe end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name interrupted exception end_name end_type begin_name ie end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name sample end end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set successful end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set response message end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name ie end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_if begin_condition begin_expr begin_name native command end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name results end_name begin_operator DOT end_operator begin_name set response data end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name native command end_name begin_operator DOT end_operator begin_name get out result end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get bytes end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment default charset is deliberate here end_comment end_block end_then end_if begin_return begin_expr begin_name results end_name end_expr end_return end_block 
 begin_comment create a test element for a gui or test bean class p this is a utility method to help actions do with one single string parameter param obj class the fully qualified class name of the gui component or of the test bean subclass for which a test bean gui is wanted return the test element corresponding to the specified gui class end_comment begin_type begin_specifier end_specifier begin_name test element end_name end_type begin_name create test element end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name obj class end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name j meter gui component end_name end_type begin_name comp end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name class end_name begin_argument_list begin_argument begin_name end_name end_argument end_argument_list end_name end_type begin_name c end_name end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name c end_name begin_operator EQ end_operator begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name obj class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name test bean end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name is assignable from end_name end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_call begin_name get gui from cache end_name begin_argument_list begin_argument begin_expr begin_name begin_name test bean gui end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_call begin_name get gui from cache end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name comp end_name begin_operator DOT end_operator begin_name clear gui end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name test element end_name end_type begin_name node end_name begin_init begin_expr begin_call begin_name begin_name comp end_name begin_operator DOT end_operator begin_name create test element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name nodes to gui end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name node end_name end_expr end_argument begin_argument begin_expr begin_name comp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name node end_name end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no class def found error end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name j option pane end_name begin_operator DOT end_operator begin_name show message dialog end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name j option pane end_name begin_operator DOT end_operator begin_name error message end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw begin_comment probably a missing jar end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name instantiation exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal access exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment make a sample result given a set of tokens param parts tokens parsed from the input param save config the save configuration may be updated param line number the line number for error reporting return the sample result throws j meter error end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name sample event end_name end_type begin_name make result from delimited string end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name begin_name string end_name begin_index end_index end_name end_type begin_name parts end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name sample save configuration end_name end_type begin_name save config end_name end_decl end_param begin_comment may be updated end_comment begin_param begin_decl begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name line number end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name sample result end_name end_type begin_name result end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name hostname end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment non nls 1 end_comment begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name time stamp end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name elapsed end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name text end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name field end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment save the name for error reporting end_comment begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name save timestamp end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name field end_name begin_operator EQ end_operator begin_name time stamp end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name print milliseconds end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_name time stamp end_name begin_operator EQ end_operator begin_call begin_name begin_name long end_name begin_operator DOT end_operator begin_name parse long end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment see if this works end_comment end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name number format exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment it did not let s try some other formats end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name found match end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name string end_name end_type begin_name fmt end_name begin_range begin_expr begin_name date format strings end_name end_expr end_range end_decl end_init begin_block begin_decl_stmt begin_decl begin_type begin_name simple date format end_name end_type begin_name date format end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name simple date format end_name begin_argument_list begin_argument begin_expr begin_name fmt end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name date format end_name begin_operator DOT end_operator begin_name set lenient end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name date end_name end_type begin_name stamp end_name begin_init begin_expr begin_call begin_name begin_name date format end_name begin_operator DOT end_operator begin_name parse end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name time stamp end_name begin_operator EQ end_operator begin_call begin_name begin_name stamp end_name begin_operator DOT end_operator begin_name get time end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment method is only ever called from one thread at a time end_comment begin_comment so it s ok to use a static date format end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name fmt end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name set formatter end_name end_name begin_argument_list begin_argument begin_expr begin_name date format end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name found match end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_break end_break end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name parse exception end_name end_type begin_name e 1 end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name info end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name fmt end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_for begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name found match end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name parse exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name text end_name end_expr end_argument begin_argument begin_expr begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_catch end_try end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name formatter end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name date end_name end_type begin_name stamp end_name begin_init begin_expr begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name formatter end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name parse end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name time stamp end_name begin_operator EQ end_operator begin_call begin_name begin_name stamp end_name begin_operator DOT end_operator begin_name get time end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment can this happen end_comment begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name msg end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name j meter error end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_else end_if end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name save time end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name field end_name begin_operator EQ end_operator begin_name csv elapsed end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name elapsed end_name begin_operator EQ end_operator begin_call begin_name begin_name long end_name begin_operator DOT end_operator begin_name parse long end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name save sample count end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name statistical sample result end_name begin_argument_list begin_argument begin_expr begin_name time stamp end_name end_expr end_argument begin_argument begin_expr begin_name elapsed end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name sample result end_name begin_argument_list begin_argument begin_expr begin_name time stamp end_name end_expr end_argument begin_argument begin_expr begin_name elapsed end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name save label end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name field end_name begin_operator EQ end_operator begin_name label end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set sample label end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name save code end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name field end_name begin_operator EQ end_operator begin_name response code end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set response code end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name save message end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name field end_name begin_operator EQ end_operator begin_name response message end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set response message end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name save thread name end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name field end_name begin_operator EQ end_operator begin_name thread name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set thread name end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name save data type end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name field end_name begin_operator EQ end_operator begin_name data type end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set data type end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name save success end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name field end_name begin_operator EQ end_operator begin_name successful end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set successful end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name value of end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name boolean value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name save assertion results failure message end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name save bytes end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name field end_name begin_operator EQ end_operator begin_name csv bytes end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set bytes end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name integer end_name begin_operator DOT end_operator begin_name parse int end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name save thread counts end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name field end_name begin_operator EQ end_operator begin_name csv thread count 1 end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set group threads end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name integer end_name begin_operator DOT end_operator begin_name parse int end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name field end_name begin_operator EQ end_operator begin_name csv thread count 2 end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set all threads end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name integer end_name begin_operator DOT end_operator begin_name parse int end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name save url end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name save file name end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name field end_name begin_operator EQ end_operator begin_name csv filename end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set result file name end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name save latency end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name field end_name begin_operator EQ end_operator begin_name csv latency end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set latency end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name long end_name begin_operator DOT end_operator begin_name parse long end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name save encoding end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name field end_name begin_operator EQ end_operator begin_name csv encoding end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set encoding and type end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name save sample count end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name field end_name begin_operator EQ end_operator begin_name csv sample count end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set sample count end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name integer end_name begin_operator DOT end_operator begin_name parse int end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name field end_name begin_operator EQ end_operator begin_name csv error count end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set error count end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name integer end_name begin_operator DOT end_operator begin_name parse int end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name save hostname end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name field end_name begin_operator EQ end_operator begin_name csv hostname end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name hostname end_name begin_operator EQ end_operator begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name save idle time end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name field end_name begin_operator EQ end_operator begin_name csv idletime end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set idle time end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name long end_name begin_operator DOT end_operator begin_name parse long end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name i end_name begin_operator PLUS end_operator begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name get var count end_name end_name begin_argument_list end_argument_list end_call begin_operator LT end_operator begin_name begin_name parts end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name line number end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name parts end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name i end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name number format exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name field end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name line number end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name j meter error end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name parse exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name field end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name line number end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name j meter error end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name array index out of bounds exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name field end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name line number end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name j meter error end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_return begin_expr begin_operator UNP end_operator begin_call begin_name sample event end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name hostname end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment get an instance of the specified j meter gui component class if an instance of the gui class has previously been created and it is not marked as an link unshared component that shared instance will be returned otherwise a new instance of the component will be created and shared components will be cached for future retrieval param gui class the fully qualified class name of the gui component this class must implement j meter gui component param test class the fully qualified class name of the test elements edited by this gui component this class must implement test element return an instance of the specified class throws instantiation exception if an instance of the object cannot be created throws illegal access exception if access rights do not allow the default constructor to be called throws class not found exception if the specified gui class cannot be found end_comment begin_type begin_specifier end_specifier begin_name j meter gui component end_name end_type begin_name get gui from cache end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name class end_name begin_argument_list begin_argument begin_name end_name end_argument end_argument_list end_name end_type begin_name gui class end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name class end_name begin_argument_list begin_argument begin_name end_name end_argument end_argument_list end_name end_type begin_name test class end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name instantiation exception end_name end_expr end_argument begin_argument begin_expr begin_name illegal access exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name j meter gui component end_name end_type begin_name comp end_name end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name gui class end_name begin_operator EQT end_operator begin_name begin_name test bean gui end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_call begin_name begin_name test bean gu is end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name test class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name comp end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name test bean gui end_name begin_argument_list begin_argument begin_expr begin_name test class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test bean gu is end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name test class end_name end_expr end_argument begin_argument begin_expr begin_name comp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_call begin_name begin_name guis end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name gui class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name comp end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name j meter gui component end_name begin_operator RPAR end_operator begin_call begin_name begin_name gui class end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_name comp end_name begin_operator UNP end_operator begin_name unshared component end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name guis end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name gui class end_name end_expr end_argument begin_argument begin_expr begin_name comp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block end_else end_if begin_return begin_expr begin_name comp end_name end_expr end_return end_block 
 begin_comment send post data from code entry code to the open connection param connection code url connection code where post data should be sent return a string show what was posted will not contain actual file upload content exception io exception if an i o exception occurs end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name send post data end_name begin_parameter_list begin_param begin_decl begin_type begin_name post method end_name end_type begin_name post end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_comment buffer to hold the post body except file content end_comment begin_decl_stmt begin_decl begin_type begin_name string builder end_name end_type begin_name posted body end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string builder end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name http file arg end_name end_type begin_name begin_name files end_name begin_index end_index end_name begin_init begin_expr begin_call begin_name get http files end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment check if we should do a multipart form data or an end_comment begin_comment application x www form urlencoded post request end_comment begin_if begin_condition begin_expr begin_call begin_name get use multipart for post end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment if a content encoding is specified we use that as the end_comment begin_comment encoding of any parameter values end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name content encoding end_name begin_init begin_expr begin_call begin_name get content encoding end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name is null or empty trimmed end_name begin_argument_list begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name content encoding end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name browser compatible end_name begin_init begin_expr begin_call begin_name get do browser compatible multipart end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment we don t know how many entries will be skipped end_comment begin_decl_stmt begin_decl begin_type begin_name begin_name array list end_name begin_argument_list begin_argument begin_name part base end_name end_argument end_argument_list end_name end_type begin_name partlist end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name array list end_name begin_argument_list begin_argument begin_name part base end_name end_argument end_argument_list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment create the parts end_comment begin_comment add any parameters end_comment begin_decl_stmt begin_decl begin_type begin_name property iterator end_name end_type begin_name args end_name begin_init begin_expr begin_call begin_name get arguments end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name http argument end_name end_type begin_name arg end_name begin_init begin_expr begin_operator LPAR end_operator begin_name http argument end_name begin_operator RPAR end_operator begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get object value end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name parameter name end_name begin_init begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name is skippable end_name end_name begin_argument_list begin_argument begin_expr begin_name parameter name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string part end_name end_type begin_name part end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string part end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name browser compatible end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name part end_name begin_operator DOT end_operator begin_name set transfer encoding end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name part end_name begin_operator DOT end_operator begin_name set content type end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name partlist end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name part end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_comment add any files end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name http file arg end_name end_type begin_name file end_name begin_init begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name input file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment we do not know the char set of the file to be uploaded so we set it to null end_comment begin_decl_stmt begin_decl begin_type begin_name viewable file part end_name end_type begin_name file part end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name viewable file part end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get param name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name input file end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name file part end_name begin_operator DOT end_operator begin_name set char set end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment we do not know what the char set of the file is end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name partlist end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name file part end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_comment set the multipart for the post end_comment begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name part no end_name begin_init begin_expr begin_call begin_name begin_name partlist end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name part end_name begin_index end_index end_type begin_name parts end_name begin_init begin_expr begin_call begin_name begin_name partlist end_name begin_operator DOT end_operator begin_name to array end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name part end_name begin_index begin_expr begin_name part no end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name multipart request entity end_name end_type begin_name multi part end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name multipart request entity end_name begin_argument_list begin_argument begin_expr begin_name parts end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name get params end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set request entity end_name end_name begin_argument_list begin_argument begin_expr begin_name multi part end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment set the content type end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name multi part content type end_name begin_init begin_expr begin_call begin_name begin_name multi part end_name begin_operator DOT end_operator begin_name get content type end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set request header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_name multi part content type end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment if the multipart is repeatable we can send it first to end_comment begin_comment our own stream without the actual file content so we can return it end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name multi part end_name begin_operator DOT end_operator begin_name is repeatable end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment for all the file multiparts we must tell it to not include end_comment begin_comment the actual file content end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name part no end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator UNP end_operator begin_name viewable file part end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name viewable file part end_name begin_operator RPAR end_operator begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name set hide file data end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment send multipart without file content bos end_comment end_block end_then end_if end_block end_for begin_comment write the request to our own stream end_comment begin_decl_stmt begin_decl begin_type begin_name byte array output stream end_name end_type begin_name bos end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name byte array output stream end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name multi part end_name begin_operator DOT end_operator begin_name write request end_name end_name begin_argument_list begin_argument begin_expr begin_name bos end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment we get the posted bytes using the encoding used to create it end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name to byte array end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name content encoding end_name begin_operator EQT end_operator begin_operator QM end_operator begin_comment non nls 1 this is the default used by http client end_comment begin_operator DP end_operator begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment for all the file multiparts we must revert the hiding of end_comment begin_comment the actual file content end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name part no end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator UNP end_operator begin_name viewable file part end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name viewable file part end_name begin_operator RPAR end_operator begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name set hide file data end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_for end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment end_block end_else end_if end_block end_then begin_else begin_block begin_comment check if the header manager had a content type header end_comment begin_comment this allows the user to specify his own content type for a post request end_comment begin_decl_stmt begin_decl begin_type begin_name header end_name end_type begin_name content type header end_name begin_init begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name get request header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name has content type header end_name begin_init begin_expr begin_name content type header end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name content type header end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name content type header end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_init end_decl end_decl_stmt begin_comment if there are no arguments we can send a file as the body of the request end_comment begin_comment todo needs a multiple file upload scenerio end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name has arguments end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name get send file as post body end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment if get send file as post body returned true it s sure that file is not null end_comment begin_decl_stmt begin_decl begin_type begin_name http file arg end_name end_type begin_name file end_name begin_init begin_expr begin_name begin_name files end_name begin_index begin_expr end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name has content type header end_name end_expr end_condition begin_then begin_block begin_comment allow the mimetype of the file to control the content type end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set request header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set request header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name application x www form urlencoded end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file request entity end_name end_type begin_name file request entity end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file request entity end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set request entity end_name end_name begin_argument_list begin_argument begin_expr begin_name file request entity end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment we just add placeholder text for file content end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment in a post request which is not multipart we only support end_comment begin_comment parameters no file upload is allowed end_comment begin_comment if a content encoding is specified we set it as http parameter so that end_comment begin_comment the post body will be encoded in the specified content encoding end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name content encoding end_name begin_init begin_expr begin_call begin_name get content encoding end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name have content encoding end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name is null or empty trimmed end_name begin_argument_list begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name content encoding end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name get params end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set content charset end_name begin_argument_list begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name have content encoding end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_else end_if begin_comment if none of the arguments have a name specified we end_comment begin_comment just send all the values as the post body end_comment begin_if begin_condition begin_expr begin_call begin_name get send parameter values as post body end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment allow the mimetype of the file to control the content type end_comment begin_comment this is not obvious in gui if you are not uploading any files end_comment begin_comment but just sending the content of nameless parameters end_comment begin_comment todo needs a multiple file upload scenerio end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name has content type header end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name http file arg end_name end_type begin_name file end_name begin_init begin_expr begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator begin_operator QM end_operator begin_name begin_name files end_name begin_index begin_expr end_expr end_index end_name begin_operator DP end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name file end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set request header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set request header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name application x www form urlencoded end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_comment just append all the parameter values and use that as the post body end_comment begin_decl_stmt begin_decl begin_type begin_name string builder end_name end_type begin_name post body end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string builder end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name property iterator end_name end_type begin_name args end_name begin_init begin_expr begin_call begin_name get arguments end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name http argument end_name end_type begin_name arg end_name begin_init begin_expr begin_operator LPAR end_operator begin_name http argument end_name begin_operator RPAR end_operator begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get object value end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name have content encoding end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name value end_name begin_operator EQ end_operator begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get encoded value end_name end_name begin_argument_list begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name value end_name begin_operator EQ end_operator begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get encoded value end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name post body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_decl_stmt begin_decl begin_type begin_name string request entity end_name end_type begin_name request entity end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string request entity end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name post body end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name get request header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set request entity end_name end_name begin_argument_list begin_argument begin_expr begin_name request entity end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment it is a normal post request with parameter names and values end_comment begin_comment set the content type end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name has content type header end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set request header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name application x www form urlencoded end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment add the parameters end_comment begin_decl_stmt begin_decl begin_type begin_name property iterator end_name end_type begin_name args end_name begin_init begin_expr begin_call begin_name get arguments end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name http argument end_name end_type begin_name arg end_name begin_init begin_expr begin_operator LPAR end_operator begin_name http argument end_name begin_operator RPAR end_operator begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get object value end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment the http client always urlencodes both name and value end_comment begin_comment so if the argument is already encoded we have to decode end_comment begin_comment it before adding it to the post request end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name parameter name end_name begin_init begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name is skippable end_name end_name begin_argument_list begin_argument begin_expr begin_name parameter name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name parameter value end_name begin_init begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name is always encoded end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment the value is already encoded by the user end_comment begin_comment must decode the value now so that when the end_comment begin_comment httpclient encodes it we end up with the same value end_comment begin_comment as the user had entered end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name url content encoding end_name begin_init begin_expr begin_name content encoding end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name url content encoding end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name url content encoding end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment use the default encoding for urls end_comment begin_expr_stmt begin_expr begin_name url content encoding end_name begin_operator EQ end_operator begin_name begin_name encoder cache end_name begin_operator DOT end_operator begin_name url argument encoding end_name end_name end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name parameter name end_name begin_operator EQ end_operator begin_call begin_name begin_name url decoder end_name begin_operator DOT end_operator begin_name decode end_name end_name begin_argument_list begin_argument begin_expr begin_name parameter name end_name end_expr end_argument begin_argument begin_expr begin_name url content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name parameter value end_name begin_operator EQ end_operator begin_call begin_name begin_name url decoder end_name begin_operator DOT end_operator begin_name decode end_name end_name begin_argument_list begin_argument begin_expr begin_name parameter value end_name end_expr end_argument begin_argument begin_expr begin_name url content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment add the parameter httpclient will urlencode it end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name add parameter end_name end_name begin_argument_list begin_argument begin_expr begin_name parameter name end_name end_expr end_argument begin_argument begin_expr begin_name parameter value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_comment alternative implementation to make sure that http sampler and http sampler 2 sends the same post body only include the content char set in the content type header if it is not an application x www form urlencoded content type string content char set null if post get request header header content type get value equals application x www form urlencoded content char set post get request char set string request entity request entity new string request entity get query string content encoding post get request header header content type get value content char set post set request entity request entity end_comment end_block end_else end_if begin_comment if the request entity is repeatable we can send it first to end_comment begin_comment our own stream so we can return it end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name get request entity end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name is repeatable end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name byte array output stream end_name end_type begin_name bos end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name byte array output stream end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name get request entity end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name write request end_name begin_argument_list begin_argument begin_expr begin_name bos end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment we get the posted bytes using the encoding used to create it end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name to byte array end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name get request char set end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_else end_if end_block end_else end_if begin_comment set the content length end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set request header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content length end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name long end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name get request entity end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get content length end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment param thread context return the iteration listener end_comment begin_type begin_specifier end_specifier begin_name iteration listener end_name end_type begin_name init run end_name begin_parameter_list begin_param begin_decl begin_type begin_name j meter context end_name end_type begin_name thread context end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name thread context end_name begin_operator DOT end_operator begin_name set variables end_name end_name begin_argument_list begin_argument begin_expr begin_name thread vars end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name thread context end_name begin_operator DOT end_operator begin_name set thread num end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get thread num end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name thread context end_name begin_operator DOT end_operator begin_name get variables end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name put end_name begin_argument_list begin_argument begin_expr begin_name last sample ok end_name end_expr end_argument begin_argument begin_expr begin_name true end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name thread context end_name begin_operator DOT end_operator begin_name set thread end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name thread context end_name begin_operator DOT end_operator begin_name set thread group end_name end_name begin_argument_list begin_argument begin_expr begin_name thread group end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name thread context end_name begin_operator DOT end_operator begin_name set engine end_name end_name begin_argument_list begin_argument begin_expr begin_name engine end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test tree end_name begin_operator DOT end_operator begin_name traverse end_name end_name begin_argument_list begin_argument begin_expr begin_name compiler end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment listeners controller get listeners end_comment begin_if begin_condition begin_expr begin_name scheduler end_name end_expr end_condition begin_then begin_block begin_comment set the scheduler to start end_comment begin_expr_stmt begin_expr begin_call begin_name start scheduler end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name ramp up delay end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name info end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name thread end_name begin_operator DOT end_operator begin_name current thread end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name start earlier end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name thread context end_name begin_operator DOT end_operator begin_name set sampling started end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name controller end_name begin_operator DOT end_operator begin_name initialize end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name iteration listener end_name end_type begin_name iteration listener end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name iteration listener end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name controller end_name begin_operator DOT end_operator begin_name add iteration listener end_name end_name begin_argument_list begin_argument begin_expr begin_name iteration listener end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name start earlier end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name thread context end_name begin_operator DOT end_operator begin_name set sampling started end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name thread started end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name iteration listener end_name end_expr end_return end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name subtract node end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name encode end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name util end_name begin_operator DOT end_operator begin_name substitute end_name end_name begin_argument_list begin_argument begin_expr begin_name expression end_name end_expr end_argument begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment param post link http post return string posted body if computable throws io exception end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name send post data end_name begin_parameter_list begin_param begin_decl begin_type begin_name http post end_name end_type begin_name post end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_comment buffer to hold the post body except file content end_comment begin_decl_stmt begin_decl begin_type begin_name string builder end_name end_type begin_name posted body end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string builder end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name http file arg end_name end_type begin_name begin_name files end_name begin_index end_index end_name begin_init begin_expr begin_call begin_name get http files end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name content encoding end_name begin_init begin_expr begin_call begin_name get content encoding or null end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name have content encoding end_name begin_init begin_expr begin_name content encoding end_name begin_operator UNP end_operator end_expr end_init end_decl end_decl_stmt begin_comment check if we should do a multipart form data or an end_comment begin_comment application x www form urlencoded post request end_comment begin_if begin_condition begin_expr begin_call begin_name get use multipart for post end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment if a content encoding is specified we use that as the end_comment begin_comment encoding of any parameter values end_comment begin_decl_stmt begin_decl begin_type begin_name charset end_name end_type begin_name charset end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name have content encoding end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name charset end_name begin_operator EQ end_operator begin_call begin_name begin_name charset end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment write the request to our own stream end_comment begin_decl_stmt begin_decl begin_type begin_name multipart entity end_name end_type begin_name multi part end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name multipart entity end_name begin_argument_list begin_argument begin_expr begin_call begin_name get do browser compatible multipart end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_name begin_name http multipart mode end_name begin_operator DOT end_operator begin_name browser compatible end_name end_name begin_operator DP end_operator begin_name begin_name http multipart mode end_name begin_operator DOT end_operator begin_name strict end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name charset end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment create the parts end_comment begin_comment add any parameters end_comment begin_decl_stmt begin_decl begin_type begin_name property iterator end_name end_type begin_name args end_name begin_init begin_expr begin_call begin_name get arguments end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name http argument end_name end_type begin_name arg end_name begin_init begin_expr begin_operator LPAR end_operator begin_name http argument end_name begin_operator RPAR end_operator begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get object value end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name parameter name end_name begin_init begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name is skippable end_name end_name begin_argument_list begin_argument begin_expr begin_name parameter name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name form body part end_name end_type begin_name form part end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string body end_name end_type begin_name string body end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string body end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name charset end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name form part end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name form body part end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name string body end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name multi part end_name begin_operator DOT end_operator begin_name add part end_name end_name begin_argument_list begin_argument begin_expr begin_name form part end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_comment add any files end_comment begin_comment cannot retrieve parts once added to the multi part entity so have to save them here end_comment begin_decl_stmt begin_decl begin_type begin_name viewable file body end_name begin_index end_index end_type begin_name file bodies end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name viewable file body end_name begin_index begin_expr begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name http file arg end_name end_type begin_name file end_name begin_init begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name file bodies end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name viewable file body end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name multi part end_name begin_operator DOT end_operator begin_name add part end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get param name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name file bodies end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set entity end_name end_name begin_argument_list begin_argument begin_expr begin_name multi part end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name multi part end_name begin_operator DOT end_operator begin_name is repeatable end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name byte array output stream end_name end_type begin_name bos end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name byte array output stream end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name viewable file body end_name end_type begin_name file body end_name begin_range begin_expr begin_name file bodies end_name end_expr end_range end_decl end_init begin_block begin_expr_stmt begin_expr begin_name begin_name file body end_name begin_operator DOT end_operator begin_name hide file data end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name multi part end_name begin_operator DOT end_operator begin_name write to end_name end_name begin_argument_list begin_argument begin_expr begin_name bos end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name viewable file body end_name end_type begin_name file body end_name begin_range begin_expr begin_name file bodies end_name end_expr end_range end_decl end_init begin_block begin_expr_stmt begin_expr begin_name begin_name file body end_name begin_operator DOT end_operator begin_name hide file data end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment we get the posted bytes using the encoding used to create it end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name to byte array end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name content encoding end_name begin_operator EQT end_operator begin_operator QM end_operator begin_comment non nls 1 this is the default used by http client end_comment begin_operator DP end_operator begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment end_block end_else end_if begin_comment set the content type todo needed end_comment begin_comment string multi part content type multi part get content type get value end_comment begin_comment post set header header content type multi part content type end_comment end_block end_then begin_else begin_block begin_comment not multipart end_comment begin_comment check if the header manager had a content type header end_comment begin_comment this allows the user to specify his own content type for a post request end_comment begin_decl_stmt begin_decl begin_type begin_name header end_name end_type begin_name content type header end_name begin_init begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name get first header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name has content type header end_name begin_init begin_expr begin_name content type header end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name content type header end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name content type header end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_init end_decl end_decl_stmt begin_comment if there are no arguments we can send a file as the body of the request end_comment begin_comment todo needs a multiple file upload scenerio end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name has arguments end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name get send file as post body end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment if get send file as post body returned true it s sure that file is not null end_comment begin_decl_stmt begin_decl begin_type begin_name http file arg end_name end_type begin_name file end_name begin_init begin_expr begin_name begin_name files end_name begin_index begin_expr end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name has content type header end_name end_expr end_condition begin_then begin_block begin_comment allow the mimetype of the file to control the content type end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name application x www form urlencoded end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file entity end_name end_type begin_name file request entity end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file entity end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name content type end_name begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set entity end_name end_name begin_argument_list begin_argument begin_expr begin_name file request entity end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment we just add placeholder text for file content end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment in a post request which is not multipart we only support end_comment begin_comment parameters no file upload is allowed end_comment begin_comment if a content encoding is specified we set it as http parameter so that end_comment begin_comment the post body will be encoded in the specified content encoding end_comment begin_if begin_condition begin_expr begin_name have content encoding end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name get params end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set parameter end_name begin_argument_list begin_argument begin_expr begin_name begin_name core protocol p names end_name begin_operator DOT end_operator begin_name http content charset end_name end_name end_expr end_argument begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment if none of the arguments have a name specified we end_comment begin_comment just send all the values as the post body end_comment begin_if begin_condition begin_expr begin_call begin_name get send parameter values as post body end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment allow the mimetype of the file to control the content type end_comment begin_comment this is not obvious in gui if you are not uploading any files end_comment begin_comment but just sending the content of nameless parameters end_comment begin_comment todo needs a multiple file upload scenerio end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name has content type header end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name http file arg end_name end_type begin_name file end_name begin_init begin_expr begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator begin_operator QM end_operator begin_name begin_name files end_name begin_index begin_expr end_expr end_index end_name begin_operator DP end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name file end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name application x www form urlencoded end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_comment just append all the parameter values and use that as the post body end_comment begin_decl_stmt begin_decl begin_type begin_name string builder end_name end_type begin_name post body end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string builder end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name property iterator end_name end_type begin_name args end_name begin_init begin_expr begin_call begin_name get arguments end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name http argument end_name end_type begin_name arg end_name begin_init begin_expr begin_operator LPAR end_operator begin_name http argument end_name begin_operator RPAR end_operator begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get object value end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment note if encoded is not selected arg get encoded value is equivalent to arg get value end_comment begin_if begin_condition begin_expr begin_name have content encoding end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get encoded value end_name end_name begin_argument_list begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get encoded value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_while begin_comment let string entity perform the encoding end_comment begin_decl_stmt begin_decl begin_type begin_name string entity end_name end_type begin_name request entity end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string entity end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name post body end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set entity end_name end_name begin_argument_list begin_argument begin_expr begin_name request entity end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name post body end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment it is a normal post request with parameter names and values end_comment begin_comment set the content type end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name has content type header end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name application x www form urlencoded end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment add the parameters end_comment begin_decl_stmt begin_decl begin_type begin_name property iterator end_name end_type begin_name args end_name begin_init begin_expr begin_call begin_name get arguments end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name list end_name begin_argument_list begin_argument begin_name name value pair end_name end_argument end_argument_list end_name end_type begin_name nvps end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name array list end_name begin_argument_list begin_argument begin_name name value pair end_name end_argument end_argument_list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name url content encoding end_name begin_init begin_expr begin_name content encoding end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name url content encoding end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name url content encoding end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment use the default encoding for urls end_comment begin_expr_stmt begin_expr begin_name url content encoding end_name begin_operator EQ end_operator begin_name begin_name encoder cache end_name begin_operator DOT end_operator begin_name url argument encoding end_name end_name end_expr end_expr_stmt end_block end_then end_if begin_while begin_condition begin_expr begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name http argument end_name end_type begin_name arg end_name begin_init begin_expr begin_operator LPAR end_operator begin_name http argument end_name begin_operator RPAR end_operator begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get object value end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment the http client always urlencodes both name and value end_comment begin_comment so if the argument is already encoded we have to decode end_comment begin_comment it before adding it to the post request end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name parameter name end_name begin_init begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name is skippable end_name end_name begin_argument_list begin_argument begin_expr begin_name parameter name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name parameter value end_name begin_init begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name is always encoded end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment the value is already encoded by the user end_comment begin_comment must decode the value now so that when the end_comment begin_comment httpclient encodes it we end up with the same value end_comment begin_comment as the user had entered end_comment begin_expr_stmt begin_expr begin_name parameter name end_name begin_operator EQ end_operator begin_call begin_name begin_name url decoder end_name begin_operator DOT end_operator begin_name decode end_name end_name begin_argument_list begin_argument begin_expr begin_name parameter name end_name end_expr end_argument begin_argument begin_expr begin_name url content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name parameter value end_name begin_operator EQ end_operator begin_call begin_name begin_name url decoder end_name begin_operator DOT end_operator begin_name decode end_name end_name begin_argument_list begin_argument begin_expr begin_name parameter value end_name end_expr end_argument begin_argument begin_expr begin_name url content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment add the parameter httpclient will urlencode it end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name nvps end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name basic name value pair end_name begin_argument_list begin_argument begin_expr begin_name parameter name end_name end_expr end_argument begin_argument begin_expr begin_name parameter value end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_decl_stmt begin_decl begin_type begin_name url encoded form entity end_name end_type begin_name entity end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name url encoded form entity end_name begin_argument_list begin_argument begin_expr begin_name nvps end_name end_expr end_argument begin_argument begin_expr begin_name url content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set entity end_name end_name begin_argument_list begin_argument begin_expr begin_name entity end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name entity end_name begin_operator DOT end_operator begin_name is repeatable end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name byte array output stream end_name end_type begin_name bos end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name byte array output stream end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name get entity end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name write to end_name begin_argument_list begin_argument begin_expr begin_name bos end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment we get the posted bytes using the encoding used to create it end_comment begin_if begin_condition begin_expr begin_name content encoding end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name to byte array end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name to byte array end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name sample result end_name begin_operator DOT end_operator begin_name default http encoding end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_else end_if end_block end_else end_if end_block end_else end_if begin_return begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name sample started end_name begin_parameter_list begin_param begin_decl begin_type begin_name sample event end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name sample started end_name begin_parameter_list begin_param begin_decl begin_type begin_name sample event end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment end method end_comment begin_comment takes an array of strings and a tokenizer character and returns a string of all the strings concatenated with the tokenizer string in between each one param splittee array of objects to be concatenated param split char object to unsplit the strings with param def default value to replace null values in array return array of all the tokens end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name unsplit end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name object end_name begin_index end_index end_name end_type begin_name splittee end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name split char end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name def end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string builder end_name end_type begin_name ret val end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string builder end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name count end_name begin_init begin_expr begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_operator PPLUS end_operator begin_name count end_name begin_operator LT end_operator begin_name begin_name splittee end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_block begin_if begin_condition begin_expr begin_name begin_name splittee end_name begin_index begin_expr begin_name count end_name end_expr end_index end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ret val end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name splittee end_name begin_index begin_expr begin_name count end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ret val end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name def end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_name count end_name begin_operator PLUS end_operator begin_operator LT end_operator begin_name begin_name splittee end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ret val end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name split char end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_while begin_return begin_expr begin_call begin_name begin_name ret val end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment instatiate an object and guarantee its class param class name the name of the class to instantiate param impls the name of the class it must be an instance of return an instance of the class or null if instantiation failed or the class did not implement extend as required end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name object end_name end_type begin_name instantiate end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name class name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name impls end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name class name end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name class name end_name begin_operator EQ end_operator begin_call begin_name begin_name class name end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name impls end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name impls end_name begin_operator EQ end_operator begin_call begin_name begin_name impls end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name class end_name begin_argument_list begin_argument begin_name end_name end_argument end_argument_list end_name end_type begin_name c end_name begin_init begin_expr begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name impls end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name class end_name begin_argument_list begin_argument begin_name end_name end_argument end_argument_list end_name end_type begin_name o end_name begin_init begin_expr begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name class name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name res end_name begin_init begin_expr begin_call begin_name begin_name o end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name c end_name begin_operator DOT end_operator begin_name is instance end_name end_name begin_argument_list begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr begin_name res end_name end_expr end_return end_block end_then end_if begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name illegal argument exception end_name begin_argument_list begin_argument begin_expr begin_name class name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name impls end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name class name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal access exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name class name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name instantiation exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name class name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no class def found error end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name class name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name impls end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_return begin_expr end_expr end_return end_block 
 begin_comment non nls 1 end_comment begin_comment param query return map params and svalue end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name begin_name map end_name begin_argument_list begin_argument begin_name string end_name end_argument begin_argument begin_name string end_name end_argument end_argument_list end_name end_type begin_name get query map end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name query end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name map end_name begin_argument_list begin_argument begin_name string end_name end_argument begin_argument begin_name string end_name end_argument end_argument_list end_name end_type begin_name map end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name hash map end_name begin_argument_list begin_argument begin_name string end_name end_argument begin_argument begin_name string end_name end_argument end_argument_list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name query end_name begin_operator DOT end_operator begin_name trim end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name starts with end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment non nls 1 end_comment begin_comment soap request generally end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name map end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name query end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment blank name non nls 1 end_comment begin_return begin_expr begin_name map end_name end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name params end_name begin_init begin_expr begin_call begin_name begin_name query end_name begin_operator DOT end_operator begin_name split end_name end_name begin_argument_list begin_argument begin_expr begin_name param concatenate end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name string end_name end_type begin_name param end_name begin_range begin_expr begin_name params end_name end_expr end_range end_decl end_init begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name param split end_name begin_init begin_expr begin_call begin_name begin_name param end_name begin_operator DOT end_operator begin_name split end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment non nls 1 end_comment begin_if begin_condition begin_expr begin_name begin_name param split end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_comment detected invalid syntax bug 52491 end_comment begin_comment return as for soap above end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name map end_name begin_operator DOT end_operator begin_name clear end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name map end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name query end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment blank name non nls 1 end_comment begin_return begin_expr begin_name map end_name end_expr end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name begin_name param split end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name name end_name begin_operator EQ end_operator begin_name begin_name param split end_name begin_index begin_expr end_expr end_index end_name end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name value end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment empty init non nls 1 end_comment begin_if begin_condition begin_expr begin_name begin_name param split end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_comment we use substring to keep sign bug 54055 we are sure is present end_comment begin_expr_stmt begin_expr begin_name value end_name begin_operator EQ end_operator begin_call begin_name begin_name param end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name param end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name map end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_name map end_name end_expr end_return end_block 
 begin_comment disconnect unless using keep alive end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name disconnect end_name begin_parameter_list begin_param begin_decl begin_type begin_name http url connection end_name end_type begin_name conn end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name conn end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name connection end_name begin_init begin_expr begin_call begin_name begin_name conn end_name begin_operator DOT end_operator begin_name get header field end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header connection end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name protocol end_name begin_init begin_expr begin_call begin_name begin_name conn end_name begin_operator DOT end_operator begin_name get header field end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name connection end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name protocol end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name protocol end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name http 1 1 end_name end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name connection end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name connection end_name begin_operator DOT end_operator begin_name equals ignore case end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name connection close end_name end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name conn end_name begin_operator DOT end_operator begin_name disconnect end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name sample stopped end_name begin_parameter_list begin_param begin_decl begin_type begin_name sample event end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name subtract node end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment construct a bean info for the given class end_comment begin_specifier end_specifier begin_name bean info support end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name class end_name begin_argument_list begin_argument begin_name end_name begin_extends begin_name test bean end_name end_extends end_argument end_argument_list end_name end_type begin_name bean class end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name bean class end_name end_name begin_operator EQ end_operator begin_name bean class end_name end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name root bean info end_name begin_operator EQ end_operator begin_call begin_name begin_name introspector end_name begin_operator DOT end_operator begin_name get bean info end_name end_name begin_argument_list begin_argument begin_expr begin_name bean class end_name end_expr end_argument begin_argument begin_expr begin_name begin_name introspector end_name begin_operator DOT end_operator begin_name ignore immediate beaninfo end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name introspection exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name error end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name bean class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_comment n b jv ms other than sun may return different instances each time end_comment begin_comment so we cache the value here and avoid having to fetch it every time end_comment begin_expr_stmt begin_expr begin_name bean descriptor end_name begin_operator EQ end_operator begin_call begin_name begin_name root bean info end_name begin_operator DOT end_operator begin_name get bean descriptor end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name resource bundle end_name end_type begin_name resource bundle end_name begin_init begin_expr begin_call begin_name begin_name resource bundle end_name begin_operator DOT end_operator begin_name get bundle end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name bean class end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_comment non nls 1 end_comment begin_argument begin_expr begin_call begin_name begin_name j meter utils end_name begin_operator DOT end_operator begin_name get locale end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment store the resource bundle as an attribute of the bean descriptor end_comment begin_expr_stmt begin_expr begin_call begin_name get bean descriptor end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name resource bundle end_name end_expr end_argument begin_argument begin_expr begin_name resource bundle end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment localize the bean name end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name resource bundle end_name begin_operator DOT end_operator begin_name contains key end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment non nls 1 end_comment begin_expr_stmt begin_expr begin_call begin_name get bean descriptor end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set display name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name resource bundle end_name begin_operator DOT end_operator begin_name get string end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name bean class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_comment localize the property names and descriptions end_comment begin_decl_stmt begin_decl begin_type begin_name property descriptor end_name begin_index end_index end_type begin_name properties end_name begin_init begin_expr begin_call begin_name get property descriptors end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name property descriptor end_name end_type begin_name property end_name begin_range begin_expr begin_name properties end_name end_expr end_range end_decl end_init begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_call begin_name begin_name property end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name property end_name begin_operator DOT end_operator begin_name set display name end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name resource bundle end_name begin_operator DOT end_operator begin_name get string end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name missing resource exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name bean class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name property end_name begin_operator DOT end_operator begin_name set short description end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name resource bundle end_name begin_operator DOT end_operator begin_name get string end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name missing resource exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name bean class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_for end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name missing resource exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name bean class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name bean class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment create http sample result filling url method and sample label monitor field is computed calling is monitor param url url param method http method return link http sample result end_comment begin_type begin_specifier end_specifier begin_name http sample result end_name end_type begin_name create sample result end_name begin_parameter_list begin_param begin_decl begin_type begin_name url end_name end_type begin_name url end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name method end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name http sample result end_name end_type begin_name res end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name http sample result end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set monitor end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name is monitor end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set sample label end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name url end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set http method end_name end_name begin_argument_list begin_argument begin_expr begin_name method end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set url end_name end_name begin_argument_list begin_argument begin_expr begin_name url end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name res end_name end_expr end_return end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name sample result end_name end_type begin_name sample end_name begin_parameter_list begin_param begin_decl begin_type begin_name entry end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name sample result end_name end_type begin_name parent end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name sample result end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name is ok end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment did sample succeed end_comment begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name delete messages end_name begin_init begin_expr begin_call begin_name get delete messages end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name set sample label end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name sampler string end_name begin_init begin_expr begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name set sampler data end_name end_name begin_argument_list begin_argument begin_expr begin_name sampler string end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment perform the sampling end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name sample start end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment start timing end_comment begin_try begin_block begin_comment create empty properties end_comment begin_decl_stmt begin_decl begin_type begin_name properties end_name end_type begin_name props end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name properties end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name is use start tls end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name set property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name is enforce start tls end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment requires java mail 1 4 2 end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name set property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name is trust all certs end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name is use ssl end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name set property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name trust all socket factory end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name set property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name is use start tls end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name set property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name trust all socket factory end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name set property end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name is use local trust store end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name truststore end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name get trust store to use end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name info end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name truststore end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name truststore end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name info end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name truststore end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name truststore end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file server end_name begin_operator DOT end_operator begin_name get file server end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get base dir end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get trust store to use end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name info end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name truststore end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name truststore end_name begin_operator DOT end_operator begin_name exists end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name info end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name truststore end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name io exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name truststore end_name begin_operator DOT end_operator begin_name get absolute path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name is use ssl end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment requires java mail 1 4 2 end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name local trust store ssl socket factory end_name begin_argument_list begin_argument begin_expr begin_name truststore end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name is use start tls end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment requires java mail 1 4 2 end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name local trust store ssl socket factory end_name begin_argument_list begin_argument begin_expr begin_name truststore end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name props end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if end_block end_then end_if end_else end_if begin_comment get session end_comment begin_decl_stmt begin_decl begin_type begin_name session end_name end_type begin_name session end_name begin_init begin_expr begin_call begin_name begin_name session end_name begin_operator DOT end_operator begin_name get instance end_name end_name begin_argument_list begin_argument begin_expr begin_name props end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment get the store end_comment begin_decl_stmt begin_decl begin_type begin_name store end_name end_type begin_name store end_name begin_init begin_expr begin_call begin_name begin_name session end_name begin_operator DOT end_operator begin_name get store end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get server type end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name store end_name begin_operator DOT end_operator begin_name connect end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get server end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get port as int end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get user name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get password end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment get folder end_comment begin_decl_stmt begin_decl begin_type begin_name folder end_name end_type begin_name folder end_name begin_init begin_expr begin_call begin_name begin_name store end_name begin_operator DOT end_operator begin_name get folder end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get folder end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name delete messages end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name folder end_name begin_operator DOT end_operator begin_name open end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name folder end_name begin_operator DOT end_operator begin_name read write end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name folder end_name begin_operator DOT end_operator begin_name open end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name folder end_name begin_operator DOT end_operator begin_name read only end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_comment get directory end_comment begin_decl_stmt begin_decl begin_type begin_name message end_name end_type begin_name begin_name messages end_name begin_index end_index end_name begin_init begin_expr begin_call begin_name begin_name folder end_name begin_operator DOT end_operator begin_name get messages end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string builder end_name end_type begin_name pdata end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string builder end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name pdata end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name messages end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name pdata end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name set response data end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name pdata end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name set data type end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name sample result end_name begin_operator DOT end_operator begin_name text end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name set content type end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name n end_name begin_init begin_expr begin_call begin_name get num messages end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name n end_name begin_operator EQT end_operator begin_name all messages end_name begin_operator UNP end_operator begin_name n end_name begin_operator GT end_operator begin_name begin_name messages end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name n end_name begin_operator EQ end_operator begin_name begin_name messages end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name set sample count end_name end_name begin_argument_list begin_argument begin_expr begin_name n end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name busy end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name busy end_name begin_operator UNP end_operator begin_name i end_name begin_operator LT end_operator begin_name n end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name string builder end_name end_type begin_name cdata end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string builder end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name sample result end_name end_type begin_name child end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name sample result end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name child end_name begin_operator DOT end_operator begin_name sample start end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name message end_name end_type begin_name message end_name begin_init begin_expr begin_name begin_name messages end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cdata end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name cdata end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name get message number end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name child end_name begin_operator DOT end_operator begin_name set sample label end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name cdata end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name child end_name begin_operator DOT end_operator begin_name set sampler data end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name cdata end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cdata end_name begin_operator DOT end_operator begin_name set length end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name content type end_name begin_init begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name get content type end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name child end_name begin_operator DOT end_operator begin_name set content type end_name end_name begin_argument_list begin_argument begin_expr begin_name content type end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment store the content type end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name child end_name begin_operator DOT end_operator begin_name set data encoding end_name end_name begin_argument_list begin_argument begin_expr begin_name rfc 822 default encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment rfc 822 uses ascii per default end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name child end_name begin_operator DOT end_operator begin_name set encoding and type end_name end_name begin_argument_list begin_argument begin_expr begin_name content type end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment parse the content type end_comment begin_if begin_condition begin_expr begin_call begin_name is store mime message end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment don t save headers they are already in the raw message end_comment begin_decl_stmt begin_decl begin_type begin_name byte array output stream end_name end_type begin_name bout end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name byte array output stream end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name write to end_name end_name begin_argument_list begin_argument begin_expr begin_name bout end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name child end_name begin_operator DOT end_operator begin_name set response data end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name bout end_name begin_operator DOT end_operator begin_name to byte array end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment save raw message end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name child end_name begin_operator DOT end_operator begin_name set data type end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name sample result end_name begin_operator DOT end_operator begin_name text end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_annotation begin_name suppress warnings end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_annotation begin_comment javadoc for the api says this is ok end_comment begin_name begin_name enumeration end_name begin_argument_list begin_argument begin_name header end_name end_argument end_argument_list end_name end_type begin_name hdrs end_name begin_init begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name get all headers end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name hdrs end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name header end_name end_type begin_name hdr end_name begin_init begin_expr begin_call begin_name begin_name hdrs end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name value end_name begin_init begin_expr begin_call begin_name begin_name hdr end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name value end_name begin_operator EQ end_operator begin_call begin_name begin_name mime utility end_name begin_operator DOT end_operator begin_name decode text end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name unsupported encoding exception end_name end_type begin_name uce end_name end_decl end_param end_parameter_list begin_block begin_comment ignored end_comment end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name begin_name cdata end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name hdr end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_call begin_name begin_name child end_name begin_operator DOT end_operator begin_name set response headers end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name cdata end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name cdata end_name begin_operator DOT end_operator begin_name set length end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name append message data end_name begin_argument_list begin_argument begin_expr begin_name child end_name end_expr end_argument begin_argument begin_expr begin_name message end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_name delete messages end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name message end_name begin_operator DOT end_operator begin_name set flag end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name flags end_name begin_operator DOT end_operator begin_name flag end_name begin_operator DOT end_operator begin_name deleted end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name child end_name begin_operator DOT end_operator begin_name set response ok end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name child end_name begin_operator DOT end_operator begin_name get end time end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment avoid double call if add sub result was called end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name child end_name begin_operator DOT end_operator begin_name sample end end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name add sub result end_name end_name begin_argument_list begin_argument begin_expr begin_name child end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_comment close connection end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name folder end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name store end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name set response code ok end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name set response message ok end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name is ok end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no class def found error end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name ex end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment no need to log normally as we set the status end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name set response code end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name set response message end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ex end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name messaging exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name ex end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment no need to log normally as we set the status end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name set response code end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name set response message end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ex end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name sampler string end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name ex end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment no need to log normally as we set the status end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name set response code end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name set response message end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ex end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_name busy end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_finally end_try begin_if begin_condition begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name get end time end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment not been set by any child samples end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name sample end end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name parent end_name begin_operator DOT end_operator begin_name set successful end_name end_name begin_argument_list begin_argument begin_expr begin_name is ok end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name parent end_name end_expr end_return end_block 
 begin_comment create a test element for a gui or test bean class p this is a utility method to help actions do with one single string parameter param obj class the fully qualified class name of the gui component or of the test bean subclass for which a test bean gui is wanted return the test element corresponding to the specified gui class end_comment begin_type begin_specifier end_specifier begin_name test element end_name end_type begin_name create test element end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name obj class end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name j meter gui component end_name end_type begin_name comp end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name class end_name begin_argument_list begin_argument begin_name end_name end_argument end_argument_list end_name end_type begin_name c end_name end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name c end_name begin_operator EQ end_operator begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name obj class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name test bean end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name is assignable from end_name end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_call begin_name get gui from cache end_name begin_argument_list begin_argument begin_expr begin_name begin_name test bean gui end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_call begin_name get gui from cache end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name comp end_name begin_operator DOT end_operator begin_name clear gui end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name test element end_name end_type begin_name node end_name begin_init begin_expr begin_call begin_name begin_name comp end_name begin_operator DOT end_operator begin_name create test element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name nodes to gui end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name node end_name end_expr end_argument begin_argument begin_expr begin_name comp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name node end_name end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no class def found error end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name j option pane end_name begin_operator DOT end_operator begin_name show message dialog end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name j option pane end_name begin_operator DOT end_operator begin_name error message end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw begin_comment probably a missing jar end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name instantiation exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal access exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name set value end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_name value end_name begin_operator UNP end_operator begin_name double end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set text end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name double end_name end_type begin_name rate end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name double end_name begin_operator RPAR end_operator begin_name value end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name double value end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name rate end_name begin_operator EQT end_operator begin_name begin_name double end_name begin_operator DOT end_operator begin_name max value end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set text end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name unit end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name rate end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name rate end_name begin_operator UNP end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name unit end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name rate end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name rate end_name begin_operator UNP end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name unit end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name set text end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name formatter end_name begin_operator DOT end_operator begin_name format end_name end_name begin_argument_list begin_argument begin_expr begin_name rate end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name unit end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name sample stopped end_name begin_parameter_list begin_param begin_decl begin_type begin_name sample event end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment create http sample result filling url method and sample label monitor field is computed calling is monitor param url url param method http method return link http sample result end_comment begin_type begin_specifier end_specifier begin_name http sample result end_name end_type begin_name create sample result end_name begin_parameter_list begin_param begin_decl begin_type begin_name url end_name end_type begin_name url end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name method end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name http sample result end_name end_type begin_name res end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name http sample result end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set monitor end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name is monitor end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set sample label end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name url end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set http method end_name end_name begin_argument_list begin_argument begin_expr begin_name method end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set url end_name end_name begin_argument_list begin_argument begin_expr begin_name url end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name res end_name end_expr end_return end_block 
 begin_comment main processing method for the proxy object end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name run end_name begin_parameter_list end_parameter_list begin_block begin_comment check which http sampler class we should use end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name http sampler name end_name begin_init begin_expr begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name get sampler type name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name http request hdr end_name end_type begin_name request end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name http request hdr end_name begin_argument_list begin_argument begin_expr begin_name http sampler name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name sample result end_name end_type begin_name result end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name header manager end_name end_type begin_name headers end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name http sampler base end_name end_type begin_name sampler end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_comment now parse initial request in case it is a connect request end_comment begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name ba end_name begin_init begin_expr begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name parse end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name buffered input stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name client socket end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name begin_name ba end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name j meter exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_name ba end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name out stream client end_name begin_operator EQ end_operator begin_call begin_name begin_name client socket end_name begin_operator DOT end_operator begin_name get output stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name get method end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name starts with end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name connect end_name end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name out stream client end_name begin_operator UNP end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment write a ok reponse to browser to engage ssl exchange end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name out stream client end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get bytes end_name begin_argument_list begin_argument begin_expr begin_name begin_name sample result end_name begin_operator DOT end_operator begin_name default http encoding end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name out stream client end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment with ssl request url is host port without https or path end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name param end_name begin_init begin_expr begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name get url end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name split end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment non nls 1 end_comment begin_if begin_condition begin_expr begin_name begin_name param end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name param end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name client socket end_name begin_operator EQ end_operator begin_call begin_name start ssl end_name begin_argument_list begin_argument begin_expr begin_name client socket end_name end_expr end_argument begin_argument begin_expr begin_name begin_name param end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment should not happen but if it does we don t want to continue end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name get url end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name j meter exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_else end_if begin_comment re parse now it s the http request over ssl end_comment begin_try begin_block begin_expr_stmt begin_expr begin_name ba end_name begin_operator EQ end_operator begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name parse end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name buffered input stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name client socket end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_comment most likely this is because of a certificate error end_comment begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name url end_name begin_init begin_expr begin_name begin_name param end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator begin_operator QM end_operator begin_operator PLUS end_operator begin_name begin_name param end_name begin_index begin_expr end_expr end_index end_name begin_operator PLUS end_operator begin_operator DP end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name url end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name ioe end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment won t work write error to client http reply hdr form internal error end_comment begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name generate error result end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name ioe end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment generate result if nec and populate it end_comment begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name j meter exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_name ba end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name ba end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name get url end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name j meter exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name sampler creator end_name end_type begin_name sampler creator end_name begin_init begin_expr begin_call begin_name begin_name samplerfactory end_name begin_operator DOT end_operator begin_name get sampler creator end_name end_name begin_argument_list begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name page encodings end_name end_expr end_argument begin_argument begin_expr begin_name form encodings end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name sampler end_name begin_operator EQ end_operator begin_call begin_name begin_name sampler creator end_name begin_operator DOT end_operator begin_name create and populate sampler end_name end_name begin_argument_list begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name page encodings end_name end_expr end_argument begin_argument begin_expr begin_name form encodings end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment create a header manager to ensure that the browsers headers are captured and sent to the server end_comment begin_expr_stmt begin_expr begin_name headers end_name begin_operator EQ end_operator begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name get header manager end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name set header manager end_name end_name begin_argument_list begin_argument begin_expr begin_name headers end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name thread started end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment needed for http sampler 2 end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name get method end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name get url end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name sample end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment find the page encoding and possibly encodings for forms in the page end_comment begin_comment in the response from the web server end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name page encoding end_name begin_init begin_expr begin_call begin_name add page encoding end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name add form encodings end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_name page encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write to client end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name buffered output stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name client socket end_name begin_operator DOT end_operator begin_name get output stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sampler creator end_name begin_operator DOT end_operator begin_name post process sampler end_name end_name begin_argument_list begin_argument begin_expr begin_name sampler end_name end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name j meter exception end_name end_type begin_name jme end_name end_decl end_param end_parameter_list begin_block begin_comment ignored already processed end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name unknown host exception end_name end_type begin_name uhe end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name uhe end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write error to client end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name http reply hdr end_name begin_operator DOT end_operator begin_name form server not found end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name generate error result end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name uhe end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment generate result if nec and populate it end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal argument exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write error to client end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name http reply hdr end_name begin_operator DOT end_operator begin_name form not implemented end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name generate error result end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment generate result if nec and populate it end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write error to client end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name http reply hdr end_name begin_operator DOT end_operator begin_name form internal error end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name generate error result end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment generate result if nec and populate it end_comment end_block end_catch begin_finally begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name sampler end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_comment we don t want to store any cookies in the generated test plan end_comment begin_if begin_condition begin_expr begin_name headers end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name headers end_name begin_operator DOT end_operator begin_name remove header named end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header cookie end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment always remove cookies end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name headers end_name begin_operator DOT end_operator begin_name remove header named end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header authorization end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment always remove authorization end_comment begin_comment remove additional headers end_comment begin_for begin_init begin_decl begin_type begin_name string end_name end_type begin_name hdr end_name begin_range begin_expr begin_name headers to remove end_name end_expr end_range end_decl end_init begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name headers end_name begin_operator DOT end_operator begin_name remove header named end_name end_name begin_argument_list begin_argument begin_expr begin_name hdr end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if begin_if begin_condition begin_expr begin_name result end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_comment deliver sampler allows sampler to be null but result must not be null end_comment begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name deliver sampler end_name end_name begin_argument_list begin_argument begin_expr begin_name sampler end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name test element end_name begin_index end_index end_name begin_block begin_expr begin_name capture http headers end_name begin_operator QM end_operator begin_name headers end_name begin_operator DP end_operator end_expr end_block end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name client socket end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_if begin_condition begin_expr begin_name sampler end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name thread finished end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment needed for http sampler 2 end_comment end_block end_then end_if end_block end_finally end_try end_block 
 begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name boolean end_name end_type begin_name equals end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name o end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name o end_name begin_operator UNP end_operator begin_name table sample end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name compare to end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name table sample end_name begin_operator RPAR end_operator begin_name o end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator begin_operator RPAR end_operator begin_operator RPAR end_operator end_expr end_return end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name fire property change end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name new value end_name begin_init begin_expr begin_call begin_name get as text end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name initial value end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name new value end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_expr_stmt begin_expr begin_name initial value end_name begin_operator EQ end_operator begin_name new value end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name super end_name begin_operator DOT end_operator begin_name fire property change end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name sample started end_name begin_parameter_list begin_param begin_decl begin_type begin_name sample event end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment param post link http post return string posted body if computable throws io exception end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name send post data end_name begin_parameter_list begin_param begin_decl begin_type begin_name http post end_name end_type begin_name post end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_comment buffer to hold the post body except file content end_comment begin_decl_stmt begin_decl begin_type begin_name string builder end_name end_type begin_name posted body end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string builder end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name http file arg end_name end_type begin_name begin_name files end_name begin_index end_index end_name begin_init begin_expr begin_call begin_name get http files end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name content encoding end_name begin_init begin_expr begin_call begin_name get content encoding or null end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name have content encoding end_name begin_init begin_expr begin_name content encoding end_name begin_operator UNP end_operator end_expr end_init end_decl end_decl_stmt begin_comment check if we should do a multipart form data or an end_comment begin_comment application x www form urlencoded post request end_comment begin_if begin_condition begin_expr begin_call begin_name get use multipart for post end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment if a content encoding is specified we use that as the end_comment begin_comment encoding of any parameter values end_comment begin_decl_stmt begin_decl begin_type begin_name charset end_name end_type begin_name charset end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name have content encoding end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name charset end_name begin_operator EQ end_operator begin_call begin_name begin_name charset end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment write the request to our own stream end_comment begin_decl_stmt begin_decl begin_type begin_name multipart entity end_name end_type begin_name multi part end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name multipart entity end_name begin_argument_list begin_argument begin_expr begin_call begin_name get do browser compatible multipart end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_name begin_name http multipart mode end_name begin_operator DOT end_operator begin_name browser compatible end_name end_name begin_operator DP end_operator begin_name begin_name http multipart mode end_name begin_operator DOT end_operator begin_name strict end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name charset end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment create the parts end_comment begin_comment add any parameters end_comment begin_decl_stmt begin_decl begin_type begin_name property iterator end_name end_type begin_name args end_name begin_init begin_expr begin_call begin_name get arguments end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name http argument end_name end_type begin_name arg end_name begin_init begin_expr begin_operator LPAR end_operator begin_name http argument end_name begin_operator RPAR end_operator begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get object value end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name parameter name end_name begin_init begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name is skippable end_name end_name begin_argument_list begin_argument begin_expr begin_name parameter name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name form body part end_name end_type begin_name form part end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string body end_name end_type begin_name string body end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string body end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name charset end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name form part end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name form body part end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name string body end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name multi part end_name begin_operator DOT end_operator begin_name add part end_name end_name begin_argument_list begin_argument begin_expr begin_name form part end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_comment add any files end_comment begin_comment cannot retrieve parts once added to the multi part entity so have to save them here end_comment begin_decl_stmt begin_decl begin_type begin_name viewable file body end_name begin_index end_index end_type begin_name file bodies end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name viewable file body end_name begin_index begin_expr begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name http file arg end_name end_type begin_name file end_name begin_init begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name file bodies end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name viewable file body end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name multi part end_name begin_operator DOT end_operator begin_name add part end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get param name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name file bodies end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set entity end_name end_name begin_argument_list begin_argument begin_expr begin_name multi part end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name multi part end_name begin_operator DOT end_operator begin_name is repeatable end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name byte array output stream end_name end_type begin_name bos end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name byte array output stream end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name viewable file body end_name end_type begin_name file body end_name begin_range begin_expr begin_name file bodies end_name end_expr end_range end_decl end_init begin_block begin_expr_stmt begin_expr begin_name begin_name file body end_name begin_operator DOT end_operator begin_name hide file data end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name multi part end_name begin_operator DOT end_operator begin_name write to end_name end_name begin_argument_list begin_argument begin_expr begin_name bos end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name viewable file body end_name end_type begin_name file body end_name begin_range begin_expr begin_name file bodies end_name end_expr end_range end_decl end_init begin_block begin_expr_stmt begin_expr begin_name begin_name file body end_name begin_operator DOT end_operator begin_name hide file data end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment we get the posted bytes using the encoding used to create it end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name to byte array end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name content encoding end_name begin_operator EQT end_operator begin_operator QM end_operator begin_comment non nls 1 this is the default used by http client end_comment begin_operator DP end_operator begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment end_block end_else end_if begin_comment set the content type todo needed end_comment begin_comment string multi part content type multi part get content type get value end_comment begin_comment post set header header content type multi part content type end_comment end_block end_then begin_else begin_block begin_comment not multipart end_comment begin_comment check if the header manager had a content type header end_comment begin_comment this allows the user to specify his own content type for a post request end_comment begin_decl_stmt begin_decl begin_type begin_name header end_name end_type begin_name content type header end_name begin_init begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name get first header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name has content type header end_name begin_init begin_expr begin_name content type header end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name content type header end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name content type header end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_init end_decl end_decl_stmt begin_comment if there are no arguments we can send a file as the body of the request end_comment begin_comment todo needs a multiple file upload scenerio end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name has arguments end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name get send file as post body end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment if get send file as post body returned true it s sure that file is not null end_comment begin_decl_stmt begin_decl begin_type begin_name http file arg end_name end_type begin_name file end_name begin_init begin_expr begin_name begin_name files end_name begin_index begin_expr end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name has content type header end_name end_expr end_condition begin_then begin_block begin_comment allow the mimetype of the file to control the content type end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name application x www form urlencoded end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file entity end_name end_type begin_name file request entity end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file entity end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name content type end_name begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set entity end_name end_name begin_argument_list begin_argument begin_expr begin_name file request entity end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment we just add placeholder text for file content end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment in a post request which is not multipart we only support end_comment begin_comment parameters no file upload is allowed end_comment begin_comment if a content encoding is specified we set it as http parameter so that end_comment begin_comment the post body will be encoded in the specified content encoding end_comment begin_if begin_condition begin_expr begin_name have content encoding end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name get params end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set parameter end_name begin_argument_list begin_argument begin_expr begin_name begin_name core protocol p names end_name begin_operator DOT end_operator begin_name http content charset end_name end_name end_expr end_argument begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment if none of the arguments have a name specified we end_comment begin_comment just send all the values as the post body end_comment begin_if begin_condition begin_expr begin_call begin_name get send parameter values as post body end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment allow the mimetype of the file to control the content type end_comment begin_comment this is not obvious in gui if you are not uploading any files end_comment begin_comment but just sending the content of nameless parameters end_comment begin_comment todo needs a multiple file upload scenerio end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name has content type header end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name http file arg end_name end_type begin_name file end_name begin_init begin_expr begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator begin_operator QM end_operator begin_name begin_name files end_name begin_index begin_expr end_expr end_index end_name begin_operator DP end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name file end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name application x www form urlencoded end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_comment just append all the parameter values and use that as the post body end_comment begin_decl_stmt begin_decl begin_type begin_name string builder end_name end_type begin_name post body end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string builder end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name property iterator end_name end_type begin_name args end_name begin_init begin_expr begin_call begin_name get arguments end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name http argument end_name end_type begin_name arg end_name begin_init begin_expr begin_operator LPAR end_operator begin_name http argument end_name begin_operator RPAR end_operator begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get object value end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment note if encoded is not selected arg get encoded value is equivalent to arg get value end_comment begin_if begin_condition begin_expr begin_name have content encoding end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get encoded value end_name end_name begin_argument_list begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get encoded value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_while begin_comment let string entity perform the encoding end_comment begin_decl_stmt begin_decl begin_type begin_name string entity end_name end_type begin_name request entity end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string entity end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name post body end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set entity end_name end_name begin_argument_list begin_argument begin_expr begin_name request entity end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name post body end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment it is a normal post request with parameter names and values end_comment begin_comment set the content type end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name has content type header end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name application x www form urlencoded end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment add the parameters end_comment begin_decl_stmt begin_decl begin_type begin_name property iterator end_name end_type begin_name args end_name begin_init begin_expr begin_call begin_name get arguments end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name list end_name begin_argument_list begin_argument begin_name name value pair end_name end_argument end_argument_list end_name end_type begin_name nvps end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name array list end_name begin_argument_list begin_argument begin_name name value pair end_name end_argument end_argument_list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name url content encoding end_name begin_init begin_expr begin_name content encoding end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name url content encoding end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name url content encoding end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment use the default encoding for urls end_comment begin_expr_stmt begin_expr begin_name url content encoding end_name begin_operator EQ end_operator begin_name begin_name encoder cache end_name begin_operator DOT end_operator begin_name url argument encoding end_name end_name end_expr end_expr_stmt end_block end_then end_if begin_while begin_condition begin_expr begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name http argument end_name end_type begin_name arg end_name begin_init begin_expr begin_operator LPAR end_operator begin_name http argument end_name begin_operator RPAR end_operator begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get object value end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment the http client always urlencodes both name and value end_comment begin_comment so if the argument is already encoded we have to decode end_comment begin_comment it before adding it to the post request end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name parameter name end_name begin_init begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name is skippable end_name end_name begin_argument_list begin_argument begin_expr begin_name parameter name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name parameter value end_name begin_init begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name is always encoded end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment the value is already encoded by the user end_comment begin_comment must decode the value now so that when the end_comment begin_comment httpclient encodes it we end up with the same value end_comment begin_comment as the user had entered end_comment begin_expr_stmt begin_expr begin_name parameter name end_name begin_operator EQ end_operator begin_call begin_name begin_name url decoder end_name begin_operator DOT end_operator begin_name decode end_name end_name begin_argument_list begin_argument begin_expr begin_name parameter name end_name end_expr end_argument begin_argument begin_expr begin_name url content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name parameter value end_name begin_operator EQ end_operator begin_call begin_name begin_name url decoder end_name begin_operator DOT end_operator begin_name decode end_name end_name begin_argument_list begin_argument begin_expr begin_name parameter value end_name end_expr end_argument begin_argument begin_expr begin_name url content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment add the parameter httpclient will urlencode it end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name nvps end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name basic name value pair end_name begin_argument_list begin_argument begin_expr begin_name parameter name end_name end_expr end_argument begin_argument begin_expr begin_name parameter value end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_decl_stmt begin_decl begin_type begin_name url encoded form entity end_name end_type begin_name entity end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name url encoded form entity end_name begin_argument_list begin_argument begin_expr begin_name nvps end_name end_expr end_argument begin_argument begin_expr begin_name url content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set entity end_name end_name begin_argument_list begin_argument begin_expr begin_name entity end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name entity end_name begin_operator DOT end_operator begin_name is repeatable end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name byte array output stream end_name end_type begin_name bos end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name byte array output stream end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name get entity end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name write to end_name begin_argument_list begin_argument begin_expr begin_name bos end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment we get the posted bytes using the encoding used to create it end_comment begin_if begin_condition begin_expr begin_name content encoding end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name to byte array end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name to byte array end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name sample result end_name begin_operator DOT end_operator begin_name default http encoding end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_else end_if end_block end_else end_if end_block end_else end_if begin_return begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name sample stopped end_name begin_parameter_list begin_param begin_decl begin_type begin_name sample event end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment resets the state of this object to its default but this method does not reset any mail specific attributes like sender mail subject since they are independent of the sampling end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name clear end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_name failure count end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name success count end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name site down end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name success msg sent end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name failure msg sent end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name notify change listeners end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get filename end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get property as string end_name begin_argument_list begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment construct a bean info for the given class end_comment begin_specifier end_specifier begin_name bean info support end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name class end_name begin_argument_list begin_argument begin_name end_name begin_extends begin_name test bean end_name end_extends end_argument end_argument_list end_name end_type begin_name bean class end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name bean class end_name end_name begin_operator EQ end_operator begin_name bean class end_name end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name root bean info end_name begin_operator EQ end_operator begin_call begin_name begin_name introspector end_name begin_operator DOT end_operator begin_name get bean info end_name end_name begin_argument_list begin_argument begin_expr begin_name bean class end_name end_expr end_argument begin_argument begin_expr begin_name begin_name introspector end_name begin_operator DOT end_operator begin_name ignore immediate beaninfo end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name introspection exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name error end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name bean class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_comment n b jv ms other than sun may return different instances each time end_comment begin_comment so we cache the value here and avoid having to fetch it every time end_comment begin_expr_stmt begin_expr begin_name bean descriptor end_name begin_operator EQ end_operator begin_call begin_name begin_name root bean info end_name begin_operator DOT end_operator begin_name get bean descriptor end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name resource bundle end_name end_type begin_name resource bundle end_name begin_init begin_expr begin_call begin_name begin_name resource bundle end_name begin_operator DOT end_operator begin_name get bundle end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name bean class end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_comment non nls 1 end_comment begin_argument begin_expr begin_call begin_name begin_name j meter utils end_name begin_operator DOT end_operator begin_name get locale end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment store the resource bundle as an attribute of the bean descriptor end_comment begin_expr_stmt begin_expr begin_call begin_name get bean descriptor end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set value end_name begin_argument_list begin_argument begin_expr begin_name resource bundle end_name end_expr end_argument begin_argument begin_expr begin_name resource bundle end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment localize the bean name end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name resource bundle end_name begin_operator DOT end_operator begin_name contains key end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment non nls 1 end_comment begin_expr_stmt begin_expr begin_call begin_name get bean descriptor end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set display name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name resource bundle end_name begin_operator DOT end_operator begin_name get string end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name bean class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_comment localize the property names and descriptions end_comment begin_decl_stmt begin_decl begin_type begin_name property descriptor end_name begin_index end_index end_type begin_name properties end_name begin_init begin_expr begin_call begin_name get property descriptors end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name property descriptor end_name end_type begin_name property end_name begin_range begin_expr begin_name properties end_name end_expr end_range end_decl end_init begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_call begin_name begin_name property end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name property end_name begin_operator DOT end_operator begin_name set display name end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name resource bundle end_name begin_operator DOT end_operator begin_name get string end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name missing resource exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name bean class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name property end_name begin_operator DOT end_operator begin_name set short description end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name resource bundle end_name begin_operator DOT end_operator begin_name get string end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name missing resource exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name bean class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_for end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name missing resource exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name bean class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name bean class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name subtract node end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment create a test element for a gui or test bean class p this is a utility method to help actions do with one single string parameter param obj class the fully qualified class name of the gui component or of the test bean subclass for which a test bean gui is wanted return the test element corresponding to the specified gui class end_comment begin_type begin_specifier end_specifier begin_name test element end_name end_type begin_name create test element end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name obj class end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name j meter gui component end_name end_type begin_name comp end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name class end_name begin_argument_list begin_argument begin_name end_name end_argument end_argument_list end_name end_type begin_name c end_name end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name c end_name begin_operator EQ end_operator begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name obj class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name test bean end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name is assignable from end_name end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_call begin_name get gui from cache end_name begin_argument_list begin_argument begin_expr begin_name begin_name test bean gui end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_call begin_name get gui from cache end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name comp end_name begin_operator DOT end_operator begin_name clear gui end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name test element end_name end_type begin_name node end_name begin_init begin_expr begin_call begin_name begin_name comp end_name begin_operator DOT end_operator begin_name create test element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name nodes to gui end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name node end_name end_expr end_argument begin_argument begin_expr begin_name comp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name node end_name end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no class def found error end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name j option pane end_name begin_operator DOT end_operator begin_name show message dialog end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name j option pane end_name begin_operator DOT end_operator begin_name error message end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw begin_comment probably a missing jar end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name instantiation exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal access exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
