 begin_comment this method is used to do some low cost defensive programming it is called when a condition that the program logic should prevent from happening occurs i hope this will help early detection of logical bugs in property value handling throws error always throws an error end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name should never happen end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name msg end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name error end_name end_expr end_argument end_throws begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name error end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_comment determine if the specified file is allowed by this filter the file will be allowed if it is a directory or if the end of the filename matches one of the extensions allowed by this filter the filename is converted to lower case before making the comparison param f the file being tested return true if the file should be allowed false otherwise end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name boolean end_name end_type begin_name accept end_name begin_parameter_list begin_param begin_decl begin_type begin_name file end_name end_type begin_name f end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_operator LPAR end_operator begin_name allow dirs end_name begin_operator UNP end_operator begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name is directory end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_call begin_name accept end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name f end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to lower case end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name sample result end_name end_type begin_name sample end_name begin_parameter_list begin_param begin_decl begin_type begin_name entry end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_comment entry tends to be ignored end_comment begin_block begin_if begin_condition begin_expr begin_name first sample end_name end_expr end_condition begin_then begin_block begin_comment do stuff we cannot do as part of thread started end_comment begin_expr_stmt begin_expr begin_call begin_name init sampling end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name first sample end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name re use connection end_name begin_init begin_expr begin_call begin_name is re use connection end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name close connection end_name begin_init begin_expr begin_call begin_name is close connection end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name socket key end_name begin_init begin_expr begin_call begin_name get socket key end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get label end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name get filename end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name get username end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name get password end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name sample result end_name end_type begin_name res end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name sample result end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name is successful end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set sample label end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment use the test element name for the label end_comment begin_decl_stmt begin_decl begin_type begin_name string builder end_name end_type begin_name sb end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string builder end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_call begin_name get server end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_call begin_name get port end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name re use connection end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name close connection end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_call begin_name get so linger end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_call begin_name get eol byte end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_call begin_name get no delay end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set sampler data end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name sample start end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name socket end_name end_type begin_name sock end_name begin_init begin_expr begin_call begin_name get socket end_name begin_argument_list begin_argument begin_expr begin_name socket key end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name sock end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set response code end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set response message end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get error end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name protocol handler end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set response code end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set response message end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name current socket end_name begin_operator EQ end_operator begin_name sock end_name end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name is end_name begin_init begin_expr begin_call begin_name begin_name sock end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name output stream end_name end_type begin_name os end_name begin_init begin_expr begin_call begin_name begin_name sock end_name begin_operator DOT end_operator begin_name get output stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name req end_name begin_init begin_expr begin_call begin_name get request data end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set sampler data end_name end_name begin_argument_list begin_argument begin_expr begin_name req end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name protocol handler end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name os end_name end_expr end_argument begin_argument begin_expr begin_name req end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name in end_name begin_init begin_expr begin_call begin_name begin_name protocol handler end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list begin_argument begin_expr begin_name is end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name is successful end_name begin_operator EQ end_operator begin_call begin_name setup sample result end_name begin_argument_list begin_argument begin_expr begin_name res end_name end_expr end_argument begin_argument begin_expr begin_name in end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name protocol handler end_name begin_operator DOT end_operator begin_name get charset end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name read exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name ex end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name is successful end_name begin_operator EQ end_operator begin_call begin_name setup sample result end_name begin_argument_list begin_argument begin_expr begin_name res end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name ex end_name begin_operator DOT end_operator begin_name get partial response end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name ex end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name protocol handler end_name begin_operator DOT end_operator begin_name get charset end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name close socket end_name begin_argument_list begin_argument begin_expr begin_name socket key end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name ex end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name is successful end_name begin_operator EQ end_operator begin_call begin_name setup sample result end_name begin_argument_list begin_argument begin_expr begin_name res end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name ex end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name protocol handler end_name begin_operator DOT end_operator begin_name get charset end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name close socket end_name begin_argument_list begin_argument begin_expr begin_name socket key end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_name current socket end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_comment calculate response time end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name sample end end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment set if we were successful or not end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set successful end_name end_name begin_argument_list begin_argument begin_expr begin_name is successful end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name re use connection end_name begin_operator UNP end_operator begin_name close connection end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name close socket end_name begin_argument_list begin_argument begin_expr begin_name socket key end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try begin_return begin_expr begin_name res end_name end_expr end_return end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name sample started end_name begin_parameter_list begin_param begin_decl begin_type begin_name sample event end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment same as should never happen but provide a source exception param e the exception that helped identify the problem throws error always throws one end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name should never happen end_name begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name error end_name end_expr end_argument end_throws begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name error end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_specifier end_specifier begin_name test bean gui end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name class end_name begin_argument_list begin_argument begin_name end_name end_argument end_argument_list end_name end_type begin_name test bean class end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name test bean class end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment a quick verification just in case end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name test bean end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name is assignable from end_name end_name end_name begin_argument_list begin_argument begin_expr begin_name test bean class end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name error end_name end_type begin_name e end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name error end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_name e end_name end_expr end_throw end_block end_then end_if begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name test bean class end_name end_name begin_operator EQ end_operator begin_name test bean class end_name end_expr end_expr_stmt begin_comment get the bean info end_comment begin_try begin_block begin_expr_stmt begin_expr begin_name bean info end_name begin_operator EQ end_operator begin_call begin_name begin_name introspector end_name begin_operator DOT end_operator begin_name get bean info end_name end_name begin_argument_list begin_argument begin_expr begin_name test bean class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name introspection exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name test bean class end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name error end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw begin_comment programming error don t end_comment begin_comment continue end_comment end_block end_catch end_try begin_expr_stmt begin_expr begin_name customizer class end_name begin_operator EQ end_operator begin_call begin_name begin_name bean info end_name begin_operator DOT end_operator begin_name get bean descriptor end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get customizer class end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment creation of the customizer and gui initialization is delayed until end_comment begin_comment the end_comment begin_comment first end_comment begin_comment configure call we don t need all that just to find out the static end_comment begin_comment label menu end_comment begin_comment categories etc end_comment begin_expr_stmt begin_expr begin_name initialized end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name j meter utils end_name begin_operator DOT end_operator begin_name add locale change listener end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_specifier end_specifier begin_name byte end_name begin_index end_index end_type begin_name get mirrored response end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name byte end_name begin_index end_index end_name end_type begin_name all response end_name end_decl end_param end_parameter_list begin_block begin_comment the response includes the headers from the mirror server end_comment begin_comment we want to skip those to only keep the content mirrored end_comment begin_comment look for the first crlfcrlf section end_comment begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name start of mirror response end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name all response end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_if begin_condition begin_expr begin_name begin_name all response end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name begin_name all response end_name begin_index begin_expr begin_name i end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name begin_name all response end_name begin_index begin_expr begin_name i end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name begin_name all response end_name begin_index begin_expr begin_name i end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name start of mirror response end_name begin_operator EQ end_operator begin_name i end_name begin_operator PLUS end_operator end_expr end_expr_stmt begin_break end_break end_block end_then end_if end_block end_for begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name mirror response end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name byte end_name begin_index begin_expr begin_name begin_name all response end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator MINUS end_operator begin_name start of mirror response end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name arraycopy end_name end_name begin_argument_list begin_argument begin_expr begin_name all response end_name end_expr end_argument begin_argument begin_expr begin_name start of mirror response end_name end_expr end_argument begin_argument begin_expr begin_name mirror response end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name mirror response end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name mirror response end_name end_expr end_return end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name subtract node end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set headers end_name begin_parameter_list begin_param begin_decl begin_type begin_name url connection end_name end_type begin_name connection end_name end_decl end_param begin_param begin_decl begin_type begin_name http sampler base end_name end_type begin_name sampler end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_comment get the encoding to use for the request end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name content encoding end_name begin_init begin_expr begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name get content encoding end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name content encoding end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name content encoding end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name content encoding end_name begin_operator EQ end_operator begin_name encoding end_name end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name content length end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name http file arg end_name end_type begin_name begin_name files end_name begin_index end_index end_name begin_init begin_expr begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name get http files end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment check if we should do a multipart form data or an end_comment begin_comment application x www form urlencoded post request end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name get use multipart for post end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment set the content type end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name connection end_name begin_operator DOT end_operator begin_name set request property end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name multipart form data end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name get boundary end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment begin_comment write the form section end_comment begin_decl_stmt begin_decl begin_type begin_name byte array output stream end_name end_type begin_name bos end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name byte array output stream end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment first the multipart start divider end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get multipart divider end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment add any parameters end_comment begin_decl_stmt begin_decl begin_type begin_name property iterator end_name end_type begin_name args end_name begin_init begin_expr begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name get arguments end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name http argument end_name end_type begin_name arg end_name begin_init begin_expr begin_operator LPAR end_operator begin_name http argument end_name begin_operator RPAR end_operator begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get object value end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name parameter name end_name begin_init begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name is skippable end_name end_name begin_argument_list begin_argument begin_expr begin_name parameter name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_comment end the previous multipart end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name crlf end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment write multipart for parameter end_comment begin_expr_stmt begin_expr begin_call begin_name write form multipart end_name begin_argument_list begin_argument begin_expr begin_name bos end_name end_expr end_argument begin_argument begin_expr begin_name parameter name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name content encoding end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name get do browser compatible multipart end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_comment if there are any files we need to end the previous multipart end_comment begin_if begin_condition begin_expr begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_comment end the previous multipart end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name crlf end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment keep the content will be sent later end_comment begin_expr_stmt begin_expr begin_name form data post body end_name begin_operator EQ end_operator begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name to byte array end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name content length end_name begin_operator EQ end_operator begin_name begin_name form data post body end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_expr_stmt begin_comment now we just construct any multipart for the files end_comment begin_comment we only construct the file multipart start we do not write end_comment begin_comment the actual file content end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name http file arg end_name end_type begin_name file end_name begin_init begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_comment write multipart for file end_comment begin_expr_stmt begin_expr begin_name bos end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name byte array output stream end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write start file multipart end_name begin_argument_list begin_argument begin_expr begin_name bos end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get param name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name header end_name begin_init begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment if this is not the first file we can t write its header now end_comment begin_comment for simplicity we always save it even if there is only one file end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name set header end_name end_name begin_argument_list begin_argument begin_expr begin_name header end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name content length end_name begin_operator UNP end_operator begin_call begin_name begin_name header end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment add also the length of the file content end_comment begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name upload file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name content length end_name begin_operator UNP end_operator begin_call begin_name begin_name upload file end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment and the end of the file multipart end_comment begin_expr_stmt begin_expr begin_name content length end_name begin_operator UNP end_operator begin_call begin_name get file multipart end divider end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_name length end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name i end_name begin_operator PLUS end_operator begin_operator LT end_operator begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name content length end_name begin_operator UNP end_operator begin_name begin_name crlf end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_expr_stmt end_block end_then end_if end_block end_for begin_comment add the end of multipart end_comment begin_expr_stmt begin_expr begin_name content length end_name begin_operator UNP end_operator begin_call begin_name get multipart end divider end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_name length end_name end_expr end_expr_stmt begin_comment set the content length end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name connection end_name begin_operator DOT end_operator begin_name set request property end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content length end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name long end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list begin_argument begin_expr begin_name content length end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment make the connection ready for sending post data end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name connection end_name begin_operator DOT end_operator begin_name set do output end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name connection end_name begin_operator DOT end_operator begin_name set do input end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment check if the header manager had a content type header end_comment begin_comment this allows the user to specify his own content type for a post request end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name content type header end_name begin_init begin_expr begin_call begin_name begin_name connection end_name begin_operator DOT end_operator begin_name get request property end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name has content type header end_name begin_init begin_expr begin_name content type header end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name content type header end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_init end_decl end_decl_stmt begin_comment if there are no arguments we can send a file as the body of the request end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name get arguments end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name get arguments end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get argument count end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name get send file as post body end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment we re sure that there is one file because of end_comment begin_comment get send file as post body method s return value end_comment begin_decl_stmt begin_decl begin_type begin_name http file arg end_name end_type begin_name file end_name begin_init begin_expr begin_name begin_name files end_name begin_index begin_expr end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name has content type header end_name end_expr end_condition begin_then begin_block begin_comment allow the mimetype of the file to control the content type end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name connection end_name begin_operator DOT end_operator begin_name set request property end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name connection end_name begin_operator DOT end_operator begin_name set request property end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name application x www form urlencoded end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_comment create the content length we are going to write end_comment begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name input file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name content length end_name begin_operator EQ end_operator begin_call begin_name begin_name input file end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment we create the post body content now so we know the size end_comment begin_decl_stmt begin_decl begin_type begin_name byte array output stream end_name end_type begin_name bos end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name byte array output stream end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment if none of the arguments have a name specified we end_comment begin_comment just send all the values as the post body end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name post body end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name get send parameter values as post body end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment set the content type end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name has content type header end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name connection end_name begin_operator DOT end_operator begin_name set request property end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name application x www form urlencoded end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment it is a normal post request with parameter names and values end_comment begin_expr_stmt begin_expr begin_name post body end_name begin_operator EQ end_operator begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name get query string end_name end_name begin_argument_list begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment allow the mimetype of the file to control the content type end_comment begin_comment this is not obvious in gui if you are not uploading any files end_comment begin_comment but just sending the content of nameless parameters end_comment begin_comment todo needs a multiple file upload scenerio end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name has content type header end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name http file arg end_name end_type begin_name file end_name begin_init begin_expr begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator begin_operator QM end_operator begin_name begin_name files end_name begin_index begin_expr end_expr end_index end_name begin_operator DP end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name file end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name connection end_name begin_operator DOT end_operator begin_name set request property end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name connection end_name begin_operator DOT end_operator begin_name set request property end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name application x www form urlencoded end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_comment just append all the parameter values and use that as the post body end_comment begin_decl_stmt begin_decl begin_type begin_name string builder end_name end_type begin_name post body buffer end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string builder end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name property iterator end_name end_type begin_name args end_name begin_init begin_expr begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name get arguments end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name http argument end_name end_type begin_name arg end_name begin_init begin_expr begin_operator LPAR end_operator begin_name http argument end_name begin_operator RPAR end_operator begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get object value end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name post body buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get encoded value end_name end_name begin_argument_list begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_name post body end_name begin_operator EQ end_operator begin_call begin_name begin_name post body buffer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name post body end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment keep the content will be sent later end_comment begin_expr_stmt begin_expr begin_name form data url encoded end_name begin_operator EQ end_operator begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name to byte array end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name content length end_name begin_operator EQ end_operator begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name to byte array end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_name length end_name end_expr end_expr_stmt end_block end_else end_if begin_comment set the content length end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name connection end_name begin_operator DOT end_operator begin_name set request property end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content length end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name long end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list begin_argument begin_expr begin_name content length end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment make the connection ready for sending post data end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name connection end_name begin_operator DOT end_operator begin_name set do output end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name get filename end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get property as string end_name begin_argument_list begin_argument begin_expr begin_name filename end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment the test started test ended methods are called at the start and end of a test however when a test is run on multiple nodes there is no guarantee that all the test started methods will be called before all the thread start or sample occurred methods for other threads nor that test ended will only be called after all sample occurred calls the ordering is only guaranteed within a single test end_comment begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name test started end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name test started end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name sample stopped end_name begin_parameter_list begin_param begin_decl begin_type begin_name sample event end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name handle end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name o end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name o end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name o end_name begin_operator UNP end_operator begin_name double end_name end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name handle end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name double end_name begin_operator RPAR end_operator begin_name o end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_name o end_name begin_operator UNP end_operator begin_name integer end_name end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name handle end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name integer end_name begin_operator RPAR end_operator begin_name o end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_name o end_name begin_operator UNP end_operator begin_name string end_name end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name handle end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_name o end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then begin_else begin_if begin_condition begin_expr begin_name o end_name begin_operator UNP end_operator begin_name db object end_name end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name begin_name this end_name begin_operator DOT end_operator begin_name handle end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name db object end_name begin_operator RPAR end_operator begin_name o end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then begin_else begin_block begin_return begin_expr end_expr end_return end_block end_else end_if end_else end_if end_else end_if end_else end_if end_block 
 begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name test ended end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name initialize end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name variables end_name begin_operator DOT end_operator begin_name clear end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name preload variables end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment create a test element for a gui or test bean class p this is a utility method to help actions do with one single string parameter param obj class the fully qualified class name of the gui component or of the test bean subclass for which a test bean gui is wanted return the test element corresponding to the specified gui class end_comment begin_type begin_specifier end_specifier begin_name test element end_name end_type begin_name create test element end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name obj class end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name j meter gui component end_name end_type begin_name comp end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name class end_name begin_argument_list begin_argument begin_name end_name end_argument end_argument_list end_name end_type begin_name c end_name end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name c end_name begin_operator EQ end_operator begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name obj class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name test bean end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name is assignable from end_name end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_call begin_name get gui from cache end_name begin_argument_list begin_argument begin_expr begin_name begin_name test bean gui end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_call begin_name get gui from cache end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name comp end_name begin_operator DOT end_operator begin_name clear gui end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name test element end_name end_type begin_name node end_name begin_init begin_expr begin_call begin_name begin_name comp end_name begin_operator DOT end_operator begin_name create test element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name nodes to gui end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name node end_name end_expr end_argument begin_argument begin_expr begin_name comp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name node end_name end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no class def found error end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name j option pane end_name begin_operator DOT end_operator begin_name show message dialog end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name j option pane end_name begin_operator DOT end_operator begin_name error message end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw begin_comment probably a missing jar end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name instantiation exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal access exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment create additional sample event in non parent mode end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name notify listeners end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name j meter context end_name end_type begin_name thread context end_name begin_init begin_expr begin_call begin_name get thread context end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name j meter variables end_name end_type begin_name thread vars end_name begin_init begin_expr begin_call begin_name begin_name thread context end_name begin_operator DOT end_operator begin_name get variables end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name sample package end_name end_type begin_name pack end_name begin_init begin_expr begin_operator LPAR end_operator begin_name sample package end_name begin_operator RPAR end_operator begin_call begin_name begin_name thread vars end_name begin_operator DOT end_operator begin_name get object end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name j meter thread end_name begin_operator DOT end_operator begin_name package object end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name pack end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment if child of transaction controller is a throughput controller and tpc does end_comment begin_comment not sample its children then we will have this end_comment begin_comment todo should this be at warn level end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name sample event end_name end_type begin_name event end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name sample event end_name begin_argument_list begin_argument begin_expr begin_name res end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name thread context end_name begin_operator DOT end_operator begin_name get thread group end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name thread vars end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment we must set res to null now before sending the event for the transaction end_comment begin_comment so that we can ignore that event in our sample occured method end_comment begin_expr_stmt begin_expr begin_name res end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_comment bug 50032 end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name get thread context end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name is reinitializing sub controllers end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name lnf end_name begin_operator DOT end_operator begin_name notify listeners end_name end_name begin_argument_list begin_argument begin_expr begin_name event end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name pack end_name begin_operator DOT end_operator begin_name get sample listeners end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_else end_if end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name process path end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment non nls 1 end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name decode end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name util end_name begin_operator DOT end_operator begin_name substitute end_name end_name begin_argument_list begin_argument begin_expr begin_name expression end_name end_expr end_argument begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name string end_name end_type begin_name execute end_name begin_parameter_list begin_param begin_decl begin_type begin_name sample result end_name end_type begin_name previous result end_name end_decl end_param begin_param begin_decl begin_type begin_name sampler end_name end_type begin_name current sampler end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name invalid variable exception end_name end_expr end_argument end_throws begin_block begin_comment return j meter context service get context get current sampler get name end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name current sampler end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment will be null if function is used on test plan end_comment begin_expr_stmt begin_expr begin_name name end_name begin_operator EQ end_operator begin_call begin_name begin_name current sampler end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name values end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name j meter variables end_name end_type begin_name vars end_name begin_init begin_expr begin_call begin_name get variables end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name vars end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment may be null if function is used on test plan end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name var name end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name compound variable end_name begin_operator RPAR end_operator begin_name begin_name values end_name begin_index begin_expr end_expr end_index end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name execute end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name trim end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name var name end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name vars end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name var name end_name end_expr end_argument begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block end_then end_if begin_return begin_expr begin_name name end_name end_expr end_return end_block 
 begin_specifier end_specifier begin_name ldap sampler end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment otherwise end_comment begin_comment create the ssl context and wrap all the x 509 key managers with our x 509 key manager so that we can choose our alias param provider description of parameter end_comment begin_specifier end_specifier begin_name jsse ssl manager end_name begin_parameter_list begin_param begin_decl begin_type begin_name provider end_name end_type begin_name provider end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name provider end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set provider end_name begin_argument_list begin_argument begin_expr begin_name provider end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator EQT end_operator begin_name begin_name this end_name begin_operator DOT end_operator begin_name rand end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name rand end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name secure random end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_try begin_block begin_if begin_condition begin_expr begin_name shared session context end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name default context end_name end_name begin_operator EQ end_operator begin_call begin_name create context end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name threadlocal end_name end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name begin_name thread local end_name begin_argument_list begin_argument begin_name ssl context end_name end_argument end_argument_list end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name https url connection end_name begin_operator DOT end_operator begin_name set default ssl socket factory end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name http ssl protocol socket factory end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_name cps end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name https url connection end_name begin_operator DOT end_operator begin_name set default hostname verifier end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_class begin_super begin_name hostname verifier end_name end_super begin_argument_list end_argument_list begin_block begin_function begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name boolean end_name end_type begin_name verify end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name hostname end_name end_decl end_param begin_param begin_decl begin_type begin_name ssl session end_name end_type begin_name session end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr end_expr end_return end_block end_function end_block end_class end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment also set up http client defaults end_comment begin_decl_stmt begin_decl begin_type begin_name protocol end_name end_type begin_name protocol end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name protocol end_name begin_argument_list begin_argument begin_expr begin_name begin_name jsse ssl manager end_name begin_operator DOT end_operator begin_name https end_name end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name protocol socket factory end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_call begin_name http ssl protocol socket factory end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_name cps end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name protocol end_name begin_operator DOT end_operator begin_name register protocol end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name jsse ssl manager end_name begin_operator DOT end_operator begin_name https end_name end_name end_expr end_argument begin_argument begin_expr begin_name protocol end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name general security exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name ex end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set parameters end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name collection end_name begin_argument_list begin_argument begin_name compound variable end_name end_argument end_argument_list end_name end_type begin_name parameters end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name invalid variable exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name parameters end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name values end_name begin_operator EQ end_operator begin_call begin_name begin_name parameters end_name begin_operator DOT end_operator begin_name to array end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name parameters end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name compound variable end_name begin_operator RPAR end_operator begin_name begin_name values end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name execute end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name check parameter count end_name begin_argument_list begin_argument begin_expr begin_name parameters end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment need to reset the containers for repeated runs about the only way for functions to detect that a run is starting seems to be the set parameters call end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name file wrapper end_name begin_operator DOT end_operator begin_name clear all end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment same as should never happen but provide a source exception param e the exception that helped identify the problem throws error always throws one end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name should never happen end_name begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name error end_name end_expr end_argument end_throws begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name error end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name sample stopped end_name begin_parameter_list begin_param begin_decl begin_type begin_name sample event end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment compile a general string into a list of elements for a compound variable calls link make function string reader if it detects an unescaped removes escapes from and param value string containing the function variable references if any return list of strings or objects representing functions end_comment begin_type begin_name begin_name linked list end_name begin_argument_list begin_argument begin_name object end_name end_argument end_argument_list end_name end_type begin_name compile string end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name invalid variable exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name string reader end_name end_type begin_name reader end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string reader end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name linked list end_name begin_argument_list begin_argument begin_name object end_name end_argument end_argument_list end_name end_type begin_name result end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name linked list end_name begin_argument_list begin_argument begin_name object end_name end_argument end_argument_list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string builder end_name end_type begin_name buffer end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string builder end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name char end_name end_type begin_name previous end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name char end_name begin_index end_index end_type begin_name current end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name char end_name begin_index begin_expr end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_while begin_condition begin_expr begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list begin_argument begin_expr begin_name current end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_block begin_if begin_condition begin_expr begin_name begin_name current end_name begin_index begin_expr end_expr end_index end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment handle escapes end_comment begin_expr_stmt begin_expr begin_name previous end_name begin_operator EQ end_operator begin_name begin_name current end_name begin_index begin_expr end_expr end_index end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list begin_argument begin_expr begin_name current end_name end_expr end_argument end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_break end_break end_block end_then end_if begin_comment keep the unless it is one of the escapable chars or end_comment begin_comment n b this method is used to parse function parameters so must treat as special end_comment begin_if begin_condition begin_expr begin_name begin_name current end_name begin_index begin_expr end_expr end_index end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name begin_name current end_name begin_index begin_expr end_expr end_index end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name begin_name current end_name begin_index begin_expr end_expr end_index end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name previous end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment i e end_comment end_block end_then end_if begin_expr_stmt begin_expr begin_name previous end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name current end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_continue end_continue end_block end_then begin_else begin_if begin_condition begin_expr begin_name begin_name current end_name begin_index begin_expr end_expr end_index end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_name previous end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment found end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name delete char at end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_comment save leading text end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name set length end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name make function end_name begin_argument_list begin_argument begin_expr begin_name reader end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name previous end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name current end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name previous end_name begin_operator EQ end_operator begin_name begin_name current end_name begin_index begin_expr end_expr end_index end_name end_expr end_expr_stmt end_block end_else end_if end_else end_if end_block end_while begin_if begin_condition begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name buffer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name value end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name clear end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_if begin_condition begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name result end_name end_expr end_return end_block 
 begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name sample result end_name end_type begin_name sample end_name begin_parameter_list begin_param begin_decl begin_type begin_name entry end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name sample result end_name end_type begin_name res end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name sample result end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name is successful end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set sample label end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set sampler data end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get property as string end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name ldap client end_name end_type begin_name ldap end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name ldap client end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ldap end_name begin_operator DOT end_operator begin_name connect end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get servername end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get port end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get rootdn end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get username end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get password end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name get property as string end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name add end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name add test end_name begin_argument_list begin_argument begin_expr begin_name ldap end_name end_expr end_argument begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name get property as string end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name delete end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name delete test end_name begin_argument_list begin_argument begin_expr begin_name ldap end_name end_expr end_argument begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name get property as string end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name modify end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name modify test end_name begin_argument_list begin_argument begin_expr begin_name ldap end_name end_expr end_argument begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name get property as string end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name searchbase end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name search test end_name begin_argument_list begin_argument begin_expr begin_name ldap end_name end_expr end_argument begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if end_else end_if end_else end_if begin_if begin_condition begin_expr begin_call begin_name get property as string end_name begin_argument_list begin_argument begin_expr begin_name test end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name searchbase end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_name search found entries end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set response code end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment todo is this a sensible number non nls 1 end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set response message end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set response data end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set response code ok end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set response message end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set response data end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set data type end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name sample result end_name begin_operator DOT end_operator begin_name text end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name is successful end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name ex end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name ex end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment could time this end_comment begin_comment res sample end end_comment begin_comment if sample end is not called elapsed time will remain zero end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set response code end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment todo distinguish errors better non nls 1 end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set response message end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name ex end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name is successful end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ldap end_name begin_operator DOT end_operator begin_name disconnect end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try begin_comment set if we were successful or not end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set successful end_name end_name begin_argument_list begin_argument begin_expr begin_name is successful end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name res end_name end_expr end_return end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name process path end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment takes an array of strings and a tokenizer character and returns a string of all the strings concatenated with the tokenizer string in between each one param splittee array of objects to be concatenated param split char object to unsplit the strings with return array of all the tokens end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name unsplit end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name object end_name begin_index end_index end_name end_type begin_name splittee end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name split char end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string builder end_name end_type begin_name ret val end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string builder end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name count end_name begin_init begin_expr begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_operator PPLUS end_operator begin_name count end_name begin_operator LT end_operator begin_name begin_name splittee end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_block begin_if begin_condition begin_expr begin_name begin_name splittee end_name begin_index begin_expr begin_name count end_name end_expr end_index end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ret val end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name splittee end_name begin_index begin_expr begin_name count end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name count end_name begin_operator PLUS end_operator begin_operator LT end_operator begin_name begin_name splittee end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator UNP end_operator begin_name begin_name splittee end_name begin_index begin_expr begin_name count end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ret val end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name split char end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_while begin_return begin_expr begin_call begin_name begin_name ret val end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment create a test element for a gui or test bean class p this is a utility method to help actions do with one single string parameter param obj class the fully qualified class name of the gui component or of the test bean subclass for which a test bean gui is wanted return the test element corresponding to the specified gui class end_comment begin_type begin_specifier end_specifier begin_name test element end_name end_type begin_name create test element end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name obj class end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name j meter gui component end_name end_type begin_name comp end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name class end_name begin_argument_list begin_argument begin_name end_name end_argument end_argument_list end_name end_type begin_name c end_name end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name c end_name begin_operator EQ end_operator begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name obj class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name test bean end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name is assignable from end_name end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_call begin_name get gui from cache end_name begin_argument_list begin_argument begin_expr begin_name begin_name test bean gui end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_call begin_name get gui from cache end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name comp end_name begin_operator DOT end_operator begin_name clear gui end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name test element end_name end_type begin_name node end_name begin_init begin_expr begin_call begin_name begin_name comp end_name begin_operator DOT end_operator begin_name create test element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name nodes to gui end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name node end_name end_expr end_argument begin_argument begin_expr begin_name comp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name node end_name end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no class def found error end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name j option pane end_name begin_operator DOT end_operator begin_name show message dialog end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name j option pane end_name begin_operator DOT end_operator begin_name error message end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw begin_comment probably a missing jar end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name instantiation exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal access exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set headers end_name begin_parameter_list begin_param begin_decl begin_type begin_name url connection end_name end_type begin_name connection end_name end_decl end_param begin_param begin_decl begin_type begin_name http sampler base end_name end_type begin_name sampler end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_comment get the encoding to use for the request end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name content encoding end_name begin_init begin_expr begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name get content encoding end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name content encoding end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name content encoding end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name content encoding end_name begin_operator EQ end_operator begin_name encoding end_name end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name content length end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name http file arg end_name end_type begin_name begin_name files end_name begin_index end_index end_name begin_init begin_expr begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name get http files end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment check if we should do a multipart form data or an end_comment begin_comment application x www form urlencoded post request end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name get use multipart for post end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment set the content type end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name connection end_name begin_operator DOT end_operator begin_name set request property end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name multipart form data end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name get boundary end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment begin_comment write the form section end_comment begin_decl_stmt begin_decl begin_type begin_name byte array output stream end_name end_type begin_name bos end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name byte array output stream end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment first the multipart start divider end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get multipart divider end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment add any parameters end_comment begin_decl_stmt begin_decl begin_type begin_name property iterator end_name end_type begin_name args end_name begin_init begin_expr begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name get arguments end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name http argument end_name end_type begin_name arg end_name begin_init begin_expr begin_operator LPAR end_operator begin_name http argument end_name begin_operator RPAR end_operator begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get object value end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name parameter name end_name begin_init begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name is skippable end_name end_name begin_argument_list begin_argument begin_expr begin_name parameter name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_comment end the previous multipart end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name crlf end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment write multipart for parameter end_comment begin_expr_stmt begin_expr begin_call begin_name write form multipart end_name begin_argument_list begin_argument begin_expr begin_name bos end_name end_expr end_argument begin_argument begin_expr begin_name parameter name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name content encoding end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name get do browser compatible multipart end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_comment if there are any files we need to end the previous multipart end_comment begin_if begin_condition begin_expr begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_comment end the previous multipart end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name crlf end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment keep the content will be sent later end_comment begin_expr_stmt begin_expr begin_name form data post body end_name begin_operator EQ end_operator begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name to byte array end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name content length end_name begin_operator EQ end_operator begin_name begin_name form data post body end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_expr_stmt begin_comment now we just construct any multipart for the files end_comment begin_comment we only construct the file multipart start we do not write end_comment begin_comment the actual file content end_comment begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name http file arg end_name end_type begin_name file end_name begin_init begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_comment write multipart for file end_comment begin_expr_stmt begin_expr begin_name bos end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name byte array output stream end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write start file multipart end_name begin_argument_list begin_argument begin_expr begin_name bos end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get param name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name header end_name begin_init begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment if this is not the first file we can t write its header now end_comment begin_comment for simplicity we always save it even if there is only one file end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name set header end_name end_name begin_argument_list begin_argument begin_expr begin_name header end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name content length end_name begin_operator UNP end_operator begin_call begin_name begin_name header end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment add also the length of the file content end_comment begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name upload file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name content length end_name begin_operator UNP end_operator begin_call begin_name begin_name upload file end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment and the end of the file multipart end_comment begin_expr_stmt begin_expr begin_name content length end_name begin_operator UNP end_operator begin_call begin_name get file multipart end divider end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_name length end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name i end_name begin_operator PLUS end_operator begin_operator LT end_operator begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name content length end_name begin_operator UNP end_operator begin_name begin_name crlf end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_expr_stmt end_block end_then end_if end_block end_for begin_comment add the end of multipart end_comment begin_expr_stmt begin_expr begin_name content length end_name begin_operator UNP end_operator begin_call begin_name get multipart end divider end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_name length end_name end_expr end_expr_stmt begin_comment set the content length end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name connection end_name begin_operator DOT end_operator begin_name set request property end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content length end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name long end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list begin_argument begin_expr begin_name content length end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment make the connection ready for sending post data end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name connection end_name begin_operator DOT end_operator begin_name set do output end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name connection end_name begin_operator DOT end_operator begin_name set do input end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment check if the header manager had a content type header end_comment begin_comment this allows the user to specify his own content type for a post request end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name content type header end_name begin_init begin_expr begin_call begin_name begin_name connection end_name begin_operator DOT end_operator begin_name get request property end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name has content type header end_name begin_init begin_expr begin_name content type header end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name content type header end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_init end_decl end_decl_stmt begin_comment if there are no arguments we can send a file as the body of the request end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name get arguments end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name get arguments end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get argument count end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name get send file as post body end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment we re sure that there is one file because of end_comment begin_comment get send file as post body method s return value end_comment begin_decl_stmt begin_decl begin_type begin_name http file arg end_name end_type begin_name file end_name begin_init begin_expr begin_name begin_name files end_name begin_index begin_expr end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name has content type header end_name end_expr end_condition begin_then begin_block begin_comment allow the mimetype of the file to control the content type end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name connection end_name begin_operator DOT end_operator begin_name set request property end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name connection end_name begin_operator DOT end_operator begin_name set request property end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name application x www form urlencoded end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_comment create the content length we are going to write end_comment begin_decl_stmt begin_decl begin_type begin_name file end_name end_type begin_name input file end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name content length end_name begin_operator EQ end_operator begin_call begin_name begin_name input file end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment we create the post body content now so we know the size end_comment begin_decl_stmt begin_decl begin_type begin_name byte array output stream end_name end_type begin_name bos end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name byte array output stream end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment if none of the arguments have a name specified we end_comment begin_comment just send all the values as the post body end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name post body end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name get send parameter values as post body end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment set the content type end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name has content type header end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name connection end_name begin_operator DOT end_operator begin_name set request property end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name application x www form urlencoded end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment it is a normal post request with parameter names and values end_comment begin_expr_stmt begin_expr begin_name post body end_name begin_operator EQ end_operator begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name get query string end_name end_name begin_argument_list begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment allow the mimetype of the file to control the content type end_comment begin_comment this is not obvious in gui if you are not uploading any files end_comment begin_comment but just sending the content of nameless parameters end_comment begin_comment todo needs a multiple file upload scenerio end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name has content type header end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name http file arg end_name end_type begin_name file end_name begin_init begin_expr begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator begin_operator QM end_operator begin_name begin_name files end_name begin_index begin_expr end_expr end_index end_name begin_operator DP end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name file end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name connection end_name begin_operator DOT end_operator begin_name set request property end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name connection end_name begin_operator DOT end_operator begin_name set request property end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name application x www form urlencoded end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_comment just append all the parameter values and use that as the post body end_comment begin_decl_stmt begin_decl begin_type begin_name string builder end_name end_type begin_name post body buffer end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string builder end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name property iterator end_name end_type begin_name args end_name begin_init begin_expr begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name get arguments end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name http argument end_name end_type begin_name arg end_name begin_init begin_expr begin_operator LPAR end_operator begin_name http argument end_name begin_operator RPAR end_operator begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get object value end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name post body buffer end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get encoded value end_name end_name begin_argument_list begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_name post body end_name begin_operator EQ end_operator begin_call begin_name begin_name post body buffer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name post body end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment keep the content will be sent later end_comment begin_expr_stmt begin_expr begin_name form data url encoded end_name begin_operator EQ end_operator begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name to byte array end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name content length end_name begin_operator EQ end_operator begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name to byte array end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_name length end_name end_expr end_expr_stmt end_block end_else end_if begin_comment set the content length end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name connection end_name begin_operator DOT end_operator begin_name set request property end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content length end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name long end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list begin_argument begin_expr begin_name content length end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment make the connection ready for sending post data end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name connection end_name begin_operator DOT end_operator begin_name set do output end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block 
 begin_comment finds all configuration objects of the given class applicable to the recorded samplers that is ul li all such elements directly within the http s test script recorder these have the highest priority li all such elements directly within the target controller higher priority or directly within any containing controller lower priority including the test plan itself lowest priority ul param my target tree node for the recording target controller param my class class of the elements to be found param ascending true if returned elements should be ordered in ascending priority false if they should be in descending priority return a collection of applicable objects of the given class end_comment begin_type begin_specifier end_specifier begin_name begin_name collection end_name begin_argument_list begin_argument begin_name end_name end_argument end_argument_list end_name end_type begin_name find applicable elements end_name begin_parameter_list begin_param begin_decl begin_type begin_name j meter tree node end_name end_type begin_name my target end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name class end_name begin_argument_list begin_argument begin_name end_name begin_extends begin_name test element end_name end_extends end_argument end_argument_list end_name end_type begin_name my class end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name ascending end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name j meter tree model end_name end_type begin_name tree model end_name begin_init begin_expr begin_call begin_name begin_name gui package end_name begin_operator DOT end_operator begin_name get instance end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get tree model end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name linked list end_name begin_argument_list begin_argument begin_name test element end_name end_argument end_argument_list end_name end_type begin_name elements end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name linked list end_name begin_argument_list begin_argument begin_name test element end_name end_argument end_argument_list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment look for elements directly within the http proxy end_comment begin_decl_stmt begin_decl begin_type begin_name begin_name enumeration end_name begin_argument_list begin_argument begin_name end_name end_argument end_argument_list end_name end_type begin_name kids end_name begin_init begin_expr begin_call begin_name begin_name tree model end_name begin_operator DOT end_operator begin_name get node of end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name children end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name kids end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name j meter tree node end_name end_type begin_name sub node end_name begin_init begin_expr begin_operator LPAR end_operator begin_name j meter tree node end_name begin_operator RPAR end_operator begin_call begin_name begin_name kids end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name sub node end_name begin_operator DOT end_operator begin_name is enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name test element end_name end_type begin_name element end_name begin_init begin_expr begin_operator LPAR end_operator begin_name test element end_name begin_operator RPAR end_operator begin_call begin_name begin_name sub node end_name begin_operator DOT end_operator begin_name get user object end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name my class end_name begin_operator DOT end_operator begin_name is instance end_name end_name begin_argument_list begin_argument begin_expr begin_name element end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name ascending end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name elements end_name begin_operator DOT end_operator begin_name add first end_name end_name begin_argument_list begin_argument begin_expr begin_name element end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name elements end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name element end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if end_block end_then end_if end_block end_while begin_comment look for arguments elements in the target controller or higher up end_comment begin_for begin_init begin_decl begin_type begin_name j meter tree node end_name end_type begin_name controller end_name begin_init begin_expr begin_name my target end_name end_expr end_init end_decl end_init begin_condition begin_expr begin_name controller end_name begin_operator UNP end_operator end_expr end_condition begin_incr begin_expr begin_name controller end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name j meter tree node end_name begin_operator RPAR end_operator begin_call begin_name begin_name controller end_name begin_operator DOT end_operator begin_name get parent end_name end_name begin_argument_list end_argument_list end_call end_expr end_incr begin_block begin_expr_stmt begin_expr begin_name kids end_name begin_operator EQ end_operator begin_call begin_name begin_name controller end_name begin_operator DOT end_operator begin_name children end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name kids end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name j meter tree node end_name end_type begin_name sub node end_name begin_init begin_expr begin_operator LPAR end_operator begin_name j meter tree node end_name begin_operator RPAR end_operator begin_call begin_name begin_name kids end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name sub node end_name begin_operator DOT end_operator begin_name is enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name test element end_name end_type begin_name element end_name begin_init begin_expr begin_operator LPAR end_operator begin_name test element end_name begin_operator RPAR end_operator begin_call begin_name begin_name sub node end_name begin_operator DOT end_operator begin_name get user object end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name my class end_name begin_operator DOT end_operator begin_name is instance end_name end_name begin_argument_list begin_argument begin_expr begin_name element end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name element end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name ascending end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name elements end_name begin_operator DOT end_operator begin_name add first end_name end_name begin_argument_list begin_argument begin_expr begin_name element end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name elements end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name element end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_comment special case for the test plan s arguments sub element end_comment begin_if begin_condition begin_expr begin_name element end_name begin_operator UNP end_operator begin_name test plan end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name test plan end_name end_type begin_name tp end_name begin_init begin_expr begin_operator LPAR end_operator begin_name test plan end_name begin_operator RPAR end_operator begin_name element end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name arguments end_name end_type begin_name args end_name begin_init begin_expr begin_call begin_name begin_name tp end_name begin_operator DOT end_operator begin_name get arguments end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name my class end_name begin_operator DOT end_operator begin_name is instance end_name end_name begin_argument_list begin_argument begin_expr begin_name args end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name ascending end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name elements end_name begin_operator DOT end_operator begin_name add first end_name end_name begin_argument_list begin_argument begin_expr begin_name args end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name elements end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_name args end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if end_block end_then end_if end_block end_then end_if end_block end_while end_block end_for begin_return begin_expr begin_name elements end_name end_expr end_return end_block 
 begin_comment todo convert to work more like upgrade properties name updater java special processing is carried out for the header class the string property test element name is converted to header name for example element prop name user agent element type org apache jmeter protocol http control header string prop name header value mozilla 2 f 4 0 28 compatible 3 b msie 5 5 3 b windows 98 29 string prop string prop name test element name user agent string prop element prop becomes element prop name user agent element type org apache jmeter protocol http control header string prop name header value mozilla 2 f 4 0 28 compatible 3 b msie 5 5 3 b windows 98 29 string prop string prop name header name user agent string prop element prop end_comment begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name object end_name end_type begin_name unmarshal end_name begin_parameter_list begin_param begin_decl begin_type begin_name hierarchical stream reader end_name end_type begin_name reader end_name end_decl end_param begin_param begin_decl begin_type begin_name unmarshalling context end_name end_type begin_name context end_name end_decl end_param end_parameter_list begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name test element property end_name end_type begin_name prop end_name begin_init begin_expr begin_operator LPAR end_operator begin_name test element property end_name begin_operator RPAR end_operator begin_call begin_name create collection end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name context end_name begin_operator DOT end_operator begin_name get required type end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name prop end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name conversion help end_name begin_operator DOT end_operator begin_name decode end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name get attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name conversion help end_name begin_operator DOT end_operator begin_name att name end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name element end_name begin_init begin_expr begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name get attribute end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name conversion help end_name begin_operator DOT end_operator begin_name att element type end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name is header end_name begin_init begin_expr begin_call begin_name begin_name header classname end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name element end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name prop end_name begin_operator DOT end_operator begin_name set object value end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name mapper end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name real class end_name begin_argument_list begin_argument begin_expr begin_name element end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name new instance end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment always decode end_comment begin_decl_stmt begin_decl begin_type begin_name test element end_name end_type begin_name te end_name begin_init begin_expr begin_operator LPAR end_operator begin_name test element end_name begin_operator RPAR end_operator begin_call begin_name begin_name prop end_name begin_operator DOT end_operator begin_name get object value end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment no need to check version just process the attributes if present end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name conversion help end_name begin_operator DOT end_operator begin_name restore special properties end_name end_name begin_argument_list begin_argument begin_expr begin_name te end_name end_expr end_argument begin_argument begin_expr begin_name reader end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name has more children end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name move down end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name j meter property end_name end_type begin_name sub prop end_name begin_init begin_expr begin_operator LPAR end_operator begin_name j meter property end_name begin_operator RPAR end_operator begin_call begin_name read item end_name begin_argument_list begin_argument begin_expr begin_name reader end_name end_expr end_argument begin_argument begin_expr begin_name context end_name end_expr end_argument begin_argument begin_expr begin_name prop end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name sub prop end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment could be null if it has been deleted via name updater end_comment begin_if begin_condition begin_expr begin_name is header end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr begin_call begin_name begin_name sub prop end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name test element end_name begin_operator DOT end_operator begin_name name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sub prop end_name begin_operator DOT end_operator begin_name set name end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment begin_comment must be same as header hname but that is built end_comment begin_comment later end_comment end_block end_then end_if end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name prop end_name begin_operator DOT end_operator begin_name add property end_name end_name begin_argument_list begin_argument begin_expr begin_name sub prop end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name move up end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_return begin_expr begin_name prop end_name end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name instantiation exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_operator UNP end_operator begin_call begin_name test element property end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name config test element end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return begin_comment non nls 1 end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal access exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_operator UNP end_operator begin_call begin_name test element property end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name config test element end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return begin_comment non nls 1 end_comment end_block end_catch end_try end_block 
 begin_comment main processing method for the proxy object end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name run end_name begin_parameter_list end_parameter_list begin_block begin_comment check which http sampler class we should use end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name http sampler name end_name begin_init begin_expr begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name get sampler type name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name http request hdr end_name end_type begin_name request end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name http request hdr end_name begin_argument_list begin_argument begin_expr begin_name http sampler name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name sample result end_name end_type begin_name result end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name header manager end_name end_type begin_name headers end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name http sampler base end_name end_type begin_name sampler end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_comment now parse initial request in case it is a connect request end_comment begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name ba end_name begin_init begin_expr begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name parse end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name buffered input stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name client socket end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name begin_name ba end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name j meter exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_name ba end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name out stream client end_name begin_operator EQ end_operator begin_call begin_name begin_name client socket end_name begin_operator DOT end_operator begin_name get output stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name get method end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name starts with end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name connect end_name end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name out stream client end_name begin_operator UNP end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment write a ok reponse to browser to engage ssl exchange end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name out stream client end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get bytes end_name begin_argument_list begin_argument begin_expr begin_name begin_name sample result end_name begin_operator DOT end_operator begin_name default http encoding end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name out stream client end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment with ssl request url is host port without https or path end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name param end_name begin_init begin_expr begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name get url end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name split end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment non nls 1 end_comment begin_if begin_condition begin_expr begin_name begin_name param end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name param end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name client socket end_name begin_operator EQ end_operator begin_call begin_name start ssl end_name begin_argument_list begin_argument begin_expr begin_name client socket end_name end_expr end_argument begin_argument begin_expr begin_name begin_name param end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment should not happen but if it does we don t want to continue end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name get url end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name j meter exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_else end_if begin_comment re parse now it s the http request over ssl end_comment begin_try begin_block begin_expr_stmt begin_expr begin_name ba end_name begin_operator EQ end_operator begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name parse end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name buffered input stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name client socket end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_comment most likely this is because of a certificate error end_comment begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name url end_name begin_init begin_expr begin_name begin_name param end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator begin_operator QM end_operator begin_operator PLUS end_operator begin_name begin_name param end_name begin_index begin_expr end_expr end_index end_name begin_operator PLUS end_operator begin_operator DP end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name url end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name ioe end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment won t work write error to client http reply hdr form internal error end_comment begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name generate error result end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name ioe end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment generate result if nec and populate it end_comment begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name j meter exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_name ba end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name ba end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name get url end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name j meter exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name sampler creator end_name end_type begin_name sampler creator end_name begin_init begin_expr begin_call begin_name begin_name samplerfactory end_name begin_operator DOT end_operator begin_name get sampler creator end_name end_name begin_argument_list begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name page encodings end_name end_expr end_argument begin_argument begin_expr begin_name form encodings end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name sampler end_name begin_operator EQ end_operator begin_call begin_name begin_name sampler creator end_name begin_operator DOT end_operator begin_name create and populate sampler end_name end_name begin_argument_list begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name page encodings end_name end_expr end_argument begin_argument begin_expr begin_name form encodings end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment create a header manager to ensure that the browsers headers are captured and sent to the server end_comment begin_expr_stmt begin_expr begin_name headers end_name begin_operator EQ end_operator begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name get header manager end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name set header manager end_name end_name begin_argument_list begin_argument begin_expr begin_name headers end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name thread started end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment needed for http sampler 2 end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name get method end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name get url end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name sample end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment find the page encoding and possibly encodings for forms in the page end_comment begin_comment in the response from the web server end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name page encoding end_name begin_init begin_expr begin_call begin_name add page encoding end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name add form encodings end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_name page encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write to client end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name buffered output stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name client socket end_name begin_operator DOT end_operator begin_name get output stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sampler creator end_name begin_operator DOT end_operator begin_name post process sampler end_name end_name begin_argument_list begin_argument begin_expr begin_name sampler end_name end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name j meter exception end_name end_type begin_name jme end_name end_decl end_param end_parameter_list begin_block begin_comment ignored already processed end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name unknown host exception end_name end_type begin_name uhe end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name uhe end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write error to client end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name http reply hdr end_name begin_operator DOT end_operator begin_name form server not found end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name generate error result end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name uhe end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment generate result if nec and populate it end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal argument exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write error to client end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name http reply hdr end_name begin_operator DOT end_operator begin_name form not implemented end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name generate error result end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment generate result if nec and populate it end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write error to client end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name http reply hdr end_name begin_operator DOT end_operator begin_name form internal error end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name generate error result end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment generate result if nec and populate it end_comment end_block end_catch begin_finally begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name sampler end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_comment we don t want to store any cookies in the generated test plan end_comment begin_if begin_condition begin_expr begin_name headers end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name headers end_name begin_operator DOT end_operator begin_name remove header named end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header cookie end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment always remove cookies end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name headers end_name begin_operator DOT end_operator begin_name remove header named end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header authorization end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment always remove authorization end_comment begin_comment remove additional headers end_comment begin_for begin_init begin_decl begin_type begin_name string end_name end_type begin_name hdr end_name begin_range begin_expr begin_name headers to remove end_name end_expr end_range end_decl end_init begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name headers end_name begin_operator DOT end_operator begin_name remove header named end_name end_name begin_argument_list begin_argument begin_expr begin_name hdr end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if begin_if begin_condition begin_expr begin_name result end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_comment deliver sampler allows sampler to be null but result must not be null end_comment begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name deliver sampler end_name end_name begin_argument_list begin_argument begin_expr begin_name sampler end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name test element end_name begin_index end_index end_name begin_block begin_expr begin_name capture http headers end_name begin_operator QM end_operator begin_name headers end_name begin_operator DP end_operator end_expr end_block end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name client socket end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_if begin_condition begin_expr begin_name sampler end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name thread finished end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment needed for http sampler 2 end_comment end_block end_then end_if end_block end_finally end_try end_block 
 begin_comment get an instance of the specified j meter gui component class if an instance of the gui class has previously been created and it is not marked as an link unshared component that shared instance will be returned otherwise a new instance of the component will be created and shared components will be cached for future retrieval param gui class the fully qualified class name of the gui component this class must implement j meter gui component param test class the fully qualified class name of the test elements edited by this gui component this class must implement test element return an instance of the specified class throws instantiation exception if an instance of the object cannot be created throws illegal access exception if access rights do not allow the default constructor to be called throws class not found exception if the specified gui class cannot be found end_comment begin_type begin_specifier end_specifier begin_name j meter gui component end_name end_type begin_name get gui from cache end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name class end_name begin_argument_list begin_argument begin_name end_name end_argument end_argument_list end_name end_type begin_name gui class end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name class end_name begin_argument_list begin_argument begin_name end_name end_argument end_argument_list end_name end_type begin_name test class end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name instantiation exception end_name end_expr end_argument begin_argument begin_expr begin_name illegal access exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name j meter gui component end_name end_type begin_name comp end_name end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name gui class end_name begin_operator EQT end_operator begin_name begin_name test bean gui end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_call begin_name begin_name test bean gu is end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name test class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name comp end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name test bean gui end_name begin_argument_list begin_argument begin_expr begin_name test class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test bean gu is end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name test class end_name end_expr end_argument begin_argument begin_expr begin_name comp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_call begin_name begin_name guis end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name gui class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name comp end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name j meter gui component end_name begin_operator RPAR end_operator begin_call begin_name begin_name gui class end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_name comp end_name begin_operator UNP end_operator begin_name unshared component end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name guis end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name gui class end_name end_expr end_argument begin_argument begin_expr begin_name comp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block end_else end_if begin_return begin_expr begin_name comp end_name end_expr end_return end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name sample stopped end_name begin_parameter_list begin_param begin_decl begin_type begin_name sample event end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment helper method to save the cache entry end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name set cache end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name last modified end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name cache control end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name expires end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name etag end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name url end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name date end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name last modified end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name cache control end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name expires end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name etag end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name url end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name date end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name date end_name end_type begin_name expires date end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment i e not using expires end_comment begin_if begin_condition begin_expr begin_name use expires end_name end_expr end_condition begin_then begin_block begin_comment check that we are processing expires cache control end_comment begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name max age end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name expires end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_name expires date end_name begin_operator EQ end_operator begin_call begin_name begin_name date util end_name begin_operator DOT end_operator begin_name parse date end_name end_name begin_argument_list begin_argument begin_expr begin_name expires end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name date parse exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name expires end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name expires date end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name date end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment invalid dates must be treated as expired end_comment end_block end_catch end_try end_block end_then end_if begin_comment if no cache is present ensure that expires date remains null which forces revalidation end_comment begin_if begin_condition begin_expr begin_name cache control end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name cache control end_name begin_operator DOT end_operator begin_name contains end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment the max age directive overrides the expires header end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name cache control end_name begin_operator DOT end_operator begin_name contains end_name end_name begin_argument_list begin_argument begin_expr begin_name max age end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name max age in secs end_name begin_init begin_expr begin_call begin_name begin_name long end_name begin_operator DOT end_operator begin_name parse long end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name cache control end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name cache control end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr begin_name max age end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_call begin_name begin_name max age end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name split end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_index begin_expr end_expr end_index end_expr end_argument begin_comment bug 51932 allow for optional trailing attributes end_comment end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name expires date end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name date end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_name max age in secs end_name begin_operator STAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name expires end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment no max age no expires end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name is empty end_name end_name begin_argument_list begin_argument begin_expr begin_name last modified end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name string utils end_name begin_operator DOT end_operator begin_name is empty end_name end_name begin_argument_list begin_argument begin_expr begin_name date end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name date end_name end_type begin_name response date end_name begin_init begin_expr begin_call begin_name begin_name date util end_name begin_operator DOT end_operator begin_name parse date end_name end_name begin_argument_list begin_argument begin_expr begin_name date end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name date end_name end_type begin_name last modified as date end_name begin_init begin_expr begin_call begin_name begin_name date util end_name begin_operator DOT end_operator begin_name parse date end_name end_name begin_argument_list begin_argument begin_expr begin_name last modified end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment see https developer mozilla org en http caching faq end_comment begin_comment see http www ietf org rfc rfc 2616 txt 13 2 4 end_comment begin_expr_stmt begin_expr begin_name expires date end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name date end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_call begin_name begin_name math end_name begin_operator DOT end_operator begin_name round end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name response date end_name begin_operator DOT end_operator begin_name get time end_name end_name begin_argument_list end_argument_list end_call begin_operator MINUS end_operator begin_call begin_name begin_name last modified as date end_name begin_operator DOT end_operator begin_name get time end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator STAR end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name date parse exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment date or last modified may be null or in bad format end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is warn enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name last modified end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name cache control end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name expires end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name etag end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name url end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name date end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment todo can t see anything in spec end_comment begin_expr_stmt begin_expr begin_name expires date end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name date end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_name one year ms end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_then begin_else begin_block begin_comment todo can t see anything in spec end_comment begin_expr_stmt begin_expr begin_name expires date end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name date end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_name one year ms end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if end_else end_if begin_comment else expires date computed in expires null condition is used end_comment end_block end_then end_if end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name get cache end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name put end_name begin_argument_list begin_argument begin_expr begin_name url end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name cache entry end_name begin_argument_list begin_argument begin_expr begin_name last modified end_name end_expr end_argument begin_argument begin_expr begin_name expires date end_name end_expr end_argument begin_argument begin_expr begin_name etag end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment accumulates the sample in two sample result objects one for running totals and the other for deltas see org apache jmeter samplers sample listener sample occurred org apache jmeter samplers sample event end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name sample occurred end_name begin_parameter_list begin_param begin_decl begin_type begin_name sample event end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name sample result end_name end_type begin_name s end_name begin_init begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get result end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name now end_name begin_init begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name current time millis end_name end_name begin_argument_list end_argument_list end_call begin_operator SLASH end_operator end_expr end_init end_decl end_decl_stmt begin_comment in seconds end_comment begin_decl_stmt begin_decl begin_type begin_name running sample end_name end_type begin_name my delta end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name running sample end_name end_type begin_name my total end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name report now end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_synchronized begin_expr begin_name my totals end_name end_expr begin_block begin_if begin_condition begin_expr begin_name s end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name my totals end_name begin_operator DOT end_operator begin_name delta end_name begin_operator DOT end_operator begin_name add sample end_name end_name begin_argument_list begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_name now end_name begin_operator GT end_operator begin_name begin_name my totals end_name begin_operator DOT end_operator begin_name last end_name end_name begin_operator PLUS end_operator begin_name interval window end_name begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name now end_name begin_operator UNP end_operator begin_name interval end_name begin_operator LE end_operator begin_name interval window end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name report now end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_comment copy the data to minimise the synch time end_comment begin_expr_stmt begin_expr begin_name my delta end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name running sample end_name begin_argument_list begin_argument begin_expr begin_name begin_name my totals end_name begin_operator DOT end_operator begin_name delta end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name my totals end_name begin_operator DOT end_operator begin_name move delta end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name my total end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name running sample end_name begin_argument_list begin_argument begin_expr begin_name begin_name my totals end_name begin_operator DOT end_operator begin_name total end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name my totals end_name begin_operator DOT end_operator begin_name last end_name end_name begin_operator EQ end_operator begin_name now end_name end_expr end_expr_stmt begin_comment stop double reporting end_comment end_block end_then end_if end_block end_synchronized begin_if begin_condition begin_expr begin_name report now end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name str end_name end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name str end_name begin_operator EQ end_operator begin_call begin_name format end_name begin_argument_list begin_argument begin_expr begin_name my name end_name end_expr end_argument begin_argument begin_expr begin_name my delta end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name tolog end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name info end_name end_name begin_argument_list begin_argument begin_expr begin_name str end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name toout end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name str end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment only if we have updated them end_comment begin_if begin_condition begin_expr begin_name my total end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name my delta end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name my total end_name begin_operator DOT end_operator begin_name get num samples end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name my delta end_name begin_operator DOT end_operator begin_name get num samples end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name str end_name begin_operator EQ end_operator begin_call begin_name format end_name begin_argument_list begin_argument begin_expr begin_name my name end_name end_expr end_argument begin_argument begin_expr begin_name my total end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name tolog end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name info end_name end_name begin_argument_list begin_argument begin_expr begin_name str end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name toout end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name system end_name begin_operator DOT end_operator begin_name out end_name begin_operator DOT end_operator begin_name println end_name end_name begin_argument_list begin_argument begin_expr begin_name str end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block end_then end_if end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name subtract node end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment main processing method for the proxy object end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name run end_name begin_parameter_list end_parameter_list begin_block begin_comment check which http sampler class we should use end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name http sampler name end_name begin_init begin_expr begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name get sampler type name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name http request hdr end_name end_type begin_name request end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name http request hdr end_name begin_argument_list begin_argument begin_expr begin_name http sampler name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name sample result end_name end_type begin_name result end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name header manager end_name end_type begin_name headers end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name http sampler base end_name end_type begin_name sampler end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_comment now parse initial request in case it is a connect request end_comment begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name ba end_name begin_init begin_expr begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name parse end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name buffered input stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name client socket end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name begin_name ba end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name j meter exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_name ba end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name out stream client end_name begin_operator EQ end_operator begin_call begin_name begin_name client socket end_name begin_operator DOT end_operator begin_name get output stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name get method end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name starts with end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name connect end_name end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name out stream client end_name begin_operator UNP end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment write a ok reponse to browser to engage ssl exchange end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name out stream client end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get bytes end_name begin_argument_list begin_argument begin_expr begin_name begin_name sample result end_name begin_operator DOT end_operator begin_name default http encoding end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name out stream client end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment with ssl request url is host port without https or path end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name param end_name begin_init begin_expr begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name get url end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name split end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment non nls 1 end_comment begin_if begin_condition begin_expr begin_name begin_name param end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name param end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name client socket end_name begin_operator EQ end_operator begin_call begin_name start ssl end_name begin_argument_list begin_argument begin_expr begin_name client socket end_name end_expr end_argument begin_argument begin_expr begin_name begin_name param end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment should not happen but if it does we don t want to continue end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name get url end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name j meter exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_else end_if begin_comment re parse now it s the http request over ssl end_comment begin_try begin_block begin_expr_stmt begin_expr begin_name ba end_name begin_operator EQ end_operator begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name parse end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name buffered input stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name client socket end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_comment most likely this is because of a certificate error end_comment begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name url end_name begin_init begin_expr begin_name begin_name param end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator begin_operator QM end_operator begin_operator PLUS end_operator begin_name begin_name param end_name begin_index begin_expr end_expr end_index end_name begin_operator PLUS end_operator begin_operator DP end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name url end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name ioe end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment won t work write error to client http reply hdr form internal error end_comment begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name generate error result end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name ioe end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment generate result if nec and populate it end_comment begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name j meter exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_name ba end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name ba end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name get url end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name j meter exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name sampler creator end_name end_type begin_name sampler creator end_name begin_init begin_expr begin_call begin_name begin_name samplerfactory end_name begin_operator DOT end_operator begin_name get sampler creator end_name end_name begin_argument_list begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name page encodings end_name end_expr end_argument begin_argument begin_expr begin_name form encodings end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name sampler end_name begin_operator EQ end_operator begin_call begin_name begin_name sampler creator end_name begin_operator DOT end_operator begin_name create and populate sampler end_name end_name begin_argument_list begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name page encodings end_name end_expr end_argument begin_argument begin_expr begin_name form encodings end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment create a header manager to ensure that the browsers headers are captured and sent to the server end_comment begin_expr_stmt begin_expr begin_name headers end_name begin_operator EQ end_operator begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name get header manager end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name set header manager end_name end_name begin_argument_list begin_argument begin_expr begin_name headers end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name thread started end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment needed for http sampler 2 end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name get method end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name get url end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name sample end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment find the page encoding and possibly encodings for forms in the page end_comment begin_comment in the response from the web server end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name page encoding end_name begin_init begin_expr begin_call begin_name add page encoding end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name add form encodings end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_name page encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write to client end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name buffered output stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name client socket end_name begin_operator DOT end_operator begin_name get output stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sampler creator end_name begin_operator DOT end_operator begin_name post process sampler end_name end_name begin_argument_list begin_argument begin_expr begin_name sampler end_name end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name j meter exception end_name end_type begin_name jme end_name end_decl end_param end_parameter_list begin_block begin_comment ignored already processed end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name unknown host exception end_name end_type begin_name uhe end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name uhe end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write error to client end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name http reply hdr end_name begin_operator DOT end_operator begin_name form server not found end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name generate error result end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name uhe end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment generate result if nec and populate it end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal argument exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write error to client end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name http reply hdr end_name begin_operator DOT end_operator begin_name form not implemented end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name generate error result end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment generate result if nec and populate it end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write error to client end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name http reply hdr end_name begin_operator DOT end_operator begin_name form internal error end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name generate error result end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment generate result if nec and populate it end_comment end_block end_catch begin_finally begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name sampler end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_comment we don t want to store any cookies in the generated test plan end_comment begin_if begin_condition begin_expr begin_name headers end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name headers end_name begin_operator DOT end_operator begin_name remove header named end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header cookie end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment always remove cookies end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name headers end_name begin_operator DOT end_operator begin_name remove header named end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header authorization end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment always remove authorization end_comment begin_comment remove additional headers end_comment begin_for begin_init begin_decl begin_type begin_name string end_name end_type begin_name hdr end_name begin_range begin_expr begin_name headers to remove end_name end_expr end_range end_decl end_init begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name headers end_name begin_operator DOT end_operator begin_name remove header named end_name end_name begin_argument_list begin_argument begin_expr begin_name hdr end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if begin_if begin_condition begin_expr begin_name result end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_comment deliver sampler allows sampler to be null but result must not be null end_comment begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name deliver sampler end_name end_name begin_argument_list begin_argument begin_expr begin_name sampler end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name test element end_name begin_index end_index end_name begin_block begin_expr begin_name capture http headers end_name begin_operator QM end_operator begin_name headers end_name begin_operator DP end_operator end_expr end_block end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name client socket end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_if begin_condition begin_expr begin_name sampler end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name thread finished end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment needed for http sampler 2 end_comment end_block end_then end_if end_block end_finally end_try end_block 
 begin_comment see java beans property editor get value see org apache jmeter testelement property j meter property end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name object end_name end_type begin_name get value end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name text end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name gui editor end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name value end_name end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name text end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name accepts null end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name should never happen end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name value end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_if begin_condition begin_expr begin_name accepts expressions end_name begin_operator UNP end_operator begin_call begin_name is expression end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name value end_name begin_operator EQ end_operator begin_name text end_name end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment not an expression isn t or can t be not null end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name accepts other end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name is a tag end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name should never happen end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_try begin_block begin_comment bug 44314 number field does not seem to accept end_comment begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name type editor end_name begin_operator DOT end_operator begin_name set as text end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name number format exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name text end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_comment non nls 1 end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name type editor end_name begin_operator DOT end_operator begin_name set as text end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name should never happen end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_catch end_try end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal argument exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name should never happen end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_expr_stmt begin_expr begin_name value end_name begin_operator EQ end_operator begin_call begin_name begin_name type editor end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_else end_if begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator LPAR end_operator begin_name value end_name begin_operator UNP end_operator begin_operator QM end_operator begin_call begin_name begin_name value end_name begin_operator DOT end_operator begin_name get class end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get name end_name begin_argument_list end_argument_list end_call begin_operator DP end_operator begin_operator RPAR end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_return begin_expr begin_name value end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name test parse arguments lf end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name query string end_name begin_init begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name multipart url config end_name end_type begin_name muc end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name multipart url config end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name muc end_name begin_operator DOT end_operator begin_name parse arguments end_name end_name begin_argument_list begin_argument begin_expr begin_name query string end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name http file args end_name end_type begin_name files end_name begin_init begin_expr begin_call begin_name begin_name muc end_name begin_operator DOT end_operator begin_name get http file args end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name get http file arg count end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name http file arg end_name end_type begin_name file end_name begin_init begin_expr begin_operator LPAR end_operator begin_name http file arg end_name begin_operator RPAR end_operator begin_call begin_name begin_name files end_name begin_operator DOT end_operator begin_name iterator end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name next end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get object value end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get param name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name arguments end_name end_type begin_name args end_name begin_init begin_expr begin_call begin_name begin_name muc end_name begin_operator DOT end_operator begin_name get arguments end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name get argument count end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name argument end_name end_type begin_name arg end_name begin_init begin_expr begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name get argument end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name arg end_name begin_operator EQ end_operator begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name get argument end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name arg end_name begin_operator EQ end_operator begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name get argument end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment same as should never happen but provide a source exception param e the exception that helped identify the problem throws error always throws one end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name should never happen end_name begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name error end_name end_expr end_argument end_throws begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name error end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name set parameters end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name collection end_name begin_argument_list begin_argument begin_name compound variable end_name end_argument end_argument_list end_name end_type begin_name parameters end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name invalid variable exception end_name end_expr end_argument end_throws begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name parameters end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name values end_name begin_operator EQ end_operator begin_call begin_name begin_name parameters end_name begin_operator DOT end_operator begin_name to array end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_call begin_name begin_name parameters end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name compound variable end_name begin_operator RPAR end_operator begin_name begin_name values end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name execute end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name check parameter count end_name begin_argument_list begin_argument begin_expr begin_name parameters end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment need to reset the containers for repeated runs about the only way for functions to detect that a run is starting seems to be the set parameters call end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name file wrapper end_name begin_operator DOT end_operator begin_name clear all end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name marshal end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name source end_name end_decl end_param begin_param begin_decl begin_type begin_name hierarchical stream writer end_name end_type begin_name writer end_name end_decl end_param begin_param begin_decl begin_type begin_name marshalling context end_name end_type begin_name context end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name sample event end_name end_type begin_name evt end_name begin_init begin_expr begin_operator LPAR end_operator begin_name sample event end_name begin_operator RPAR end_operator begin_name source end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name res end_name begin_init begin_expr begin_call begin_name begin_name evt end_name begin_operator DOT end_operator begin_name get result end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name context end_name begin_operator DOT end_operator begin_name convert another end_name end_name begin_argument_list begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_type begin_name void end_name end_type begin_name remove matching cookies end_name begin_parameter_list begin_param begin_decl begin_type begin_name cookie end_name end_type begin_name new cookie end_name end_decl end_param end_parameter_list begin_block begin_comment scan for any matching cookies end_comment begin_decl_stmt begin_decl begin_type begin_name property iterator end_name end_type begin_name iter end_name begin_init begin_expr begin_call begin_name get cookies end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name cookie end_name end_type begin_name cookie end_name begin_init begin_expr begin_operator LPAR end_operator begin_name cookie end_name begin_operator RPAR end_operator begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get object value end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name cookie end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name match end_name begin_argument_list begin_argument begin_expr begin_name cookie end_name end_expr end_argument begin_argument begin_expr begin_name new cookie end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name new cookie end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name cookie end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name remove end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_while end_block 
 begin_comment get an instance of the specified j meter gui component class if an instance of the gui class has previously been created and it is not marked as an link unshared component that shared instance will be returned otherwise a new instance of the component will be created and shared components will be cached for future retrieval param gui class the fully qualified class name of the gui component this class must implement j meter gui component param test class the fully qualified class name of the test elements edited by this gui component this class must implement test element return an instance of the specified class throws instantiation exception if an instance of the object cannot be created throws illegal access exception if access rights do not allow the default constructor to be called throws class not found exception if the specified gui class cannot be found end_comment begin_type begin_specifier end_specifier begin_name j meter gui component end_name end_type begin_name get gui from cache end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name class end_name begin_argument_list begin_argument begin_name end_name end_argument end_argument_list end_name end_type begin_name gui class end_name end_decl end_param begin_param begin_decl begin_type begin_name begin_name class end_name begin_argument_list begin_argument begin_name end_name end_argument end_argument_list end_name end_type begin_name test class end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name instantiation exception end_name end_expr end_argument begin_argument begin_expr begin_name illegal access exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name j meter gui component end_name end_type begin_name comp end_name end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name gui class end_name begin_operator EQT end_operator begin_name begin_name test bean gui end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_call begin_name begin_name test bean gu is end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name test class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name comp end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name test bean gui end_name begin_argument_list begin_argument begin_expr begin_name test class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test bean gu is end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name test class end_name end_expr end_argument begin_argument begin_expr begin_name comp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_call begin_name begin_name guis end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name gui class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name comp end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name j meter gui component end_name begin_operator RPAR end_operator begin_call begin_name begin_name gui class end_name begin_operator DOT end_operator begin_name new instance end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_name comp end_name begin_operator UNP end_operator begin_name unshared component end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name guis end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name gui class end_name end_expr end_argument begin_argument begin_expr begin_name comp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block end_else end_if begin_return begin_expr begin_name comp end_name end_expr end_return end_block 
 begin_comment end method end_comment begin_comment takes an array of strings and a tokenizer character and returns a string of all the strings concatenated with the tokenizer string in between each one param splittee array of objects to be concatenated param split char object to unsplit the strings with param def default value to replace null values in array return array of all the tokens end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name unsplit end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name object end_name begin_index end_index end_name end_type begin_name splittee end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name split char end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name def end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string builder end_name end_type begin_name ret val end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string builder end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name count end_name begin_init begin_expr begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_operator PPLUS end_operator begin_name count end_name begin_operator LT end_operator begin_name begin_name splittee end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_block begin_if begin_condition begin_expr begin_name begin_name splittee end_name begin_index begin_expr begin_name count end_name end_expr end_index end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ret val end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name splittee end_name begin_index begin_expr begin_name count end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ret val end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name def end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_name count end_name begin_operator PLUS end_operator begin_operator LT end_operator begin_name begin_name splittee end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ret val end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name split char end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_while begin_return begin_expr begin_call begin_name begin_name ret val end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
