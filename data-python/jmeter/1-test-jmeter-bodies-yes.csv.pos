 begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name set value end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_name value end_name begin_operator UNP end_operator begin_name double end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set text end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name double end_name end_type begin_name rate end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name double end_name begin_operator RPAR end_operator begin_name value end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name double value end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name rate end_name begin_operator EQT end_operator begin_name begin_name double end_name begin_operator DOT end_operator begin_name max value end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name set text end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return end_return end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name unit end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name rate end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name rate end_name begin_operator UNP end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name unit end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name rate end_name begin_operator LT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name rate end_name begin_operator UNP end_operator end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name unit end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name set text end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name formatter end_name begin_operator DOT end_operator begin_name format end_name end_name begin_argument_list begin_argument begin_expr begin_name rate end_name end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name unit end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment create a test element for a gui or test bean class p this is a utility method to help actions do with one single string parameter param obj class the fully qualified class name of the gui component or of the test bean subclass for which a test bean gui is wanted return the test element corresponding to the specified gui class end_comment begin_type begin_specifier end_specifier begin_name test element end_name end_type begin_name create test element end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name obj class end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name j meter gui component end_name end_type begin_name comp end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name class end_name begin_argument_list begin_argument begin_name end_name end_argument end_argument_list end_name end_type begin_name c end_name end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name c end_name begin_operator EQ end_operator begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name obj class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name test bean end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name is assignable from end_name end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_call begin_name get gui from cache end_name begin_argument_list begin_argument begin_expr begin_name begin_name test bean gui end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_call begin_name get gui from cache end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name comp end_name begin_operator DOT end_operator begin_name clear gui end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name test element end_name end_type begin_name node end_name begin_init begin_expr begin_call begin_name begin_name comp end_name begin_operator DOT end_operator begin_name create test element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name nodes to gui end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name node end_name end_expr end_argument begin_argument begin_expr begin_name comp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name node end_name end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no class def found error end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name j option pane end_name begin_operator DOT end_operator begin_name show message dialog end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name j option pane end_name begin_operator DOT end_operator begin_name error message end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw begin_comment probably a missing jar end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name instantiation exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal access exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment param post link http post return string posted body if computable throws io exception end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name send post data end_name begin_parameter_list begin_param begin_decl begin_type begin_name http post end_name end_type begin_name post end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_comment buffer to hold the post body except file content end_comment begin_decl_stmt begin_decl begin_type begin_name string builder end_name end_type begin_name posted body end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string builder end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name http file arg end_name end_type begin_name begin_name files end_name begin_index end_index end_name begin_init begin_expr begin_call begin_name get http files end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name content encoding end_name begin_init begin_expr begin_call begin_name get content encoding or null end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name have content encoding end_name begin_init begin_expr begin_name content encoding end_name begin_operator UNP end_operator end_expr end_init end_decl end_decl_stmt begin_comment check if we should do a multipart form data or an end_comment begin_comment application x www form urlencoded post request end_comment begin_if begin_condition begin_expr begin_call begin_name get use multipart for post end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment if a content encoding is specified we use that as the end_comment begin_comment encoding of any parameter values end_comment begin_decl_stmt begin_decl begin_type begin_name charset end_name end_type begin_name charset end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name have content encoding end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name charset end_name begin_operator EQ end_operator begin_call begin_name begin_name charset end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment write the request to our own stream end_comment begin_decl_stmt begin_decl begin_type begin_name multipart entity end_name end_type begin_name multi part end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name multipart entity end_name begin_argument_list begin_argument begin_expr begin_call begin_name get do browser compatible multipart end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_name begin_name http multipart mode end_name begin_operator DOT end_operator begin_name browser compatible end_name end_name begin_operator DP end_operator begin_name begin_name http multipart mode end_name begin_operator DOT end_operator begin_name strict end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name charset end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment create the parts end_comment begin_comment add any parameters end_comment begin_decl_stmt begin_decl begin_type begin_name property iterator end_name end_type begin_name args end_name begin_init begin_expr begin_call begin_name get arguments end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name http argument end_name end_type begin_name arg end_name begin_init begin_expr begin_operator LPAR end_operator begin_name http argument end_name begin_operator RPAR end_operator begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get object value end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name parameter name end_name begin_init begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name is skippable end_name end_name begin_argument_list begin_argument begin_expr begin_name parameter name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name form body part end_name end_type begin_name form part end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string body end_name end_type begin_name string body end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string body end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name charset end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name form part end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name form body part end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name string body end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name multi part end_name begin_operator DOT end_operator begin_name add part end_name end_name begin_argument_list begin_argument begin_expr begin_name form part end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_comment add any files end_comment begin_comment cannot retrieve parts once added to the multi part entity so have to save them here end_comment begin_decl_stmt begin_decl begin_type begin_name viewable file body end_name begin_index end_index end_type begin_name file bodies end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name viewable file body end_name begin_index begin_expr begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name http file arg end_name end_type begin_name file end_name begin_init begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name file bodies end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name viewable file body end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name multi part end_name begin_operator DOT end_operator begin_name add part end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get param name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name file bodies end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set entity end_name end_name begin_argument_list begin_argument begin_expr begin_name multi part end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name multi part end_name begin_operator DOT end_operator begin_name is repeatable end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name byte array output stream end_name end_type begin_name bos end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name byte array output stream end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name viewable file body end_name end_type begin_name file body end_name begin_range begin_expr begin_name file bodies end_name end_expr end_range end_decl end_init begin_block begin_expr_stmt begin_expr begin_name begin_name file body end_name begin_operator DOT end_operator begin_name hide file data end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name multi part end_name begin_operator DOT end_operator begin_name write to end_name end_name begin_argument_list begin_argument begin_expr begin_name bos end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name viewable file body end_name end_type begin_name file body end_name begin_range begin_expr begin_name file bodies end_name end_expr end_range end_decl end_init begin_block begin_expr_stmt begin_expr begin_name begin_name file body end_name begin_operator DOT end_operator begin_name hide file data end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment we get the posted bytes using the encoding used to create it end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name to byte array end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name content encoding end_name begin_operator EQT end_operator begin_operator QM end_operator begin_comment non nls 1 this is the default used by http client end_comment begin_operator DP end_operator begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment end_block end_else end_if begin_comment set the content type todo needed end_comment begin_comment string multi part content type multi part get content type get value end_comment begin_comment post set header header content type multi part content type end_comment end_block end_then begin_else begin_block begin_comment not multipart end_comment begin_comment check if the header manager had a content type header end_comment begin_comment this allows the user to specify his own content type for a post request end_comment begin_decl_stmt begin_decl begin_type begin_name header end_name end_type begin_name content type header end_name begin_init begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name get first header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name has content type header end_name begin_init begin_expr begin_name content type header end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name content type header end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name content type header end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_init end_decl end_decl_stmt begin_comment if there are no arguments we can send a file as the body of the request end_comment begin_comment todo needs a multiple file upload scenerio end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name has arguments end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name get send file as post body end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment if get send file as post body returned true it s sure that file is not null end_comment begin_decl_stmt begin_decl begin_type begin_name http file arg end_name end_type begin_name file end_name begin_init begin_expr begin_name begin_name files end_name begin_index begin_expr end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name has content type header end_name end_expr end_condition begin_then begin_block begin_comment allow the mimetype of the file to control the content type end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name application x www form urlencoded end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file entity end_name end_type begin_name file request entity end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file entity end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name content type end_name begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set entity end_name end_name begin_argument_list begin_argument begin_expr begin_name file request entity end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment we just add placeholder text for file content end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment in a post request which is not multipart we only support end_comment begin_comment parameters no file upload is allowed end_comment begin_comment if a content encoding is specified we set it as http parameter so that end_comment begin_comment the post body will be encoded in the specified content encoding end_comment begin_if begin_condition begin_expr begin_name have content encoding end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name get params end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set parameter end_name begin_argument_list begin_argument begin_expr begin_name begin_name core protocol p names end_name begin_operator DOT end_operator begin_name http content charset end_name end_name end_expr end_argument begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment if none of the arguments have a name specified we end_comment begin_comment just send all the values as the post body end_comment begin_if begin_condition begin_expr begin_call begin_name get send parameter values as post body end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment allow the mimetype of the file to control the content type end_comment begin_comment this is not obvious in gui if you are not uploading any files end_comment begin_comment but just sending the content of nameless parameters end_comment begin_comment todo needs a multiple file upload scenerio end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name has content type header end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name http file arg end_name end_type begin_name file end_name begin_init begin_expr begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator begin_operator QM end_operator begin_name begin_name files end_name begin_index begin_expr end_expr end_index end_name begin_operator DP end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name file end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name application x www form urlencoded end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_comment just append all the parameter values and use that as the post body end_comment begin_decl_stmt begin_decl begin_type begin_name string builder end_name end_type begin_name post body end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string builder end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name property iterator end_name end_type begin_name args end_name begin_init begin_expr begin_call begin_name get arguments end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name http argument end_name end_type begin_name arg end_name begin_init begin_expr begin_operator LPAR end_operator begin_name http argument end_name begin_operator RPAR end_operator begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get object value end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment note if encoded is not selected arg get encoded value is equivalent to arg get value end_comment begin_if begin_condition begin_expr begin_name have content encoding end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get encoded value end_name end_name begin_argument_list begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get encoded value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_while begin_comment let string entity perform the encoding end_comment begin_decl_stmt begin_decl begin_type begin_name string entity end_name end_type begin_name request entity end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string entity end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name post body end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set entity end_name end_name begin_argument_list begin_argument begin_expr begin_name request entity end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name post body end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment it is a normal post request with parameter names and values end_comment begin_comment set the content type end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name has content type header end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name application x www form urlencoded end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment add the parameters end_comment begin_decl_stmt begin_decl begin_type begin_name property iterator end_name end_type begin_name args end_name begin_init begin_expr begin_call begin_name get arguments end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name list end_name begin_argument_list begin_argument begin_name name value pair end_name end_argument end_argument_list end_name end_type begin_name nvps end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name array list end_name begin_argument_list begin_argument begin_name name value pair end_name end_argument end_argument_list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name url content encoding end_name begin_init begin_expr begin_name content encoding end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name url content encoding end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name url content encoding end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment use the default encoding for urls end_comment begin_expr_stmt begin_expr begin_name url content encoding end_name begin_operator EQ end_operator begin_name begin_name encoder cache end_name begin_operator DOT end_operator begin_name url argument encoding end_name end_name end_expr end_expr_stmt end_block end_then end_if begin_while begin_condition begin_expr begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name http argument end_name end_type begin_name arg end_name begin_init begin_expr begin_operator LPAR end_operator begin_name http argument end_name begin_operator RPAR end_operator begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get object value end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment the http client always urlencodes both name and value end_comment begin_comment so if the argument is already encoded we have to decode end_comment begin_comment it before adding it to the post request end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name parameter name end_name begin_init begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name is skippable end_name end_name begin_argument_list begin_argument begin_expr begin_name parameter name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name parameter value end_name begin_init begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name is always encoded end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment the value is already encoded by the user end_comment begin_comment must decode the value now so that when the end_comment begin_comment httpclient encodes it we end up with the same value end_comment begin_comment as the user had entered end_comment begin_expr_stmt begin_expr begin_name parameter name end_name begin_operator EQ end_operator begin_call begin_name begin_name url decoder end_name begin_operator DOT end_operator begin_name decode end_name end_name begin_argument_list begin_argument begin_expr begin_name parameter name end_name end_expr end_argument begin_argument begin_expr begin_name url content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name parameter value end_name begin_operator EQ end_operator begin_call begin_name begin_name url decoder end_name begin_operator DOT end_operator begin_name decode end_name end_name begin_argument_list begin_argument begin_expr begin_name parameter value end_name end_expr end_argument begin_argument begin_expr begin_name url content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment add the parameter httpclient will urlencode it end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name nvps end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name basic name value pair end_name begin_argument_list begin_argument begin_expr begin_name parameter name end_name end_expr end_argument begin_argument begin_expr begin_name parameter value end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_decl_stmt begin_decl begin_type begin_name url encoded form entity end_name end_type begin_name entity end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name url encoded form entity end_name begin_argument_list begin_argument begin_expr begin_name nvps end_name end_expr end_argument begin_argument begin_expr begin_name url content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set entity end_name end_name begin_argument_list begin_argument begin_expr begin_name entity end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name entity end_name begin_operator DOT end_operator begin_name is repeatable end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name byte array output stream end_name end_type begin_name bos end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name byte array output stream end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name get entity end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name write to end_name begin_argument_list begin_argument begin_expr begin_name bos end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment we get the posted bytes using the encoding used to create it end_comment begin_if begin_condition begin_expr begin_name content encoding end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name to byte array end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name to byte array end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name sample result end_name begin_operator DOT end_operator begin_name default http encoding end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_else end_if end_block end_else end_if end_block end_else end_if begin_return begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name sample stopped end_name begin_parameter_list begin_param begin_decl begin_type begin_name sample event end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment finds a string in an array of strings and returns the param array array of strings param value string to compare to array values return index of value in array or 1 if not in array end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name int end_name end_type begin_name find in array end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name array end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name count end_name begin_init begin_expr begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name index end_name begin_init begin_expr begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name array end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name value end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_while begin_condition begin_expr begin_operator PPLUS end_operator begin_name count end_name begin_operator LT end_operator begin_name begin_name array end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_block begin_if begin_condition begin_expr begin_name begin_name array end_name begin_index begin_expr begin_name count end_name end_expr end_index end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name begin_name array end_name begin_index begin_expr begin_name count end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name index end_name begin_operator EQ end_operator begin_name count end_name end_expr end_expr_stmt begin_break end_break end_block end_then end_if end_block end_while end_block end_then end_if begin_return begin_expr begin_name index end_name end_expr end_return end_block 
 begin_comment same as should never happen but provide a source exception param e the exception that helped identify the problem throws error always throws one end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name should never happen end_name begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name error end_name end_expr end_argument end_throws begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name error end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_comment make a sample result given a set of tokens param parts tokens parsed from the input param save config the save configuration may be updated param line number the line number for error reporting return the sample result throws j meter error end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name sample event end_name end_type begin_name make result from delimited string end_name begin_parameter_list begin_param begin_decl begin_type begin_specifier end_specifier begin_name begin_name string end_name begin_index end_index end_name end_type begin_name parts end_name end_decl end_param begin_param begin_decl begin_type begin_specifier end_specifier begin_name sample save configuration end_name end_type begin_name save config end_name end_decl end_param begin_comment may be updated end_comment begin_param begin_decl begin_type begin_specifier end_specifier begin_name long end_name end_type begin_name line number end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name sample result end_name end_type begin_name result end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name hostname end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment non nls 1 end_comment begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name time stamp end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name long end_name end_type begin_name elapsed end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name text end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name field end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment save the name for error reporting end_comment begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name save timestamp end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name field end_name begin_operator EQ end_operator begin_name time stamp end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name print milliseconds end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_name time stamp end_name begin_operator EQ end_operator begin_call begin_name begin_name long end_name begin_operator DOT end_operator begin_name parse long end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment see if this works end_comment end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name number format exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment it did not let s try some other formats end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name found match end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name string end_name end_type begin_name fmt end_name begin_range begin_expr begin_name date format strings end_name end_expr end_range end_decl end_init begin_block begin_decl_stmt begin_decl begin_type begin_name simple date format end_name end_type begin_name date format end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name simple date format end_name begin_argument_list begin_argument begin_expr begin_name fmt end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name date format end_name begin_operator DOT end_operator begin_name set lenient end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name date end_name end_type begin_name stamp end_name begin_init begin_expr begin_call begin_name begin_name date format end_name begin_operator DOT end_operator begin_name parse end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name time stamp end_name begin_operator EQ end_operator begin_call begin_name begin_name stamp end_name begin_operator DOT end_operator begin_name get time end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment method is only ever called from one thread at a time end_comment begin_comment so it s ok to use a static date format end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name fmt end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name set formatter end_name end_name begin_argument_list begin_argument begin_expr begin_name date format end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name found match end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_break end_break end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name parse exception end_name end_type begin_name e 1 end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name info end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name fmt end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_for begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name found match end_name end_expr end_condition begin_then begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name parse exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name text end_name end_expr end_argument begin_argument begin_expr begin_operator MINUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_catch end_try end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name formatter end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name date end_name end_type begin_name stamp end_name begin_init begin_expr begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name formatter end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name parse end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name time stamp end_name begin_operator EQ end_operator begin_call begin_name begin_name stamp end_name begin_operator DOT end_operator begin_name get time end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment can this happen end_comment begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name msg end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name j meter error end_name begin_argument_list begin_argument begin_expr begin_name msg end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_else end_if end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name save time end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name field end_name begin_operator EQ end_operator begin_name csv elapsed end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name elapsed end_name begin_operator EQ end_operator begin_call begin_name begin_name long end_name begin_operator DOT end_operator begin_name parse long end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name save sample count end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name statistical sample result end_name begin_argument_list begin_argument begin_expr begin_name time stamp end_name end_expr end_argument begin_argument begin_expr begin_name elapsed end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name sample result end_name begin_argument_list begin_argument begin_expr begin_name time stamp end_name end_expr end_argument begin_argument begin_expr begin_name elapsed end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_if begin_condition begin_expr begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name save label end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name field end_name begin_operator EQ end_operator begin_name label end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set sample label end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name save code end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name field end_name begin_operator EQ end_operator begin_name response code end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set response code end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name save message end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name field end_name begin_operator EQ end_operator begin_name response message end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set response message end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name save thread name end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name field end_name begin_operator EQ end_operator begin_name thread name end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set thread name end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name save data type end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name field end_name begin_operator EQ end_operator begin_name data type end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set data type end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name save success end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name field end_name begin_operator EQ end_operator begin_name successful end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set successful end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name boolean end_name begin_operator DOT end_operator begin_name value of end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name boolean value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name save assertion results failure message end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name save bytes end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name field end_name begin_operator EQ end_operator begin_name csv bytes end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set bytes end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name integer end_name begin_operator DOT end_operator begin_name parse int end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name save thread counts end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name field end_name begin_operator EQ end_operator begin_name csv thread count 1 end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set group threads end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name integer end_name begin_operator DOT end_operator begin_name parse int end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name field end_name begin_operator EQ end_operator begin_name csv thread count 2 end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set all threads end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name integer end_name begin_operator DOT end_operator begin_name parse int end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name save url end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name save file name end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name field end_name begin_operator EQ end_operator begin_name csv filename end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set result file name end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name save latency end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name field end_name begin_operator EQ end_operator begin_name csv latency end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set latency end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name long end_name begin_operator DOT end_operator begin_name parse long end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name save encoding end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name field end_name begin_operator EQ end_operator begin_name csv encoding end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set encoding and type end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name save sample count end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name field end_name begin_operator EQ end_operator begin_name csv sample count end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set sample count end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name integer end_name begin_operator DOT end_operator begin_name parse int end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name field end_name begin_operator EQ end_operator begin_name csv error count end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set error count end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name integer end_name begin_operator DOT end_operator begin_name parse int end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name save hostname end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name field end_name begin_operator EQ end_operator begin_name csv hostname end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name hostname end_name begin_operator EQ end_operator begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name save idle time end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name field end_name begin_operator EQ end_operator begin_name csv idletime end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name text end_name begin_operator EQ end_operator begin_name begin_name parts end_name begin_index begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_index end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set idle time end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name long end_name begin_operator DOT end_operator begin_name parse long end_name end_name begin_argument_list begin_argument begin_expr begin_name text end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name i end_name begin_operator PLUS end_operator begin_call begin_name begin_name save config end_name begin_operator DOT end_operator begin_name get var count end_name end_name begin_argument_list end_argument_list end_call begin_operator LT end_operator begin_name begin_name parts end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name line number end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name parts end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name i end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name number format exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name field end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name line number end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name j meter error end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name parse exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name field end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name line number end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name j meter error end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name array index out of bounds exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name field end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name line number end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name j meter error end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_return begin_expr begin_operator UNP end_operator begin_call begin_name sample event end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name hostname end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name subtract node end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment end_comment begin_comment deprecated values in a multipart form data are not urlencoded end_comment begin_comment so it does not make sense to add a value as a encoded value end_comment begin_comment end_comment begin_comment public void add encoded argument string name string value end_comment begin_comment arguments my args get arguments end_comment begin_comment http argument arg new http argument name value true end_comment begin_comment if arg get name equals arg get encoded name arg get value equals arg get encoded value end_comment begin_comment arg set always encoded false end_comment begin_comment end_comment begin_comment my args add argument arg end_comment begin_comment end_comment begin_comment add a value that is not url encoded and make sure it appears in the gui that it will not be encoded when the request is sent param name param value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add non encoded argument end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name arguments end_name end_type begin_name my args end_name begin_init begin_expr begin_call begin_name get arguments end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment the value is not encoded end_comment begin_decl_stmt begin_decl begin_type begin_name http argument end_name end_type begin_name arg end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name http argument end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment let the gui show that it will not be encoded end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name set always encoded end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name my args end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr begin_name arg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment param post link http post return string posted body if computable throws io exception end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name send post data end_name begin_parameter_list begin_param begin_decl begin_type begin_name http post end_name end_type begin_name post end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_comment buffer to hold the post body except file content end_comment begin_decl_stmt begin_decl begin_type begin_name string builder end_name end_type begin_name posted body end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string builder end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name http file arg end_name end_type begin_name begin_name files end_name begin_index end_index end_name begin_init begin_expr begin_call begin_name get http files end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name content encoding end_name begin_init begin_expr begin_call begin_name get content encoding or null end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name have content encoding end_name begin_init begin_expr begin_name content encoding end_name begin_operator UNP end_operator end_expr end_init end_decl end_decl_stmt begin_comment check if we should do a multipart form data or an end_comment begin_comment application x www form urlencoded post request end_comment begin_if begin_condition begin_expr begin_call begin_name get use multipart for post end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment if a content encoding is specified we use that as the end_comment begin_comment encoding of any parameter values end_comment begin_decl_stmt begin_decl begin_type begin_name charset end_name end_type begin_name charset end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name have content encoding end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name charset end_name begin_operator EQ end_operator begin_call begin_name begin_name charset end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment write the request to our own stream end_comment begin_decl_stmt begin_decl begin_type begin_name multipart entity end_name end_type begin_name multi part end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name multipart entity end_name begin_argument_list begin_argument begin_expr begin_call begin_name get do browser compatible multipart end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_name begin_name http multipart mode end_name begin_operator DOT end_operator begin_name browser compatible end_name end_name begin_operator DP end_operator begin_name begin_name http multipart mode end_name begin_operator DOT end_operator begin_name strict end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name charset end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment create the parts end_comment begin_comment add any parameters end_comment begin_decl_stmt begin_decl begin_type begin_name property iterator end_name end_type begin_name args end_name begin_init begin_expr begin_call begin_name get arguments end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name http argument end_name end_type begin_name arg end_name begin_init begin_expr begin_operator LPAR end_operator begin_name http argument end_name begin_operator RPAR end_operator begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get object value end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name parameter name end_name begin_init begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name is skippable end_name end_name begin_argument_list begin_argument begin_expr begin_name parameter name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name form body part end_name end_type begin_name form part end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string body end_name end_type begin_name string body end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string body end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name charset end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name form part end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name form body part end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name string body end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name multi part end_name begin_operator DOT end_operator begin_name add part end_name end_name begin_argument_list begin_argument begin_expr begin_name form part end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_comment add any files end_comment begin_comment cannot retrieve parts once added to the multi part entity so have to save them here end_comment begin_decl_stmt begin_decl begin_type begin_name viewable file body end_name begin_index end_index end_type begin_name file bodies end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name viewable file body end_name begin_index begin_expr begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name http file arg end_name end_type begin_name file end_name begin_init begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name file bodies end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name viewable file body end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name multi part end_name begin_operator DOT end_operator begin_name add part end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get param name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name file bodies end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set entity end_name end_name begin_argument_list begin_argument begin_expr begin_name multi part end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name multi part end_name begin_operator DOT end_operator begin_name is repeatable end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name byte array output stream end_name end_type begin_name bos end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name byte array output stream end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name viewable file body end_name end_type begin_name file body end_name begin_range begin_expr begin_name file bodies end_name end_expr end_range end_decl end_init begin_block begin_expr_stmt begin_expr begin_name begin_name file body end_name begin_operator DOT end_operator begin_name hide file data end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name multi part end_name begin_operator DOT end_operator begin_name write to end_name end_name begin_argument_list begin_argument begin_expr begin_name bos end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name viewable file body end_name end_type begin_name file body end_name begin_range begin_expr begin_name file bodies end_name end_expr end_range end_decl end_init begin_block begin_expr_stmt begin_expr begin_name begin_name file body end_name begin_operator DOT end_operator begin_name hide file data end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment we get the posted bytes using the encoding used to create it end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name to byte array end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name content encoding end_name begin_operator EQT end_operator begin_operator QM end_operator begin_comment non nls 1 this is the default used by http client end_comment begin_operator DP end_operator begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment end_block end_else end_if begin_comment set the content type todo needed end_comment begin_comment string multi part content type multi part get content type get value end_comment begin_comment post set header header content type multi part content type end_comment end_block end_then begin_else begin_block begin_comment not multipart end_comment begin_comment check if the header manager had a content type header end_comment begin_comment this allows the user to specify his own content type for a post request end_comment begin_decl_stmt begin_decl begin_type begin_name header end_name end_type begin_name content type header end_name begin_init begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name get first header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name has content type header end_name begin_init begin_expr begin_name content type header end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name content type header end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name content type header end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_init end_decl end_decl_stmt begin_comment if there are no arguments we can send a file as the body of the request end_comment begin_comment todo needs a multiple file upload scenerio end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name has arguments end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name get send file as post body end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment if get send file as post body returned true it s sure that file is not null end_comment begin_decl_stmt begin_decl begin_type begin_name http file arg end_name end_type begin_name file end_name begin_init begin_expr begin_name begin_name files end_name begin_index begin_expr end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name has content type header end_name end_expr end_condition begin_then begin_block begin_comment allow the mimetype of the file to control the content type end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name application x www form urlencoded end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file entity end_name end_type begin_name file request entity end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file entity end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name content type end_name begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set entity end_name end_name begin_argument_list begin_argument begin_expr begin_name file request entity end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment we just add placeholder text for file content end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment in a post request which is not multipart we only support end_comment begin_comment parameters no file upload is allowed end_comment begin_comment if a content encoding is specified we set it as http parameter so that end_comment begin_comment the post body will be encoded in the specified content encoding end_comment begin_if begin_condition begin_expr begin_name have content encoding end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name get params end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set parameter end_name begin_argument_list begin_argument begin_expr begin_name begin_name core protocol p names end_name begin_operator DOT end_operator begin_name http content charset end_name end_name end_expr end_argument begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment if none of the arguments have a name specified we end_comment begin_comment just send all the values as the post body end_comment begin_if begin_condition begin_expr begin_call begin_name get send parameter values as post body end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment allow the mimetype of the file to control the content type end_comment begin_comment this is not obvious in gui if you are not uploading any files end_comment begin_comment but just sending the content of nameless parameters end_comment begin_comment todo needs a multiple file upload scenerio end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name has content type header end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name http file arg end_name end_type begin_name file end_name begin_init begin_expr begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator begin_operator QM end_operator begin_name begin_name files end_name begin_index begin_expr end_expr end_index end_name begin_operator DP end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name file end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name application x www form urlencoded end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_comment just append all the parameter values and use that as the post body end_comment begin_decl_stmt begin_decl begin_type begin_name string builder end_name end_type begin_name post body end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string builder end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name property iterator end_name end_type begin_name args end_name begin_init begin_expr begin_call begin_name get arguments end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name http argument end_name end_type begin_name arg end_name begin_init begin_expr begin_operator LPAR end_operator begin_name http argument end_name begin_operator RPAR end_operator begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get object value end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment note if encoded is not selected arg get encoded value is equivalent to arg get value end_comment begin_if begin_condition begin_expr begin_name have content encoding end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get encoded value end_name end_name begin_argument_list begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get encoded value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_while begin_comment let string entity perform the encoding end_comment begin_decl_stmt begin_decl begin_type begin_name string entity end_name end_type begin_name request entity end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string entity end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name post body end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set entity end_name end_name begin_argument_list begin_argument begin_expr begin_name request entity end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name post body end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment it is a normal post request with parameter names and values end_comment begin_comment set the content type end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name has content type header end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name application x www form urlencoded end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment add the parameters end_comment begin_decl_stmt begin_decl begin_type begin_name property iterator end_name end_type begin_name args end_name begin_init begin_expr begin_call begin_name get arguments end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name list end_name begin_argument_list begin_argument begin_name name value pair end_name end_argument end_argument_list end_name end_type begin_name nvps end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name array list end_name begin_argument_list begin_argument begin_name name value pair end_name end_argument end_argument_list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name url content encoding end_name begin_init begin_expr begin_name content encoding end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name url content encoding end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name url content encoding end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment use the default encoding for urls end_comment begin_expr_stmt begin_expr begin_name url content encoding end_name begin_operator EQ end_operator begin_name begin_name encoder cache end_name begin_operator DOT end_operator begin_name url argument encoding end_name end_name end_expr end_expr_stmt end_block end_then end_if begin_while begin_condition begin_expr begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name http argument end_name end_type begin_name arg end_name begin_init begin_expr begin_operator LPAR end_operator begin_name http argument end_name begin_operator RPAR end_operator begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get object value end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment the http client always urlencodes both name and value end_comment begin_comment so if the argument is already encoded we have to decode end_comment begin_comment it before adding it to the post request end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name parameter name end_name begin_init begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name is skippable end_name end_name begin_argument_list begin_argument begin_expr begin_name parameter name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name parameter value end_name begin_init begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name is always encoded end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment the value is already encoded by the user end_comment begin_comment must decode the value now so that when the end_comment begin_comment httpclient encodes it we end up with the same value end_comment begin_comment as the user had entered end_comment begin_expr_stmt begin_expr begin_name parameter name end_name begin_operator EQ end_operator begin_call begin_name begin_name url decoder end_name begin_operator DOT end_operator begin_name decode end_name end_name begin_argument_list begin_argument begin_expr begin_name parameter name end_name end_expr end_argument begin_argument begin_expr begin_name url content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name parameter value end_name begin_operator EQ end_operator begin_call begin_name begin_name url decoder end_name begin_operator DOT end_operator begin_name decode end_name end_name begin_argument_list begin_argument begin_expr begin_name parameter value end_name end_expr end_argument begin_argument begin_expr begin_name url content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment add the parameter httpclient will urlencode it end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name nvps end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name basic name value pair end_name begin_argument_list begin_argument begin_expr begin_name parameter name end_name end_expr end_argument begin_argument begin_expr begin_name parameter value end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_decl_stmt begin_decl begin_type begin_name url encoded form entity end_name end_type begin_name entity end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name url encoded form entity end_name begin_argument_list begin_argument begin_expr begin_name nvps end_name end_expr end_argument begin_argument begin_expr begin_name url content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set entity end_name end_name begin_argument_list begin_argument begin_expr begin_name entity end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name entity end_name begin_operator DOT end_operator begin_name is repeatable end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name byte array output stream end_name end_type begin_name bos end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name byte array output stream end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name get entity end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name write to end_name begin_argument_list begin_argument begin_expr begin_name bos end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment we get the posted bytes using the encoding used to create it end_comment begin_if begin_condition begin_expr begin_name content encoding end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name to byte array end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name to byte array end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name sample result end_name begin_operator DOT end_operator begin_name default http encoding end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_else end_if end_block end_else end_if end_block end_else end_if begin_return begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name encode end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name s end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name util end_name begin_operator DOT end_operator begin_name substitute end_name end_name begin_argument_list begin_argument begin_expr begin_name expression end_name end_expr end_argument begin_argument begin_expr begin_name s end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name start proxy end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name value replacer end_name end_type begin_name replacer end_name begin_init begin_expr begin_call begin_name begin_name gui package end_name begin_operator DOT end_operator begin_name get instance end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get replacer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name modify test element end_name begin_argument_list begin_argument begin_expr begin_name model end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment proxy can take some while to start up show a wating cursor end_comment begin_decl_stmt begin_decl begin_type begin_name cursor end_name end_type begin_name cursor end_name begin_init begin_expr begin_call begin_name get cursor end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name set cursor end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name cursor end_name begin_operator DOT end_operator begin_name get predefined cursor end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name cursor end_name begin_operator DOT end_operator begin_name wait cursor end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name replacer end_name begin_operator DOT end_operator begin_name replace values end_name end_name begin_argument_list begin_argument begin_expr begin_name model end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name model end_name begin_operator DOT end_operator begin_name start proxy end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name start end_name begin_operator DOT end_operator begin_name set enabled end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name stop end_name begin_operator DOT end_operator begin_name set enabled end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name restart end_name begin_operator DOT end_operator begin_name set enabled end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name proxy control end_name begin_operator DOT end_operator begin_name is dynamic mode end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name begin_name details end_name begin_index end_index end_name begin_init begin_expr begin_call begin_name begin_name model end_name begin_operator DOT end_operator begin_name get certificate details end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string builder end_name end_type begin_name sb end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string builder end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name j meter utils end_name begin_operator DOT end_operator begin_name get res string end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call begin_comment non nls 1 end_comment begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name space end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name begin_name key tool utils end_name begin_operator DOT end_operator begin_name root cacert crt pfx end_name end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name space end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name j meter utils end_name begin_operator DOT end_operator begin_name get res string end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name new line end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name j meter utils end_name begin_operator DOT end_operator begin_name get res string end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name new line end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name j meter utils end_name begin_operator DOT end_operator begin_name get res string end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call begin_comment non nls 1 end_comment begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name new line end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name new line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name string end_name end_type begin_name detail end_name begin_range begin_expr begin_name details end_name end_expr end_range end_decl end_init begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name detail end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name append end_name begin_argument_list begin_argument begin_expr begin_name new line end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name j option pane end_name begin_operator DOT end_operator begin_name show message dialog end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name sb end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name j meter utils end_name begin_operator DOT end_operator begin_name get res string end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator PLUS end_operator begin_name space end_name begin_comment non nls 1 end_comment begin_operator PLUS end_operator begin_name begin_name key tool utils end_name begin_operator DOT end_operator begin_name root cacert crt pfx end_name end_name begin_operator PLUS end_operator begin_name space end_name begin_operator PLUS end_operator begin_call begin_name begin_name j meter utils end_name begin_operator DOT end_operator begin_name get res string end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_comment non nls 1 end_comment begin_argument begin_expr begin_name begin_name j option pane end_name begin_operator DOT end_operator begin_name information message end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name invalid variable exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name j option pane end_name begin_operator DOT end_operator begin_name show message dialog end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name j meter utils end_name begin_operator DOT end_operator begin_name get res string end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_comment non nls 1 end_comment begin_argument begin_expr begin_call begin_name begin_name j meter utils end_name begin_operator DOT end_operator begin_name get res string end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_comment non nls 1 end_comment begin_argument begin_expr begin_name begin_name j option pane end_name begin_operator DOT end_operator begin_name error message end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name bind exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name j option pane end_name begin_operator DOT end_operator begin_name show message dialog end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name j meter utils end_name begin_operator DOT end_operator begin_name get res string end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_comment non nls 1 end_comment begin_argument begin_expr begin_call begin_name begin_name j meter utils end_name begin_operator DOT end_operator begin_name get res string end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_comment non nls 1 end_comment begin_argument begin_expr begin_name begin_name j option pane end_name begin_operator DOT end_operator begin_name error message end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name j option pane end_name begin_operator DOT end_operator begin_name show message dialog end_name end_name begin_argument_list begin_argument begin_expr begin_name this end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name j meter utils end_name begin_operator DOT end_operator begin_name get res string end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_comment non nls 1 end_comment begin_argument begin_expr begin_call begin_name begin_name j meter utils end_name begin_operator DOT end_operator begin_name get res string end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_argument begin_comment non nls 1 end_comment begin_argument begin_expr begin_name begin_name j option pane end_name begin_operator DOT end_operator begin_name error message end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name set cursor end_name begin_argument_list begin_argument begin_expr begin_name cursor end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_specifier end_specifier begin_name null property end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment process the current sampler handling transaction samplers param current sampler param parent sampler param thread context return sample result if a transaction was processed end_comment begin_type begin_annotation begin_name suppress warnings end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_annotation begin_comment ok to call test bean helper prepare end_comment begin_specifier end_specifier begin_name sample result end_name end_type begin_name process sampler end_name begin_parameter_list begin_param begin_decl begin_type begin_name sampler end_name end_type begin_name current end_name end_decl end_param begin_param begin_decl begin_type begin_name sampler end_name end_type begin_name parent end_name end_decl end_param begin_param begin_decl begin_type begin_name j meter context end_name end_type begin_name thread context end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name sample result end_name end_type begin_name transaction result end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_comment check if we are running a transaction end_comment begin_decl_stmt begin_decl begin_type begin_name transaction sampler end_name end_type begin_name transaction sampler end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name current end_name begin_operator UNP end_operator begin_name transaction sampler end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name transaction sampler end_name begin_operator EQ end_operator begin_operator LPAR end_operator begin_name transaction sampler end_name begin_operator RPAR end_operator begin_name current end_name end_expr end_expr_stmt end_block end_then end_if begin_comment find the package for the transaction end_comment begin_decl_stmt begin_decl begin_type begin_name sample package end_name end_type begin_name transaction pack end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name transaction sampler end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name transaction pack end_name begin_operator EQ end_operator begin_call begin_name begin_name compiler end_name begin_operator DOT end_operator begin_name configure transaction sampler end_name end_name begin_argument_list begin_argument begin_expr begin_name transaction sampler end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment check if the transaction is done end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name transaction sampler end_name begin_operator DOT end_operator begin_name is transaction done end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment get the transaction sample result end_comment begin_expr_stmt begin_expr begin_name transaction result end_name begin_operator EQ end_operator begin_call begin_name begin_name transaction sampler end_name begin_operator DOT end_operator begin_name get transaction result end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name transaction result end_name begin_operator DOT end_operator begin_name set thread name end_name end_name begin_argument_list begin_argument begin_expr begin_name thread name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name transaction result end_name begin_operator DOT end_operator begin_name set group threads end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name thread group end_name begin_operator DOT end_operator begin_name get number of threads end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name transaction result end_name begin_operator DOT end_operator begin_name set all threads end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name j meter context service end_name begin_operator DOT end_operator begin_name get number of threads end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment check assertions for the transaction sample end_comment begin_expr_stmt begin_expr begin_call begin_name check assertions end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name transaction pack end_name begin_operator DOT end_operator begin_name get assertions end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name transaction result end_name end_expr end_argument begin_argument begin_expr begin_name thread context end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment notify listeners with the transaction sample result end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_operator LPAR end_operator begin_name parent end_name begin_operator UNP end_operator begin_name transaction sampler end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name notify listeners end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name transaction pack end_name begin_operator DOT end_operator begin_name get sample listeners end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name transaction result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name compiler end_name begin_operator DOT end_operator begin_name done end_name end_name begin_argument_list begin_argument begin_expr begin_name transaction pack end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment transaction is done we do not have a sampler to sample end_comment begin_expr_stmt begin_expr begin_name current end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then begin_else begin_block begin_decl_stmt begin_decl begin_type begin_name sampler end_name end_type begin_name prev end_name begin_init begin_expr begin_name current end_name end_expr end_init end_decl end_decl_stmt begin_comment it is the sub sampler of the transaction that will be sampled end_comment begin_expr_stmt begin_expr begin_name current end_name begin_operator EQ end_operator begin_call begin_name begin_name transaction sampler end_name begin_operator DOT end_operator begin_name get sub sampler end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name current end_name begin_operator UNP end_operator begin_name transaction sampler end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name sample result end_name end_type begin_name res end_name begin_init begin_expr begin_call begin_name process sampler end_name begin_argument_list begin_argument begin_expr begin_name current end_name end_expr end_argument begin_argument begin_expr begin_name prev end_name end_expr end_argument begin_argument begin_expr begin_name thread context end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment recursive call end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name thread context end_name begin_operator DOT end_operator begin_name set current sampler end_name end_name begin_argument_list begin_argument begin_expr begin_name prev end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name current end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name res end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name transaction sampler end_name begin_operator DOT end_operator begin_name add sub sampler result end_name end_name begin_argument_list begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if end_block end_else end_if end_block end_then end_if begin_comment check if we have a sampler to sample end_comment begin_if begin_condition begin_expr begin_name current end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name thread context end_name begin_operator DOT end_operator begin_name set current sampler end_name end_name begin_argument_list begin_argument begin_expr begin_name current end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment get the sampler ready to sample end_comment begin_decl_stmt begin_decl begin_type begin_name sample package end_name end_type begin_name pack end_name begin_init begin_expr begin_call begin_name begin_name compiler end_name begin_operator DOT end_operator begin_name configure sampler end_name end_name begin_argument_list begin_argument begin_expr begin_name current end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name run pre processors end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name pack end_name begin_operator DOT end_operator begin_name get pre processors end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name thread vars end_name begin_operator DOT end_operator begin_name put object end_name end_name begin_argument_list begin_argument begin_expr begin_name package object end_name end_expr end_argument begin_argument begin_expr begin_name pack end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name delay end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name pack end_name begin_operator DOT end_operator begin_name get timers end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name sampler end_name end_type begin_name sampler end_name begin_init begin_expr begin_call begin_name begin_name pack end_name begin_operator DOT end_operator begin_name get sampler end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name set thread context end_name end_name begin_argument_list begin_argument begin_expr begin_name thread context end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment todo should this set the thread names for all the subsamples end_comment begin_comment might be more efficient than fetching the name elsewehere end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name set thread name end_name end_name begin_argument_list begin_argument begin_expr begin_name thread name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name test bean helper end_name begin_operator DOT end_operator begin_name prepare end_name end_name begin_argument_list begin_argument begin_expr begin_name sampler end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment perform the actual sample end_comment begin_expr_stmt begin_expr begin_name current sampler end_name begin_operator EQ end_operator begin_name sampler end_name end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name sample result end_name end_type begin_name result end_name begin_init begin_expr begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name sample end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name current sampler end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_comment if we got any results then perform processing on the result end_comment begin_if begin_condition begin_expr begin_name result end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set group threads end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name thread group end_name begin_operator DOT end_operator begin_name get number of threads end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set all threads end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name j meter context service end_name begin_operator DOT end_operator begin_name get number of threads end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set thread name end_name end_name begin_argument_list begin_argument begin_expr begin_name thread name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name thread context end_name begin_operator DOT end_operator begin_name set previous result end_name end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name run post processors end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name pack end_name begin_operator DOT end_operator begin_name get post processors end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name check assertions end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name pack end_name begin_operator DOT end_operator begin_name get assertions end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_name thread context end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment do not send subsamples to listeners which receive the transaction sample end_comment begin_decl_stmt begin_decl begin_type begin_name begin_name list end_name begin_argument_list begin_argument begin_name sample listener end_name end_argument end_argument_list end_name end_type begin_name sample listeners end_name begin_init begin_expr begin_call begin_name get sample listeners end_name begin_argument_list begin_argument begin_expr begin_name pack end_name end_expr end_argument begin_argument begin_expr begin_name transaction pack end_name end_expr end_argument begin_argument begin_expr begin_name transaction sampler end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name notify listeners end_name begin_argument_list begin_argument begin_expr begin_name sample listeners end_name end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name compiler end_name begin_operator DOT end_operator begin_name done end_name end_name begin_argument_list begin_argument begin_expr begin_name pack end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment add the result as subsample of transaction if we are in a transaction end_comment begin_if begin_condition begin_expr begin_name transaction sampler end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name transaction sampler end_name begin_operator DOT end_operator begin_name add sub sampler result end_name end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment check if thread or test should be stopped end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name is stop thread end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name is successful end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name on error stop thread end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name stop thread end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name is stop test end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name is successful end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name on error stop test end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name stop test end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name is stop test now end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name is successful end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_name on error stop test now end_name begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name stop test now end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name is start next thread loop end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name thread context end_name begin_operator DOT end_operator begin_name set restart next loop end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name compiler end_name begin_operator DOT end_operator begin_name done end_name end_name begin_argument_list begin_argument begin_expr begin_name pack end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment finish up end_comment end_block end_else end_if end_block end_then end_if begin_if begin_condition begin_expr begin_name scheduler end_name end_expr end_condition begin_then begin_block begin_comment checks the scheduler to stop the iteration end_comment begin_expr_stmt begin_expr begin_call begin_name stop scheduler end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name j meter stop test exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name info end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name stop test end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name j meter stop thread exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name info end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name stop thread end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name current end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name current end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_catch end_try begin_return begin_expr begin_name transaction result end_name end_expr end_return end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name subtract node end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name add node end_name begin_parameter_list begin_param begin_decl begin_type begin_name object end_name end_type begin_name node end_name end_decl end_param begin_param begin_decl begin_type begin_name hash tree end_name end_type begin_name sub tree end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_name is remote end_name begin_operator UNP end_operator begin_name node end_name begin_operator UNP end_operator begin_name result collector end_name end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name replacer end_name begin_operator DOT end_operator begin_name replace values end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name test element end_name begin_operator RPAR end_operator begin_name node end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name invalid variable exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_then end_if begin_if begin_condition begin_expr begin_name is remote end_name end_expr end_condition begin_then begin_block begin_return end_return end_block end_then end_if begin_if begin_condition begin_expr begin_name node end_name begin_operator UNP end_operator begin_name test element end_name end_expr end_condition begin_then begin_block begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name replacer end_name begin_operator DOT end_operator begin_name replace values end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name test element end_name begin_operator RPAR end_operator begin_name node end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name invalid variable exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_then end_if begin_if begin_condition begin_expr begin_name node end_name begin_operator UNP end_operator begin_name test plan end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name test plan end_name begin_operator RPAR end_operator begin_name node end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name prepare for pre compile end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name map end_name begin_argument_list begin_argument begin_name string end_name end_argument begin_argument begin_name string end_name end_argument end_argument_list end_name end_type begin_name args end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name test plan end_name begin_operator RPAR end_operator begin_name node end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get user defined variables end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name replacer end_name begin_operator DOT end_operator begin_name set user defined variables end_name end_name begin_argument_list begin_argument begin_expr begin_name args end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name j meter variables end_name end_type begin_name vars end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name j meter variables end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name vars end_name begin_operator DOT end_operator begin_name put all end_name end_name begin_argument_list begin_argument begin_expr begin_name args end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name j meter context service end_name begin_operator DOT end_operator begin_name get context end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set variables end_name begin_argument_list begin_argument begin_expr begin_name vars end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name node end_name begin_operator UNP end_operator begin_name arguments end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name arguments end_name begin_operator RPAR end_operator begin_name node end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name set running version end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name map end_name begin_argument_list begin_argument begin_name string end_name end_argument begin_argument begin_name string end_name end_argument end_argument_list end_name end_type begin_name args end_name begin_init begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name arguments end_name begin_operator RPAR end_operator begin_name node end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get arguments as map end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name replacer end_name begin_operator DOT end_operator begin_name add variables end_name end_name begin_argument_list begin_argument begin_expr begin_name args end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name j meter context service end_name begin_operator DOT end_operator begin_name get context end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get variables end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name put all end_name begin_argument_list begin_argument begin_expr begin_name args end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block 
 begin_comment main processing method for the proxy object end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name run end_name begin_parameter_list end_parameter_list begin_block begin_comment check which http sampler class we should use end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name http sampler name end_name begin_init begin_expr begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name get sampler type name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name http request hdr end_name end_type begin_name request end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name http request hdr end_name begin_argument_list begin_argument begin_expr begin_name http sampler name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name sample result end_name end_type begin_name result end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name header manager end_name end_type begin_name headers end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name http sampler base end_name end_type begin_name sampler end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_comment now parse initial request in case it is a connect request end_comment begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name ba end_name begin_init begin_expr begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name parse end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name buffered input stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name client socket end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name begin_name ba end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name j meter exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_name ba end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name out stream client end_name begin_operator EQ end_operator begin_call begin_name begin_name client socket end_name begin_operator DOT end_operator begin_name get output stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name get method end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name starts with end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name connect end_name end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_name out stream client end_name begin_operator UNP end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment write a ok reponse to browser to engage ssl exchange end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name out stream client end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get bytes end_name begin_argument_list begin_argument begin_expr begin_name begin_name sample result end_name begin_operator DOT end_operator begin_name default http encoding end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name out stream client end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment with ssl request url is host port without https or path end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name begin_index end_index end_type begin_name param end_name begin_init begin_expr begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name get url end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name split end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment non nls 1 end_comment begin_if begin_condition begin_expr begin_name begin_name param end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name begin_name param end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name client socket end_name begin_operator EQ end_operator begin_call begin_name start ssl end_name begin_argument_list begin_argument begin_expr begin_name client socket end_name end_expr end_argument begin_argument begin_expr begin_name begin_name param end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment should not happen but if it does we don t want to continue end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name get url end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name j meter exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_else end_if begin_comment re parse now it s the http request over ssl end_comment begin_try begin_block begin_expr_stmt begin_expr begin_name ba end_name begin_operator EQ end_operator begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name parse end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name buffered input stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name client socket end_name begin_operator DOT end_operator begin_name get input stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name ioe end_name end_decl end_param end_parameter_list begin_block begin_comment most likely this is because of a certificate error end_comment begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name url end_name begin_init begin_expr begin_name begin_name param end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator begin_operator QM end_operator begin_operator PLUS end_operator begin_name begin_name param end_name begin_index begin_expr end_expr end_index end_name begin_operator PLUS end_operator begin_operator DP end_operator end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name url end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name ioe end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment won t work write error to client http reply hdr form internal error end_comment begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name generate error result end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name ioe end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment generate result if nec and populate it end_comment begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name j meter exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_catch end_try begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_name ba end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name begin_name ba end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name get url end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name j meter exception end_name begin_argument_list end_argument_list end_call end_expr end_throw end_block end_then end_if end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name sampler creator end_name end_type begin_name sampler creator end_name begin_init begin_expr begin_call begin_name begin_name samplerfactory end_name begin_operator DOT end_operator begin_name get sampler creator end_name end_name begin_argument_list begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name page encodings end_name end_expr end_argument begin_argument begin_expr begin_name form encodings end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name sampler end_name begin_operator EQ end_operator begin_call begin_name begin_name sampler creator end_name begin_operator DOT end_operator begin_name create and populate sampler end_name end_name begin_argument_list begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name page encodings end_name end_expr end_argument begin_argument begin_expr begin_name form encodings end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment create a header manager to ensure that the browsers headers are captured and sent to the server end_comment begin_expr_stmt begin_expr begin_name headers end_name begin_operator EQ end_operator begin_call begin_name begin_name request end_name begin_operator DOT end_operator begin_name get header manager end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name set header manager end_name end_name begin_argument_list begin_argument begin_expr begin_name headers end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name thread started end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment needed for http sampler 2 end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name get method end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name get url end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name sample end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment find the page encoding and possibly encodings for forms in the page end_comment begin_comment in the response from the web server end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name page encoding end_name begin_init begin_expr begin_call begin_name add page encoding end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name add form encodings end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_name page encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write to client end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name buffered output stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name client socket end_name begin_operator DOT end_operator begin_name get output stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name sampler creator end_name begin_operator DOT end_operator begin_name post process sampler end_name end_name begin_argument_list begin_argument begin_expr begin_name sampler end_name end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name j meter exception end_name end_type begin_name jme end_name end_decl end_param end_parameter_list begin_block begin_comment ignored already processed end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name unknown host exception end_name end_type begin_name uhe end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name uhe end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write error to client end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name http reply hdr end_name begin_operator DOT end_operator begin_name form server not found end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name generate error result end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name uhe end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment generate result if nec and populate it end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal argument exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write error to client end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name http reply hdr end_name begin_operator DOT end_operator begin_name form not implemented end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name generate error result end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment generate result if nec and populate it end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name write error to client end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name http reply hdr end_name begin_operator DOT end_operator begin_name form internal error end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name result end_name begin_operator EQ end_operator begin_call begin_name generate error result end_name begin_argument_list begin_argument begin_expr begin_name result end_name end_expr end_argument begin_argument begin_expr begin_name request end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment generate result if nec and populate it end_comment end_block end_catch begin_finally begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_name sampler end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_then end_if begin_comment we don t want to store any cookies in the generated test plan end_comment begin_if begin_condition begin_expr begin_name headers end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name headers end_name begin_operator DOT end_operator begin_name remove header named end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header cookie end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment always remove cookies end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name headers end_name begin_operator DOT end_operator begin_name remove header named end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header authorization end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment always remove authorization end_comment begin_comment remove additional headers end_comment begin_for begin_init begin_decl begin_type begin_name string end_name end_type begin_name hdr end_name begin_range begin_expr begin_name headers to remove end_name end_expr end_range end_decl end_init begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name headers end_name begin_operator DOT end_operator begin_name remove header named end_name end_name begin_argument_list begin_argument begin_expr begin_name hdr end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for end_block end_then end_if begin_if begin_condition begin_expr begin_name result end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_comment deliver sampler allows sampler to be null but result must not be null end_comment begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name target end_name begin_operator DOT end_operator begin_name deliver sampler end_name end_name begin_argument_list begin_argument begin_expr begin_name sampler end_name end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name test element end_name begin_index end_index end_name begin_block begin_expr begin_name capture http headers end_name begin_operator QM end_operator begin_name headers end_name begin_operator DP end_operator end_expr end_block end_expr end_argument begin_argument begin_expr begin_name result end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name client socket end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_name port end_name begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_if begin_condition begin_expr begin_name sampler end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name sampler end_name begin_operator DOT end_operator begin_name thread finished end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment needed for http sampler 2 end_comment end_block end_then end_if end_block end_finally end_try end_block 
 begin_comment create a test element for a gui or test bean class p this is a utility method to help actions do with one single string parameter param obj class the fully qualified class name of the gui component or of the test bean subclass for which a test bean gui is wanted return the test element corresponding to the specified gui class end_comment begin_type begin_specifier end_specifier begin_name test element end_name end_type begin_name create test element end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name obj class end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name j meter gui component end_name end_type begin_name comp end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name class end_name begin_argument_list begin_argument begin_name end_name end_argument end_argument_list end_name end_type begin_name c end_name end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name c end_name begin_operator EQ end_operator begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name obj class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name test bean end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name is assignable from end_name end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_call begin_name get gui from cache end_name begin_argument_list begin_argument begin_expr begin_name begin_name test bean gui end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_call begin_name get gui from cache end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name comp end_name begin_operator DOT end_operator begin_name clear gui end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name test element end_name end_type begin_name node end_name begin_init begin_expr begin_call begin_name begin_name comp end_name begin_operator DOT end_operator begin_name create test element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name nodes to gui end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name node end_name end_expr end_argument begin_argument begin_expr begin_name comp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name node end_name end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no class def found error end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name j option pane end_name begin_operator DOT end_operator begin_name show message dialog end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name j option pane end_name begin_operator DOT end_operator begin_name error message end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw begin_comment probably a missing jar end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name instantiation exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal access exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_specifier end_specifier begin_name url string end_name begin_parameter_list begin_param begin_decl begin_type begin_name url end_name end_type begin_name u end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name url end_name begin_operator EQ end_operator begin_name u end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name url as string end_name begin_operator EQ end_operator begin_call begin_name begin_name u end_name begin_operator DOT end_operator begin_name to external form end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name hash code end_name begin_operator EQ end_operator begin_call begin_name begin_name url as string end_name begin_operator DOT end_operator begin_name hash code end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment returns the distribution of the values in the list return map containing either integer or long keys entries are a number array containing the key and the integer count todo why is the key value also stored in the entry array see bug 53825 end_comment begin_type begin_specifier end_specifier begin_name begin_name map end_name begin_argument_list begin_argument begin_name number end_name end_argument begin_argument begin_name number end_name begin_index end_index end_argument end_argument_list end_name end_type begin_name get distribution end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name map end_name begin_argument_list begin_argument begin_name number end_name end_argument begin_argument begin_name number end_name begin_index end_index end_argument end_argument_list end_name end_type begin_name items end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name hash map end_name begin_argument_list begin_argument begin_name number end_name end_argument begin_argument begin_name begin_name number end_name begin_index end_index end_name end_argument end_argument_list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name begin_name entry end_name begin_argument_list begin_argument begin_name t end_name end_argument begin_argument begin_name mutable long end_name end_argument end_argument_list end_name end_type begin_name entry end_name begin_range begin_expr begin_call begin_name begin_name values map end_name begin_operator DOT end_operator begin_name entry set end_name end_name begin_argument_list end_argument_list end_call end_expr end_range end_decl end_init begin_block begin_decl_stmt begin_decl begin_type begin_name number end_name begin_index end_index end_type begin_name dis end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name number end_name begin_index begin_expr end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name dis end_name begin_index begin_expr end_expr end_index end_name begin_operator EQ end_operator begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get key end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name begin_name dis end_name begin_index begin_expr end_expr end_index end_name begin_operator EQ end_operator begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name items end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name entry end_name begin_operator DOT end_operator begin_name get key end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name dis end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr begin_name items end_name end_expr end_return end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name sample stopped end_name begin_parameter_list begin_param begin_decl begin_type begin_name sample event end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name encode spaces end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name path end_name end_decl end_param end_parameter_list begin_block begin_return begin_expr begin_call begin_name begin_name j orphan utils end_name begin_operator DOT end_operator begin_name replace all chars end_name end_name begin_argument_list begin_argument begin_expr begin_name path end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_return begin_comment non nls 1 end_comment end_block 
 begin_comment non nls 1 end_comment begin_comment creates a vector of sample controller plugins param properties the properties with information about the samplers return the controllers value end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name begin_name vector end_name begin_argument_list begin_argument begin_name object end_name end_argument end_argument_list end_name end_type begin_name get controllers end_name begin_parameter_list begin_param begin_decl begin_type begin_name properties end_name end_type begin_name properties end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name name end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment non nls 1 end_comment begin_decl_stmt begin_decl begin_type begin_name begin_name vector end_name begin_argument_list begin_argument begin_name object end_name end_argument end_argument_list end_name end_type begin_name v end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name vector end_name begin_argument_list begin_argument begin_name object end_name end_argument end_argument_list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name enumeration end_name begin_argument_list begin_argument begin_name end_name end_argument end_argument_list end_name end_type begin_name names end_name begin_init begin_expr begin_call begin_name begin_name properties end_name begin_operator DOT end_operator begin_name keys end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name names end_name begin_operator DOT end_operator begin_name has more elements end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name prop end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_call begin_name begin_name names end_name begin_operator DOT end_operator begin_name next element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name prop end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name object end_name end_type begin_name o end_name begin_init begin_expr begin_call begin_name instantiate end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name properties end_name begin_operator DOT end_operator begin_name get property end_name end_name begin_argument_list begin_argument begin_expr begin_name prop end_name end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment non nls 1 end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name v end_name begin_operator DOT end_operator begin_name add element end_name end_name begin_argument_list begin_argument begin_expr begin_name o end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_while begin_return begin_expr begin_name v end_name end_expr end_return end_block 
 begin_comment param post link http post return string posted body if computable throws io exception end_comment begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name send post data end_name begin_parameter_list begin_param begin_decl begin_type begin_name http post end_name end_type begin_name post end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name io exception end_name end_expr end_argument end_throws begin_block begin_comment buffer to hold the post body except file content end_comment begin_decl_stmt begin_decl begin_type begin_name string builder end_name end_type begin_name posted body end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string builder end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name http file arg end_name end_type begin_name begin_name files end_name begin_index end_index end_name begin_init begin_expr begin_call begin_name get http files end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name content encoding end_name begin_init begin_expr begin_call begin_name get content encoding or null end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name have content encoding end_name begin_init begin_expr begin_name content encoding end_name begin_operator UNP end_operator end_expr end_init end_decl end_decl_stmt begin_comment check if we should do a multipart form data or an end_comment begin_comment application x www form urlencoded post request end_comment begin_if begin_condition begin_expr begin_call begin_name get use multipart for post end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment if a content encoding is specified we use that as the end_comment begin_comment encoding of any parameter values end_comment begin_decl_stmt begin_decl begin_type begin_name charset end_name end_type begin_name charset end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name have content encoding end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name charset end_name begin_operator EQ end_operator begin_call begin_name begin_name charset end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment write the request to our own stream end_comment begin_decl_stmt begin_decl begin_type begin_name multipart entity end_name end_type begin_name multi part end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name multipart entity end_name begin_argument_list begin_argument begin_expr begin_call begin_name get do browser compatible multipart end_name begin_argument_list end_argument_list end_call begin_operator QM end_operator begin_name begin_name http multipart mode end_name begin_operator DOT end_operator begin_name browser compatible end_name end_name begin_operator DP end_operator begin_name begin_name http multipart mode end_name begin_operator DOT end_operator begin_name strict end_name end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name charset end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment create the parts end_comment begin_comment add any parameters end_comment begin_decl_stmt begin_decl begin_type begin_name property iterator end_name end_type begin_name args end_name begin_init begin_expr begin_call begin_name get arguments end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name http argument end_name end_type begin_name arg end_name begin_init begin_expr begin_operator LPAR end_operator begin_name http argument end_name begin_operator RPAR end_operator begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get object value end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name parameter name end_name begin_init begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name is skippable end_name end_name begin_argument_list begin_argument begin_expr begin_name parameter name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name form body part end_name end_type begin_name form part end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string body end_name end_type begin_name string body end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string body end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name charset end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name form part end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name form body part end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name string body end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name multi part end_name begin_operator DOT end_operator begin_name add part end_name end_name begin_argument_list begin_argument begin_expr begin_name form part end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_comment add any files end_comment begin_comment cannot retrieve parts once added to the multi part entity so have to save them here end_comment begin_decl_stmt begin_decl begin_type begin_name viewable file body end_name begin_index end_index end_type begin_name file bodies end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name viewable file body end_name begin_index begin_expr begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr end_expr end_init end_decl end_init begin_condition begin_expr begin_name i end_name begin_operator LT end_operator begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_incr begin_expr begin_name i end_name begin_operator PPLUS end_operator end_expr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name http file arg end_name end_type begin_name file end_name begin_init begin_expr begin_name begin_name files end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name begin_name file bodies end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name viewable file body end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name multi part end_name begin_operator DOT end_operator begin_name add part end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get param name end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name file bodies end_name begin_index begin_expr begin_name i end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set entity end_name end_name begin_argument_list begin_argument begin_expr begin_name multi part end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name multi part end_name begin_operator DOT end_operator begin_name is repeatable end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name byte array output stream end_name end_type begin_name bos end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name byte array output stream end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_for begin_init begin_decl begin_type begin_name viewable file body end_name end_type begin_name file body end_name begin_range begin_expr begin_name file bodies end_name end_expr end_range end_decl end_init begin_block begin_expr_stmt begin_expr begin_name begin_name file body end_name begin_operator DOT end_operator begin_name hide file data end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name multi part end_name begin_operator DOT end_operator begin_name write to end_name end_name begin_argument_list begin_argument begin_expr begin_name bos end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name viewable file body end_name end_type begin_name file body end_name begin_range begin_expr begin_name file bodies end_name end_expr end_range end_decl end_init begin_block begin_expr_stmt begin_expr begin_name begin_name file body end_name begin_operator DOT end_operator begin_name hide file data end_name end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_for begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment we get the posted bytes using the encoding used to create it end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name to byte array end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name content encoding end_name begin_operator EQT end_operator begin_operator QM end_operator begin_comment non nls 1 this is the default used by http client end_comment begin_operator DP end_operator begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment non nls 1 end_comment end_block end_else end_if begin_comment set the content type todo needed end_comment begin_comment string multi part content type multi part get content type get value end_comment begin_comment post set header header content type multi part content type end_comment end_block end_then begin_else begin_block begin_comment not multipart end_comment begin_comment check if the header manager had a content type header end_comment begin_comment this allows the user to specify his own content type for a post request end_comment begin_decl_stmt begin_decl begin_type begin_name header end_name end_type begin_name content type header end_name begin_init begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name get first header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name has content type header end_name begin_init begin_expr begin_name content type header end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name content type header end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name content type header end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_init end_decl end_decl_stmt begin_comment if there are no arguments we can send a file as the body of the request end_comment begin_comment todo needs a multiple file upload scenerio end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name has arguments end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_call begin_name get send file as post body end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment if get send file as post body returned true it s sure that file is not null end_comment begin_decl_stmt begin_decl begin_type begin_name http file arg end_name end_type begin_name file end_name begin_init begin_expr begin_name begin_name files end_name begin_index begin_expr end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name has content type header end_name end_expr end_condition begin_then begin_block begin_comment allow the mimetype of the file to control the content type end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name application x www form urlencoded end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name file entity end_name end_type begin_name file request entity end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name file entity end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name file end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name content type end_name begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set entity end_name end_name begin_argument_list begin_argument begin_expr begin_name file request entity end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment we just add placeholder text for file content end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment in a post request which is not multipart we only support end_comment begin_comment parameters no file upload is allowed end_comment begin_comment if a content encoding is specified we set it as http parameter so that end_comment begin_comment the post body will be encoded in the specified content encoding end_comment begin_if begin_condition begin_expr begin_name have content encoding end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name get params end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name set parameter end_name begin_argument_list begin_argument begin_expr begin_name begin_name core protocol p names end_name begin_operator DOT end_operator begin_name http content charset end_name end_name end_expr end_argument begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment if none of the arguments have a name specified we end_comment begin_comment just send all the values as the post body end_comment begin_if begin_condition begin_expr begin_call begin_name get send parameter values as post body end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment allow the mimetype of the file to control the content type end_comment begin_comment this is not obvious in gui if you are not uploading any files end_comment begin_comment but just sending the content of nameless parameters end_comment begin_comment todo needs a multiple file upload scenerio end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name has content type header end_name end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name http file arg end_name end_type begin_name file end_name begin_init begin_expr begin_name begin_name files end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator GT end_operator begin_operator QM end_operator begin_name begin_name files end_name begin_index begin_expr end_expr end_index end_name begin_operator DP end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name file end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name file end_name begin_operator DOT end_operator begin_name get mime type end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name application x www form urlencoded end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_then end_if begin_comment just append all the parameter values and use that as the post body end_comment begin_decl_stmt begin_decl begin_type begin_name string builder end_name end_type begin_name post body end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string builder end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name property iterator end_name end_type begin_name args end_name begin_init begin_expr begin_call begin_name get arguments end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name http argument end_name end_type begin_name arg end_name begin_init begin_expr begin_operator LPAR end_operator begin_name http argument end_name begin_operator RPAR end_operator begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get object value end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment note if encoded is not selected arg get encoded value is equivalent to arg get value end_comment begin_if begin_condition begin_expr begin_name have content encoding end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get encoded value end_name end_name begin_argument_list begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get encoded value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_while begin_comment let string entity perform the encoding end_comment begin_decl_stmt begin_decl begin_type begin_name string entity end_name end_type begin_name request entity end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string entity end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name post body end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set entity end_name end_name begin_argument_list begin_argument begin_expr begin_name request entity end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name post body end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment it is a normal post request with parameter names and values end_comment begin_comment set the content type end_comment begin_if begin_condition begin_expr begin_operator UNP end_operator begin_name has content type header end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name application x www form urlencoded end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment add the parameters end_comment begin_decl_stmt begin_decl begin_type begin_name property iterator end_name end_type begin_name args end_name begin_init begin_expr begin_call begin_name get arguments end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name list end_name begin_argument_list begin_argument begin_name name value pair end_name end_argument end_argument_list end_name end_type begin_name nvps end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name begin_name array list end_name begin_argument_list begin_argument begin_name name value pair end_name end_argument end_argument_list end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name url content encoding end_name begin_init begin_expr begin_name content encoding end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name url content encoding end_name begin_operator EQT end_operator begin_operator UNP end_operator begin_call begin_name begin_name url content encoding end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment use the default encoding for urls end_comment begin_expr_stmt begin_expr begin_name url content encoding end_name begin_operator EQ end_operator begin_name begin_name encoder cache end_name begin_operator DOT end_operator begin_name url argument encoding end_name end_name end_expr end_expr_stmt end_block end_then end_if begin_while begin_condition begin_expr begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_block begin_decl_stmt begin_decl begin_type begin_name http argument end_name end_type begin_name arg end_name begin_init begin_expr begin_operator LPAR end_operator begin_name http argument end_name begin_operator RPAR end_operator begin_call begin_name begin_name args end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get object value end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment the http client always urlencodes both name and value end_comment begin_comment so if the argument is already encoded we have to decode end_comment begin_comment it before adding it to the post request end_comment begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name parameter name end_name begin_init begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name is skippable end_name end_name begin_argument_list begin_argument begin_expr begin_name parameter name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_continue end_continue end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name parameter value end_name begin_init begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name is always encoded end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_comment the value is already encoded by the user end_comment begin_comment must decode the value now so that when the end_comment begin_comment httpclient encodes it we end up with the same value end_comment begin_comment as the user had entered end_comment begin_expr_stmt begin_expr begin_name parameter name end_name begin_operator EQ end_operator begin_call begin_name begin_name url decoder end_name begin_operator DOT end_operator begin_name decode end_name end_name begin_argument_list begin_argument begin_expr begin_name parameter name end_name end_expr end_argument begin_argument begin_expr begin_name url content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name parameter value end_name begin_operator EQ end_operator begin_call begin_name begin_name url decoder end_name begin_operator DOT end_operator begin_name decode end_name end_name begin_argument_list begin_argument begin_expr begin_name parameter value end_name end_expr end_argument begin_argument begin_expr begin_name url content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment add the parameter httpclient will urlencode it end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name nvps end_name begin_operator DOT end_operator begin_name add end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name basic name value pair end_name begin_argument_list begin_argument begin_expr begin_name parameter name end_name end_expr end_argument begin_argument begin_expr begin_name parameter value end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_decl_stmt begin_decl begin_type begin_name url encoded form entity end_name end_type begin_name entity end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name url encoded form entity end_name begin_argument_list begin_argument begin_expr begin_name nvps end_name end_expr end_argument begin_argument begin_expr begin_name url content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name set entity end_name end_name begin_argument_list begin_argument begin_expr begin_name entity end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name entity end_name begin_operator DOT end_operator begin_name is repeatable end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name byte array output stream end_name end_type begin_name bos end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name byte array output stream end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name post end_name begin_operator DOT end_operator begin_name get entity end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name write to end_name begin_argument_list begin_argument begin_expr begin_name bos end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name flush end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment we get the posted bytes using the encoding used to create it end_comment begin_if begin_condition begin_expr begin_name content encoding end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name to byte array end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name content encoding end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name string end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name to byte array end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name begin_name sample result end_name begin_operator DOT end_operator begin_name default http encoding end_name end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name bos end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block end_else end_if end_block end_else end_if end_block end_else end_if begin_return begin_expr begin_call begin_name begin_name posted body end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_comment returns the result of the assertion if so an assertion result containing a failure message will be returned otherwise the returned assertion result will reflect the success of the sample end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name assertion result end_name end_type begin_name get result end_name begin_parameter_list begin_param begin_decl begin_type begin_name sample result end_name end_type begin_name in response end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment no error as default end_comment begin_decl_stmt begin_decl begin_type begin_name assertion result end_name end_type begin_name result end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name assertion result end_name begin_argument_list begin_argument begin_expr begin_call begin_name get name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name in response end_name begin_operator DOT end_operator begin_name get response data end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_name length end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set result for null end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set failure end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment create parser end_comment begin_decl_stmt begin_decl begin_type begin_name tidy end_name end_type begin_name tidy end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get doctype end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name is errors only end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get error threshold end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get warning threshold end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name is html end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name is xhtml end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name is xml end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_name tidy end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name tidy end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tidy end_name begin_operator DOT end_operator begin_name set input encoding end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tidy end_name begin_operator DOT end_operator begin_name set output encoding end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tidy end_name begin_operator DOT end_operator begin_name set quiet end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tidy end_name begin_operator DOT end_operator begin_name set show warnings end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tidy end_name begin_operator DOT end_operator begin_name set only errors end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name is errors only end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tidy end_name begin_operator DOT end_operator begin_name set doc type end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get doctype end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name is xhtml end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name tidy end_name begin_operator DOT end_operator begin_name set xhtml end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name is xml end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name tidy end_name begin_operator DOT end_operator begin_name set xml tags end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name tidy end_name begin_operator DOT end_operator begin_name set errfile end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get filename end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name get filename end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name tidy end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set failure end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set failure message end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment return with an error end_comment begin_return begin_expr begin_name result end_name end_expr end_return end_block end_catch end_try begin_comment run tidy end_comment begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string writer end_name end_type begin_name errbuf end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string writer end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name tidy end_name begin_operator DOT end_operator begin_name set errout end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name print writer end_name begin_argument_list begin_argument begin_expr begin_name errbuf end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment node node tidy parse dom new end_comment begin_comment byte array input stream response get response data null end_comment begin_decl_stmt begin_decl begin_type begin_name byte array output stream end_name end_type begin_name os end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name byte array output stream end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name node end_name end_type begin_name node end_name begin_init begin_expr begin_call begin_name begin_name tidy end_name begin_operator DOT end_operator begin_name parse end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name byte array input stream end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name in response end_name begin_operator DOT end_operator begin_name get response data end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name os end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name node end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name os end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment write output to file end_comment begin_expr_stmt begin_expr begin_call begin_name write output end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name errbuf end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment evaluate result end_comment begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name tidy end_name begin_operator DOT end_operator begin_name get parse errors end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_call begin_name get error threshold end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_operator UNP end_operator begin_call begin_name is errors only end_name begin_argument_list end_argument_list end_call begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name tidy end_name begin_operator DOT end_operator begin_name get parse warnings end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_call begin_name get warning threshold end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name errbuf end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set failure end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set failure message end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name message format end_name begin_operator DOT end_operator begin_name format end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name tidy end_name begin_operator DOT end_operator begin_name get parse errors end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name get error threshold end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name tidy end_name begin_operator DOT end_operator begin_name get parse warnings end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name get warning threshold end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator end_expr end_argument begin_argument begin_expr begin_operator UNP end_operator begin_name begin_name object end_name begin_index begin_expr end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment return with an error end_comment end_block end_then begin_else begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name tidy end_name begin_operator DOT end_operator begin_name get parse errors end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name tidy end_name begin_operator DOT end_operator begin_name get parse warnings end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_comment return with no error end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set failure end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_comment return with no error end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set failure end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_else end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment return with an error end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set failure end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name result end_name begin_operator DOT end_operator begin_name set failure message end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try begin_return begin_expr begin_name result end_name end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name x path no file end_name begin_parameter_list end_parameter_list begin_throws begin_argument begin_expr begin_name exception end_name end_expr end_argument end_throws begin_block begin_decl_stmt begin_decl begin_type begin_name x path end_name end_type begin_name xp end_name begin_init begin_expr begin_call begin_name setup x path end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name val end_name begin_init begin_expr begin_call begin_name begin_name xp end_name begin_operator DOT end_operator begin_name execute end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name assert equals end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name val end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment samples the url passed in and stores the result in code http sample result code following redirects and downloading page resources as appropriate p when getting a redirect target redirects are not followed and resources are not downloaded the caller will take care of this param url url to sample param method http method get post param are following redirect whether we re getting a redirect target param frame depth depth of this target in the frame structure used only to prevent infinite recursion return results of the sampling end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name http sample result end_name end_type begin_name sample end_name begin_parameter_list begin_param begin_decl begin_type begin_name url end_name end_type begin_name url end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name method end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name are following redirect end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name frame depth end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name url str end_name begin_init begin_expr begin_call begin_name begin_name url end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name url str end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name method end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name http method base end_name end_type begin_name http method end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name http sample result end_name end_type begin_name res end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name http sample result end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set monitor end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name is monitor end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set sample label end_name end_name begin_argument_list begin_argument begin_expr begin_name url str end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set http method end_name end_name begin_argument_list begin_argument begin_expr begin_name method end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set url end_name end_name begin_argument_list begin_argument begin_expr begin_name url end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name sample start end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment count the retries as well in the time end_comment begin_try begin_block begin_comment may generate illegal argument exception end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name method end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name post end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name http method end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name post method end_name begin_argument_list begin_argument begin_expr begin_name url str end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name method end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name put end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name http method end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name put method end_name begin_argument_list begin_argument begin_expr begin_name url str end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name method end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name head end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name http method end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name head method end_name begin_argument_list begin_argument begin_expr begin_name url str end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name method end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name trace end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name http method end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name trace method end_name begin_argument_list begin_argument begin_expr begin_name url str end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name method end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name options end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name http method end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name options method end_name begin_argument_list begin_argument begin_expr begin_name url str end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name method end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name delete end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name http method end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_class begin_super begin_name entity enclosing method end_name end_super begin_argument_list begin_argument begin_expr begin_name url str end_name end_expr end_argument end_argument_list begin_block begin_function begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name string end_name end_type begin_name get name end_name begin_parameter_list end_parameter_list begin_block begin_comment hc 3 1 does not have the method end_comment begin_return begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name delete end_name end_name end_expr end_return end_block end_function end_block end_class end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name method end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name get end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name http method end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name get method end_name begin_argument_list begin_argument begin_expr begin_name url str end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name method end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name patch end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name http method end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_class begin_super begin_name entity enclosing method end_name end_super begin_argument_list begin_argument begin_expr begin_name url str end_name end_expr end_argument end_argument_list begin_block begin_function begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name string end_name end_type begin_name get name end_name begin_parameter_list end_parameter_list begin_block begin_comment hc 3 1 does not have the method end_comment begin_return begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name patch end_name end_name end_expr end_return end_block end_function end_block end_class end_expr end_expr_stmt end_block end_then begin_else begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name illegal argument exception end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name method end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name cache manager end_name end_type begin_name cache manager end_name begin_init begin_expr begin_call begin_name get cache manager end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name cache manager end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name get end_name begin_operator DOT end_operator begin_name equals ignore case end_name end_name begin_argument_list begin_argument begin_expr begin_name method end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name cache manager end_name begin_operator DOT end_operator begin_name in cache end_name end_name begin_argument_list begin_argument begin_expr begin_name url end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name sample end end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set response no content end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set successful end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name res end_name end_expr end_return end_block end_then end_if end_block end_then end_if begin_comment set any default request headers end_comment begin_expr_stmt begin_expr begin_call begin_name set default request headers end_name begin_argument_list begin_argument begin_expr begin_name http method end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment setup connection end_comment begin_decl_stmt begin_decl begin_type begin_name http client end_name end_type begin_name client end_name begin_init begin_expr begin_call begin_name setup connection end_name begin_argument_list begin_argument begin_expr begin_name url end_name end_expr end_argument begin_argument begin_expr begin_name http method end_name end_expr end_argument begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name saved client end_name begin_operator EQ end_operator begin_name client end_name end_expr end_expr_stmt begin_comment handle the various methods end_comment begin_if begin_condition begin_expr begin_call begin_name begin_name method end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name post end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name post body end_name begin_init begin_expr begin_call begin_name send post data end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name post method end_name begin_operator RPAR end_operator begin_name http method end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set query string end_name end_name begin_argument_list begin_argument begin_expr begin_name post body end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name method end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name put end_name end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name method end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name patch end_name end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_call begin_name begin_name method end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name delete end_name end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name put body end_name begin_init begin_expr begin_call begin_name send entity data end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name entity enclosing method end_name begin_operator RPAR end_operator begin_name http method end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set query string end_name end_name begin_argument_list begin_argument begin_expr begin_name put body end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name status code end_name begin_init begin_expr begin_call begin_name begin_name client end_name begin_operator DOT end_operator begin_name execute method end_name end_name begin_argument_list begin_argument begin_expr begin_name http method end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment we ve finished with the request so we can add the local address to it for display end_comment begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name inet address end_name end_type begin_name local addr end_name begin_init begin_expr begin_call begin_name begin_name client end_name begin_operator DOT end_operator begin_name get host configuration end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get local address end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name local addr end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name http method end_name begin_operator DOT end_operator begin_name add request header end_name end_name begin_argument_list begin_argument begin_expr begin_name header local address end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name local addr end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment needs to be done after execute to pick up all the headers end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set request headers end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get connection headers end_name begin_argument_list begin_argument begin_expr begin_name http method end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment request sent now get the response end_comment begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name instream end_name begin_init begin_expr begin_call begin_name begin_name http method end_name begin_operator DOT end_operator begin_name get response body as stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name instream end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment will be null for head end_comment begin_expr_stmt begin_expr begin_name instream end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name counting input stream end_name begin_argument_list begin_argument begin_expr begin_name instream end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name header end_name end_type begin_name response header end_name begin_init begin_expr begin_call begin_name begin_name http method end_name begin_operator DOT end_operator begin_name get response header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content encoding end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name response header end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name encoding gzip end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name response header end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name tmp input end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name gzip input stream end_name begin_argument_list begin_argument begin_expr begin_name instream end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment tmp inputstream needs to have a good counting end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set response data end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name read response end_name begin_argument_list begin_argument begin_expr begin_name res end_name end_expr end_argument begin_argument begin_expr begin_name tmp input end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name int end_name begin_operator RPAR end_operator begin_call begin_name begin_name http method end_name begin_operator DOT end_operator begin_name get response content length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set response data end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name read response end_name begin_argument_list begin_argument begin_expr begin_name res end_name end_expr end_argument begin_argument begin_expr begin_name instream end_name end_expr end_argument begin_argument begin_expr begin_operator LPAR end_operator begin_name int end_name begin_operator RPAR end_operator begin_call begin_name begin_name http method end_name begin_operator DOT end_operator begin_name get response content length end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if end_block begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name j orphan utils end_name begin_operator DOT end_operator begin_name close quietly end_name end_name begin_argument_list begin_argument begin_expr begin_name instream end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name sample end end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment done with the sampling proper end_comment begin_comment now collect the results into the http sample result end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set sample label end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name http method end_name begin_operator DOT end_operator begin_name get uri end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment pick up actual path after redirects end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set response code end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name integer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list begin_argument begin_expr begin_name status code end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set successful end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name is success code end_name begin_argument_list begin_argument begin_expr begin_name status code end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set response message end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name http method end_name begin_operator DOT end_operator begin_name get status text end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name ct end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name header end_name end_type begin_name h end_name begin_init begin_expr begin_call begin_name begin_name http method end_name begin_operator DOT end_operator begin_name get response header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name h end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_comment can be missing e g on redirect end_comment begin_block begin_expr_stmt begin_expr begin_name ct end_name begin_operator EQ end_operator begin_call begin_name begin_name h end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set content type end_name end_name begin_argument_list begin_argument begin_expr begin_name ct end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment e g text html charset iso 8859 1 end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set encoding and type end_name end_name begin_argument_list begin_argument begin_expr begin_name ct end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set response headers end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get response headers end_name begin_argument_list begin_argument begin_expr begin_name http method end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name is redirect end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name header end_name end_type begin_name header location end_name begin_init begin_expr begin_call begin_name begin_name http method end_name begin_operator DOT end_operator begin_name get response header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header location end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name header location end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment http protocol violation but avoids npe end_comment begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name illegal argument exception end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_then end_if begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set redirect location end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name conversion utils end_name begin_operator DOT end_operator begin_name sanitize url end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name url end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name header location end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name header location end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_then end_if begin_comment record some sizes to allow http sample result get bytes with different options end_comment begin_if begin_condition begin_expr begin_name instream end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set body size end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_operator LPAR end_operator begin_name counting input stream end_name begin_operator RPAR end_operator begin_name instream end_name begin_operator RPAR end_operator begin_operator DOT end_operator begin_call begin_name get count end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set headers size end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name calculate headers size end_name begin_argument_list begin_argument begin_expr begin_name http method end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name is debug enabled end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name get headers size end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name get body size end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_operator PLUS end_operator begin_operator LPAR end_operator begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name get headers size end_name end_name begin_argument_list end_argument_list end_call begin_operator PLUS end_operator begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name get body size end_name end_name begin_argument_list end_argument_list end_call begin_operator RPAR end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment if we redirected automatically the url may have changed end_comment begin_if begin_condition begin_expr begin_call begin_name get auto redirects end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set url end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name url end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name http method end_name begin_operator DOT end_operator begin_name get uri end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment store any cookies received in the cookie manager end_comment begin_expr_stmt begin_expr begin_call begin_name save connection cookies end_name begin_argument_list begin_argument begin_expr begin_name http method end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name get url end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get cookie manager end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment save cache information end_comment begin_if begin_condition begin_expr begin_name cache manager end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cache manager end_name begin_operator DOT end_operator begin_name save details end_name end_name begin_argument_list begin_argument begin_expr begin_name http method end_name end_expr end_argument begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment follow redirects and download page resources if appropriate end_comment begin_expr_stmt begin_expr begin_name res end_name begin_operator EQ end_operator begin_call begin_name result processing end_name begin_argument_list begin_argument begin_expr begin_name are following redirect end_name end_expr end_argument begin_argument begin_expr begin_name frame depth end_name end_expr end_argument begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name res end_name end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal argument exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_comment e g some kinds of invalid url end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name sample end end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment pick up headers if failed to execute the request end_comment begin_comment http method can be null if method is unexpected end_comment begin_if begin_condition begin_expr begin_name http method end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set request headers end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get connection headers end_name begin_argument_list begin_argument begin_expr begin_name http method end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name error result end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name res end_name end_expr end_return end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name sample end end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment pick up headers if failed to execute the request end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set request headers end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get connection headers end_name begin_argument_list begin_argument begin_expr begin_name http method end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name error result end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name res end_name end_expr end_return end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_name saved client end_name begin_operator EQ end_operator end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name http method end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name http method end_name begin_operator DOT end_operator begin_name release connection end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_finally end_try end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name process path end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment create a test element for a gui or test bean class p this is a utility method to help actions do with one single string parameter param obj class the fully qualified class name of the gui component or of the test bean subclass for which a test bean gui is wanted return the test element corresponding to the specified gui class end_comment begin_type begin_specifier end_specifier begin_name test element end_name end_type begin_name create test element end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name obj class end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name j meter gui component end_name end_type begin_name comp end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name class end_name begin_argument_list begin_argument begin_name end_name end_argument end_argument_list end_name end_type begin_name c end_name end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name c end_name begin_operator EQ end_operator begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name obj class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name test bean end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name is assignable from end_name end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_call begin_name get gui from cache end_name begin_argument_list begin_argument begin_expr begin_name begin_name test bean gui end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_call begin_name get gui from cache end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name comp end_name begin_operator DOT end_operator begin_name clear gui end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name test element end_name end_type begin_name node end_name begin_init begin_expr begin_call begin_name begin_name comp end_name begin_operator DOT end_operator begin_name create test element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name nodes to gui end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name node end_name end_expr end_argument begin_argument begin_expr begin_name comp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name node end_name end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no class def found error end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name j option pane end_name begin_operator DOT end_operator begin_name show message dialog end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name j option pane end_name begin_operator DOT end_operator begin_name error message end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw begin_comment probably a missing jar end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name instantiation exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal access exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_specifier end_specifier begin_name standard j meter engine end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name host end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_name begin_name this end_name begin_operator DOT end_operator begin_name host end_name end_name begin_operator EQ end_operator begin_name host end_name end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name engine end_name begin_operator EQ end_operator begin_name this end_name end_expr end_expr_stmt end_block 
 begin_comment param reader param context param res return true if the item was processed for http result converter end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name retrieve item end_name begin_parameter_list begin_param begin_decl begin_type begin_name hierarchical stream reader end_name end_type begin_name reader end_name end_decl end_param begin_param begin_decl begin_type begin_name unmarshalling context end_name end_type begin_name context end_name end_decl end_param begin_param begin_decl begin_type begin_name sample result end_name end_type begin_name res end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name sub item end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name node name end_name begin_init begin_expr begin_call begin_name begin_name reader end_name begin_operator DOT end_operator begin_name get node name end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name sub item end_name begin_operator UNP end_operator begin_name assertion result end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name add assertion result end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name assertion result end_name begin_operator RPAR end_operator begin_name sub item end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_name sub item end_name begin_operator UNP end_operator begin_name sample result end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name store sub result end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name sample result end_name begin_operator RPAR end_operator begin_name sub item end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name node name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name tag response header end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set response headers end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_name sub item end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name node name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name tag request header end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set request headers end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_name sub item end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name node name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name tag response data end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name response data end_name begin_init begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_name sub item end_name end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name response data end_name begin_operator DOT end_operator begin_name length end_name end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name string end_name end_type begin_name data encoding end_name begin_init begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name get data encoding with default end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set response data end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name response data end_name begin_operator DOT end_operator begin_name get bytes end_name end_name begin_argument_list begin_argument begin_expr begin_name data encoding end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name unsupported encoding exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set response data end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_operator PLUS end_operator begin_name data encoding end_name begin_operator RPAR end_operator end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set data type end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name sample result end_name begin_operator DOT end_operator begin_name text end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_catch end_try end_block end_then end_if end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name node name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name tag sampler data end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set sampler data end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_name sub item end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_call begin_name begin_name node name end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_name tag response file end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set result file name end_name end_name begin_argument_list begin_argument begin_expr begin_operator LPAR end_operator begin_name string end_name begin_operator RPAR end_operator begin_name sub item end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_return begin_expr end_expr end_return end_block end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if end_else end_if begin_return begin_expr end_expr end_return end_block 
 begin_comment finds a string in an array of strings and returns the param array array of strings param value string to compare to array values return index of value in array or 1 if not in array end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name int end_name end_type begin_name find in array end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name string end_name begin_index end_index end_name end_type begin_name array end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name count end_name begin_init begin_expr begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name index end_name begin_init begin_expr begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name array end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name value end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_while begin_condition begin_expr begin_operator PPLUS end_operator begin_name count end_name begin_operator LT end_operator begin_name begin_name array end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_block begin_if begin_condition begin_expr begin_name begin_name array end_name begin_index begin_expr begin_name count end_name end_expr end_index end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_name begin_name array end_name begin_index begin_expr begin_name count end_name end_expr end_index end_name begin_operator DOT end_operator begin_call begin_name equals end_name begin_argument_list begin_argument begin_expr begin_name value end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name index end_name begin_operator EQ end_operator begin_name count end_name end_expr end_expr_stmt begin_break end_break end_block end_then end_if end_block end_while end_block end_then end_if begin_return begin_expr begin_name index end_name end_expr end_return end_block 
 begin_comment create a test element for a gui or test bean class p this is a utility method to help actions do with one single string parameter param obj class the fully qualified class name of the gui component or of the test bean subclass for which a test bean gui is wanted return the test element corresponding to the specified gui class end_comment begin_type begin_specifier end_specifier begin_name test element end_name end_type begin_name create test element end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name obj class end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name j meter gui component end_name end_type begin_name comp end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name class end_name begin_argument_list begin_argument begin_name end_name end_argument end_argument_list end_name end_type begin_name c end_name end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name c end_name begin_operator EQ end_operator begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name obj class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name test bean end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name is assignable from end_name end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_call begin_name get gui from cache end_name begin_argument_list begin_argument begin_expr begin_name begin_name test bean gui end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_call begin_name get gui from cache end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name comp end_name begin_operator DOT end_operator begin_name clear gui end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name test element end_name end_type begin_name node end_name begin_init begin_expr begin_call begin_name begin_name comp end_name begin_operator DOT end_operator begin_name create test element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name nodes to gui end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name node end_name end_expr end_argument begin_argument begin_expr begin_name comp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name node end_name end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no class def found error end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name j option pane end_name begin_operator DOT end_operator begin_name show message dialog end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name j option pane end_name begin_operator DOT end_operator begin_name error message end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw begin_comment probably a missing jar end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name instantiation exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal access exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment end_comment begin_specifier end_specifier begin_name tc log parser end_name begin_parameter_list end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name super end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment same as should never happen but provide a source exception param e the exception that helped identify the problem throws error always throws one end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name should never happen end_name begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name error end_name end_expr end_argument end_throws begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name error end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name sample started end_name begin_parameter_list begin_param begin_decl begin_type begin_name sample event end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name process path end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment end_comment begin_comment deprecated values in a multipart form data are not urlencoded end_comment begin_comment so it does not make sense to add a value as a encoded value end_comment begin_comment end_comment begin_comment public void add encoded argument string name string value end_comment begin_comment arguments my args get arguments end_comment begin_comment http argument arg new http argument name value true end_comment begin_comment if arg get name equals arg get encoded name arg get value equals arg get encoded value end_comment begin_comment arg set always encoded false end_comment begin_comment end_comment begin_comment my args add argument arg end_comment begin_comment end_comment begin_comment add a value that is not url encoded and make sure it appears in the gui that it will not be encoded when the request is sent param name param value end_comment begin_type begin_specifier end_specifier begin_name void end_name end_type begin_name add non encoded argument end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name name end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name value end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name arguments end_name end_type begin_name my args end_name begin_init begin_expr begin_call begin_name get arguments end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment the value is not encoded end_comment begin_decl_stmt begin_decl begin_type begin_name http argument end_name end_type begin_name arg end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name http argument end_name begin_argument_list begin_argument begin_expr begin_name name end_name end_expr end_argument begin_argument begin_expr begin_name value end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment let the gui show that it will not be encoded end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name arg end_name begin_operator DOT end_operator begin_name set always encoded end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name my args end_name begin_operator DOT end_operator begin_name add argument end_name end_name begin_argument_list begin_argument begin_expr begin_name arg end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block 
 begin_comment same as should never happen but provide a source exception param e the exception that helped identify the problem throws error always throws one end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name void end_name end_type begin_name should never happen end_name begin_parameter_list begin_param begin_decl begin_type begin_name exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_throws begin_argument begin_expr begin_name error end_name end_expr end_argument end_throws begin_block begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name error end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_throw end_block 
 begin_comment takes an array of strings and a tokenizer character and returns a string of all the strings concatenated with the tokenizer string in between each one param splittee array of objects to be concatenated param split char object to unsplit the strings with return array of all the tokens end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name unsplit end_name begin_parameter_list begin_param begin_decl begin_type begin_name begin_name object end_name begin_index end_index end_name end_type begin_name splittee end_name end_decl end_param begin_param begin_decl begin_type begin_name object end_name end_type begin_name split char end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string builder end_name end_type begin_name ret val end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name string builder end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name count end_name begin_init begin_expr begin_operator MINUS end_operator end_expr end_init end_decl end_decl_stmt begin_while begin_condition begin_expr begin_operator PPLUS end_operator begin_name count end_name begin_operator LT end_operator begin_name begin_name splittee end_name begin_operator DOT end_operator begin_name length end_name end_name end_expr end_condition begin_block begin_if begin_condition begin_expr begin_name begin_name splittee end_name begin_index begin_expr begin_name count end_name end_expr end_index end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ret val end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name splittee end_name begin_index begin_expr begin_name count end_name end_expr end_index end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name count end_name begin_operator PLUS end_operator begin_operator LT end_operator begin_name begin_name splittee end_name begin_operator DOT end_operator begin_name length end_name end_name begin_operator UNP end_operator begin_name begin_name splittee end_name begin_index begin_expr begin_name count end_name begin_operator PLUS end_operator end_expr end_index end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name ret val end_name begin_operator DOT end_operator begin_name append end_name end_name begin_argument_list begin_argument begin_expr begin_name split char end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_block end_while begin_return begin_expr begin_call begin_name begin_name ret val end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_return end_block 
 begin_type begin_specifier end_specifier begin_name authorization end_name end_type begin_name get auth for url end_name begin_parameter_list begin_param begin_decl begin_type begin_name url end_name end_type begin_name url end_name end_decl end_param end_parameter_list begin_block begin_if begin_condition begin_expr begin_operator UNP end_operator begin_call begin_name is supported protocol end_name begin_argument_list begin_argument begin_expr begin_name url end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_return begin_expr end_expr end_return end_block end_then end_if begin_comment todo replace all this url 2 mess with a proper method end_comment begin_comment are equivalent url 1 url 2 that end_comment begin_comment would also ignore case in protocol and host names etc use that end_comment begin_comment method in the cookie manager too end_comment begin_decl_stmt begin_decl begin_type begin_name url end_name end_type begin_name url 2 end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_if begin_condition begin_expr begin_call begin_name begin_name url end_name begin_operator DOT end_operator begin_name get port end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_operator MINUS end_operator end_expr end_condition begin_then begin_block begin_comment obtain another url with an explicit port end_comment begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name port end_name begin_init begin_expr begin_call begin_name begin_name url end_name begin_operator DOT end_operator begin_name get protocol end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals ignore case end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator QM end_operator begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name default http port end_name end_name begin_operator DP end_operator begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name default https port end_name end_name end_expr end_init end_decl end_decl_stmt begin_comment only http and https are supported end_comment begin_expr_stmt begin_expr begin_name url 2 end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name url end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name url end_name begin_operator DOT end_operator begin_name get protocol end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name url end_name begin_operator DOT end_operator begin_name get host end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name port end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name url end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_if begin_condition begin_expr begin_operator LPAR end_operator begin_call begin_name begin_name url end_name begin_operator DOT end_operator begin_name get port end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name default http port end_name end_name begin_operator UNP end_operator begin_call begin_name begin_name url end_name begin_operator DOT end_operator begin_name get protocol end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals ignore case end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator UNP end_operator begin_operator LPAR end_operator begin_call begin_name begin_name url end_name begin_operator DOT end_operator begin_name get port end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name default https port end_name end_name begin_operator UNP end_operator begin_call begin_name begin_name url end_name begin_operator DOT end_operator begin_name get protocol end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name equals ignore case end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name url 2 end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name url end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name url end_name begin_operator DOT end_operator begin_name get protocol end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name url end_name begin_operator DOT end_operator begin_name get host end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name url end_name begin_operator DOT end_operator begin_name get path end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if end_else end_if end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name malformed url exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment this should never happen end_comment begin_comment anyway we ll continue with url 2 set to null end_comment end_block end_catch end_try begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name s 1 end_name begin_init begin_expr begin_call begin_name begin_name url end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name s 2 end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name url 2 end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name s 2 end_name begin_operator EQ end_operator begin_call begin_name begin_name url 2 end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name s 1 end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name s 2 end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_for begin_init begin_decl begin_type begin_name property iterator end_name end_type begin_name iter end_name begin_init begin_expr begin_call begin_name get auth objects end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name iterator end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_init begin_condition begin_expr begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name has next end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_incr end_incr begin_block begin_decl_stmt begin_decl begin_type begin_name authorization end_name end_type begin_name auth end_name begin_init begin_expr begin_operator LPAR end_operator begin_name authorization end_name begin_operator RPAR end_operator begin_call begin_name begin_name iter end_name begin_operator DOT end_operator begin_name next end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get object value end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name u rl end_name begin_init begin_expr begin_call begin_name begin_name auth end_name begin_operator DOT end_operator begin_name get url end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name u rl end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name s 1 end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr begin_name u rl end_name end_expr end_argument end_argument_list end_call begin_operator UNP end_operator begin_name s 2 end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name s 2 end_name begin_operator DOT end_operator begin_name starts with end_name end_name begin_argument_list begin_argument begin_expr begin_name u rl end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name auth end_name end_expr end_return end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_for begin_return begin_expr end_expr end_return end_block 
 begin_comment create a test element for a gui or test bean class p this is a utility method to help actions do with one single string parameter param obj class the fully qualified class name of the gui component or of the test bean subclass for which a test bean gui is wanted return the test element corresponding to the specified gui class end_comment begin_type begin_specifier end_specifier begin_name test element end_name end_type begin_name create test element end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name obj class end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name j meter gui component end_name end_type begin_name comp end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name class end_name begin_argument_list begin_argument begin_name end_name end_argument end_argument_list end_name end_type begin_name c end_name end_decl end_decl_stmt begin_try begin_block begin_expr_stmt begin_expr begin_name c end_name begin_operator EQ end_operator begin_call begin_name begin_name class end_name begin_operator DOT end_operator begin_name for name end_name end_name begin_argument_list begin_argument begin_expr begin_name obj class end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name test bean end_name begin_operator DOT end_operator begin_name begin_name class end_name begin_operator DOT end_operator begin_name is assignable from end_name end_name end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_call begin_name get gui from cache end_name begin_argument_list begin_argument begin_expr begin_name begin_name test bean gui end_name begin_operator DOT end_operator begin_name class end_name end_name end_expr end_argument begin_argument begin_expr begin_name c end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then begin_else begin_block begin_expr_stmt begin_expr begin_name comp end_name begin_operator EQ end_operator begin_call begin_name get gui from cache end_name begin_argument_list begin_argument begin_expr begin_name c end_name end_expr end_argument begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_else end_if begin_expr_stmt begin_expr begin_call begin_name begin_name comp end_name begin_operator DOT end_operator begin_name clear gui end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name test element end_name end_type begin_name node end_name begin_init begin_expr begin_call begin_name begin_name comp end_name begin_operator DOT end_operator begin_name create test element end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name nodes to gui end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name node end_name end_expr end_argument begin_argument begin_expr begin_name comp end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name node end_name end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name no class def found error end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name msg end_name begin_init begin_expr begin_operator PLUS end_operator begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name get message end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name j option pane end_name begin_operator DOT end_operator begin_name show message dialog end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name msg end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name begin_name j option pane end_name begin_operator DOT end_operator begin_name error message end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw begin_comment probably a missing jar end_comment end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name class not found exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name instantiation exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal access exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name obj class end_name end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_throw begin_expr begin_operator UNP end_operator begin_call begin_name runtime exception end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name e end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_name e end_name end_expr end_argument end_argument_list end_call end_expr end_throw end_block end_catch end_try end_block 
 begin_comment not thread safe must be called from a synchronized method param file param xpath string return the next row from the file container end_comment begin_type begin_specifier end_specifier begin_specifier end_specifier begin_name string end_name end_type begin_name get x path string end_name begin_parameter_list begin_param begin_decl begin_type begin_name string end_name end_type begin_name file end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name xpath string end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name begin_name map end_name begin_argument_list begin_argument begin_name string end_name end_argument begin_argument begin_name x path file container end_name end_argument end_argument_list end_name end_type begin_name my end_name begin_init begin_expr begin_call begin_name begin_name file packs end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name key end_name begin_init begin_expr begin_name file end_name begin_operator PLUS end_operator begin_name xpath string end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name x path file container end_name end_type begin_name xpfc end_name begin_init begin_expr begin_call begin_name begin_name my end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name xpfc end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_comment we don t have a local copy end_comment begin_block begin_synchronized begin_expr begin_name file containers end_name end_expr begin_block begin_expr_stmt begin_expr begin_name xpfc end_name begin_operator EQ end_operator begin_call begin_name begin_name file containers end_name begin_operator DOT end_operator begin_name get end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name xpfc end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_comment there s no global copy either end_comment begin_expr_stmt begin_expr begin_name xpfc end_name begin_operator EQ end_operator begin_call begin_name open end_name begin_argument_list begin_argument begin_expr begin_name file end_name end_expr end_argument begin_argument begin_expr begin_name xpath string end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_if begin_condition begin_expr begin_name xpfc end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name file containers end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument begin_argument begin_expr begin_name xpfc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment save the global copy end_comment end_block end_then end_if end_block end_synchronized begin_if begin_condition begin_expr begin_name xpfc end_name begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name error end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return begin_comment non nls 1 end_comment end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name my end_name begin_operator DOT end_operator begin_name put end_name end_name begin_argument_list begin_argument begin_expr begin_name key end_name end_expr end_argument begin_argument begin_expr begin_name xpfc end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment save our local copy end_comment end_block end_then end_if begin_if begin_condition begin_expr begin_call begin_name begin_name xpfc end_name begin_operator DOT end_operator begin_name size end_name end_name begin_argument_list end_argument_list end_call begin_operator EQT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name warn end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name file end_name begin_operator PLUS end_operator begin_operator PLUS end_operator begin_name xpath string end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr end_expr end_return begin_comment non nls 1 end_comment end_block end_then end_if begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name current row end_name begin_init begin_expr begin_call begin_name begin_name xpfc end_name begin_operator DOT end_operator begin_name next row end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name current row end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_call begin_name begin_name xpfc end_name begin_operator DOT end_operator begin_name get x path string end_name end_name begin_argument_list begin_argument begin_expr begin_name current row end_name end_expr end_argument end_argument_list end_call end_expr end_return end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name sample started end_name begin_parameter_list begin_param begin_decl begin_type begin_name sample event end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block end_block 
 begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name http sample result end_name end_type begin_name sample end_name begin_parameter_list begin_param begin_decl begin_type begin_name url end_name end_type begin_name url end_name end_decl end_param begin_param begin_decl begin_type begin_name string end_name end_type begin_name method end_name end_decl end_param begin_param begin_decl begin_type begin_name boolean end_name end_type begin_name are following redirect end_name end_decl end_param begin_param begin_decl begin_type begin_name int end_name end_type begin_name frame depth end_name end_decl end_param end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name url str end_name begin_init begin_expr begin_call begin_name begin_name url end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr begin_operator PLUS end_operator begin_name url str end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name post method end_name end_type begin_name http method end_name end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name http method end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name post method end_name begin_argument_list begin_argument begin_expr begin_name url str end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name http sample result end_name end_type begin_name res end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name http sample result end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set monitor end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set sample label end_name end_name begin_argument_list begin_argument begin_expr begin_name url str end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set http method end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name post end_name end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set url end_name end_name begin_argument_list begin_argument begin_expr begin_name url end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name sample start end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment count the retries as well in the time end_comment begin_decl_stmt begin_decl begin_type begin_name http client end_name end_type begin_name client end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name input stream end_name end_type begin_name instream end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_try begin_block begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name content len end_name begin_init begin_expr begin_call begin_name set post headers end_name begin_argument_list begin_argument begin_expr begin_name http method end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_expr_stmt begin_expr begin_name client end_name begin_operator EQ end_operator begin_call begin_name setup connection end_name begin_argument_list begin_argument begin_expr begin_name url end_name end_expr end_argument begin_argument begin_expr begin_name http method end_name end_expr end_argument begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set saved client end_name begin_argument_list begin_argument begin_expr begin_name client end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set query string end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name send post data end_name begin_argument_list begin_argument begin_expr begin_name http method end_name end_expr end_argument begin_argument begin_expr begin_name content len end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name status code end_name begin_init begin_expr begin_call begin_name begin_name client end_name begin_operator DOT end_operator begin_name execute method end_name end_name begin_argument_list begin_argument begin_expr begin_name http method end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment some headers are set by execute method end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set request headers end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get connection headers end_name begin_argument_list begin_argument begin_expr begin_name http method end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment request sent now get the response end_comment begin_expr_stmt begin_expr begin_name instream end_name begin_operator EQ end_operator begin_call begin_name begin_name http method end_name begin_operator DOT end_operator begin_name get response body as stream end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_name instream end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_comment will be null for head end_comment begin_decl_stmt begin_decl begin_type begin_name begin_name org end_name begin_operator DOT end_operator begin_name apache end_name begin_operator DOT end_operator begin_name commons end_name begin_operator DOT end_operator begin_name httpclient end_name begin_operator DOT end_operator begin_name header end_name end_name end_type begin_name response header end_name begin_init begin_expr begin_call begin_name begin_name http method end_name begin_operator DOT end_operator begin_name get response header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content encoding end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name response header end_name begin_operator UNP end_operator begin_operator UNP end_operator begin_call begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name encoding gzip end_name begin_operator DOT end_operator begin_name equals end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name response header end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name instream end_name begin_operator EQ end_operator begin_operator UNP end_operator begin_call begin_name gzip input stream end_name begin_argument_list begin_argument begin_expr begin_name instream end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment int content length http method get response content length not visible end_comment begin_comment todo size ouststream according to actual content length end_comment begin_decl_stmt begin_decl begin_type begin_name byte array output stream end_name end_type begin_name outstream end_name begin_init begin_expr begin_operator UNP end_operator begin_call begin_name byte array output stream end_name begin_argument_list begin_argument begin_expr begin_operator STAR end_operator end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_comment content length 0 content length default initial buffer size end_comment begin_decl_stmt begin_decl begin_type begin_name byte end_name begin_index end_index end_type begin_name buffer end_name begin_init begin_expr begin_operator UNP end_operator begin_name begin_name byte end_name begin_index begin_expr end_expr end_index end_name end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name len end_name end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name boolean end_name end_type begin_name first end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_comment first response end_comment begin_while begin_condition begin_expr begin_operator LPAR end_operator begin_name len end_name begin_operator EQ end_operator begin_call begin_name begin_name instream end_name begin_operator DOT end_operator begin_name read end_name end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument end_argument_list end_call begin_operator RPAR end_operator begin_operator GT end_operator end_expr end_condition begin_block begin_if begin_condition begin_expr begin_name first end_name end_expr end_condition begin_then begin_block begin_comment save the latency end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name latency end end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_name first end_name begin_operator EQ end_operator end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name outstream end_name begin_operator DOT end_operator begin_name write end_name end_name begin_argument_list begin_argument begin_expr begin_name buffer end_name end_expr end_argument begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name len end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_while begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set response data end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name outstream end_name begin_operator DOT end_operator begin_name to byte array end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name outstream end_name begin_operator DOT end_operator begin_name close end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name sample end end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_comment done with the sampling proper end_comment begin_comment now collect the results into the http sample result end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set sample label end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name http method end_name begin_operator DOT end_operator begin_name get uri end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment pick up actual path after redirects end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set response code end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name integer end_name begin_operator DOT end_operator begin_name to string end_name end_name begin_argument_list begin_argument begin_expr begin_name status code end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set successful end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name is success code end_name begin_argument_list begin_argument begin_expr begin_name status code end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set response message end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name http method end_name begin_operator DOT end_operator begin_name get status text end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment set up the defaults may be overridden below end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set data encoding end_name end_name begin_argument_list begin_argument begin_expr begin_name encoding end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set content type end_name end_name begin_argument_list begin_argument begin_expr begin_name default content type end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name ct end_name begin_init begin_expr end_expr end_init end_decl end_decl_stmt begin_decl_stmt begin_decl begin_type begin_name begin_name org end_name begin_operator DOT end_operator begin_name apache end_name begin_operator DOT end_operator begin_name commons end_name begin_operator DOT end_operator begin_name httpclient end_name begin_operator DOT end_operator begin_name header end_name end_name end_type begin_name h end_name begin_init begin_expr begin_call begin_name begin_name http method end_name begin_operator DOT end_operator begin_name get response header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header content type end_name end_name end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name h end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_comment can be missing e g on redirect end_comment begin_block begin_expr_stmt begin_expr begin_name ct end_name begin_operator EQ end_operator begin_call begin_name begin_name h end_name begin_operator DOT end_operator begin_name get value end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set content type end_name end_name begin_argument_list begin_argument begin_expr begin_name ct end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment e g text html charset iso 8859 1 end_comment begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set encoding and type end_name end_name begin_argument_list begin_argument begin_expr begin_name ct end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set response headers end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name get response headers end_name begin_argument_list begin_argument begin_expr begin_name http method end_name end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name is redirect end_name end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set redirect location end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name http method end_name begin_operator DOT end_operator begin_name get response header end_name end_name begin_argument_list begin_argument begin_expr begin_name begin_name http constants end_name begin_operator DOT end_operator begin_name header location end_name end_name end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name get value end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment if we redirected automatically the url may have changed end_comment begin_if begin_condition begin_expr begin_call begin_name get auto redirects end_name begin_argument_list end_argument_list end_call end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name set url end_name end_name begin_argument_list begin_argument begin_expr begin_operator UNP end_operator begin_call begin_name url end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name http method end_name begin_operator DOT end_operator begin_name get uri end_name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name to string end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment store any cookies received in the cookie manager end_comment begin_expr_stmt begin_expr begin_call begin_name save connection cookies end_name begin_argument_list begin_argument begin_expr begin_name http method end_name end_expr end_argument begin_argument begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name get url end_name end_name begin_argument_list end_argument_list end_call end_expr end_argument begin_argument begin_expr begin_call begin_name get cookie manager end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_comment save cache information end_comment begin_decl_stmt begin_decl begin_type begin_specifier end_specifier begin_name cache manager end_name end_type begin_name cache manager end_name begin_init begin_expr begin_call begin_name get cache manager end_name begin_argument_list end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name cache manager end_name begin_operator UNP end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name cache manager end_name begin_operator DOT end_operator begin_name save details end_name end_name begin_argument_list begin_argument begin_expr begin_name http method end_name end_expr end_argument begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment follow redirects and download page resources if appropriate end_comment begin_expr_stmt begin_expr begin_name res end_name begin_operator EQ end_operator begin_call begin_name result processing end_name begin_argument_list begin_argument begin_expr begin_name are following redirect end_name end_expr end_argument begin_argument begin_expr begin_name frame depth end_name end_expr end_argument begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name log end_name begin_operator DOT end_operator begin_name debug end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name http method end_name begin_operator DOT end_operator begin_name release connection end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name res end_name end_expr end_return end_block begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name illegal argument exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_comment e g some kinds of invalid url end_comment begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name sample end end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name error result end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name res end_name end_expr end_return end_block end_catch begin_catch begin_parameter_list begin_param begin_decl begin_type begin_name io exception end_name end_type begin_name e end_name end_decl end_param end_parameter_list begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name res end_name begin_operator DOT end_operator begin_name sample end end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name error result end_name begin_argument_list begin_argument begin_expr begin_name e end_name end_expr end_argument begin_argument begin_expr begin_name res end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_return begin_expr begin_name res end_name end_expr end_return end_block end_catch begin_finally begin_block begin_expr_stmt begin_expr begin_call begin_name begin_name j orphan utils end_name begin_operator DOT end_operator begin_name close quietly end_name end_name begin_argument_list begin_argument begin_expr begin_name instream end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name set saved client end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_expr_stmt begin_expr begin_call begin_name begin_name http method end_name begin_operator DOT end_operator begin_name release connection end_name end_name begin_argument_list end_argument_list end_call end_expr end_expr_stmt end_block end_finally end_try end_block 
 begin_comment find the port from http server ect port some file xxx return server s port or unspecified if not found end_comment begin_type begin_specifier end_specifier begin_name int end_name end_type begin_name server port end_name begin_parameter_list end_parameter_list begin_block begin_decl_stmt begin_decl begin_type begin_name string end_name end_type begin_name str end_name begin_init begin_expr begin_name url end_name end_expr end_init end_decl end_decl_stmt begin_comment chop to server name x thing end_comment begin_decl_stmt begin_decl begin_type begin_name int end_name end_type begin_name i end_name begin_init begin_expr begin_call begin_name begin_name str end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_init end_decl end_decl_stmt begin_if begin_condition begin_expr begin_name i end_name begin_operator GT end_operator end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name str end_name begin_operator EQ end_operator begin_call begin_name begin_name str end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment chop to server name xx end_comment begin_expr_stmt begin_expr begin_name i end_name begin_operator EQ end_operator begin_call begin_name begin_name str end_name begin_operator DOT end_operator begin_name index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator LT end_operator begin_name i end_name end_expr end_condition begin_then begin_block begin_expr_stmt begin_expr begin_name str end_name begin_operator EQ end_operator begin_call begin_name begin_name str end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument begin_argument begin_expr begin_name i end_name end_expr end_argument end_argument_list end_call end_expr end_expr_stmt end_block end_then end_if begin_comment chop to server name end_comment begin_expr_stmt begin_expr begin_name i end_name begin_operator EQ end_operator begin_call begin_name begin_name str end_name begin_operator DOT end_operator begin_name last index of end_name end_name begin_argument_list begin_argument begin_expr end_expr end_argument end_argument_list end_call end_expr end_expr_stmt begin_if begin_condition begin_expr begin_operator LT end_operator begin_name i end_name end_expr end_condition begin_then begin_block begin_return begin_expr begin_call begin_name begin_name integer end_name begin_operator DOT end_operator begin_name parse int end_name end_name begin_argument_list begin_argument begin_expr begin_call begin_name begin_name str end_name begin_operator DOT end_operator begin_name substring end_name end_name begin_argument_list begin_argument begin_expr begin_name i end_name begin_operator PLUS end_operator end_expr end_argument end_argument_list end_call begin_operator DOT end_operator begin_call begin_name trim end_name begin_argument_list end_argument_list end_call end_expr end_argument end_argument_list end_call end_expr end_return end_block end_then end_if begin_return begin_expr begin_name begin_name http sampler base end_name begin_operator DOT end_operator begin_name unspecified port end_name end_name end_expr end_return end_block 
 begin_comment inherit doc end_comment begin_type begin_annotation begin_name override end_name end_annotation begin_specifier end_specifier begin_name void end_name end_type begin_name subtract node end_name begin_parameter_list end_parameter_list begin_block end_block 
 begin_comment check if the entry is not empty return true if path name or mimetype fields are not the empty string end_comment begin_type begin_specifier end_specifier begin_name boolean end_name end_type begin_name is not empty end_name begin_parameter_list end_parameter_list begin_block begin_return begin_expr begin_call begin_name get path end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_operator UNP end_operator begin_call begin_name get param name end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator begin_operator UNP end_operator begin_call begin_name get mime type end_name begin_argument_list end_argument_list end_call begin_operator DOT end_operator begin_call begin_name length end_name begin_argument_list end_argument_list end_call begin_operator GT end_operator end_expr end_return end_block 
